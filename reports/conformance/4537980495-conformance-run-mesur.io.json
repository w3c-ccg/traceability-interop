{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c76d6850-cedc-43dd-8f2c-dda1a9bd132f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bcf23f1b-5261-4898-814e-781a911e0a08",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "997364c9-7d8d-450c-8b33-237a2aa6ceb4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d4a130dc-0ea6-4a4c-ba39-1e532bb586f2"
                }
              }
            ]
          },
          {
            "id": "ffc81ada-aca0-4ea9-8d49-7de76fb726d3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cebcb37e-194e-4d69-8cc9-2d4c802d78f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8740f7f8-00ba-4df6-a28a-f92809545a48"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9a7bf079-7ed5-47be-a3cd-b7bd53781e47",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e3700d1e-6b93-42b9-91e2-4a50e6ec8d07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9bc9162-bcae-450c-bf75-b6e75ce2bf44",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99817077-d297-4611-9988-75435f5f5173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8feee4c8-b855-4fdc-9d2f-808205123f56"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e56244e-313f-4d68-8ad2-942c298de01a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f9e9b6f-d61c-4f0a-a9bc-8e45f16c9950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2947bf6-c920-4aee-a9b6-9b545851e602",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d871c112-7f6c-4bd0-96a4-6db793cbd029"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e236fed-1a5d-4bdd-9f2e-63c53a6f9f87",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8eb72217-0fa6-4b7c-9a64-73e65896096d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d19caf0-2cdd-4b80-9042-15c9ee4b4dd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20f65b3a-bb14-48fc-a619-8ca6847e5cac"
            }
          }
        ]
      },
      {
        "id": "01323b82-6222-43e0-93d9-b21cdfaa8c9e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a731c16c-44ed-4c39-9543-b42adf7ff95b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2d173ee-daa0-4d1e-9794-4cf94ce0d9aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f7386bb-bd61-4660-bcfb-45eb6c24b700",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f028772-22d4-4846-9664-b4d9d4e9101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e0cb552-f9e6-4301-8ed2-76bd7b0a68d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1012c8d8-d103-49ad-977a-1d05b2cc2ac8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a5eb38-146b-439b-8f10-324f2a0b8f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8023d9a8-f6c6-45ef-b193-cc4ac08d9db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3dc71c-c04a-43ae-8426-f533d040690c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc62d14-738c-41fb-8148-874787079156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b000fc0-a4a6-44e1-b84b-0fd3666e29ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "559a9297-af07-456b-9bbd-3f0ee64a7096",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0683d472-c953-4915-8302-1b35a6371b17",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c96f13-1542-4afd-862b-b01e52ef4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dae3242-e754-4845-8fd0-25c2164515bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a054ec-8043-49f2-80eb-8fd0b841bbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32a9bf7-0a5a-4545-b6d4-f56cbbae6ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ca1e08-b8e1-44fd-bf31-774aa6cddaf3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac168dfb-c14d-41c2-8e46-3e60cbb6b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8f8c21d-7b16-4da2-8086-e56e62e5f3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea14800-fa63-4a2c-b058-5867ed7e8fb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c43b1c8b-1476-4100-bc16-5b7058acc6f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fee48cb-d848-448f-8455-7dc42a48c005",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48b74532-dcda-4f62-a25f-8796936d11e9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09b74bf3-8214-4b20-81f1-6bffe4725bad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "331268f7-f137-4275-82fe-433b701a3cb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed2855f7-ad05-4267-829c-7f1efbbf95d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4a59944e-c0ef-484b-9f9c-7c0c8eece7e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ac78983-7916-439c-abc2-4abe1a9d8852",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45bc3eb3-c3cf-4a02-a721-90ac4185f82b"
            }
          }
        ]
      },
      {
        "id": "e3a20eb7-276b-4215-923a-819b1739f05d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "41946d76-c3fd-40c5-b1b6-c7aafa519081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a44de37e-ba5c-4509-b04d-91b8695f1c86",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "72da3627-49c9-465a-a506-afa1a6248347",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39aa745-a773-46af-8cf0-1c612c761f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1b2e2e-6b90-4663-86c6-b30c9624a6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6aa97f-9729-4987-ab5b-5d99eb875379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3834a11-f5bf-459f-9783-ceee4af06d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57f5144-5cb2-49e7-a3f6-29be661bd214",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4d15d8-4c50-4acc-a246-8be9988dbd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac913ff-be66-492f-89ab-e1689826311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff6a864-b481-4ea2-84ce-1e600a2cc4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf9f6560-f8f0-482c-95b1-118f4dece141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cc0685-0468-4d52-b48e-4e806c3f895b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857d9e10-fdfe-4c0d-9eed-6fddda79d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e5392f-3b49-458a-aa08-e7996c795282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3916f73f-6ae4-4d14-a2cd-af2aa11f31bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3cb73e3-1c8d-4925-b421-aa85a9edccb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fb4f60-0e7c-4388-bf40-0a484caff467",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a564adb4-a2ec-4082-8a6c-eed64c9481c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05026978-8077-46f8-89bb-ce3fe673f008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5572e3-fbfb-47b7-bf4f-c263662f1056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a159490-0147-47f5-90f4-28a543c43b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878c7a88-7c1c-4ff7-b412-d04c6da9e466",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24999ab2-83ef-4a5f-b25c-48d4ab218289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39e9f20-9a85-4352-9bb4-5c25b40a4cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d62fd6-120b-471f-885b-fd8a8944becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b49e5d6a-6ecd-468f-a0a8-0390f6d8792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5406c69-9bed-4e58-86fa-4d6f0c8330a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d04d6f7-3a62-4f30-9492-30907aea863a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21c1e8-2bc4-4cc7-a6b0-2ec8914d317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19e010b-0fde-427a-9a73-ac6c9349ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c78df98-b6f2-47f2-b004-a1032a3899b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c25079-8dc9-4c47-a448-22373be3950a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2227fb3-2444-42ce-bca2-046fbd930bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8c3755-8064-40e2-a988-d3847cc389d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d4da59-0baf-4511-8a6c-ff1a4e808d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6854e10f-07a5-4efa-beef-0c8465491c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3014baa4-57ee-430f-9696-6b2a6e5be08b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546ab389-711d-44a4-837a-cb5c4208c535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74ae6f7-33ef-485c-9107-9f5deea4b8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1e23e3-322a-4e7c-a6d3-ea08a932fd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c65983de-3e0b-4a04-9cf3-8a8dcea0049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd74566f-a2a9-434a-9412-2a5b91448233",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134f39e0-353e-4564-ba60-a56df23e751d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f448a58-02fb-43ce-a7ca-763bef632e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21ab66-9a69-4a1d-9a14-3c7e8a425b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b44ab6cd-de04-46d3-912d-777c5aa4b745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd18e735-014d-4516-b784-5797096f25ad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf24b517-d197-45ca-bdff-509c03cbddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d439336a-e630-4e99-9852-ab7e7e84117c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0392dca-be17-4f62-85eb-0cf4d8dc0071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b70ff539-76a0-4072-a9c4-cfbee0f310e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415abb9-29e8-4d2f-acf3-12ae29cca943",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6aff6d-3a02-4fcf-bd34-fc205eb7903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a902fa-e46d-4858-affc-76d6ee6faa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab4f810-b49e-4946-9642-e2d955ec9c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77bf5729-a568-40d3-ac01-08f9a0657a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6601603d-8fb8-45e0-b41c-016a3c9e49f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ec7a2-2b68-4f42-a28f-cc77a0c46860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ced355-a26e-49a3-ac96-f793d6e79ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98b6a0-777c-48e9-97cb-90ee9684f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a32b3e8d-f20d-4c68-a9ea-72c8506233fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0990d0b1-601b-4619-8ef8-cd043983f500",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c0789e-d44f-47c6-92bc-1fd5e564815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f583d381-fb93-4b5d-8f97-4fcd0c55ae55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339828ee-aed2-4a62-b53a-73e9653f3ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b32ea80-5649-4ca7-9279-3877a24c5191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3de9b24-67e4-44c7-9c5d-0aac05039f6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895f80b5-a2e3-4154-966e-51b1ec852a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70032141-7e16-444c-a48e-2290bd927d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543cb7b9-d8cd-4210-b9a0-1d193d81f51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dba7ba5-c5e7-4d44-b59b-485d70855f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a6422a-b6c5-42c4-8851-2964f2d2b213",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a4d4a-b46a-4c94-a46a-0d7c78c46ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1e339f-dfaf-4129-9134-22af7dc14ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da29a7d-b0bf-45c7-8731-7bd92bdf8259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e3f4cfa-e67b-472b-a097-1157c31fd149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0cfa63-e8a9-4689-aba6-f012545750bd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeda916-e521-4314-a527-418b41926009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f56f1b-1459-4058-b9de-e1980e777edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48d37a-e824-4ff2-a331-add281dd25d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688ef500-8522-44b6-97fb-2ce9d556817b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b5ce25-1bea-4001-b5db-d96361089f6b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe93b2-61fe-41a3-becb-f90d80ef4c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b53b72-2dcd-4ac8-9f26-bc4bd8c0c293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8f919e-e7c5-426b-97be-0a99c4aad88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fce21357-18cc-4394-a263-af867d816b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5157e36e-9539-4b58-9026-7151bfc5a1c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67c9b76-3a99-44ef-8731-544cc9ef1d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5cb639-5bb2-4920-a2dd-5bf7b767a972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee3cda2-2d4e-422e-9626-56954cf15598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5743960-f4e0-497e-99a7-e7a07861ccdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c176c-68d0-4953-a5ff-eb5211954f8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2233dad4-f004-4a55-856e-48f8cc3cb325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14cbd34-cf66-4b40-8b8d-e840f8605865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c087a94-2142-4e31-b289-5afdeca6b799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c18337c-aef6-4168-ace5-4890a1e68e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3f9162-e80c-4ca6-81cb-42f9c72097d5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74335304-034c-4408-91d3-fc6a00689b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a54182-8313-4981-91c5-53b6e84e8f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e360f18-ee5e-4d70-a66b-0beec84f17df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fd446e-29f9-4901-8621-b67db3f0ea90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11919ff-db7d-4b1f-8114-5bc084a8fd61",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80228d01-8182-4b06-99aa-34088ce760c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435cfb62-74a7-49d9-967f-d856d94cacca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7463352-ad23-4603-a2da-17e68ca16934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c377b607-ac45-4442-95d2-6b126312d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d548705-04c3-4afb-812a-ec930e9dd745",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97533530-8083-4055-99ac-2c87ef7d0346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f554fc8e-915c-481a-a8d1-6342562a246f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950cdc0-df9e-4c83-a262-e1ba3218c45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0b1c14-9101-4433-8fac-6a18f0d71a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc88d91a-319a-4d7e-8a42-d9dded8ad0dd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81582a0-ddb6-4dd1-848c-ef2700ec3e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b56938-3066-432f-9065-0e8acf052cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed06105b-7114-4b48-b1bf-d62f485fd459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ea7409-0b22-49fd-9000-8bf3e5f90d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec2c06f-501a-48e7-983b-a96dbdf5b828",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba61145-cf76-4964-940c-fad1866b14c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edb1393-2ed7-4562-a1ce-c5134e603f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c2bffe-ba54-44dd-94ea-28099cbe5f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd44fb0-1672-49ce-905e-ca412661f8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c539477d-1c07-42cd-ac33-b50b8d8abec1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76f44b3-af43-4f16-8159-a508aa499df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559db442-bdfc-4189-88ed-9b0d2808c3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46363d5d-22db-42f9-aecf-eb61318441fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11cfb45b-c88c-4d20-b78c-370e4859aa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd1f018-454c-4a8e-8b70-e14061f76e7d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c108f-db3b-4cdb-be29-9617b179dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a2529f-a9ff-496d-939a-b488a53c63e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4a56f4-12ae-4924-8842-74ae7a4a0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb8a913-cf89-4325-9f2c-b908dba9d6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f9ba00-21d8-4df6-82b7-faf965f65198",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2fe560-0c4f-4649-a730-a4e19c7deaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86deba7-681e-41e3-95b5-a40e8bf3d810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d9e1ff-805c-4219-97d4-d724f10bbeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee037969-14b5-402d-969d-638182fd2b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ee747f-65e7-4ad7-94a6-688f0d1a4449",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ac010-d77f-471b-a255-a92f171bef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1621dfa-42b3-4235-9d94-cd20e8133407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9addc0aa-6188-4e7a-aed3-3aeaf0da182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfec28d-a76f-4fc6-9805-2c21f2f2fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f09c086-799f-4850-aa10-decd9ca5e25b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f0339e-6cd8-49e8-b030-f861cdde50a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe4e9e5-74f9-4e0d-9fa1-23efafffb5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4509574c-0048-43d1-8127-342d9ad571d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c03b3b-ce10-4c6a-aaa6-8d77592ca082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d3b4b-f826-416d-939f-fe682b698886",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dece95ff-4d7f-47b6-92fc-15ed14877152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0fa000-8a9d-44b8-85c7-73acf36b5938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d852ef-433a-47b6-bfd9-03af609e2976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a484f838-2340-48f0-a51d-834533888648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22311d5e-4513-4644-bfc1-97a0aa1cce37",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d87c23-1f5d-496c-b0c0-c0edd4ce7504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7528c044-4da8-4b4d-80d9-13fd7c15bcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ede25d-d0de-4602-8056-9da546405f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b514c475-2299-48a6-b315-c7463ea57022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5481e0fe-67fe-4341-a6b5-066154fb1eeb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5e8487-7bd7-4285-a263-2d297e23dbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f985d4a0-2db5-4268-90d1-8c5fbdede990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c3934-5a6f-40fb-8e44-3f3debc2bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac87b1c4-442c-42d7-b526-1556eee4fb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80485b2f-eddd-4826-816c-6824ad1f68fa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c977ac-9de3-4741-86e2-c58edb6b4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1ebac8-998c-4b76-b26c-7cf0305d745d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab12ecde-d232-4e86-bac7-6899ed2e5672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3559d6fa-43b7-42dd-b3ca-89a483813693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d811283-3afb-4815-8b9a-31c3680ab24e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdefa1c8-fe7c-4db1-8a48-fad1f3df3f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24057560-7487-4884-a1d7-cdff6f4c0809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4686ebf3-5cd7-4464-bc24-8c23a16af097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "465c0950-e4d4-4ec4-8911-bd0488c31a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97387628-b44b-4e61-af40-524ba02ae46f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d5060-5db5-473d-9dd6-f7f69efe9250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afed6a7e-6fa1-467f-9559-30d0c1d5ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5632bd-002e-4feb-8ed9-9d416d32696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb859da-3a68-47a9-92f6-0f59650f5586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5fb582-6a94-4d7c-9cdc-470feb51e731",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128f9129-d187-4375-8b72-90c526c619bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c101442-1c23-4f0a-ac95-0eca3c4f793e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0eda98-60b6-4085-b0f3-aee9b16f0f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1ddaa8-bfe5-4331-a22f-0cd389d512fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed76f99-221a-4c21-87d8-3c3a90bec68d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e15f74-cc89-4890-80cc-8ccec69bf1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd60d15e-3862-4e90-bad1-45dbce2d408f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17c5170-c524-4ebf-aad1-2ca6a25d02be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "147df193-58ea-45ab-adab-3b228de4516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155f29ae-e6aa-4617-907c-b394dbc20d90",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5ba65d-fc94-4545-bc1e-872dc72a881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734c409c-f642-462d-b320-0a7624057979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b707d8b-5aa6-4085-ab28-d84b9fe45f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d40daedd-4330-466d-a0d3-6a7a87ae33b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93836aa8-34ee-4826-9cad-72ea620a56fe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278fab8c-acc7-4757-bb59-34376a7a0435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd2ea22-87d5-4b1f-988e-cd6206929d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3643a4d-f57c-4635-b460-cb34aa5cb3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f0df9d-e773-43c2-aa7c-3f490bd0aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f3177e-c2e3-4743-bed2-36a876f22116",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf5c3aa-c4e8-450c-ba1a-37ca644524e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d32df6d-f2eb-48d1-9427-3b6751b8fa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21741d3-04bb-4b8c-bbe3-8890cb3c1713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b84244f7-2765-4255-a5c4-d887702ea522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3424ddf-eac0-49f0-95ea-62bfdf05f1aa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caec562-92c5-44d9-8301-1dd4f1a0faca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ad0d0e-b6fd-4bd5-9d3b-2ac123eacc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc61b18-f995-4ce5-946c-60355a0e7323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d883edc1-d086-40af-9d61-038b13eb4f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5755b7b-efef-4bfa-b88f-e8924e63a859",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352ff928-cbe6-457d-9b04-18eeecf69779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f67c0c-c607-492a-8e25-f082cc6d6741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0fc908-37ca-4b9a-9bbe-bee2ab88fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "781b5ac5-6314-4a76-9e33-46583159be83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf331f-8e05-45c8-9b7d-21214ace37c4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657586c-42eb-4dbe-a80d-2ecdf4593399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f85003d-f2ec-49c6-af0b-c75cea8c1a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c0f5c-34eb-43d2-9b0d-268b56bfd1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e683f2-682e-4bd8-8d7e-a027611bad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac9b994-a802-4849-a9dc-82cf97c3a8b2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf061733-49fc-4a1f-9f4c-443f6fd0950d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1822884-9052-4681-b7ae-082e881d25d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77ccdfc-ee93-458a-bc55-0f029d44ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fe01b2-64e1-4d4c-80e3-ff8f234e3322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0101b1c-8fae-48ac-914d-c3cd17fbf0db",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd20cb06-02bc-4006-87fb-b85aef362e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd34ffe-9241-46ce-9807-28b79f2e2251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d60a9df-3434-4eaa-8dd4-cc32a1b7ce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "769c33ab-2ac7-4481-bddf-171bbbf4e27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b47199-0d93-4b37-a459-4e3385fffc27",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ed7c41-f0af-4829-bd44-78e9156f9090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287207da-dd62-4964-9871-bf7b6f9d1178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb87ed8-be39-44d9-af7e-93678911cf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09027da6-bed4-4e3b-9404-95c00e2b8234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc3b37a-e32b-4ca4-aba0-a8d241452cc2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf6700c-0697-4f2d-85fb-6d1882ab5321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdd6f87-341e-4189-90ca-9970eb34ac2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0899c210-23c1-4ef8-a1ec-1b32fcf11a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4b516d-b8b4-4aaa-9dc6-5c9dfeed19ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7f826f-558c-417a-aecf-455eee2684e7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23499c48-39d6-4b52-8882-4fda30ab2668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fe5827-4094-4497-8efc-197de4992d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9b8a4-77b1-4940-9578-c061fc217930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb810f1-14c4-4c07-b1f0-c7d084e99ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329283c8-3cf0-4f77-b717-02c5eff29652",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77070eca-f472-457b-a132-45437d2be040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bf037f-1136-484d-8736-2a2786ad78c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529e835-499d-4991-86e1-4d00ea7c7cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c756262b-6dc4-4fbf-8f46-f7564f9c2fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88629b5-8cd9-433a-9ba6-1bff030d32ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9885cc5-aebf-48f8-beef-9fb1331e24a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d581a299-0682-4b53-810a-34e87ae764d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db25a359-a270-4d08-b0c7-5fc7deb82bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f565156e-5715-4713-8185-38b1160dbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b33bf47-598a-47af-b66d-5a798a0fe2db",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a818aab0-0e03-4bc5-81b8-19d2d203d205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846f90af-0ed2-4671-bdeb-36012e687310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb40b6fd-9d6b-4112-aadf-5533037ec9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6042f7-e42c-4410-aec7-9753261ccffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba3820d-0fb8-4805-b74d-e2899e48fc85",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47ad1c1-938c-48a3-b017-f44b306b05b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc4c7c6-b7e3-450b-8979-45b2d0d4054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ccada2-b82d-4add-87d5-26908800d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb43404-6668-4b38-99d5-059b3c53fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e9efbd-908e-4fb5-8431-d4e79ace2318",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0bd0fa-51e9-475b-bad3-ba804786f228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff9c83a-dc83-476c-b41f-bf5f4c6a61e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d2665c-5a27-4bb4-a9ba-14e5855e6a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddea997d-8d80-440e-873b-cef3dbb580c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d26225-57ad-4ffd-a2cf-25fa939708af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedc0ed8-bf45-448f-b992-c950c8d11ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be82ee13-042c-4788-bbcc-3139e5549dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104abdb9-eafb-40d9-8b4c-e5219d597a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac71c8a3-ef66-494e-b6a2-9bbe5db64b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d80d1b-7ad4-432a-92f0-c233d200a933",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2276e972-f9f3-45db-a5b3-6a6f658450e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a7ad85-9f1f-49a2-bc8e-52a7465faef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad19ed-b70d-4e59-9d14-18f70fbdc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f057fc4e-ed9e-4fcc-95a2-32c154ec2b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b92536-6cfa-4dfc-a81e-b6047b00f1d1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5679ac-8f44-4721-aa23-669f2fc3da20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c413fe27-b34c-4334-8a9c-0accf142be45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caecdbd9-3786-4d65-bc45-11df680676bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f70be5ec-2eee-4cb8-b377-cca7604951bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5c3a5c-23cf-48cf-a46c-b7592b48f9cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03561bf1-c99a-4437-9e74-eec44df30cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c77de49-fdee-44a2-a886-1e797b53b994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b6255-c87b-4b87-96b7-3b23765b5235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d36ac5d1-a965-41d1-9c26-29c5b910c7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fcd1d6-ef9a-4ead-b91c-85f19e26cd2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db9b742-102d-4331-8909-ddc1981a8694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a93cfc-5c95-4d59-ad1a-f0ee7d1b4dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6227eba-4244-4aa7-aaef-e1a6342daa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd8cae0-02a5-411b-9e6c-595e454277e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4529c4-ba29-4e26-a22c-2f41905a5d7a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263a75cf-ecd2-42da-82a8-0e37d5730d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae6021e-b7e8-4865-a477-d444fe8b00a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c0f029-b8d7-43e9-ab46-982c3343077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26fb7516-4a05-4bf2-a826-79bc7e316cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c852f9ba-562b-45f2-82ef-9c92753e5d1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf119af-9b42-4d21-8296-e8e3cf69ed32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad3b934-e174-4e16-99b8-d7ca6ac26ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16efd01-f005-4263-8697-ded6b5c42d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac20815c-3c2f-46eb-aa67-b73bf6c51941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaea56c-5a50-4e27-9376-2449c1bc8204",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec3b410-4737-4008-af05-7078ee4c51c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f75a227-8850-4ea4-a1e2-9dea4eac11b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11b7602-32a5-427e-995c-db3d3855bd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "67beac14-36b9-4679-a645-68a4252ed106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3697c258-735d-4ea4-9771-bed7411d5856",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897b460c-ab31-4058-9168-bedd2ac46db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a754ad-6285-4e01-b87a-51b4f5efdd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e67c039-1787-46cd-be0a-99a3045a9812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "181e0d28-a52c-4ff6-a4e4-ad5ae0e6b647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da665015-6c3f-4e78-9519-0e005d3207a0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19cc7c3-069f-466e-9378-c3c61619d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da772152-2da6-4990-b9e5-80760c7cc110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afabbae-323a-4543-839f-049d89b3af17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "606a27d7-7abd-4e16-a7e1-62812ea1027c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15707a69-9429-49a7-81f7-defa9530b6ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e0e357-cce5-46b1-bc59-725efe2d110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19aff60-0548-487d-9ede-a915e5e81a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c4e51-3a79-4c6f-8107-95b0cb4bcdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8dc9be-a94d-47aa-9fa9-ffc4ddb4b8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1731c6-81f4-4a1b-a1b8-d92fabbae8e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ec873-7501-48d6-af1b-9232940689b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd215cf3-8545-41b2-ab66-785a60ed6922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a27ab2-5469-4fa1-997b-dc7f03d9856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1b2252-51bb-4620-8f33-f0e6c82a9459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ba52dc-405d-4ed6-9716-10992feb010a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9ba995-75d5-47c3-872d-948b630a91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1174cc64-ac2e-4725-a342-07d9258c766c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f7e28-cd4b-4f61-9a7b-e6f234b858fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe83369-e10b-4fb6-9bdb-8334e3c9fad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6661024c-3115-4adb-bca2-749a478ef655",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c786fad-d9c1-46c4-ba10-4f939a18b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba511f6b-99e4-4f13-9165-3bd43c12d53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbcef02-27bf-4b9e-bd32-23a0714feab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2791852a-7f98-4f47-a25f-0f676bbcd41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff0a08f-858b-4caa-8756-93b45d1eab25",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a1975-4845-413e-bc16-7e3466807a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8899cb-048a-48f0-b837-c5d83d6d25cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9410ce9-25aa-4ba4-b757-e84073fa6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a177e6-25ab-449e-829d-75482a8827e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c56d55c-331e-4781-902a-1c57a2880092",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33192ece-ef0d-437e-b156-08ac30750681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23add6e2-6b72-4306-bae7-f5ff269ea477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116106e0-9380-4107-9dd7-50582c7a47e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de53c7b-73b4-4747-a988-4cb28a74adf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751cd20-bafc-43ec-81aa-8341693524cc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8861b409-86b6-4260-91a6-fae5504e32b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e7d02f-b725-47cf-8200-82844c305375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b119781-0f4b-4484-9592-c155615ac137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "635d47f3-fc81-4f27-b0fa-bee2d09f9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f39378-107a-43c0-bd04-c138efbefbdd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2d640d-09be-4bef-b85b-eeddad9ecaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2507d6-4913-4d8b-930d-3ba349f525f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea38e3e-a2e3-4123-a27c-50b73827023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee8008d-9aed-49d0-9c18-2160a32ac0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75748051-cf8c-4822-a2de-c50ad12ff314",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8debfeac-fb5e-406f-94f5-9f37a22765c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d438d160-9bcd-4388-9305-f7acca70ce8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296361cf-95c7-4955-8db0-b1ee1d4e8d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "275c4c91-ed32-4c1d-a297-e69ca665c84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb6b83e-dd7a-480f-9331-d869a2469b14",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0e8eba-cdd3-4ba4-8d9e-def49b7c19a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dfe54f-babb-426d-812b-86585ce5fa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd24a06-45c2-4ecb-a0f7-4fc2c30ad924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24505b3-0496-4aa0-9c53-a3d7ba6f1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea95f55-f49a-4d31-83b5-eb22cf7d38a0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d648617e-b25a-4cfa-b655-9a31b1bb92d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bcc5b5-6315-45d1-994f-4c323d804898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b361f9-b12c-408e-898f-fa79c7fb2019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66881008-a172-4c92-b87e-169a41f89d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3645089d-cd33-47a7-8566-de46cbab95bb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86180f-d415-413b-9733-28a7129bdb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a287511e-fbae-4f4f-a650-b5a04af52a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332fc166-f3a7-4ba5-8776-0774bf2239bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad9b5d7-c5dd-4785-a8cc-d9536236329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08559854-0708-41c3-b41d-f53584f7f138",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4951f5-f9b5-4742-b92f-ec819fb4527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8d982b-05a7-46dc-aebe-f6445d7f31d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e17c3c-44da-496d-bb77-dc404f6ecdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f9744a-fcd0-4ade-9699-ec8a3ca1b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32845878-52c0-411e-b26a-f02a16c709b7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a999d2-c625-4fa5-8917-835a4622902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaecc74-3246-45ad-8a03-11b5f7accb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb21482-a5ef-4945-a1a9-eff3da892dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a953666e-51c6-4d17-b5ba-5a1df24e1f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3157d1-281b-49a1-b877-46745322d55f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6f963b-0f2a-4ff8-beaa-95d0d6fb8728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12e67af-bff1-487a-b11f-6aeb14a1b137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e479f6da-2657-45fc-8eb4-31ccb650ee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abf8488-b1ca-476b-9d2c-162b34a5b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6ce051-c2b1-4fd7-9bdb-56b3589bd90a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21390ec4-cd0c-487f-8e41-4099a2f7d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e62ea8-0cc7-4591-b519-b3a1196c997f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a80f21-05d4-43d8-9e78-d7a926edeeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb2bf33-27e9-4ff7-bdc4-2098fe967271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e718ad2-22bd-4ead-a963-480feb76b63f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a548447-69ad-45a9-8069-795d204a1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b3c6fd-2c24-4b05-a144-c9debaad29be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfcb8e5-4fc5-4575-bd92-299a1eb15bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d402f452-05b5-4dfd-bca4-2df6f22e8bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214ad206-013a-4cd3-92be-4492013e8863",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343b598-7f89-40ea-8ab4-079ccfea6e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c8a18a-4fc9-4fdf-926b-e8a03b0208d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b939fa3-7a9b-4b4a-9f4e-786cf3ef435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e4d7b2-b00e-4c73-ab3d-7fc6ae7cf405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d2662-e283-4e15-9e1a-31226304789b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ebc36-08d7-4ca5-aaca-edee23547e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9bc694-0e31-4065-a1e3-759b4ac741a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e8b4fd-deb1-4645-aef2-6210cdfafc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c6655f-27c5-4fa7-84fb-54d8e1f1f5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c6c899-a563-48c3-81af-98d2b6eb95e6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee8ded4-b9a4-4380-b66b-ececb530f760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a7666e-2894-4849-b41a-622f6fa9afd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8a7b7a-ad22-461b-95a4-5c2a92c4c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de167ff3-1c43-4156-8549-86095849f04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202e87bf-958b-46e4-9610-93af20cbe380",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959b8196-7193-45a8-b08c-240a84cea0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b4676d-1bae-4a70-92c0-a3fc126425c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c7aa80-5275-4f6d-9e06-f4d6f95858a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba04cb9-e8ed-4839-9fcc-075bbd327ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8208821f-e374-4e7e-9302-9f9fb49597e9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16d4ed9-a39f-464d-9207-e7dadd61e679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c897ac-4eed-4460-b81e-37c8f6a50a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca17a8-0c57-4d33-96b5-d8f2e9796bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "077350ff-5904-4ed6-bd2a-fc5009ec9717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f82366-e68f-48b1-95c0-e5db824a11ba",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97dccdb-ec1b-4af3-a142-a34669dc755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ac3dde-ce00-4e4c-b4f1-4da5c1b1042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de08986-7d9e-4d91-a09f-8c388bf53c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a28129da-df06-4a19-9a6f-0da89b61c0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdce9cd-3499-4328-bdaf-859fa64aa10d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecbf0dc-46c3-4967-b9d0-606f25dcfcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc4f71a-27c5-4775-949f-b77656ae3c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaf2ea2-41ca-41eb-acb7-278ca130cea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c283c86-5e8d-452c-9016-3d709a5a0e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173d231e-70bd-47ae-a2a4-213b9b3e6723",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809aac54-6830-4902-aec1-d5f7a4f0a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb92e0c-f6f6-4a18-9336-c87aa4b3c7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87269da1-a952-4369-a985-62cf98d7aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6905319b-e537-468d-aa46-0e12336b59ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7cf593-7ca4-4909-b29a-2c4dcb475cea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bc42b4-6154-47a0-bdd2-f80e3472b07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267619e1-454e-4eaa-adbc-b4fc2b97a8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608794e6-ef74-425c-b383-c8a3d606b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5071e7aa-6857-49e8-80d8-4a4ec003e81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594247a0-af06-4c9a-9aac-7c4b0dd8ff7c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a43e9bf-6f42-4f14-8ba6-c6325e9c774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac0db1e-e321-4956-a6e9-49f2d4b5c1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c282e369-c556-460a-a9ae-bc82c03a5872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b6174c-6fd3-47c1-87f2-90361731c897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79914c4-553c-4d1c-91d2-2b0cdc512b66",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103b2ca3-2cea-4f26-9f36-f5a5f3504fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bc13b5-78f7-434e-af5a-36100e9fa412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b19eebf-cf1e-4934-ac91-3140e8011b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97100842-53ba-47aa-9636-9780c478f869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63c523-f2d9-4d17-bd53-8fefe1f53e96",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0d51a9-2725-428d-aef8-6d1da89edc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08b48960-706e-4790-9ab5-3cee12c45bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2c264f-d54d-48b2-9f2e-73a880caf257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb70f181-3275-4891-aa0d-4c8fea369ac0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23e69f84-655f-42d6-b5e9-24e0471311e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10321199-3f49-40de-8308-9d7e6941cd1c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769b69f7-c5ba-443b-b635-23c2e7f31c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5546add-8b6b-44ac-9052-fb2c40f3138b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc40ef3-191e-46a7-bbed-23576bce92dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd2cd8c-4736-4625-b4a2-1c96f1a1cbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09d517f-3960-4619-8f96-798dc1ff228a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6425ea-295a-4699-b9c7-ade9b0083e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99108095-6917-4259-a706-404978cdfffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec67a9c8-cabf-4cb7-8164-cf2b56462fac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8b307bf-1931-4e1f-9785-6883cabe1ad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2176fa3e-a3f8-4a20-94d5-804a1b88341d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca54268f-b55f-4d95-8844-9db1bb8cc29e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc730959-8ffd-4617-a48a-b7740e283854",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6330582-44ef-450b-adff-5ff984add03f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8cf3400-e3a0-46c2-a213-46b7a19d8795",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3fb9e00-6b67-4a77-8f4f-7a997d69e6b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf4a85ca-7215-477d-b3df-528a6c5268cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ed5ced9-a84a-4d6a-8d9b-3c6c13e90def"
                }
              }
            ]
          },
          {
            "id": "17cf3ef3-50dd-46c7-8c0a-98fb53e10b54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02bdf5db-4252-4287-a1fb-705de79a0f70",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb84ed4-3da2-453d-9946-7c9072f07aae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25fa74cc-6392-48bc-834c-3d3c08943184"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18cf2124-52db-4e3d-8878-17b721c24462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83f8318f-a2bc-4890-ba1d-8b3798ab14b2"
                    }
                  }
                ]
              },
              {
                "id": "442ef4ca-6959-4cac-94f1-6706cc58a053",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66820107-c7f4-4751-ba31-094fcd6b2397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1191ed0-990a-46cb-99b8-ec164de244b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "423f1438-ddc8-4cdb-bc2b-10b7394f0f38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86fd08e2-53b4-4036-aa8c-5369438cde39"
                    }
                  }
                ]
              },
              {
                "id": "87777379-478a-4643-8e04-218d3fb70d5d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a9e17a6-0309-4f29-b7e4-d66eaf5837aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9da519e6-7d2f-4d92-b6af-b6391526a8f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "072e2a70-944d-4347-86f6-1228d7aefff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5216e9ff-a4a4-4e5c-9e0f-80939c971151"
                    }
                  }
                ]
              },
              {
                "id": "4828a71a-c150-49d0-8335-87870b406b64",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6a6e456-a228-4ec6-92f2-b57b51d1dde4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de95dee7-c749-45aa-a0c3-9eeb8c267811"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8ee7758-8989-4775-b07b-72ed09a84382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "70761cd8-5e21-4af2-b322-b9a6d2deb1da"
                    }
                  }
                ]
              },
              {
                "id": "a2fb497b-9595-41f8-889d-d9b1188795a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3597278a-ea68-4a4a-9855-95dc8c36f9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0900d7b-9f4f-4f4c-bf20-eb03a7c526dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e241e2ac-9446-4c39-a500-86a327e522a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "01eacbb6-b3f9-41c9-abce-1ad441fbbc24"
                    }
                  }
                ]
              },
              {
                "id": "bdf634fd-c206-40e3-884f-a5582c09e26a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "318d0a95-eb8b-4695-b7fc-7e4954c52953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e164307-2c11-4db4-972d-c89e3bd28267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db0719bf-a74a-45da-a6f8-58db094a6f1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79868d81-28cd-41e9-8200-ceb22e3f2a23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85ac08a4-efe6-44c6-8653-335ecc285df6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a232864c-765f-4d5c-8b3e-5e13499a935a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e326ade8-a5ca-4bcb-a4d9-567e3142eb87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2d4a5c5-203a-458f-90ae-1c4a1ed9da89"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1194daef-8bdc-466b-ab86-f36f403287e7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8dac7fc6-fa62-41e3-a1aa-58eb8b243817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54c65499-9060-4ae3-8477-75f5e612cde9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "680f25d3-a602-4c36-b261-7ea60eb6d304"
            }
          }
        ]
      },
      {
        "id": "13eeefe0-e267-4cfe-b4cd-ee73f6a7ab9b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "278b6251-2478-47e5-9367-65b3dc00e8de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ada24a7c-fecd-4005-99b2-bc7a41b13415",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91988af8-0b84-43a2-9454-d0ddc4b0d850",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9561608-f014-4ae8-a8c5-99f7d99dab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a589a5c-0b02-4663-846d-02aa8485041c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a74c5a2-f252-4a86-8225-a1f464e979f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1499cbf8-8712-4e59-b24f-5439c896875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35129a60-e0fe-4587-940c-f5c420cf5dfa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511fcc1-c014-424f-bf1d-df4954e3aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a28af4-1469-441f-8d75-059f2466ef25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d36b91-c2be-4189-a41a-a5be79978696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd3ed08-da41-4362-93a6-8577bbf43df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdaf429-5cdc-4430-b581-b81b8191b267",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357beb4b-6a8a-4727-ba5b-0e41be249bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e33f96e-5e07-423e-8d9b-2e6cccb40c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb615ae-313d-486b-bdb1-7439cf57fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d0fb2c-858c-4cd0-adc1-1e18e5f90a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5cdad0-b0ac-4e2c-bf33-957e31c4339d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10ea1c7-71fb-4cc7-9369-6a81dfa16cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa222764-e6aa-408d-b872-17ffafad84fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad5ebcb-56e6-48ac-a93c-aa8c8d6847d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a547280-600f-43c9-b798-e81349b894b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb01e418-a029-424f-919d-183e0a0d2637",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0602bfa-6012-45ac-8f2c-6de18caa29e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2310046f-ae1f-49b4-b1c2-3032131f112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29886b9d-0473-41a8-a296-de38004ee4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc4c1b8-bf4b-4217-b7d7-bbfc2cd94ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b247d6d8-c54c-4867-a685-55adde5e434b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c172ad9b-de30-47f7-bde8-88b62ed5c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327af4f2-6ea5-4763-8489-737a3f18fa95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e699157-8371-4c18-adcb-214ea818443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c224c6-fabb-495d-b2f6-c8f9fc83b14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6676d0-63c6-4d72-a79c-57cb8ff2b8aa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1907305e-da15-4f12-83ef-61a8aced3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8956024f-c03d-4048-9d56-eed89be59eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ceec05-6dcf-49a1-a108-1241a2d04156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb5b941-8ec3-476b-a455-67d6028bd441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f934a4d1-5f0a-4f28-b1d0-9358da60456b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ecaec-cf2b-481d-9976-5646cad6eb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c19124-09b4-47e7-ae80-58c879d6853d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93394610-494f-404d-a742-57f165450f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b49a64b-11db-454e-9c72-f22206e31d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e4a9cf-c8a4-4c1f-9124-1199b864936b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa8a6cc-b15d-4a1b-8a95-bae0a8072fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490abcfa-9d48-40e8-bdd6-87d5e982d8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76160bbd-ca70-402b-bcdc-0051cec73881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06dfe16d-6861-4b54-bbf1-768e3f951baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401ec9d6-d0d4-464f-88ee-520616fe737f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e717217-cb23-4f26-9d17-aafeb524339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34746db4-a857-48e2-8a10-e7392af10126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa6c18f-ef4f-447f-b593-aa6d4d5cd27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc7b071-a1b7-4b60-bc38-4afa6a002269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3f873-c204-442e-92cc-16f0a2d0753b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ed96bd-ccae-4f62-904e-486c3da47d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5884cfc0-f8aa-4de2-b3b8-97efaaf7d4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad97e9f-dd9c-43b2-864e-29aa966b0131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e27db-e2ac-4e28-9b2c-dfa212bc075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e3f95b-bacb-43d3-bfbc-ce158bfbdb46",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1faa8-8e2e-494b-9333-9e062205216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c5c48d-fbab-4fe7-af2a-f9ac7cfe0b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bd004b-9e87-457a-a860-420dc9129d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e87deecf-f9b2-4bc5-8144-c16821a012e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798ba89-e1bd-4c76-b7d6-e102ff9e5279",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb55e932-7881-44de-8eab-3e125b7cde43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b8954c-5035-4016-a746-ea695ecba107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e665db4-3876-480f-a603-58bc2a157b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90079ef8-964f-41b5-baaf-30ae193cca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cd993b-907d-4b03-aea6-1234bd6adae2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0717be9-aa18-428b-a6bb-795ef49d1ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f593c2-c3d4-484b-85ab-f0db1182a28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08aa117-3348-4380-9a9a-02cd0fc4a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c482fbb-f1d9-4d93-b061-d82aa7d38eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39042396-3c1e-4a12-b218-dba356bff06c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d01292-6a24-42f4-9d37-58fabc8a7d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488c9881-53d2-4c37-bacd-2fe01111447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8015a7-5501-4acb-bae2-e43fd91b3439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c71d4ef-fad7-4321-aecc-0e970e976fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf55845-fc88-451d-8af8-25fe0d1385f7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f94f777-bb12-4674-ac0a-7fd2c2bc2393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3784fe-b413-4aec-8eba-b976ba03c1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc58141-3843-4ff6-8f50-97473181f793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb46427-9314-414f-b8c5-a1a25f7a5e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5927eb59-25f9-4ffb-9124-ffd2720fd9b7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc7d7e8-4ab5-43bc-8008-6f90dc9329a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607c4a73-56d7-47cb-9a70-ef100963f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9754b7e2-9f1f-485c-8974-7f56163ee8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb5eda9-327c-473a-ae65-629536a9c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f59d1d7-ee2b-491b-8df0-870dfc31b41a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5ce79-cbb5-4567-a67d-ff08b835d8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894d0c62-2b4d-41f0-98d4-ed5e331b3777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36985a37-4f90-4498-b993-fab8969313c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "338b9ce7-f684-45d0-9021-ec5a7e2f52f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605d2716-7dfb-4ba5-9822-5aba7297da53",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1699879-cf68-4e39-b8d4-aa98c238e950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3b28ef-20cf-4020-866c-57388bbff6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a1165c-72fe-4752-9714-c3838d220134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f28db83-92d9-45ce-99ae-daff39641a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47d8da2-b209-43c5-b143-c13ba68b21ac",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e66483b-78ed-4389-8fd9-a6a9316438d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b9260d-5036-486f-9e19-7280e87fc833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c19c45f-68c5-4ab9-a951-8a2a7bb2193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f719cc1-e289-49f6-95a2-820cc63eed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076e656-f11e-4ddb-885c-ba0f042dd59a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998f00f2-c770-45d8-9077-2ed13a61ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dd247c-194a-49c0-9940-9b4a1d10ec91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e43907d-c1c7-4166-b3ed-39d2a3f84c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6928cc-142d-43e2-9aa7-0992a29769e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb00ab63-0c75-4122-bcb6-386145f04f96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f9ed6-b09b-4fdc-98f9-fcb3814ae927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20be902-47fa-47ed-bc95-299a9416cf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc87a0-a54b-427a-a3a1-968c888c2f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb33bf2-d5c8-403f-9cef-1760d2ab7f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dd363e-5b43-477c-9f72-e27f7cce140a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222e2b6-445c-4c47-8dd4-bf6bc7dadddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9536f0c0-9f45-4e6f-b4b7-59faf4db5d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f47f4a-0c6e-4060-b879-f3f6a37ae2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12d462d-89cc-4f83-9e84-25c7cbd8d65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a158d7-9d85-4a14-a3ae-34e00c35b6ae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23bf69f-508b-42a4-8a3e-7be45dbab872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd2d3b5-72f3-4466-b978-30b5d43b9265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099ff96-b626-43b9-9d32-998c8c8be620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b65a836-321f-45b5-a4c1-62bf13216db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46623fa9-7503-4d06-a2d4-c16469223af2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30819acc-04f0-4832-8b15-3bc37a15c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4823302-1c14-4ad7-92e2-2476a403d682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc4c97-8d5a-4e33-baf4-9a98bfd9a3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0a3b23-22cd-48e7-a639-f036eef5770f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca7957-0f13-48bc-9ccf-19e3c08920ea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53844994-bd22-4d2c-a2fd-d292af99bbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cab4ba-8032-4ed8-9398-613892e6ab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9accc990-4623-457c-9e4b-34368bf977d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77772063-fb84-4532-9158-39f00f72da3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ca2d4-31ee-4e6c-9663-522b7ac4f976",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159e8f3e-af5c-4b8e-934e-b8a1e9200501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec2f1f4-8f74-4be6-b7a6-e37574be619c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cc826a-ba15-4547-8940-cfc2624c5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec481ae-fac4-4ab0-bc55-1a1c62b20500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d36555f-239c-4799-8a51-e69d7c140f28",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365a226-a528-47e3-89bb-252018281b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346908f5-0140-48e9-9e31-122d26bad95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b00ac07-aff4-4a6d-ba04-45591b23865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad70e922-64cc-4791-bd0d-6db15194f0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d03182d-ddb1-4f12-a69d-b2cd7bfbf190",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c5213a-f6c1-40ff-aa1d-e65f7824c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ba6603-5ce5-46b4-8993-07ff04a6dcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccb9a98-6a2a-4034-9257-4d56a491acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31a0f2e-94d5-46bb-ab3f-32125e4b2d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b67120-47ea-4398-b2f9-287b8c1b34e3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f88b0d-600d-489a-ba85-067bda2cf1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed1bc34-f68d-4ceb-8a4a-a16f1e176788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41cf67-5e3e-4532-ab86-45e6f1e193f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1407e723-72e6-41ae-9dc7-6c1d1adafea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385598e8-305f-49ef-b023-6de110217a2e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55372215-28ea-4c61-8344-bdf3af93d666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc590db-894f-4214-bee4-c8871cb496f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc12e01d-a748-4b0f-bb9a-d7d81d3a616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14522fb-589a-4907-92b5-e28e3e96916f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4890a923-d097-437b-95f5-7f60585f4cbf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c392d8-d58e-44e4-8fc3-ba2214bb6777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698af3f9-cdce-4704-ad53-e60ba0843794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de04f35f-82a6-492c-b158-329509bbab45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3677d5ec-da7a-4603-bbca-dc478716a364"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c404c924-9807-4a87-a889-b0f60a2afa20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f269bbc2-c940-42a6-915b-cddeaeb1f994",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58525876-d802-4e4d-95e0-6f47d176d70c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e772f38-38c7-4a64-9db2-850da97c331e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd9396-3b7f-4153-b02d-225e567eae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cdc98ec-21dd-451b-be82-ce32f1058d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1461a914-4197-420c-a32f-2dd15f3861c4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab56ea7-9377-456d-b412-ecab046382af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81953367-d615-4658-9c50-573afa6a1620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19019560-bc54-46ca-a6cc-effd24ee6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71ea2bf5-1f23-4ff9-b15c-6f60a88dc824"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f96f13b2-f378-45cc-b041-a03f5fb9ce42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b851b1a-9714-418f-aace-150ca978725d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81de745-3db7-4d7b-96d4-1e369406297f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76574316-239e-4a2f-be7d-01191f8a0795"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "177d45df-bc0d-4f99-a21f-9c1cc0366526",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e07cad39-0461-4fe2-baee-06aa809265e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8096f4e1-a809-4783-b6aa-09707b3f7a92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88b5a8be-722f-4a8f-922f-d8a7de7b927b"
            }
          }
        ]
      },
      {
        "id": "984cde3b-d403-42c6-8f3e-a1043663943c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "68017335-b772-4e80-a593-deca5760af78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50f6b78c-ab75-45ec-a2b8-61ee3d95b3e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b45cf6c-8878-41ae-9b94-09817e89031c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37059e15-5002-4cf3-8515-ba3329a19d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e423a4a6-c77b-49c3-acf6-2de723e59da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fed32e-6b96-41c8-96ee-1c473fd174eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c21344c-59b5-4718-9158-e63133afc5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4159e1-33ea-4715-aa2f-bcba86c7d21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089530dd-b7c4-480a-a111-bdaef1f11078",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725fc18a-8bb1-4609-9812-7cae66844251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b8cacc-4390-4028-8ad1-e7e9002ce3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c90b172-1cd5-48d7-adbe-ba37d694fc37",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ef982b-9c88-437e-bbf1-80bb066c16bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c960973-7b27-44f1-98ce-c5d7a5f633bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f086bbb7-e758-4e61-8355-1737f4237152",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43de07c-9615-4962-b6c1-3d0164dfcc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e63e4f5-b49d-4f24-aa23-ec4bf6098260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e72ee29-e913-4bb9-ac83-33ced1e4514a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a099a8a2-505c-4c25-8281-02b6dab6e60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3882feab-69de-4201-9cfb-d8a3560334d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608a5d70-73aa-4f79-a2e7-24f289e48838",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d700f190-a022-4619-aba5-af9a2e46555b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0d77e7-4599-4d75-8389-36c2d73c3fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb34937-bba6-4c11-81b7-2f6a71f12e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64440f40-9415-43d0-9319-0d73b8643cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8748277-7b65-4400-aa40-8f5671011ec1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce30c9b2-7b3f-491e-b06c-674f9c50b56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7624639-2af8-4696-93ee-8cb9ab7a562f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6918438c-962b-4c0e-9745-44e4ee7ec61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c011077d-74c4-44bc-b950-0c6368928a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3857ec07-3a1a-4af9-a5db-25dcef69131d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d636a2b-ee4d-4bb2-ae5b-0c6c4702b0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f87c2f50-f9a6-4bb3-86b6-aacc9e483670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330bcd78-d90b-4959-aa83-811aecda765e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17eff9c4-e998-41b6-8bc5-d8ebf03afef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74def83c-12b1-423d-9637-81d6e0b6ad24",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e449c7a-3b17-4ccf-9cfd-b15235d021e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9043dd16-1869-4892-bffd-8e859e00939e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7a3945-1ccd-42fb-be00-60dadfc691ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529465b8-492b-4f36-92dd-97ad73fb94cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d285b3a-3307-4184-a836-daa4797abe8d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106eb65-f11d-4c51-9ac7-53348a43e497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0c88f-f153-419c-af22-694a613869ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16755146-f1a5-469e-9665-fcdd04d2651f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f935ab6-6830-4436-ba04-0cd98db14946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf6f0f-08fd-4495-8e0d-cdb75ae64b3d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc5b1e2-2906-4579-b201-c6fd2b6b5213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488300fd-40fa-4891-b67c-2f1a91b00f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7093d53-80f6-4cc7-aada-4353bb7132ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cad4a1-b144-4a12-b9b2-e1563a6a15fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a032a37-35f6-4e2b-a77a-4a63babe68f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b2d1b-ab69-4b21-91e6-fd513d6e6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016fc7c4-adbf-4c34-9736-954b593c468d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7808241-b813-4bd1-a249-a54874dffd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b974e2d8-eae1-41eb-914b-1de8f7b9b7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbff8ce-4281-4f28-8bf3-5e7409a8d85a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6e65c6-9170-4c1b-af74-c383b73a0794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5843785-2827-40ed-af2c-d1f32c6dd4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b97ca7-366d-4914-958b-e726f7328e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3138b-456a-4307-b89f-5f2a7536ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645b21cd-c1a8-4904-af5b-12c12f2c2735",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326fe6b8-4108-4466-9a7c-5102cc4e1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c7e41cb-77af-4313-ad33-682d89763bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d286b08-8475-46d8-96f1-ef571cd639c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cd12bd-4fea-4635-9698-59e564887d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c13f059-770f-41f9-8c27-bf474a201625",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed907c2-8e79-45ac-9321-3667375eb4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35da158-907d-4338-81b6-3aeb4033d3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829e02f-8bae-4c92-a7bb-349ef01f7e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0920c455-2fe1-46b2-bdc3-f24ca3294713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9ba13-97a1-4dfe-91e4-77f482d83f25",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778b48b0-6c52-4867-a4b8-2777679697d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4112f-48eb-4352-aaf6-faf7703a9961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9453a2d3-8d1a-4920-836f-1c2e17fa9ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4584d77a-d002-4def-9ae4-84504f125f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0b13a3-8b1d-421e-992a-8c6cb7e32281",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a60b20-1a95-4c01-894a-399d212b0672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561843c5-231c-4d0c-a607-84362cd930d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605d6a71-30f4-4718-8830-954859baf437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2171e07e-7c01-443c-9339-42392b3a00bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f49b4b3-dc6c-4942-b7c2-0fbbd45b9b11",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cab1de-5f1d-4b95-b56e-dfc0614964ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8692fc-9db7-42f8-bf03-e5e4927042a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c7ec21-5d91-45aa-946a-8026c4d00568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a38c9b-a435-4477-b0d8-0f8bd2a1b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57109329-89af-4696-9727-a2aafcde082f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6c820a-7444-412b-9d68-22592bcf89f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a55c82-5a19-4994-8976-86d4bc95e6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179e2107-86e8-4525-90c1-228980b76cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8e84fd-46cc-483b-8b1b-79b9f7e48180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316b1e92-5b6f-4012-ace3-43559407d277",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc063fb2-cdb5-4b1f-9c29-4d49fd05b894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af358cde-e76b-42be-90af-314cdc2d6ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd14da6-7d67-45a8-a23e-567ac4fcfe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c54134-132f-45bf-a1a4-a8dc4ae72d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb0af4-a086-4140-a29a-4f02a1e79760",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b04736-3a15-4575-92b6-d81535d9d484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29758be2-1c28-4fa8-8f00-5faa09c4dad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20648be9-1d23-4f89-a6a7-64e6f24198a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17410c14-5591-4ccd-99b9-e49959089c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34049734-a59d-4d18-be8c-c6640b1f2273",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f50653-2474-4b33-853c-c3f541c60f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec7c556-772a-476a-8723-e190683366d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dfc945-b3cf-48d4-8d3c-9e42e4ac5a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55409d5-d262-4bdf-8c3f-224eac651f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9bd5fc-19b8-4fff-87f1-a53299344dfb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001014b7-ad71-4bdc-ab95-2764fa65a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f654ab7-dd9a-4676-8f87-b3ace9cfdc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cdc25c-2973-4f2c-837c-9b68828b16e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df3a0b2-37f3-480c-ab2f-50dc72fc6f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54810fd-31b6-4bc0-a384-9c5c0e34e85a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96f1551-8e5f-4641-9a71-0650092f1035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d982482a-f31f-4e8f-a6bc-34b05d9515df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da760209-683a-447c-a958-461ce65d0c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cedc3f-a684-440c-95d6-1ac2477f7d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4fdd67-b760-4ee1-b82d-61053d8d13ac",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008bc3ec-0933-48de-9619-bc3dfabb8cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050df31d-18e1-4707-9652-c796039c1a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aa71a8-7b89-4c90-92bd-3fe1855820e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95cf2d7-0c42-4c86-93ed-fa61c219c10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4254a8f-ad59-478a-ad73-86becf34fe60",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94147ac3-d686-482d-afb4-19d5209e66f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fedbbb0-33a5-42a7-99fe-85225873df0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b9695-69fb-438f-9c6f-adc3495161f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ff2d3a-c477-489e-92bb-40f859877bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016a576f-eedb-4551-9195-b979274d7872",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b6f47-c5ac-4170-a5f2-ae8491fe5e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7b0cc2-bfc6-47fd-ab20-eab535d46779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e4adf0-3c8b-4025-b88d-41a562cc96f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cea9e40-5a81-4b4d-83c2-47ee5b312944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ec528f-bc77-4614-8ff0-58f72072e16a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeff1ed-e1cd-42cd-88a8-4b0a20b1edfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de88062-8f7b-437a-b4a8-e521c5f884fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334cd43b-2c09-4adb-9f79-6d5280141494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a9cba1-65f6-418e-8ee5-e7eb7747245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be8c58f-1901-4a6c-9343-86498ed088f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e55c94f-5f18-4126-a881-8fecaa8dd369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4df301-ac12-4208-83b2-3285185f01f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af1193-8f84-478e-a179-d3afb5d445d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070d18cc-0e77-4620-8cb2-02cf7c33d1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c722b7-7f81-4451-b45e-f67091049c53",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ba3396-e400-4399-8b3d-7895efae6ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63b0da6-169b-4aac-8ece-9458f5e74c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffe7380-69c4-4677-a24b-fd342f18a859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71021fe7-9c07-4651-986a-eb143c02505e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d6337-9265-48d7-954f-f6322ff71c16",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4856e876-476c-4fb6-8b3b-6fd2298e0da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75957d3-4722-4314-aa48-4bb217f4ed2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4579a6-da34-4256-8648-056b0df60e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9c5bbb-1cb8-47df-ae6c-dafd739308cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6872e60-6a78-4fc7-bab5-c38a7e31d86d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25499ac6-82ca-477b-b95d-8adf62829f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4538271-db4a-47a5-8b11-c43d33305f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e6f5da-6cbf-4707-a65b-3e0934214bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6124feaa-3d57-4ac0-b341-3924f64f1af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73876a42-46a6-404e-be22-ad00eb2dfec4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b3682-a37e-494f-af31-7e7928672bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e700ac45-5c7b-4802-819d-e086f9f3af07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80160317-92cf-4843-9800-f284672c3163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f14279-e153-4914-ade3-a151a009a981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db541360-dce4-4229-b968-18dfab8436a4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa705dcd-1cd5-4530-9f56-187bcb960df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863bad3e-38d4-4c11-aef8-3aa5332e775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2e6849-909e-4981-94ba-35a3f2d767b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293acf8d-a9da-48a5-9f41-f1ecc67fbd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bf24a8-f75c-4e48-a876-13ec11726492",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c621ebe3-2720-4d0d-806f-def7c6b81a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b46420-8b74-4d67-a68a-d59e4cbccc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8386d91-87ec-41ec-ba5d-8d3ae2cf5069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19272818-d998-4f6b-9428-77d8939ed66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7585bff7-fc59-4ae2-aa60-7142b9f457e4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e712214f-8628-47ff-95d4-8da2795826da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b150aab3-6818-4c67-83a1-c946743c783f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fa7791-85a0-4c6b-9fe6-c08143eb055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc88ec78-a313-4055-ba8a-f891c304cc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57328ff-430f-47f5-8e67-c593159f6a4c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061dd0a4-10d8-47a3-9d11-c000f912a4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f9f46c-ae10-41f9-adf5-4523e5fda58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25b2957-98df-4f8c-917b-d7c4ae692fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98baa585-0562-4d38-96a3-f92641fa0062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4405c9d8-77b4-4ed1-af5c-e0573da93889",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368e8ea2-d33a-40bf-84dd-31c7c0135a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70e45b8-8280-43b4-8931-f638be3a152a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a588ca0-d95c-4c6d-84ae-94c0b3da7e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614d6743-d4b9-476d-93f2-5f61a407e69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3e22ad-9484-45a9-8c3a-334e98d643f3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd164d4-9c8e-4040-a07b-43cea43e9468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383d3191-cefe-49ff-888e-56fdf2b94403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5346bcf-e075-43a5-b74e-1b9100cedb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f825113-b784-4d00-a24c-5b75f77eff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6f9ec0-4049-45d3-bd59-bbf77f4ecf3b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3975e2-f48c-4c86-934a-dfb66320fed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5098138-69c6-4f97-a7b9-6ec22935c83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eccdecb-12e8-4473-9157-30fd23a21a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ae4b0d-e6f4-41e6-9edb-22ca9c40bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86a3d90-5979-424c-95cd-e156403d1525",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df45e6b4-a599-405d-b7e1-522c7c60a6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6455ff-0d7a-4470-83e3-c6430d527433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c43809-15d9-4cde-8343-4dba50ffb0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca83ae1-bd3e-48ab-9510-650dc4189db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361d5095-636f-4a3e-91b5-925f9649e16c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47950be-4f61-44db-ac9f-17e1af29f761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b0e38d-cfe8-4ab8-95e2-6dd7285be43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb73579-0bf8-4116-9f49-2d38f5fb7d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bbfca4-4466-43ea-8bce-1e36f6d724fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccba23b5-b7b8-47b4-89d3-2146f7f46657",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b5c1e-dd4c-42bd-a6b3-25aa2ad041a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ba2c22-a5c8-4495-b4fe-63101072b9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90be96a5-14ee-46e7-b852-ebbfd6903be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1879b92c-c12d-4d93-a9c5-7ac4a1b5cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911dbc5a-91f7-4816-a9b2-0f1a974b7b3a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dc39cf-a365-4a27-b3bf-2f669889e96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839e08a7-6115-4310-8f13-0039f01a36e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cd8ada-ba70-48c8-8047-6507ced02ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d8a53f-69bb-4577-b14d-ca2d933a8105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce8a938-0450-4abf-a73c-36b678284b8c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ee83e1-b2ca-448b-9f27-c347c6933fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e21ab62-0dba-4fd0-89d1-a57b875e77f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a0798-12e6-4a22-a6ac-8d8029d07a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6fb37a-7000-4bd2-80cb-4e50999ede11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8cdaee-7130-46bf-b68a-c06d99701713",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9994c1ad-f8b3-49a4-bd8a-224de51ddebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f0cf4b-e144-4ddf-96cf-6709331f1614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8201ff-0f68-4b3a-bc50-3531769384b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2092d2-94c3-4be0-a1ac-4d8df3c0e9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d2f673-cf96-4bc9-9331-b1bfac74a18a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b51a7b-5d7f-4a4c-9987-17dab4049e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5b2aaf-d095-4d9d-8394-77dc7dfd69ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189f1f0e-1b13-4bd9-b4ac-16350c84d879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da6ea71-3ee0-49e2-becb-f575739f0f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9729697-dd50-43a2-bcf0-e1630e588919",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b195f0f5-6c14-4efb-95b9-b9f020c20dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6efc198-66ad-4278-bd87-5d956b92efc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7eb74d-2646-4000-99c5-003281cf97e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecda7e8-50df-49c9-8040-9a987e458080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f6b964-37a1-4cc4-9157-690633109bb5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccca90b-b6ea-415e-905a-99c1081c543a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566d4d6b-9e5f-4e48-91e3-302dfa8f773c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5aaf5f-593b-4f51-97e5-cfc5bcba74ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05169d0f-9826-432a-bf71-28dbd9669722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2286371-6e64-4986-a7ea-4192fb413dda",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81893817-fe6e-4d3c-8311-3efb9c7fa8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5919d66-4f35-4b29-a088-6413f933ae56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b74ca9-4786-413e-b138-c6ee593775f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc841ee-31dd-4b4e-92d2-a9da419fc45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bdee8a-3c15-4c8e-8248-7ff14a7a2771",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d6b185-b0d5-4183-85fe-28d5069e1a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b78f39-5984-450e-bb7a-c9f1a168ddee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b82c02-a0cc-4b92-b6cc-865065ac29af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011571eb-4b02-42f5-bc21-ed06878e6fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d0e5e6-ab5d-4d46-92e1-21aa82595aac",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2653a97f-a5e8-443f-818e-ab66c311e460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd667fc-df91-4cab-aa6b-5c302e353564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b25883-febf-4a14-803a-ec0d7faa3f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492f02f7-aef5-46d0-bef0-62286086b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cd86b9-444e-49f3-80c6-712b8ddb6e8a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13567cab-89f4-4669-bf2f-e4459ab2690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b16db3-7f6d-41be-9d11-81a8dc710919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44fb808-bb28-4a5a-aff2-af6527754fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6c37f2-466c-4749-8d09-0c1a8e4ef0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ade1e4-8a94-460a-929f-1f2898007daf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bd32e3-da65-4a3d-9b44-f997696b3b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b50fbe7-98f4-49db-bad6-73aba19a36b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dc5005-847e-474f-ac5c-786365698373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5621b9f-a0cb-4807-9011-67ec33da08e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bf04b4-183a-4113-82b9-00631834185a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3634152-ad19-40fa-b237-d7bb295aad63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f78875-a3dd-4f5f-8f1e-8de3c784435a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce654b80-0888-4b49-98d3-1a78dc26c970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54461858-fde6-4659-9ebe-5bf1f5d39105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9903695f-81a5-439c-bb42-e70e40c28540",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd52f6a-702a-43c5-a952-0735a32b8b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91bc8f4-8b73-45ce-96d0-b15d56785b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f679244-ea79-4882-898d-1d65357d31a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbf4b4a-3ab8-4652-9124-8e868fe7197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d57ffc0-fa6b-4d11-8649-a631ec0d2cb3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0012b77d-d853-49f3-b2f1-b68598cb9f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb61916-a759-40b8-9685-2686fbe3037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6b4267-70c6-4427-94c7-42f20d1bfc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a0cf50-54f0-44bd-a06e-4b395c7c4af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e084e3fc-3f66-44b1-8a0e-5cc9351df44e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54a569-557e-4af2-bfeb-b3dcd2817ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81283cbe-ca53-4f83-aba3-8291e898e2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39df0a23-8433-4e4d-80ce-006585696d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793da9c2-81a9-4f5f-b897-b013a598a211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8760860-5064-41e5-9832-8445bf0f4de0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013089e-f316-4a15-a41d-187eed422f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1061a8-5e2f-415d-be28-2dbc840640a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265114d8-2dc0-489b-a941-c8f494f94570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe53e5-57a4-4400-8aa6-b285b78e96ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ba24a0-0bb9-445b-b023-d03fec7ee4ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00ca05-b5f3-4a03-8298-4670450b99ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e7f4c3-175b-435e-9de8-d690d64ae68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4235fffc-6d9f-47ad-a699-24fa25656802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879ae8b7-48ca-4da1-9023-8a4fa69dd807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd2e47-4c64-473d-afcb-e5dc60371e2a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856ac630-c9af-4c70-9719-5a4371afddac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea28df39-46b6-4f66-81eb-51a47b43989b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb15d4-348a-44f6-877a-89c7e3cb8cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbc7bd1-3bae-4bdf-9470-d30df66acb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09085bc-5cda-4547-acbc-c97367166ff1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85381ec0-480f-479d-b633-15a05f267c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4217257-eab8-4783-bbc4-318c5f01ec2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae75d59-1e0f-4c7f-8283-65a13935cb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807ab508-5209-461e-995d-c432640baa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919aca77-950a-4036-ac27-a61918672e7b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450cbf32-351f-4854-ab00-75b2d63c1f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3c5c05-d38e-473c-92a2-dc502cafc406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b288a0-a8c4-4806-96a1-7bfc03e642f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f0f83b-f4f2-4704-812c-b785105f27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94d35a-46a5-472d-9771-e86eae63293e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ad7fcd-5e54-4d9c-bbe3-31869debeb0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f19b0d-11c1-4cd3-a180-0f1b67574b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ed1e78-7d76-4a6a-a2a0-d2a4125bb524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70c1603-3495-420d-b914-633ce799ba65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5c6d0c-ccae-4374-beb3-8d7c8185418e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ca5a9-7c9d-45ee-9baf-44f87beffef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25457ffe-d7c7-4e75-8015-a956f9ad4e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818f2e0d-6b94-44ab-b38f-1768e684b6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2ecb7e-aae5-465d-9ea9-eb77c42284fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbca0ee7-80d3-4273-ab1f-0c56d762e9b2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebb1908-f5c9-4b88-a96a-2e01779e05ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8b029c-e4c2-4539-8981-cc96f8a1160a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be43f89-b4a9-47a8-9cb8-1f66802ef032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be4f33f-ecee-4af0-8c92-13c71f74e2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0242be64-fdc3-415c-a738-08653972201b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9897551d-d95b-47a4-817d-66a2da66e8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f9e65b-7d1f-409a-acd5-3fe10bd6f8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c790c68c-ae4d-4e03-b784-bed6a4bea61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b40a991-bbfb-4271-816e-3f746d4fda9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bcdf3d-5b66-4fb0-8f70-61efc07142e7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12906f10-2aed-4257-ad2f-e641db405a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baed4cd5-dbb7-42a6-b493-ce370d83e87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332f8df-2cf8-49fe-9dc1-321b9ab0985a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19300c4-1905-4bec-90d0-347b9d1aaf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea57d086-f25c-4313-b3c5-ce2dfae4a8c2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c1bd89-7bc5-4c0a-bb41-a4627ee362bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c9431f-a4a6-4b7f-9439-8dfd32127b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56529102-e856-44d7-a079-96ecd0839fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87928370-28aa-4985-a39e-ad48e5cd85e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211b2b41-c578-4919-9941-763fdafc8a28",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3eb0d7-9309-4b60-833e-676ddc62d790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9ee5ff-e6ae-46c2-9035-8176e1bb2ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8161bb37-735d-4bba-a7da-3670230cae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336d6c85-f13d-43e1-accd-63f704b492a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74c49e-39bd-4995-b381-d8d28efe6021",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e099d7d9-a0fa-487e-a9c9-c45e25fb3b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484f0d11-36ba-4a94-8e46-436378b3c7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c814c7b-8f96-4afd-b4b0-1a10f6c1a017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c64e2-d1a3-44df-b417-05091dbd3145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0344a4ea-218e-40cc-bcba-273e8cfabed0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6be7d2d-cb82-4b66-aa72-761130d6d971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d642ca26-7bdc-4704-a326-f29410ad64a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c1882a-1048-49e4-aa20-253df96a259e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51eee40-7ff0-4de9-9ab6-b4f6aa41b61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d87165e-601f-4229-9279-b0e5db16a8ba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2631d4-4eec-46d2-8dab-38a3c0aeb808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ce47c8-b416-4f97-bd78-9d6ad20fd3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffdb05e-98f2-48bb-aa9b-8b81426b7761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3744a776-ef89-4b20-8aca-91157f89e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbe62e4-cb5d-47f7-842a-d44ac7ea4797",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15056ef3-aa2f-4dab-98b0-98fca04b336e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a25d17cd-4336-49e7-9ef2-31cb1a9afdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca9299a-5ac3-4d99-89e5-6cca31125c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd542f06-97a6-4f78-b8d6-6d18df02b8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8879c-9f07-4f85-b827-b5dd2dcb6823",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5272fd62-1e54-4ae5-94d1-1e6cbd5adbf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a6eb98-63bb-44e3-af02-868c46a4610b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6f6485-2c67-46e2-bed5-ef1f52bb4f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453c164f-60c8-4654-aac1-bec04f6c3193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d879f3a6-b0f5-4c97-b05a-eefc852995dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d30ae-2677-4046-ae5f-3c89a36f6a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c069495-cc38-415b-ab59-9bdf02f0c44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce73fe3-328d-4261-9010-2c9fa6a22492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209ec611-b01c-4c87-8962-191f79ca486c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c114d84-e614-4b64-ad8a-5d3d3394d86b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a19f55-c42a-4497-8b26-58efaa39bf9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b5f27d-d90d-4663-83b5-77dfbb39ab52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524cef4-0251-4861-8191-b1df4b687679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee05ad4-910c-41c6-9b42-a5e081bbc27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f6b8a-05a4-48d1-9c88-38ddb5a5b25c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14add60-b20e-4cc2-a48a-d4b4247b2274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "930c13da-879b-49a4-879b-c88a7db3091a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce50dcc-fcaa-472d-9264-3f2671a6e8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f93c795-7285-48d6-91cc-0b35e609137f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512ec378-33de-4a94-9613-ffdc1f555193",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef11c7a4-4fc1-4234-ab3b-3242c704e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19fe8993-bc51-4b68-a67e-3f50f06eb789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a03fc73-0e69-45b4-bb4b-54cf33825f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d076c68d-909f-4fb1-b58f-263d0c62c47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfb0858-21e3-4b9d-b9e3-ca65264e2b08",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a480199-fca2-4b2e-981b-0bf97d72e937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440e6fea-2970-4195-ab2a-cb8dc5e63443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957c391-ec4a-4160-be16-4a4760908c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75be56c8-19a8-41c8-85aa-1d0b460bdd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e587d68-442f-4909-a345-98fdd21af0bb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f07f0-aeab-4087-9688-c865befb9e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee5e05a-0ebf-4583-b9da-bdb221677dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1b603-de37-4498-a45b-3312b7e76cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d403862-0790-44ae-8eac-11b83e624995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9126f6ff-a6d6-4f82-9ced-84cb9f70e9c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80995a14-5e9e-4d6d-b247-e0ea85c42198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea0c5ef-f66a-4bfe-a801-cc12f9dfbbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b8dc70-c30f-4803-906d-ef7a799a1f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70ec82e-9b47-4648-8eda-be0a63e9fe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7886c31b-b69c-4b02-940c-2d137a792dcd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54bc356-209a-4e3b-ac5e-1277fdd288f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9be8b79-32d0-4694-8eeb-7f7d6f4277e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabfc58c-b8cf-499a-a506-c5c6e3647d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e645ab-f734-46bc-bdc2-0bee953b65e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302816dc-b435-4d4e-90ed-cb486d13b801",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad4d0ac-072c-4a41-ac8c-65890a999ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1a9fcf-f4c7-442a-93d0-70ab524bae3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc69213-f0b6-43d3-9698-78b670ea407a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abebf69-68d8-4016-b129-a2b7951db7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb90de9-50d8-44eb-8cd5-5eb89953f86d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252fd28e-d0b6-4cd8-9d14-bd51999df786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a64d346-cd02-4cd9-929e-eb723bf34835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3b655-55a0-4c84-a2e2-4219f4d8e59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3581458-da35-4be4-8e6f-79a500bccfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ba3aff-699d-43b6-be51-95560ccef29a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa2f421-eeb5-418a-bec1-f9e91da07f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f5e10e-11c9-42ea-95cb-77a8f6cf345e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d55650-7d3a-4e57-ab12-a562f926d6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14909f99-f450-4215-a900-2a2f7f91c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a56c463-232c-45de-9a14-87a3c459c128",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e923f0f-9e9d-4cda-ac62-ccbc2e2847bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e90baf7-9ad7-4edf-8d23-c4a19a73ee19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f44632-1fce-4049-a7f5-770359737884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0b76b5-0c2c-4b24-bb81-c527263a5a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471dd7e5-35a5-4604-bbe7-ba7b96f73783",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e9886c-4219-4718-88e5-19a5afa11e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9122d9af-bfe9-4ab8-ae45-9b4e9523b2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33e49bd-7dc3-4d71-8109-0bb657504bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396e4b50-627c-4acb-b1bb-cc11e4be7d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f48044a-7c43-4bdc-9fdd-084feefd9f93",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddacf287-fd39-4024-adab-ecf8d2a413c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6453df91-e5a4-4d38-a96b-d93f64a9e92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a777bf2-43e3-4831-babb-469cf23800fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12647145-d1a7-4d8f-9cb6-80f2745e939b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739dc99f-c9ab-4209-ab8c-53bdaaeed76e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5af48-2693-423e-94f3-55f1ddb4ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b330e78-14d4-4b3c-8aab-5324249af31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284745fe-4ec6-4e7a-903e-3eacc59b7b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521061b0-719b-49df-9b26-a23078243f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492d09ea-0c6a-45f6-9b8a-1776199b3615",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82761407-3d1c-4efe-90e5-ef1a19fd9ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2f8b48-9990-4661-9127-84a6bb6648b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3ae9f5-0dfd-418d-a4df-8f0f2aaaa7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21007901-7d12-4ea0-9241-54d9ee73a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df340c5-8e92-4bd6-9ae1-2c355b30fad8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8848ab8-aed3-4b82-b81f-71637e24dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9053b7e7-e752-4d0a-a00d-ba52106a6d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6d440-4d0b-4b08-906a-f6663ce62acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101f5082-e49a-4e7a-ba84-bae122b71928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d871a05-b19d-455a-9c6b-fc03fa094dbd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb45777-5d9e-43e3-a23f-9bb9dc3945ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3dc8027-33a1-4c80-89d5-12d5401e04a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf6442c-9878-4e9d-8084-ad3a19880a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5900f18-9aee-495e-a16e-f9879314a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6389a7b-3c31-4cdb-9e4e-78676658e79c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d594ac-ba38-4b83-89a7-366e8bde644a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4002a5b1-7a9c-48fb-8c13-37074bd777bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a851422-89b5-496f-ba2d-a21d41d2ea50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ff1e53-00dc-4246-bac9-097766188030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca06359-d96a-4942-99fd-9527436c7586",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f43ccba-7354-4124-a5f6-79ad067974de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee51628-752d-424b-8cff-d5994896ea29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927219cd-7b95-4cc4-aed4-b7364c67b1b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26283b32-d005-42aa-b99e-f0a858e26857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad486c6-2d44-4313-be9a-7d89d0cad98b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcebe73d-acd3-4a40-a432-c4b9d4d892fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8184cdf5-9f64-43e5-9775-9c77dc637147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5013a9-3b1f-4e33-b63a-686de59d86c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9c5cf1-d886-4cb9-a998-72d0a457c364"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bbc6b78-d515-4acb-ab7e-025cc5bba6ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c899c342-c7b1-42bb-bc18-37ece6ffc69e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c8c10d-29a4-42f0-9f09-6e6f23a6ee6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11784c50-d6a7-426b-a8c6-328674133eb9"
                    }
                  }
                ]
              },
              {
                "id": "f8637ea9-4678-40fc-9e04-f5c8c19429e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c73e8a3-e05a-4ce3-ae8e-9c7dce9774b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b8bb7f-233a-4a0a-b23f-3158dafd478f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7bc666af-30e1-4e9d-ae3f-c7477547769b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07916bf0-f557-4d52-a55f-cc19c0bc1a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baed9aad-1538-4198-99c4-c122a1ce9332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff3ee94-7c5d-4367-b03b-c8c0b431e1fb",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c28d66-73af-463e-9e83-a98753296ff2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b2b6cbde-5aab-4578-beda-705b3c038604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e2c3f-ae71-4742-9354-8eb24c6db389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4509ca50-bac5-48a5-baf5-ee51240a3086"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a115c78-fc3e-4e93-9b9e-4ff36eb9df16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e64ebda-b270-43ed-8ad1-5b88d5ea586f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e7f0d6c-9dbc-40e7-9d13-0663a43ecc9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d35719fa-5ea0-4bb8-bd6e-52386f55216a"
                    }
                  }
                ]
              },
              {
                "id": "06bc5c83-7b66-44af-aa9c-f9ff04571cdf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "34fd6ac2-bfb3-4946-9361-c17041c670e7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bf5db9-4aa1-4ef8-a8cd-4dc2127c8241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c9f3737e-0e81-4f81-b131-7d8f18b6a251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c306a4b-ff73-45b6-8985-84730c6ab471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3d0a82-4af8-440f-a8dc-44adc14a105f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43e1bd6d-b6bf-48ce-a9e6-1a7892601f7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64157ae7-e2fe-4011-8de5-d246e1072a2b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e145e1eb-02eb-4d83-8dd6-cc5333620465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e863341d-56e6-46c5-8f0e-b15f455da933"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aa1bfde-22c6-4b6c-aaab-2d28974276d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c817e33-12d3-43a6-8c55-66c60d77a89b"
                    }
                  }
                ]
              },
              {
                "id": "103ba376-9fb5-4066-927e-b98b90964a2e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "791e84f6-8995-4b8e-b58b-01ec8e8d70da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f18af13d-0325-4ff9-8293-25b66f9a0757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2654bd55-c574-4910-8c6d-b899ab16513a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8de7942-cd3b-4900-8458-594453105afa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4c4227-85d7-43fa-9fa7-f41211b79aa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6920898e-a212-4ea5-b075-d9ef6c069016"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5faf1df3-e27c-45d1-bd87-c0a7e7f54dcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d860a14-f84c-4613-bcde-cf8e277ba7a5"
            }
          }
        ]
      },
      {
        "id": "fb1cf235-5911-49b2-8f4f-e8480bddbfa4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9a7df206-a43c-40c5-be54-d726c51e5706",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92eaf288-f13e-4dea-91c6-aa8fb9d5bee4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58090777-067e-4494-a531-9b6c4e792dd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d27b1ff5-b992-4a59-9ad1-9cd3553c0fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ed430f-88a2-47f5-a3eb-91bc4e2b1907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d4e17e7-41ad-4880-b251-32ac2c9ec69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f752a1-3cba-4017-a910-52f926345586",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32faa2e-63fb-4488-aa10-1383d74c5e60",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfa8fc20-d354-4bea-9ebe-1d4c04843687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749dd9d8-6cbf-431f-9773-095d0f159618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8acd14ce-35bf-4e4f-b868-7275abc9385c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e3f616e-0474-4b4f-9800-524683a059c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77218069-ef52-457e-8496-ecabb219ea5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0c49120-c9fd-4302-9249-b9d580a1eb04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e95298aa-3c1f-4228-9294-032cac8a3e79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca3838ec-982f-4996-89d7-b00eedf0c40e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "711c4f24-fde4-4065-a18f-7dd739b529c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "175eb85a-38d8-4555-9b78-33d8fc80d176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76611969-23df-45e8-a729-bab29e52b321"
            }
          }
        ]
      },
      {
        "id": "c3d2d786-e79f-4ca7-8ff0-83e6d69cbae0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c83cc57a-d734-4216-8178-59d7baceef78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f34e14d4-7a18-460a-af65-db30a237de63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b72bee84-02d9-4f50-8921-a2447fa7d62f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59bf268-ebfb-4c35-9265-19b98ef36b14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69735188-c6a9-4063-8751-8b902d25f1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a7aaa-fb62-4f5f-9ec8-1d54e93d016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56ce0dfd-bccf-4b0b-acbe-752fe8b77ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ef8eb1-704b-4e68-948a-58475502b237",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa7162-81b6-4f5d-bbd0-29e1bb7459ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b145f7d6-1000-4668-91d0-183c5e091215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6404b87d-3780-4576-a831-fa6ebc6e2c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d1e6262-acfa-4174-869a-65ed984bc929"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d2a5406-8d94-41dc-aa0e-2c1257d0a0b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65a2ec48-deb9-4977-94b7-4cad82868534"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c376d7-f0b9-452f-bc71-a1a73c137d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcf54ed0-3035-465b-8446-3debe90def52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f458648d-6098-49db-aa2b-6b13d0f5d17d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64309fec-a078-4f4a-a794-83c9fb6aae5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ad92f29-6f4b-4d65-ae6d-9795b58259f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35bbbbba-c2b5-4fb4-b69e-2a3f6956e537"
            }
          }
        ]
      },
      {
        "id": "4d97ae76-9a2f-4683-9b66-0295fd0dc15a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "58c45d78-62e5-457b-9968-6e0328b5d03c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f916ebd0-326a-49b5-a11e-69597ea81d8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c092d394-f540-4b6b-b6cc-a19c5ca7296a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b6575c-1b46-4816-9430-5631c0ad060c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f47066d-496f-46ee-bd26-1794febdabc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c59266-b804-4988-8486-7b8f19bb31c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ad08172-fcdb-4d81-aa13-b5a033a7dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98b85a2-8d90-4f23-8195-c8a289ad4a8f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc7d05-66bc-4257-973e-8703c4caac1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9324f8dd-42eb-43d8-8c26-c490977e2556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1564a180-cbfe-4263-aab9-385a39e354fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f6d426f-890a-4b94-9ffc-7611ed1af287"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbfa67ad-0181-4a8c-ae33-a6d1a5899757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc77d41c-95fd-4daa-bda5-acc98788d70d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b18ec6e1-d83d-46d9-b943-f32e1a1bc34b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b5fc77-9b93-49b6-8d8f-97e17d4b18b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "298f4ddf-1fc8-44bd-8d80-4ca4ad2cf441",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66005552-c926-4e4e-af3d-05e0e7f2c273"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f74ddd1-a2e6-4aec-9eda-eb151f7977e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7b21f9a-7530-4dec-95fc-6e786ab69291"
            }
          }
        ]
      },
      {
        "id": "eb87b65f-7a48-499a-b703-a8413b5cf81d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a40045d-9896-4a0a-ab19-40797344b95e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f1648ac-731c-4e8a-ad95-a9c4bd5e1548",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de57673f-23be-4967-aced-870334347abc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc246c27-e870-4c66-b09d-9aba8798e8e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed82954e-70ea-4ad0-8f14-ff87e8a76000",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 59.54230769230772,
      "responseMin": 20,
      "responseMax": 446,
      "responseSd": 43.03185468640037,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679963955589,
      "completed": 1679963981457
    },
    "executions": [
      {
        "id": "bcf23f1b-5261-4898-814e-781a911e0a08",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1be9ef47-5aca-42f5-9794-9a4ba905fcae",
          "httpRequestId": "4492ca14-7eb7-470a-a922-307bdd26c5f9"
        },
        "item": {
          "id": "bcf23f1b-5261-4898-814e-781a911e0a08",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0765dc77-c3bd-49c3-a9be-055adb00e2e9",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "ffc81ada-aca0-4ea9-8d49-7de76fb726d3",
        "cursor": {
          "ref": "ea2634d2-ab61-41f3-820f-f038bb5e427a",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3221d923-0c1a-4847-937f-f4a5d2e5397e"
        },
        "item": {
          "id": "ffc81ada-aca0-4ea9-8d49-7de76fb726d3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5c857ce9-d696-444d-acc2-e920ebf28536",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "c9bc9162-bcae-450c-bf75-b6e75ce2bf44",
        "cursor": {
          "ref": "d4c78e1a-ffa7-4a7a-a5dd-74b82819f9f8",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b4d3f71-a644-4799-b0fd-16979f652bd8"
        },
        "item": {
          "id": "c9bc9162-bcae-450c-bf75-b6e75ce2bf44",
          "name": "did_json"
        },
        "response": {
          "id": "7fd2bc7f-ad06-4673-924f-fe66227e9ec9",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7386bb-bd61-4660-bcfb-45eb6c24b700",
        "cursor": {
          "ref": "372bc73f-712f-4867-9315-c08a5f0e7429",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a3ca6a5-daa2-4626-a499-75a713ddf0b6"
        },
        "item": {
          "id": "4f7386bb-bd61-4660-bcfb-45eb6c24b700",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab442341-18ed-4aeb-8e72-632a8adff9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7386bb-bd61-4660-bcfb-45eb6c24b700",
        "cursor": {
          "ref": "372bc73f-712f-4867-9315-c08a5f0e7429",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a3ca6a5-daa2-4626-a499-75a713ddf0b6"
        },
        "item": {
          "id": "4f7386bb-bd61-4660-bcfb-45eb6c24b700",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab442341-18ed-4aeb-8e72-632a8adff9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1012c8d8-d103-49ad-977a-1d05b2cc2ac8",
        "cursor": {
          "ref": "4fcc4a45-ebba-43f4-b8ab-81e06afe6b34",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cbc0b816-dd24-4c6f-b9d8-4f2a70b0ce3b"
        },
        "item": {
          "id": "1012c8d8-d103-49ad-977a-1d05b2cc2ac8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cdbc0a05-9675-4566-9743-1bc74643be5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 93,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3dc71c-c04a-43ae-8426-f533d040690c",
        "cursor": {
          "ref": "68276dd0-cc62-4b9c-b75e-8731f288741e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4a41cf56-fe79-49ce-acdd-1ce13aeac7a6"
        },
        "item": {
          "id": "df3dc71c-c04a-43ae-8426-f533d040690c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9ab146cb-71a6-419b-9895-24a41a014a21",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0683d472-c953-4915-8302-1b35a6371b17",
        "cursor": {
          "ref": "900c3c60-1fdb-4d10-b8a4-6edad8ef4b7c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4090d6f3-9b46-4e4b-8665-75cb1b511e55"
        },
        "item": {
          "id": "0683d472-c953-4915-8302-1b35a6371b17",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2396e130-4407-4e25-b2e1-219b507013e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ca1e08-b8e1-44fd-bf31-774aa6cddaf3",
        "cursor": {
          "ref": "210d1c48-ebb7-4fe3-aab3-0c1eff5cd95a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5de38957-78e6-4c52-8187-ede82aef72e6"
        },
        "item": {
          "id": "85ca1e08-b8e1-44fd-bf31-774aa6cddaf3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "250dec6b-9602-4dfa-831c-18fcd0405434",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ca1e08-b8e1-44fd-bf31-774aa6cddaf3",
        "cursor": {
          "ref": "210d1c48-ebb7-4fe3-aab3-0c1eff5cd95a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5de38957-78e6-4c52-8187-ede82aef72e6"
        },
        "item": {
          "id": "85ca1e08-b8e1-44fd-bf31-774aa6cddaf3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "250dec6b-9602-4dfa-831c-18fcd0405434",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b74532-dcda-4f62-a25f-8796936d11e9",
        "cursor": {
          "ref": "d05ec206-cd0f-46cb-835b-6abc77b3ec10",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff03b275-95fc-472a-973b-946f62f301c5"
        },
        "item": {
          "id": "48b74532-dcda-4f62-a25f-8796936d11e9",
          "name": "identifiers"
        },
        "response": {
          "id": "bb2e8072-084e-4e36-a47d-0c07c94bb946",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da3627-49c9-465a-a506-afa1a6248347",
        "cursor": {
          "ref": "4cbab097-9c41-4e23-af05-06476ea01273",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "438172a2-6ed4-437b-a829-30621ccc97d6"
        },
        "item": {
          "id": "72da3627-49c9-465a-a506-afa1a6248347",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "92dfb291-93bb-4b21-b78d-805ef7c41682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da3627-49c9-465a-a506-afa1a6248347",
        "cursor": {
          "ref": "4cbab097-9c41-4e23-af05-06476ea01273",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "438172a2-6ed4-437b-a829-30621ccc97d6"
        },
        "item": {
          "id": "72da3627-49c9-465a-a506-afa1a6248347",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "92dfb291-93bb-4b21-b78d-805ef7c41682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57f5144-5cb2-49e7-a3f6-29be661bd214",
        "cursor": {
          "ref": "7cb59ace-8bc2-41c5-8a3f-4968a3f9a421",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b52d688e-58be-43ef-9492-c41920baa9b9"
        },
        "item": {
          "id": "f57f5144-5cb2-49e7-a3f6-29be661bd214",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6439153-9b92-4f50-8b0c-c864cc138688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cc0685-0468-4d52-b48e-4e806c3f895b",
        "cursor": {
          "ref": "af59aded-6f39-4ca6-9258-152e7a0abe20",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fda5305-a8fb-4975-8c35-e9679b0eb523"
        },
        "item": {
          "id": "30cc0685-0468-4d52-b48e-4e806c3f895b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "76ef88c7-375e-4386-870b-5e203f130090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fb4f60-0e7c-4388-bf40-0a484caff467",
        "cursor": {
          "ref": "1da8f55f-a969-4f36-a371-cab39a0bf06d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "be5cf501-fff5-4bde-9e32-76c3e072d4ea"
        },
        "item": {
          "id": "31fb4f60-0e7c-4388-bf40-0a484caff467",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "215bbd83-65f7-4c67-99e7-0975b4012eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878c7a88-7c1c-4ff7-b412-d04c6da9e466",
        "cursor": {
          "ref": "5a5ed5f2-822e-4689-ba86-7d325d5a8999",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7b334140-0563-44ec-b6ec-7a8bf3b92d44"
        },
        "item": {
          "id": "878c7a88-7c1c-4ff7-b412-d04c6da9e466",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "776ccdfb-b1bc-499a-b608-b561000821f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5406c69-9bed-4e58-86fa-4d6f0c8330a8",
        "cursor": {
          "ref": "f6b5bbb1-9632-4a5d-b059-38eb70857df0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d074e604-72ab-4776-9679-08df3ca9e4b5"
        },
        "item": {
          "id": "f5406c69-9bed-4e58-86fa-4d6f0c8330a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb6dbcb4-e293-468d-90c9-b1cc7e589c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c25079-8dc9-4c47-a448-22373be3950a",
        "cursor": {
          "ref": "7ee441f3-f704-4d3c-9c24-63b4e365bfaa",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "27998ed0-2935-4426-addf-e509f82ee4a3"
        },
        "item": {
          "id": "e6c25079-8dc9-4c47-a448-22373be3950a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "29c37cec-3e9a-4a94-a035-e85bf755285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3014baa4-57ee-430f-9696-6b2a6e5be08b",
        "cursor": {
          "ref": "2f4e12f3-3ca4-48e4-b9bb-067a7aa4787c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e819e3dc-cb11-41b9-8f5c-e0faf11b269d"
        },
        "item": {
          "id": "3014baa4-57ee-430f-9696-6b2a6e5be08b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "16c9d4cd-3556-49fe-a935-4379aa4d1d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd74566f-a2a9-434a-9412-2a5b91448233",
        "cursor": {
          "ref": "a64e3490-cbde-439b-8c99-51e7e98c766d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "56627d08-a9b3-480c-977f-5f261bc4e576"
        },
        "item": {
          "id": "fd74566f-a2a9-434a-9412-2a5b91448233",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dcaddb69-03bc-491b-b5c8-b9b7daae104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd18e735-014d-4516-b784-5797096f25ad",
        "cursor": {
          "ref": "d0ced665-7baf-41a6-96c5-80d9904c4088",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "976e1157-a05a-4298-ae58-da3d1d19698b"
        },
        "item": {
          "id": "dd18e735-014d-4516-b784-5797096f25ad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f15bac04-48ff-42a9-bd1c-e6da4d08556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415abb9-29e8-4d2f-acf3-12ae29cca943",
        "cursor": {
          "ref": "2f179614-1cff-4387-97cb-cf74df4abdd0",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d7b31f9a-128e-4fe0-a666-343af1d2bcf5"
        },
        "item": {
          "id": "a415abb9-29e8-4d2f-acf3-12ae29cca943",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f354b0b-6781-4a55-929e-d8fc9e378536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6601603d-8fb8-45e0-b41c-016a3c9e49f4",
        "cursor": {
          "ref": "ead5659c-9161-424b-a26c-d4d5f3e12c7a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88616d4b-b5bb-4916-aa20-35264c02f6fa"
        },
        "item": {
          "id": "6601603d-8fb8-45e0-b41c-016a3c9e49f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "89ba77a4-80f0-4500-83c2-5647b30af420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0990d0b1-601b-4619-8ef8-cd043983f500",
        "cursor": {
          "ref": "c9229181-b068-44a1-b2df-501b3cd8611a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e201864a-148c-492d-ac56-66149852683d"
        },
        "item": {
          "id": "0990d0b1-601b-4619-8ef8-cd043983f500",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c212e00f-32bd-48f3-b68b-949e9ff5eff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3de9b24-67e4-44c7-9c5d-0aac05039f6f",
        "cursor": {
          "ref": "ed529735-2b6c-473e-a953-d9387270faf1",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1bbcc666-a8e5-41e9-a4dc-594ce7a6a6ff"
        },
        "item": {
          "id": "c3de9b24-67e4-44c7-9c5d-0aac05039f6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ceb37a28-d771-4ac5-a9f0-9fb85b77c2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a6422a-b6c5-42c4-8851-2964f2d2b213",
        "cursor": {
          "ref": "5944d241-252a-4fa4-b2ff-499c2a42efab",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c474afba-5028-41ba-a6ed-5aabb5e749d6"
        },
        "item": {
          "id": "98a6422a-b6c5-42c4-8851-2964f2d2b213",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "76907772-dbc0-4702-919a-fafce7e484ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0cfa63-e8a9-4689-aba6-f012545750bd",
        "cursor": {
          "ref": "0f4516e8-4fec-4ba9-9fd2-77f918e4f4da",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c5f1059a-8c5e-4aa3-a04c-2b1d3811e412"
        },
        "item": {
          "id": "5b0cfa63-e8a9-4689-aba6-f012545750bd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1106824b-8fda-4d52-a2f9-5c19804bfdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b5ce25-1bea-4001-b5db-d96361089f6b",
        "cursor": {
          "ref": "914e65fb-56ce-49e9-8022-53ed5ade8750",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "019b2396-54e3-4355-b834-f3ab9ee07fab"
        },
        "item": {
          "id": "b3b5ce25-1bea-4001-b5db-d96361089f6b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c1529ef-aefc-48f9-845f-5f851954e964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5157e36e-9539-4b58-9026-7151bfc5a1c8",
        "cursor": {
          "ref": "5c34bc3d-14fe-4468-9b91-3c54caa9d9fb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a8fc6227-6996-4e72-803a-50a52dbe73d7"
        },
        "item": {
          "id": "5157e36e-9539-4b58-9026-7151bfc5a1c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c5b3d00-24f7-484f-b88e-d8e3f2a8117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c176c-68d0-4953-a5ff-eb5211954f8a",
        "cursor": {
          "ref": "ebcd25c6-e99a-48ed-9940-f30e55296bed",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "28a7a5c7-adb7-45d5-928d-5c5f4bb4b449"
        },
        "item": {
          "id": "088c176c-68d0-4953-a5ff-eb5211954f8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20bf53ee-419b-4a14-9cba-e4ddf8f652d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3f9162-e80c-4ca6-81cb-42f9c72097d5",
        "cursor": {
          "ref": "67496b6e-07b3-44f5-925f-244f2d2e05ee",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35dd8f9e-6af0-4599-bf52-a4e25180a581"
        },
        "item": {
          "id": "0c3f9162-e80c-4ca6-81cb-42f9c72097d5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a2ea304a-6680-4472-af0a-e49cfd263ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11919ff-db7d-4b1f-8114-5bc084a8fd61",
        "cursor": {
          "ref": "330d616b-bc2f-4909-bf8d-d51fb8b09804",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba3c6e8d-4f96-4df8-ac62-4019fb275cff"
        },
        "item": {
          "id": "c11919ff-db7d-4b1f-8114-5bc084a8fd61",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3fda8ec2-defa-489e-a5a6-3ac845388e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d548705-04c3-4afb-812a-ec930e9dd745",
        "cursor": {
          "ref": "2c3ce2eb-6687-481c-9a81-46d7c6ef18fe",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ae3bcd77-22bc-4bfe-a0a2-d8158d14950f"
        },
        "item": {
          "id": "8d548705-04c3-4afb-812a-ec930e9dd745",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8bb46352-6136-4d4d-a199-801004d2d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88d91a-319a-4d7e-8a42-d9dded8ad0dd",
        "cursor": {
          "ref": "fd7af256-bc05-493e-805b-14a6831a20cb",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ece14dd1-bd2a-4033-873f-2004728639ef"
        },
        "item": {
          "id": "dc88d91a-319a-4d7e-8a42-d9dded8ad0dd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dec51801-3aa1-403d-9f18-58df0e94dac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec2c06f-501a-48e7-983b-a96dbdf5b828",
        "cursor": {
          "ref": "e288fc1c-720c-4a90-befd-d1f7800128cd",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6df5fd45-818e-4d61-9800-cae933f57685"
        },
        "item": {
          "id": "0ec2c06f-501a-48e7-983b-a96dbdf5b828",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "854ec0dd-37fe-4dca-a38e-c17c6439ff8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c539477d-1c07-42cd-ac33-b50b8d8abec1",
        "cursor": {
          "ref": "9b11f0e7-43ee-48f0-b568-d33315204f84",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "97d393cc-8b2b-47c2-8c1c-8c9f753f83f6"
        },
        "item": {
          "id": "c539477d-1c07-42cd-ac33-b50b8d8abec1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ccd047dc-a4f0-4412-88d6-8d8e535ba2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd1f018-454c-4a8e-8b70-e14061f76e7d",
        "cursor": {
          "ref": "af0297e8-a372-40d9-aa8b-899c31f35a3d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a005e87-53d5-489d-a7aa-d532cace8a63"
        },
        "item": {
          "id": "7fd1f018-454c-4a8e-8b70-e14061f76e7d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1c5b5cc-8e35-41d3-b9c4-e66e7a178efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f9ba00-21d8-4df6-82b7-faf965f65198",
        "cursor": {
          "ref": "c9d3daac-6c57-42db-82cf-62abec946981",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6622282b-10d7-4f60-9f76-fe1ec35555f8"
        },
        "item": {
          "id": "24f9ba00-21d8-4df6-82b7-faf965f65198",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a9cb8c51-e4d6-45df-8040-a098616c571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ee747f-65e7-4ad7-94a6-688f0d1a4449",
        "cursor": {
          "ref": "c283cec5-4957-4db4-96f3-298f934bb973",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "434eb7fa-81ef-416b-acbc-2f0fe89bea07"
        },
        "item": {
          "id": "92ee747f-65e7-4ad7-94a6-688f0d1a4449",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a4cdd85-61f6-4542-8046-561864358ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f09c086-799f-4850-aa10-decd9ca5e25b",
        "cursor": {
          "ref": "265c4135-17d9-4012-94d2-103938c69f20",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dc71bcdd-722e-44c9-8231-057d8c260a7f"
        },
        "item": {
          "id": "1f09c086-799f-4850-aa10-decd9ca5e25b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83f37ff5-4a60-4479-b615-228092ba5a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d3b4b-f826-416d-939f-fe682b698886",
        "cursor": {
          "ref": "c6cba3bd-1f17-4cb5-8f68-d5381233c4f2",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d4a975a-816b-4ebe-96a6-43582c336600"
        },
        "item": {
          "id": "131d3b4b-f826-416d-939f-fe682b698886",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "688efd39-2bf8-42c3-83c0-2f38efde05ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22311d5e-4513-4644-bfc1-97a0aa1cce37",
        "cursor": {
          "ref": "93456846-effc-42b3-9df9-61ad9dab8526",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "697fa6a6-6cfa-40e3-b419-1a86195c0dba"
        },
        "item": {
          "id": "22311d5e-4513-4644-bfc1-97a0aa1cce37",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c6231f66-5378-4cd0-af68-2d2cb36d0193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5481e0fe-67fe-4341-a6b5-066154fb1eeb",
        "cursor": {
          "ref": "4e8d47c6-cdde-4d5d-aae1-b6828978a43c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1079df91-3fe5-40f5-b2c0-008094503213"
        },
        "item": {
          "id": "5481e0fe-67fe-4341-a6b5-066154fb1eeb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e8689c0a-213c-4eaa-83db-112f41de7f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80485b2f-eddd-4826-816c-6824ad1f68fa",
        "cursor": {
          "ref": "5496bafc-e333-4935-9557-5c2bdd276458",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4c0fc50b-8494-4a2b-ba45-ce980dece061"
        },
        "item": {
          "id": "80485b2f-eddd-4826-816c-6824ad1f68fa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "67346337-7f16-45d8-a664-d17591d75020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d811283-3afb-4815-8b9a-31c3680ab24e",
        "cursor": {
          "ref": "0f281f7f-0c5a-4e39-97b1-bcf81920678e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c0e773ff-0226-4e65-b3d9-cdbedc366b34"
        },
        "item": {
          "id": "0d811283-3afb-4815-8b9a-31c3680ab24e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "76d24667-ec56-4e14-a119-0a1d754d32ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97387628-b44b-4e61-af40-524ba02ae46f",
        "cursor": {
          "ref": "a3f73588-6a20-44e1-af56-2a7e96e5f0bc",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4413d9ef-0915-44ad-93cf-97578d0fcbd9"
        },
        "item": {
          "id": "97387628-b44b-4e61-af40-524ba02ae46f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f1530f95-c2c5-4deb-aea2-175c15797be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5fb582-6a94-4d7c-9cdc-470feb51e731",
        "cursor": {
          "ref": "372813fb-56bc-49e9-b563-1ae8705a9ab0",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "10a1cdc2-5481-4f4a-870c-758951961ba0"
        },
        "item": {
          "id": "db5fb582-6a94-4d7c-9cdc-470feb51e731",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0502befd-745e-40a7-8788-a5463d8d985a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed76f99-221a-4c21-87d8-3c3a90bec68d",
        "cursor": {
          "ref": "5192ba6c-b680-479a-a9ea-a479cd3b2f8e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "08422f94-761a-48ec-b986-c6c0622bd02e"
        },
        "item": {
          "id": "eed76f99-221a-4c21-87d8-3c3a90bec68d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3cf338dc-2cbd-44c4-9d26-b07fe6a1f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155f29ae-e6aa-4617-907c-b394dbc20d90",
        "cursor": {
          "ref": "877ce94d-7cc6-478e-a3c9-15a1ed4c8ce0",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "89327247-f8a5-4eba-ae17-ad2b473d452c"
        },
        "item": {
          "id": "155f29ae-e6aa-4617-907c-b394dbc20d90",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d7d25e3-9df0-4c1f-907d-20208a0e1e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93836aa8-34ee-4826-9cad-72ea620a56fe",
        "cursor": {
          "ref": "04c60305-36b1-4572-b868-99fe70438b2e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "984f7df5-0503-4f43-8e33-e47f66a1d167"
        },
        "item": {
          "id": "93836aa8-34ee-4826-9cad-72ea620a56fe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5e822732-552f-40c7-a442-42e4e4dcff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f3177e-c2e3-4743-bed2-36a876f22116",
        "cursor": {
          "ref": "47fb6c72-d9f8-4f3f-99d1-e5000a282884",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e91796b8-48ef-40d2-82f1-38e4aee60667"
        },
        "item": {
          "id": "d1f3177e-c2e3-4743-bed2-36a876f22116",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5ad37c02-f491-47e9-a72a-e5767c53490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3424ddf-eac0-49f0-95ea-62bfdf05f1aa",
        "cursor": {
          "ref": "34666abf-50ba-43c5-9ae3-db10cb6efa37",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4333c5d9-9c22-4e28-8b65-ee6d0ce3f3ff"
        },
        "item": {
          "id": "b3424ddf-eac0-49f0-95ea-62bfdf05f1aa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f0f41c4-3e71-4f3b-9fd1-89de07db8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5755b7b-efef-4bfa-b88f-e8924e63a859",
        "cursor": {
          "ref": "8ff5ed1d-5879-4ff2-bdc8-ad250b97972a",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "df3bf919-7c1b-4564-8826-cbdf6ed1b249"
        },
        "item": {
          "id": "a5755b7b-efef-4bfa-b88f-e8924e63a859",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d15d35a7-eb01-4e34-b9ef-a3c2399af0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf331f-8e05-45c8-9b7d-21214ace37c4",
        "cursor": {
          "ref": "e453461b-8215-4813-adee-465aa2362bc0",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3be6bda7-0749-49da-8dbf-9562a83ec21b"
        },
        "item": {
          "id": "56cf331f-8e05-45c8-9b7d-21214ace37c4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "831ec8d1-4bc0-401d-aefe-4830f3cf677a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac9b994-a802-4849-a9dc-82cf97c3a8b2",
        "cursor": {
          "ref": "67286b10-a2f9-4da4-a1a7-6761331cfe60",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d34ec151-ae00-4017-82d1-fe66f8900c58"
        },
        "item": {
          "id": "6ac9b994-a802-4849-a9dc-82cf97c3a8b2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5fd4ad21-9f97-4f37-bcc7-396fb7531000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0101b1c-8fae-48ac-914d-c3cd17fbf0db",
        "cursor": {
          "ref": "8c709910-8fbc-4dca-99e4-8f476706d2ea",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12fbfae4-1ac2-43cc-ab33-5ba650707747"
        },
        "item": {
          "id": "d0101b1c-8fae-48ac-914d-c3cd17fbf0db",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c519c5d5-1592-480e-bc2b-4496bf508e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b47199-0d93-4b37-a459-4e3385fffc27",
        "cursor": {
          "ref": "9d56dbf8-3836-4a1c-994a-6c68aa4c463d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "94105300-4364-4893-90a2-84446c04d030"
        },
        "item": {
          "id": "b3b47199-0d93-4b37-a459-4e3385fffc27",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fabe4962-7cdb-419d-9891-e8e98cf57af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc3b37a-e32b-4ca4-aba0-a8d241452cc2",
        "cursor": {
          "ref": "f94e5ba3-42ee-4d55-8a14-d408996b73f2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4c12eefe-8c76-4d8c-9c6a-89f4f94ecbf6"
        },
        "item": {
          "id": "4fc3b37a-e32b-4ca4-aba0-a8d241452cc2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0844c779-a302-4cfe-9311-c2e6f071f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7f826f-558c-417a-aecf-455eee2684e7",
        "cursor": {
          "ref": "b2ed9537-ef2b-4040-9b26-ed5485cfdb40",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4ebb085d-fecd-4ba0-8f57-881e296ebb27"
        },
        "item": {
          "id": "5a7f826f-558c-417a-aecf-455eee2684e7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a458d13a-f797-4d4a-b154-fc8c9f5b0b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329283c8-3cf0-4f77-b717-02c5eff29652",
        "cursor": {
          "ref": "ab25791a-8b87-4994-8809-5327439a77cb",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "18971c9d-1d2c-42b0-a4fd-f620c8285049"
        },
        "item": {
          "id": "329283c8-3cf0-4f77-b717-02c5eff29652",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26b321e2-1ef6-4383-b2dc-ab11a86dae3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88629b5-8cd9-433a-9ba6-1bff030d32ed",
        "cursor": {
          "ref": "11defa8d-7065-4473-9c43-4b274983a688",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d28fc5bc-8eab-4454-8035-1f06159c7eee"
        },
        "item": {
          "id": "a88629b5-8cd9-433a-9ba6-1bff030d32ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ba9411fa-cf47-448b-a5b4-d45bfa8f879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b33bf47-598a-47af-b66d-5a798a0fe2db",
        "cursor": {
          "ref": "deaceb77-23e6-4543-acb3-593d4fc611a6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "655e60de-bf81-4162-a70a-cb9a00d82b6a"
        },
        "item": {
          "id": "4b33bf47-598a-47af-b66d-5a798a0fe2db",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b1d99771-ebbb-468d-b5e7-de1f6d18def9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba3820d-0fb8-4805-b74d-e2899e48fc85",
        "cursor": {
          "ref": "1ca367d4-5dde-42c9-a746-be28df80545b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "117509db-96b7-4b4e-9a57-ab4384a262e8"
        },
        "item": {
          "id": "3ba3820d-0fb8-4805-b74d-e2899e48fc85",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e20f4d0-f009-49f5-8025-262dbe83bb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e9efbd-908e-4fb5-8431-d4e79ace2318",
        "cursor": {
          "ref": "a5856716-b78e-48ca-a829-49b7dcbd5beb",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "599e750d-3c68-4ee7-a30e-294e2463faef"
        },
        "item": {
          "id": "50e9efbd-908e-4fb5-8431-d4e79ace2318",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ad03803b-3f09-4ec4-a513-76711aeae6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d26225-57ad-4ffd-a2cf-25fa939708af",
        "cursor": {
          "ref": "9222f83e-d2bb-44ce-ae63-63f46dffcdd8",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f0542f13-d90a-40d0-af94-30fbe1da4902"
        },
        "item": {
          "id": "19d26225-57ad-4ffd-a2cf-25fa939708af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "caea523a-a860-4de0-bcef-c7e27e92953f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d80d1b-7ad4-432a-92f0-c233d200a933",
        "cursor": {
          "ref": "f2a241f6-7009-4d84-b4ba-d287518007f3",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "127954d4-4def-43a3-9c70-4202dec923ec"
        },
        "item": {
          "id": "b7d80d1b-7ad4-432a-92f0-c233d200a933",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dae9fadd-672b-4c5a-9be0-3bf07ac50257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b92536-6cfa-4dfc-a81e-b6047b00f1d1",
        "cursor": {
          "ref": "80e41485-17c0-431d-bdc1-4cfe2c126d01",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "100f445b-1524-4cbf-bd14-bfbda828535d"
        },
        "item": {
          "id": "b2b92536-6cfa-4dfc-a81e-b6047b00f1d1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7be3aa13-08a7-402d-9c1e-b14b462a8130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5c3a5c-23cf-48cf-a46c-b7592b48f9cd",
        "cursor": {
          "ref": "382171aa-29cc-4bf0-a6b9-dd9fba8d629d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "239c1e2a-a4de-4432-8fe6-c062d2904f69"
        },
        "item": {
          "id": "7d5c3a5c-23cf-48cf-a46c-b7592b48f9cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fc654dfe-e8f3-48ac-ab0a-c24b975ac8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fcd1d6-ef9a-4ead-b91c-85f19e26cd2e",
        "cursor": {
          "ref": "f4f89f74-9686-44a7-9868-b59c901e466d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1c845da-ed1a-463d-a167-96b60bae484e"
        },
        "item": {
          "id": "11fcd1d6-ef9a-4ead-b91c-85f19e26cd2e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "511a6e09-25a0-4986-99cb-0a1ac6badab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4529c4-ba29-4e26-a22c-2f41905a5d7a",
        "cursor": {
          "ref": "19608f2e-30c8-48a8-8ec1-dc875c905363",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cb928139-bd71-4b0e-9eaf-b21e49dcbe32"
        },
        "item": {
          "id": "7d4529c4-ba29-4e26-a22c-2f41905a5d7a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6aee6682-035d-4aff-b06b-8ca0748448f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c852f9ba-562b-45f2-82ef-9c92753e5d1f",
        "cursor": {
          "ref": "00775b92-e5f7-49a1-adbb-48a895a021f3",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8aece83e-8de1-44a7-b694-676e5865703d"
        },
        "item": {
          "id": "c852f9ba-562b-45f2-82ef-9c92753e5d1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "88ef00dc-3cf9-40dc-ab3b-5b8a12daef4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaea56c-5a50-4e27-9376-2449c1bc8204",
        "cursor": {
          "ref": "09fffd27-6af0-4e77-a429-8a9d80292094",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "62ddcbf6-6e04-49c6-bfc4-30dea4a8441e"
        },
        "item": {
          "id": "7aaea56c-5a50-4e27-9376-2449c1bc8204",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "be545f23-317a-4f4f-ac3f-43dc2615fbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3697c258-735d-4ea4-9771-bed7411d5856",
        "cursor": {
          "ref": "b559a8b6-fde0-4c55-9961-bbbf6586534a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fc7eaf41-cf93-494c-87ad-a62ef955a259"
        },
        "item": {
          "id": "3697c258-735d-4ea4-9771-bed7411d5856",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9e02f257-7466-4d76-b905-dbe602858045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da665015-6c3f-4e78-9519-0e005d3207a0",
        "cursor": {
          "ref": "68afa1a3-a530-4759-b7fe-ee093de91118",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6c5ada45-97a3-486c-ac7d-12a05196ab43"
        },
        "item": {
          "id": "da665015-6c3f-4e78-9519-0e005d3207a0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db38ce5c-1bac-4ffc-9c06-41a9cc8bb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15707a69-9429-49a7-81f7-defa9530b6ee",
        "cursor": {
          "ref": "a3c1c41e-70e0-468b-bf5c-8fa74530cd3a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a8fc03e-ad28-41e0-913c-19b3b85febdd"
        },
        "item": {
          "id": "15707a69-9429-49a7-81f7-defa9530b6ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fe7a6998-8197-4bf0-b146-185ff989aa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1731c6-81f4-4a1b-a1b8-d92fabbae8e4",
        "cursor": {
          "ref": "19bced77-d6f6-4c3f-8b9a-f3a9e1b71e73",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4794b9f7-a0e7-47c6-b29a-8b8579468f0c"
        },
        "item": {
          "id": "9a1731c6-81f4-4a1b-a1b8-d92fabbae8e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4ee660a4-14f4-4cb4-a123-52317e2058a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ba52dc-405d-4ed6-9716-10992feb010a",
        "cursor": {
          "ref": "fa93ee11-e50a-497e-aec0-033b93b5ff3f",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7bbce46f-5885-411e-b769-16a09e6f4940"
        },
        "item": {
          "id": "84ba52dc-405d-4ed6-9716-10992feb010a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "53dcb9b6-205f-48d9-aa79-b2f7fa418bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6661024c-3115-4adb-bca2-749a478ef655",
        "cursor": {
          "ref": "821b5960-f630-48a5-8e0d-9f7f7ee9d953",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "569b6e4d-228c-40f9-b42e-c94a2c5c537b"
        },
        "item": {
          "id": "6661024c-3115-4adb-bca2-749a478ef655",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "72f91b68-a486-4841-aa29-201110ef4e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff0a08f-858b-4caa-8756-93b45d1eab25",
        "cursor": {
          "ref": "2a12d682-3fe0-472d-be0f-ae6e03ae1c13",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d33390e1-8b0c-42b4-8055-c436bf2e6b92"
        },
        "item": {
          "id": "6ff0a08f-858b-4caa-8756-93b45d1eab25",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e9fd6b8-3e6f-4bdd-b588-0aee78d095f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c56d55c-331e-4781-902a-1c57a2880092",
        "cursor": {
          "ref": "29e629aa-ba07-40c4-a408-ec9e6b1f4e95",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6e3e9a6b-6bd9-4d22-8e29-918db05abb45"
        },
        "item": {
          "id": "4c56d55c-331e-4781-902a-1c57a2880092",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e0c3d266-06e8-4370-baff-da4bd42fd01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751cd20-bafc-43ec-81aa-8341693524cc",
        "cursor": {
          "ref": "90af5624-3df4-4f8b-8d37-aeb4dff6e60c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83c81e4d-7e2c-4106-8d93-1a27a4e356fd"
        },
        "item": {
          "id": "d751cd20-bafc-43ec-81aa-8341693524cc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "93dc8143-7092-4cea-aaae-67336564dff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f39378-107a-43c0-bd04-c138efbefbdd",
        "cursor": {
          "ref": "dd8a2427-52bc-4d31-865c-53dca7ea9682",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8fb9756-f9ed-4b9a-a647-3e4a91f46240"
        },
        "item": {
          "id": "f5f39378-107a-43c0-bd04-c138efbefbdd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "77371fec-b1eb-4549-9450-b0df49d6b4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75748051-cf8c-4822-a2de-c50ad12ff314",
        "cursor": {
          "ref": "fb0946eb-0939-4246-9c07-91213962a281",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da6c81d3-f22a-426b-ad88-ddb5d40d43fb"
        },
        "item": {
          "id": "75748051-cf8c-4822-a2de-c50ad12ff314",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "552c8978-6380-4637-9876-fde9d15d45f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb6b83e-dd7a-480f-9331-d869a2469b14",
        "cursor": {
          "ref": "c287c062-b3e5-4707-b086-747e25806835",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a9fcb1d4-8374-42a1-8160-ad799c03db10"
        },
        "item": {
          "id": "2cb6b83e-dd7a-480f-9331-d869a2469b14",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b8e0761-4893-4f44-a447-5b3a3837a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea95f55-f49a-4d31-83b5-eb22cf7d38a0",
        "cursor": {
          "ref": "4f09c105-bc25-41f0-96a2-43b6f5be7aab",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "35276117-ab97-4d9c-8e2a-b3a8bdde46d9"
        },
        "item": {
          "id": "3ea95f55-f49a-4d31-83b5-eb22cf7d38a0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ee57432c-3de8-41a8-9241-d1c64d5b6950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3645089d-cd33-47a7-8566-de46cbab95bb",
        "cursor": {
          "ref": "c3bd7a52-c55b-4c6f-a726-e784ca0292fc",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c245dab-49f7-4086-96d1-58c0993f618a"
        },
        "item": {
          "id": "3645089d-cd33-47a7-8566-de46cbab95bb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b4962de-1189-48dd-aec3-c66b4bb74391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08559854-0708-41c3-b41d-f53584f7f138",
        "cursor": {
          "ref": "5cd51973-ee17-4b67-8b97-f1e023c37a21",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "01ae57a0-ddcb-42bc-a936-04752a44f960"
        },
        "item": {
          "id": "08559854-0708-41c3-b41d-f53584f7f138",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1999a43b-d7aa-4bf0-bce1-fe60c25cca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32845878-52c0-411e-b26a-f02a16c709b7",
        "cursor": {
          "ref": "1dce8bac-4cf6-4f31-9e84-b3f075931277",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d7fa160-c64e-45b1-88a7-358bca97f8d0"
        },
        "item": {
          "id": "32845878-52c0-411e-b26a-f02a16c709b7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ec38a1c6-d155-41a4-b12e-054f7fc72db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3157d1-281b-49a1-b877-46745322d55f",
        "cursor": {
          "ref": "ae5ce2ad-f167-49ba-9134-ab9b42ef0f63",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3d85b730-97f2-4ffc-ae28-6b2c3e4e4717"
        },
        "item": {
          "id": "5a3157d1-281b-49a1-b877-46745322d55f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "035888ed-2e28-43c3-b2cd-ca9a0b3f0299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6ce051-c2b1-4fd7-9bdb-56b3589bd90a",
        "cursor": {
          "ref": "22c2e6de-fe11-4d3c-b626-cdb50b6d4ae9",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "76a63670-74ae-4573-82d7-b004881bc22b"
        },
        "item": {
          "id": "9d6ce051-c2b1-4fd7-9bdb-56b3589bd90a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "232cd5fc-ef7f-410f-b3a5-047f9f1c8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e718ad2-22bd-4ead-a963-480feb76b63f",
        "cursor": {
          "ref": "88aeb4f5-f72f-4b93-a730-c5e0cb64374e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68cc2677-90c5-4bcd-b5b5-18fd30f92a01"
        },
        "item": {
          "id": "6e718ad2-22bd-4ead-a963-480feb76b63f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db47b365-2777-45a9-92d8-4d4f1b29a414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214ad206-013a-4cd3-92be-4492013e8863",
        "cursor": {
          "ref": "5d3eee5c-d72c-4135-8cfe-a94b3c58eb9c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "95051e96-1922-4c5a-b7b6-7689d4f67dbe"
        },
        "item": {
          "id": "214ad206-013a-4cd3-92be-4492013e8863",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81698344-27ea-4dbc-861a-1765e41eec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d2662-e283-4e15-9e1a-31226304789b",
        "cursor": {
          "ref": "6f7eb6b9-1c04-42b9-9ea5-710cf118f2f3",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c42f073f-8602-4430-b0fe-22f601fe2bab"
        },
        "item": {
          "id": "529d2662-e283-4e15-9e1a-31226304789b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3215e4b1-f619-4823-aac7-66188f77614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c6c899-a563-48c3-81af-98d2b6eb95e6",
        "cursor": {
          "ref": "fc28afd1-46fd-4a72-aeb0-4bb60bbb5fef",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fb94a9df-615b-4a37-9e04-f3e853a914f5"
        },
        "item": {
          "id": "67c6c899-a563-48c3-81af-98d2b6eb95e6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7558a805-134a-460a-857a-f6c0a81ddc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202e87bf-958b-46e4-9610-93af20cbe380",
        "cursor": {
          "ref": "a7a9a827-110d-4b31-97cc-75834765f188",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "27e015e3-8dce-4ae4-bb46-7d58f5116404"
        },
        "item": {
          "id": "202e87bf-958b-46e4-9610-93af20cbe380",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b92e0991-fce6-4a94-b0e7-7576dae40a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8208821f-e374-4e7e-9302-9f9fb49597e9",
        "cursor": {
          "ref": "b910866e-cc97-423e-8d10-1ede86124168",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d29abe74-d4e9-465d-9537-a5332e4b72c2"
        },
        "item": {
          "id": "8208821f-e374-4e7e-9302-9f9fb49597e9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3878f408-2e02-46ae-8db4-be8ed582730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f82366-e68f-48b1-95c0-e5db824a11ba",
        "cursor": {
          "ref": "9021c139-e5fc-483e-9381-2ec10f3038ee",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc541ac8-e603-44ca-b69c-4c564c443867"
        },
        "item": {
          "id": "f7f82366-e68f-48b1-95c0-e5db824a11ba",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "580b661b-c094-411f-853d-855ce6c4875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdce9cd-3499-4328-bdaf-859fa64aa10d",
        "cursor": {
          "ref": "57a164e3-edec-43d0-a261-223355069ea4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d2792b1-cab7-4750-aa44-a106161ad178"
        },
        "item": {
          "id": "dfdce9cd-3499-4328-bdaf-859fa64aa10d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "250384eb-a7ab-45f1-b28e-f6158cec6235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d231e-70bd-47ae-a2a4-213b9b3e6723",
        "cursor": {
          "ref": "51ddb1f8-cd37-4b8b-93e7-3bccc3bfed1a",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8ab8dacd-3169-4e34-8438-10705e6efa86"
        },
        "item": {
          "id": "173d231e-70bd-47ae-a2a4-213b9b3e6723",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a54f1dab-239f-4aa3-9431-703cbf01157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7cf593-7ca4-4909-b29a-2c4dcb475cea",
        "cursor": {
          "ref": "3eec6025-aa0e-4646-baac-f1f187e11053",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "da7295a7-65e1-4d73-9cd0-faba5e2fa335"
        },
        "item": {
          "id": "ed7cf593-7ca4-4909-b29a-2c4dcb475cea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "85c71c56-854e-4cc2-bf00-d0333acb5362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594247a0-af06-4c9a-9aac-7c4b0dd8ff7c",
        "cursor": {
          "ref": "4288c184-0831-4bee-882d-e44aa49cf6a9",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76e80557-dd16-461e-b9f8-2b3ce30a5a75"
        },
        "item": {
          "id": "594247a0-af06-4c9a-9aac-7c4b0dd8ff7c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "44d3fd21-b865-4488-a8f2-33c3e64e0172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79914c4-553c-4d1c-91d2-2b0cdc512b66",
        "cursor": {
          "ref": "0a453fa5-4710-4b35-a6ca-e0e878c4c71e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "889200e0-0142-4fa2-adfd-a0b7771ce07d"
        },
        "item": {
          "id": "d79914c4-553c-4d1c-91d2-2b0cdc512b66",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7e7fe945-80ff-4c31-96ab-4868218c81f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63c523-f2d9-4d17-bd53-8fefe1f53e96",
        "cursor": {
          "ref": "273afd6e-9645-42e4-b02b-1ec65d64bc71",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "562e1df4-7526-46cf-89e1-71ef5e1dbf73"
        },
        "item": {
          "id": "4b63c523-f2d9-4d17-bd53-8fefe1f53e96",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "94c36063-48e9-4548-9e15-ed4752d7719e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10321199-3f49-40de-8308-9d7e6941cd1c",
        "cursor": {
          "ref": "b40985aa-75ec-40ea-ad2d-9b823b6a49c7",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d071555b-b57a-4e4f-9ff3-d6f1f1cd9c0c"
        },
        "item": {
          "id": "10321199-3f49-40de-8308-9d7e6941cd1c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d15c229d-eaef-4410-8fb8-2255f0ad3047",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09d517f-3960-4619-8f96-798dc1ff228a",
        "cursor": {
          "ref": "c9dbdced-c01f-4f85-8241-860a62361386",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "50cbf4b2-1e24-43e1-817c-8635511ce286"
        },
        "item": {
          "id": "d09d517f-3960-4619-8f96-798dc1ff228a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "828bc792-4e69-4d3a-9315-1764c95b4178",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 165,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bdf5db-4252-4287-a1fb-705de79a0f70",
        "cursor": {
          "ref": "9cad20ab-8d09-41c0-aec0-c5cec9b9dbc1",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "15056bdf-e950-43b1-99d8-5bae3f371f9d"
        },
        "item": {
          "id": "02bdf5db-4252-4287-a1fb-705de79a0f70",
          "name": "credentials_issue"
        },
        "response": {
          "id": "786aecf0-4268-43f3-a1ad-c6fb9c173728",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "442ef4ca-6959-4cac-94f1-6706cc58a053",
        "cursor": {
          "ref": "999abd15-3ab1-4f1b-a2b8-9a73482ba049",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d09b2546-573f-46c0-a9d3-758f8df5130b"
        },
        "item": {
          "id": "442ef4ca-6959-4cac-94f1-6706cc58a053",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "206805df-83a3-4460-93a3-ec3feb0992f7",
          "status": "Created",
          "code": 201,
          "responseTime": 286,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87777379-478a-4643-8e04-218d3fb70d5d",
        "cursor": {
          "ref": "87cafc3e-d8f7-4147-b1ea-a0bbba37d393",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba58aa82-f840-4a3f-b6c4-07c8ff15209a"
        },
        "item": {
          "id": "87777379-478a-4643-8e04-218d3fb70d5d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aab630ea-99f6-4547-98f7-b4b73c9bf5df",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4828a71a-c150-49d0-8335-87870b406b64",
        "cursor": {
          "ref": "15034705-cc08-447c-b080-d4e23590a760",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0df9570-b01c-425a-827e-93bcba88250f"
        },
        "item": {
          "id": "4828a71a-c150-49d0-8335-87870b406b64",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9964a46-208e-4174-ae1b-acb30bb8a0f4",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb497b-9595-41f8-889d-d9b1188795a8",
        "cursor": {
          "ref": "a99bb928-ab8f-4def-8773-7897dcb743af",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "acd260cf-78e0-45ec-920f-ebd29745edc4"
        },
        "item": {
          "id": "a2fb497b-9595-41f8-889d-d9b1188795a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "18d6cec3-ecb4-4723-8cd5-fdf481794701",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf634fd-c206-40e3-884f-a5582c09e26a",
        "cursor": {
          "ref": "6c7a3d0e-c205-49fd-ba59-c4c95affd8bf",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d46a2130-2fb6-4ee5-9b74-f6c525561ac2"
        },
        "item": {
          "id": "bdf634fd-c206-40e3-884f-a5582c09e26a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "736d5c46-c1df-4e0a-803d-ecc431810395",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91988af8-0b84-43a2-9454-d0ddc4b0d850",
        "cursor": {
          "ref": "0743a2ff-3999-4adb-bee7-e65deaa3e02b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "84fd8db9-83eb-4fe2-b963-b877e06207c9"
        },
        "item": {
          "id": "91988af8-0b84-43a2-9454-d0ddc4b0d850",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be05b235-81d0-49bb-b27c-416fccfaa13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91988af8-0b84-43a2-9454-d0ddc4b0d850",
        "cursor": {
          "ref": "0743a2ff-3999-4adb-bee7-e65deaa3e02b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "84fd8db9-83eb-4fe2-b963-b877e06207c9"
        },
        "item": {
          "id": "91988af8-0b84-43a2-9454-d0ddc4b0d850",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be05b235-81d0-49bb-b27c-416fccfaa13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35129a60-e0fe-4587-940c-f5c420cf5dfa",
        "cursor": {
          "ref": "9fc86696-7f03-43df-a3db-e96be9617281",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c681ed76-cf10-45c3-bb97-3b49fbde5bbc"
        },
        "item": {
          "id": "35129a60-e0fe-4587-940c-f5c420cf5dfa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0bc50ff2-18e8-4aa4-b017-c3085643ca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdaf429-5cdc-4430-b581-b81b8191b267",
        "cursor": {
          "ref": "3de28481-73aa-4255-922b-a4d61e5dc187",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "50df5f4c-e64e-411c-bdd0-22e42b131b94"
        },
        "item": {
          "id": "abdaf429-5cdc-4430-b581-b81b8191b267",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "88f2e480-7cca-4fe3-ad3d-b9386053371a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5cdad0-b0ac-4e2c-bf33-957e31c4339d",
        "cursor": {
          "ref": "9f54e64a-2550-4f78-86f1-8b9c00688dfa",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8ea96f58-d724-4f4b-a0a8-cf84f0f59b66"
        },
        "item": {
          "id": "ba5cdad0-b0ac-4e2c-bf33-957e31c4339d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94f7ebb4-b464-45ea-a9bd-dd635580e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb01e418-a029-424f-919d-183e0a0d2637",
        "cursor": {
          "ref": "a0e8a135-33b6-4073-8b84-04f29174fddd",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b156826a-f154-4097-b421-f51f5c52211f"
        },
        "item": {
          "id": "bb01e418-a029-424f-919d-183e0a0d2637",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "984042b4-416b-471e-a944-4408cbc3e2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b247d6d8-c54c-4867-a685-55adde5e434b",
        "cursor": {
          "ref": "0c685b2f-87cb-4745-99af-68a3d339fce2",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50e8fcb9-c45e-4890-aa78-84994231e13d"
        },
        "item": {
          "id": "b247d6d8-c54c-4867-a685-55adde5e434b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a1fcc6a-8f3f-492d-8e50-a07168394898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6676d0-63c6-4d72-a79c-57cb8ff2b8aa",
        "cursor": {
          "ref": "d1bc2671-5296-4a21-ac31-573cfc5c0596",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e5327270-45b0-45e6-b85a-aa58ff042853"
        },
        "item": {
          "id": "cb6676d0-63c6-4d72-a79c-57cb8ff2b8aa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "723e9393-43a9-4cf9-91aa-0d7828cdc04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f934a4d1-5f0a-4f28-b1d0-9358da60456b",
        "cursor": {
          "ref": "6f10cb1a-a097-4579-b950-dc04a9e317ab",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f4371431-b3ae-4d9b-89fb-39172856de24"
        },
        "item": {
          "id": "f934a4d1-5f0a-4f28-b1d0-9358da60456b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f0457e4e-0122-42f0-b01e-fdf228902cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e4a9cf-c8a4-4c1f-9124-1199b864936b",
        "cursor": {
          "ref": "2664ed22-a4d8-4605-b5d4-aafcfb7297c2",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4452c6c3-85e5-41fb-ac08-6229d5a00ccf"
        },
        "item": {
          "id": "00e4a9cf-c8a4-4c1f-9124-1199b864936b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57cc40b5-3c98-4b16-9ab5-b18e6978c1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401ec9d6-d0d4-464f-88ee-520616fe737f",
        "cursor": {
          "ref": "5b32672b-1353-4d70-857e-25482a8bab96",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d7f1490-fa7f-476e-b3d5-5f9f332303cc"
        },
        "item": {
          "id": "401ec9d6-d0d4-464f-88ee-520616fe737f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "330ddef7-8439-4d31-97dd-ce3a7a378ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3f873-c204-442e-92cc-16f0a2d0753b",
        "cursor": {
          "ref": "56e4af48-4b13-4778-b1b7-ef21041788d2",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "50ddefa9-fed4-4bfb-9deb-5f10224919fc"
        },
        "item": {
          "id": "9ad3f873-c204-442e-92cc-16f0a2d0753b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9ad2b36-0763-4622-a528-8009d1f89dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e3f95b-bacb-43d3-bfbc-ce158bfbdb46",
        "cursor": {
          "ref": "e6967c22-5761-43ac-9cd3-de6f6364ea9e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1f498271-50f8-4222-811b-9e345f513b2a"
        },
        "item": {
          "id": "48e3f95b-bacb-43d3-bfbc-ce158bfbdb46",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6cbeaf2a-04c1-4d18-bd85-00e5e96665b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798ba89-e1bd-4c76-b7d6-e102ff9e5279",
        "cursor": {
          "ref": "c431a3b6-c8c3-44a0-bdc1-7d71b75d0ed6",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "04039f4f-7ef8-40bd-b680-5523404d700f"
        },
        "item": {
          "id": "5798ba89-e1bd-4c76-b7d6-e102ff9e5279",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6dc7ad6e-25fe-4739-a071-cd64c25df421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cd993b-907d-4b03-aea6-1234bd6adae2",
        "cursor": {
          "ref": "fcba2f02-e8a0-45ba-b859-923bba474807",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7d0fbaa0-67d0-4b1f-8954-a7fa782b32cd"
        },
        "item": {
          "id": "76cd993b-907d-4b03-aea6-1234bd6adae2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dd2454fa-281d-48c0-946a-f030622ab1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39042396-3c1e-4a12-b218-dba356bff06c",
        "cursor": {
          "ref": "38479364-c14d-4744-83aa-e505024c8311",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "40c3c2b1-19be-4798-a9a0-f4a7e232af2b"
        },
        "item": {
          "id": "39042396-3c1e-4a12-b218-dba356bff06c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3bab94a5-73ab-4b29-b4d3-6a52fc1e04fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf55845-fc88-451d-8af8-25fe0d1385f7",
        "cursor": {
          "ref": "a351ab72-0ced-459d-8c83-183cb485e844",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85a23419-1ff0-44df-8cfb-2ea1eb73a738"
        },
        "item": {
          "id": "9cf55845-fc88-451d-8af8-25fe0d1385f7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a5f186f7-10a4-48e7-b73e-b7f56b7ce8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5927eb59-25f9-4ffb-9124-ffd2720fd9b7",
        "cursor": {
          "ref": "f5ffff65-7945-4170-969c-0c46e6a71a02",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3deeb6ed-233e-4076-be91-ac9bbf836c0a"
        },
        "item": {
          "id": "5927eb59-25f9-4ffb-9124-ffd2720fd9b7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "134cf424-9440-4d6a-8098-530cd27f09f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f59d1d7-ee2b-491b-8df0-870dfc31b41a",
        "cursor": {
          "ref": "1b7a2e78-ad4a-4946-ad3a-6b5661dc5655",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ece0fdd4-24b9-4896-a926-35330eab6a93"
        },
        "item": {
          "id": "0f59d1d7-ee2b-491b-8df0-870dfc31b41a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eff1a9ab-5e60-4e77-b46f-410daaf2c827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605d2716-7dfb-4ba5-9822-5aba7297da53",
        "cursor": {
          "ref": "53185e20-a6d1-4a97-961e-b50bb31f71bf",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b11d594e-b3b1-4874-9f67-775b0d125bb8"
        },
        "item": {
          "id": "605d2716-7dfb-4ba5-9822-5aba7297da53",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08d243c3-399e-477f-9287-02d9a71081a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47d8da2-b209-43c5-b143-c13ba68b21ac",
        "cursor": {
          "ref": "ebc8708c-52b1-42db-9849-42b6fec389f5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0e4a5e79-c02e-4112-8e54-bb8c236f9dd5"
        },
        "item": {
          "id": "d47d8da2-b209-43c5-b143-c13ba68b21ac",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e97b4f43-e119-4b54-aa33-7e6339a6f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076e656-f11e-4ddb-885c-ba0f042dd59a",
        "cursor": {
          "ref": "17415940-ca20-40d0-aa9b-86eacdcd642a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6808394-5d47-4d6f-ac5d-a980db2717f6"
        },
        "item": {
          "id": "f076e656-f11e-4ddb-885c-ba0f042dd59a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7443af9b-9c03-4654-ab84-ba7c5b197181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb00ab63-0c75-4122-bcb6-386145f04f96",
        "cursor": {
          "ref": "588b42f3-bae0-4c59-88a8-af08d7d7a8dc",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "94d4802c-ed35-4c3a-894d-0aeba65f874e"
        },
        "item": {
          "id": "eb00ab63-0c75-4122-bcb6-386145f04f96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b8c4577d-8ae7-4223-977e-0ec8e348db11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dd363e-5b43-477c-9f72-e27f7cce140a",
        "cursor": {
          "ref": "294579df-f853-47e4-93eb-7c5bb6ff5e08",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1800baa0-a89b-4564-8304-3dd85b803d95"
        },
        "item": {
          "id": "93dd363e-5b43-477c-9f72-e27f7cce140a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c2f71ca-84b3-43d1-bb96-19423f716252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a158d7-9d85-4a14-a3ae-34e00c35b6ae",
        "cursor": {
          "ref": "6d87785f-cefd-401f-9303-e2685123251c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ff452d7-0b60-4b15-a1ea-4886caa2ca2d"
        },
        "item": {
          "id": "34a158d7-9d85-4a14-a3ae-34e00c35b6ae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "580914ba-de88-4727-986d-f77fa590d29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46623fa9-7503-4d06-a2d4-c16469223af2",
        "cursor": {
          "ref": "d85eeb8c-d0f9-4297-88bb-90ee44ae3fe5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5b468b71-869a-4f25-935c-7000b2da0835"
        },
        "item": {
          "id": "46623fa9-7503-4d06-a2d4-c16469223af2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "238b04c6-8741-4542-90da-827accbc6a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca7957-0f13-48bc-9ccf-19e3c08920ea",
        "cursor": {
          "ref": "5da567c0-d759-48ff-b31f-c8acdc194a72",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "36eb17bf-5b95-4055-a595-d6c2c6a9b443"
        },
        "item": {
          "id": "61ca7957-0f13-48bc-9ccf-19e3c08920ea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5d153b64-0cc1-44f5-9288-711054a3e368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ca2d4-31ee-4e6c-9663-522b7ac4f976",
        "cursor": {
          "ref": "25c12825-30cc-49a0-9386-a1b2253353e9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "30fb79f5-a63a-47e3-afde-e23849a6b7b3"
        },
        "item": {
          "id": "a56ca2d4-31ee-4e6c-9663-522b7ac4f976",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6b0017c5-7796-4915-a58d-f0e5bd05efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d36555f-239c-4799-8a51-e69d7c140f28",
        "cursor": {
          "ref": "9a0309eb-132e-475d-b406-30fa23f75ac0",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1fbf73d2-20fa-46dc-8d1a-e1f3054ff16f"
        },
        "item": {
          "id": "8d36555f-239c-4799-8a51-e69d7c140f28",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dcc5842f-77b1-407f-8e1a-60ce5a366e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d03182d-ddb1-4f12-a69d-b2cd7bfbf190",
        "cursor": {
          "ref": "fc5fc66e-0ab3-44b5-b407-ff21739b774f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5b56b205-0d1f-4aa0-8ac7-ce6c079a1852"
        },
        "item": {
          "id": "3d03182d-ddb1-4f12-a69d-b2cd7bfbf190",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e643722a-e220-4abc-a59a-c0ae2cf5fc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b67120-47ea-4398-b2f9-287b8c1b34e3",
        "cursor": {
          "ref": "871910ff-2b2b-4cd7-a037-afed42f855c0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dcde0a38-28b5-4f8c-91a6-7a9f961e6c62"
        },
        "item": {
          "id": "e5b67120-47ea-4398-b2f9-287b8c1b34e3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ba6548b-7ba9-4455-91ec-ebf0e5965c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385598e8-305f-49ef-b023-6de110217a2e",
        "cursor": {
          "ref": "c5a77c4b-fcea-4d83-a81b-ae94b69d7e0d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bdacfe64-1c2a-406e-90f5-14fd5a981578"
        },
        "item": {
          "id": "385598e8-305f-49ef-b023-6de110217a2e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9a603f50-244f-43dd-85fe-7150c2dc30e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4890a923-d097-437b-95f5-7f60585f4cbf",
        "cursor": {
          "ref": "15a2ff1d-62cd-4b4a-9ffe-fe1f867c97af",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59524889-37c8-4469-9f43-f145ee74afdc"
        },
        "item": {
          "id": "4890a923-d097-437b-95f5-7f60585f4cbf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a543ca86-be38-4270-bdb7-f6a71a18ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f269bbc2-c940-42a6-915b-cddeaeb1f994",
        "cursor": {
          "ref": "aef6e6ae-14c7-4ab7-9d8d-c351277ae81e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "07d11129-41c3-48bb-9968-6e1d941dd892"
        },
        "item": {
          "id": "f269bbc2-c940-42a6-915b-cddeaeb1f994",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4a2e0e67-d742-440c-ac3f-8ef7a56eeb66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1461a914-4197-420c-a32f-2dd15f3861c4",
        "cursor": {
          "ref": "d0cace77-11b6-4a1a-ba8b-e37d636dd772",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "536c6fac-3c46-4882-8fea-f14808a5405b"
        },
        "item": {
          "id": "1461a914-4197-420c-a32f-2dd15f3861c4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0075e1fc-1eb2-49cd-bdca-2f9d482814ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45cf6c-8878-41ae-9b94-09817e89031c",
        "cursor": {
          "ref": "fcbb9428-5c0d-44f8-8996-ff433b248781",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8f3ba86c-a7e7-4af1-9136-fd711afc4955"
        },
        "item": {
          "id": "3b45cf6c-8878-41ae-9b94-09817e89031c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "97d48e86-cff3-491a-bcfa-a796b2da23ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45cf6c-8878-41ae-9b94-09817e89031c",
        "cursor": {
          "ref": "fcbb9428-5c0d-44f8-8996-ff433b248781",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8f3ba86c-a7e7-4af1-9136-fd711afc4955"
        },
        "item": {
          "id": "3b45cf6c-8878-41ae-9b94-09817e89031c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "97d48e86-cff3-491a-bcfa-a796b2da23ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fed32e-6b96-41c8-96ee-1c473fd174eb",
        "cursor": {
          "ref": "f78804a9-1a94-4680-8b1f-becbd2056168",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbca7f0d-12be-4f4b-8476-0cc0c465e4ba"
        },
        "item": {
          "id": "c0fed32e-6b96-41c8-96ee-1c473fd174eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f0151756-9877-4a87-8b79-e1f2f1c44e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089530dd-b7c4-480a-a111-bdaef1f11078",
        "cursor": {
          "ref": "9c867613-5c37-41ee-b16c-8e02779821e7",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "09238335-2c9c-4dae-8842-8585a3c7d623"
        },
        "item": {
          "id": "089530dd-b7c4-480a-a111-bdaef1f11078",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2940e8b5-2346-4689-984e-2928d865bc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c90b172-1cd5-48d7-adbe-ba37d694fc37",
        "cursor": {
          "ref": "313993cd-2b1f-43fc-8490-1cf3bdc4ac01",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c787e2c-0126-4d04-9287-12e415d3e547"
        },
        "item": {
          "id": "1c90b172-1cd5-48d7-adbe-ba37d694fc37",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a27e06c4-74a6-4889-be93-50aefca926c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f086bbb7-e758-4e61-8355-1737f4237152",
        "cursor": {
          "ref": "3164bfe5-6127-4199-89a4-bc842f7fc50e",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "659dd506-92be-4eed-8a6f-dc98a0a57817"
        },
        "item": {
          "id": "f086bbb7-e758-4e61-8355-1737f4237152",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "85b18a01-c04e-4644-aa97-3477686b55f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72ee29-e913-4bb9-ac83-33ced1e4514a",
        "cursor": {
          "ref": "745476c1-7597-4315-bb7b-20428124bae1",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e3e5982f-48db-4550-8686-3c660d4fdb12"
        },
        "item": {
          "id": "9e72ee29-e913-4bb9-ac83-33ced1e4514a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e3d2e8e7-4d56-4d1d-8c22-e3e2da20a998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a5d70-73aa-4f79-a2e7-24f289e48838",
        "cursor": {
          "ref": "a4465505-88b7-4244-89c9-148fec69f12e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a0489446-0092-42f6-97d5-d457a1195268"
        },
        "item": {
          "id": "608a5d70-73aa-4f79-a2e7-24f289e48838",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ee2a164a-fd47-4483-88c0-5cf718574dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8748277-7b65-4400-aa40-8f5671011ec1",
        "cursor": {
          "ref": "bde0dad5-995c-4b9c-b09d-33fa4da82fc4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "edf9a012-7568-4d2c-a75c-138fb6e16228"
        },
        "item": {
          "id": "f8748277-7b65-4400-aa40-8f5671011ec1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cb9e24e5-7dff-4570-ba51-dac75096b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3857ec07-3a1a-4af9-a5db-25dcef69131d",
        "cursor": {
          "ref": "eaffba0d-cc01-4a55-9e55-469a436f786f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cc853529-681b-4327-8c54-1ea4f936f466"
        },
        "item": {
          "id": "3857ec07-3a1a-4af9-a5db-25dcef69131d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8bd8caf8-0499-4465-b608-b01c96772acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74def83c-12b1-423d-9637-81d6e0b6ad24",
        "cursor": {
          "ref": "594de803-9e7f-4b99-af2b-705a8e8414b6",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6cda0900-05ec-4a88-94e6-cc09e6d81bfb"
        },
        "item": {
          "id": "74def83c-12b1-423d-9637-81d6e0b6ad24",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d2df3ae-77e8-49d8-b3c9-1287e217b47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d285b3a-3307-4184-a836-daa4797abe8d",
        "cursor": {
          "ref": "1ecb5175-ab67-4494-8fb5-de90af514687",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fe013a26-92bf-418d-8ea5-0745b85dfd55"
        },
        "item": {
          "id": "9d285b3a-3307-4184-a836-daa4797abe8d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b7c8adf4-b387-4166-b051-bb7368be7199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf6f0f-08fd-4495-8e0d-cdb75ae64b3d",
        "cursor": {
          "ref": "a108b173-2a22-4b01-a843-4b863906225d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c49f2954-30a3-4761-8da9-e9cdfc6b0747"
        },
        "item": {
          "id": "f8cf6f0f-08fd-4495-8e0d-cdb75ae64b3d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "080997a0-5aff-4512-bc7e-fef09cb17adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a032a37-35f6-4e2b-a77a-4a63babe68f6",
        "cursor": {
          "ref": "29137408-97dc-42f9-8fed-b57c89095095",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4805207e-3ce6-415d-8808-752af01f6820"
        },
        "item": {
          "id": "3a032a37-35f6-4e2b-a77a-4a63babe68f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ab04d6a1-0981-484c-ac65-a1defe8192ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbff8ce-4281-4f28-8bf3-5e7409a8d85a",
        "cursor": {
          "ref": "cf005dca-c65a-4ca3-8520-14309efa073a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "007a1ed0-ff3f-41c4-a8c9-e800f700362a"
        },
        "item": {
          "id": "bdbff8ce-4281-4f28-8bf3-5e7409a8d85a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "decc10f7-1bb3-4e34-a50a-8d7e420db535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645b21cd-c1a8-4904-af5b-12c12f2c2735",
        "cursor": {
          "ref": "4d2f30b7-9475-448d-849d-4d76e9378c4e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "145574ea-7627-4c39-8055-55e2cdce06f4"
        },
        "item": {
          "id": "645b21cd-c1a8-4904-af5b-12c12f2c2735",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fcd1e1ea-a441-4635-b740-7634b61bab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c13f059-770f-41f9-8c27-bf474a201625",
        "cursor": {
          "ref": "fa978ea7-72a6-4c83-bef2-e9f33f7bc818",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d20e5f8b-81da-43fe-9e0d-c30bdfda0d85"
        },
        "item": {
          "id": "2c13f059-770f-41f9-8c27-bf474a201625",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ea04453-76df-4874-885f-aa8c28e4b9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9ba13-97a1-4dfe-91e4-77f482d83f25",
        "cursor": {
          "ref": "aefcbc44-4bca-46ca-b96e-c36ad16b5e26",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b296e61e-2573-4dac-bf00-cc1632a07cc1"
        },
        "item": {
          "id": "e3e9ba13-97a1-4dfe-91e4-77f482d83f25",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04832a3b-aa19-48e2-bea9-33669778d563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b13a3-8b1d-421e-992a-8c6cb7e32281",
        "cursor": {
          "ref": "263a643f-411f-4ac9-b668-f40c1c38386a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9bfa96c0-9802-4312-b41f-51b1ea12c53b"
        },
        "item": {
          "id": "df0b13a3-8b1d-421e-992a-8c6cb7e32281",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8265fab-061e-42dd-a5c1-ad97fd29ef35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f49b4b3-dc6c-4942-b7c2-0fbbd45b9b11",
        "cursor": {
          "ref": "c431ab8c-c25e-4668-a82e-d89ae7488195",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca380f44-caf4-449b-b786-ffbedddc37e5"
        },
        "item": {
          "id": "1f49b4b3-dc6c-4942-b7c2-0fbbd45b9b11",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "999e68b8-0d76-4702-9cf8-458f2a9a31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57109329-89af-4696-9727-a2aafcde082f",
        "cursor": {
          "ref": "d0e7bdf3-f784-4923-8640-db90da2ce802",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0044a5a6-80e1-4d11-bc33-69230c24d4e0"
        },
        "item": {
          "id": "57109329-89af-4696-9727-a2aafcde082f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f1adce0f-5bb5-405c-af0d-c27dbac898cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316b1e92-5b6f-4012-ace3-43559407d277",
        "cursor": {
          "ref": "9450b49f-bb30-47f4-b3e4-d461549ef372",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "16b83d07-ca06-472b-8412-a54b99b0c196"
        },
        "item": {
          "id": "316b1e92-5b6f-4012-ace3-43559407d277",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6f49371d-f471-481b-a79b-4209f8962e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb0af4-a086-4140-a29a-4f02a1e79760",
        "cursor": {
          "ref": "6b474eb6-650c-4bd0-ad02-f6ea8e08dae6",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5721f8cb-9ef0-4226-9d8d-4fcb688b5ff1"
        },
        "item": {
          "id": "b9cb0af4-a086-4140-a29a-4f02a1e79760",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e07dcf4-ede3-48b6-bfc1-579b1ac2706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34049734-a59d-4d18-be8c-c6640b1f2273",
        "cursor": {
          "ref": "355fa592-8cce-4c1c-af5c-5cc54c4cfabc",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84db0ff1-d7cc-4a35-a712-67819fd5dcae"
        },
        "item": {
          "id": "34049734-a59d-4d18-be8c-c6640b1f2273",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cbef6d31-4129-41c4-999a-c4c40d8100c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9bd5fc-19b8-4fff-87f1-a53299344dfb",
        "cursor": {
          "ref": "0a0b1869-6f26-4a10-93f7-ab0bdb1fd92e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8aa1afa3-c8ce-4d20-97ce-f41dc268d455"
        },
        "item": {
          "id": "6e9bd5fc-19b8-4fff-87f1-a53299344dfb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e88dd5bc-3fae-4244-a79b-2ffba273e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54810fd-31b6-4bc0-a384-9c5c0e34e85a",
        "cursor": {
          "ref": "4a3d003c-3554-446c-923f-474e75898f1a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2b319f73-5a13-4599-b44c-f97be397db8d"
        },
        "item": {
          "id": "c54810fd-31b6-4bc0-a384-9c5c0e34e85a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "180f6f5b-6dd3-4c01-a54d-974c9bc2d02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4fdd67-b760-4ee1-b82d-61053d8d13ac",
        "cursor": {
          "ref": "7b31e9d0-aa62-45af-8818-87748e6de749",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "59ced95c-022a-4305-8f77-068563a0c16f"
        },
        "item": {
          "id": "3d4fdd67-b760-4ee1-b82d-61053d8d13ac",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec81faa9-04e4-478e-8bde-53d5d4940385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4254a8f-ad59-478a-ad73-86becf34fe60",
        "cursor": {
          "ref": "ff0b3fd4-6e34-4295-ae8b-4fdcd6ff2d7b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b60f5d7a-a3e0-4006-9a38-2bf01459b045"
        },
        "item": {
          "id": "e4254a8f-ad59-478a-ad73-86becf34fe60",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3c184f08-b7cb-489e-8b92-688019dad4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016a576f-eedb-4551-9195-b979274d7872",
        "cursor": {
          "ref": "600f6739-711f-422c-8abe-cdccaffdaed2",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a3af8752-89f3-4363-b610-299e88ae0fff"
        },
        "item": {
          "id": "016a576f-eedb-4551-9195-b979274d7872",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98bc953e-4d6e-4215-aef5-88334b4786da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ec528f-bc77-4614-8ff0-58f72072e16a",
        "cursor": {
          "ref": "717987e8-b4c0-4243-9cc5-1c920104ac20",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b229e14c-7b28-493c-8b1a-2773422e9359"
        },
        "item": {
          "id": "96ec528f-bc77-4614-8ff0-58f72072e16a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb733002-9349-4d5b-9bf3-325440946c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be8c58f-1901-4a6c-9343-86498ed088f0",
        "cursor": {
          "ref": "63b7bcda-adfe-45c3-91cd-467b04a9a02f",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "05b25093-ce37-4036-ae57-d07864caf77e"
        },
        "item": {
          "id": "3be8c58f-1901-4a6c-9343-86498ed088f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1e6e9f92-48f8-4467-8bd7-f8237072172b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c722b7-7f81-4451-b45e-f67091049c53",
        "cursor": {
          "ref": "ad103d0a-14fa-4884-925e-3327c90c541f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aa9f838d-3cb0-4b4c-8110-bb14bb2b3880"
        },
        "item": {
          "id": "70c722b7-7f81-4451-b45e-f67091049c53",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a89613cc-ce32-49bf-a066-eab0558cefc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d6337-9265-48d7-954f-f6322ff71c16",
        "cursor": {
          "ref": "2b1f5304-1ceb-42f2-9424-7700a64ccd79",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "163a5260-8d41-4fe1-b95c-08032ca3008c"
        },
        "item": {
          "id": "b07d6337-9265-48d7-954f-f6322ff71c16",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2d885e7-4e40-461b-89e9-4237f0a7f34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6872e60-6a78-4fc7-bab5-c38a7e31d86d",
        "cursor": {
          "ref": "fcb99867-fd42-4319-b297-0b623abd7fc2",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85122dee-6d42-4393-81da-a163bdb948d2"
        },
        "item": {
          "id": "c6872e60-6a78-4fc7-bab5-c38a7e31d86d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8f003b02-39c2-43fb-8237-0fb33c9302d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73876a42-46a6-404e-be22-ad00eb2dfec4",
        "cursor": {
          "ref": "fb2e7628-500c-49f7-bede-aab9c1f855b2",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ebe554cd-e8c7-448e-b904-3edc24c0a7aa"
        },
        "item": {
          "id": "73876a42-46a6-404e-be22-ad00eb2dfec4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "23e9151b-1fea-4f3a-b9eb-fd0a87fadab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db541360-dce4-4229-b968-18dfab8436a4",
        "cursor": {
          "ref": "b4e825cb-14cf-4604-aea6-e08ca0c1048f",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "880bde5a-773c-4d66-b4fc-0062f66cf252"
        },
        "item": {
          "id": "db541360-dce4-4229-b968-18dfab8436a4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13c4ddae-19fd-4e89-b855-f2a6a8db2766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bf24a8-f75c-4e48-a876-13ec11726492",
        "cursor": {
          "ref": "54cf04cd-c28f-4441-ba20-ffed671cb72a",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3d55d504-7f68-4d21-9df8-ae4d79497693"
        },
        "item": {
          "id": "98bf24a8-f75c-4e48-a876-13ec11726492",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d1be41a2-4187-4d50-bb00-c7c29bdd4236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7585bff7-fc59-4ae2-aa60-7142b9f457e4",
        "cursor": {
          "ref": "408b6561-3ee0-4eb6-b4cc-b2429778990b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7279b7ef-03f6-44e4-adee-c60aad9c6a7f"
        },
        "item": {
          "id": "7585bff7-fc59-4ae2-aa60-7142b9f457e4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c915331f-2333-4373-ac72-1eca31d745f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57328ff-430f-47f5-8e67-c593159f6a4c",
        "cursor": {
          "ref": "228eba41-0b9f-423f-bf14-f65ea7a7cbcc",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5feaf344-e3c2-479a-95ac-e7beb8a30de0"
        },
        "item": {
          "id": "f57328ff-430f-47f5-8e67-c593159f6a4c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d66652dd-40cd-48c8-bdf8-d39a6d7863e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405c9d8-77b4-4ed1-af5c-e0573da93889",
        "cursor": {
          "ref": "5ba930a4-a763-460f-9566-5d5cbb81d775",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "53ceab53-d3fd-47ed-84e6-99cd28f608f3"
        },
        "item": {
          "id": "4405c9d8-77b4-4ed1-af5c-e0573da93889",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eddcad4f-3e1d-495f-861a-fee95bc740e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3e22ad-9484-45a9-8c3a-334e98d643f3",
        "cursor": {
          "ref": "7a243ae0-ca0a-4f80-abde-63aea5c17861",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "536fbec2-2376-4035-beb9-f77684156f2d"
        },
        "item": {
          "id": "5f3e22ad-9484-45a9-8c3a-334e98d643f3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4b454b3e-456a-4b1d-8f99-ac877fc96bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6f9ec0-4049-45d3-bd59-bbf77f4ecf3b",
        "cursor": {
          "ref": "f35c62b8-a7e6-4c29-b13f-8877a264d55f",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a6486e50-508d-4a0f-bfa4-9025aec138ba"
        },
        "item": {
          "id": "ff6f9ec0-4049-45d3-bd59-bbf77f4ecf3b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f174071c-d1ab-43cc-8172-9ba54b65f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86a3d90-5979-424c-95cd-e156403d1525",
        "cursor": {
          "ref": "7b969996-fdbc-4d4b-9488-78f071262a95",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "32d8c9dd-592e-4318-9ba8-17c22515771f"
        },
        "item": {
          "id": "b86a3d90-5979-424c-95cd-e156403d1525",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f853f9f2-40a6-429c-a027-f3644a568279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361d5095-636f-4a3e-91b5-925f9649e16c",
        "cursor": {
          "ref": "21887fef-2344-456a-a885-8148cd8ce975",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f1875792-69c1-4bb4-9d8d-1ef3c7dc7eaa"
        },
        "item": {
          "id": "361d5095-636f-4a3e-91b5-925f9649e16c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f38d3d98-a472-4f02-b75f-a6307951bf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccba23b5-b7b8-47b4-89d3-2146f7f46657",
        "cursor": {
          "ref": "c4f0b870-831b-4209-a718-bdb5405d85ab",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6f5bfff6-4d74-4375-84c8-c2f4aba3a2d3"
        },
        "item": {
          "id": "ccba23b5-b7b8-47b4-89d3-2146f7f46657",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "83201214-35a0-499c-9d67-44fd7cf91447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911dbc5a-91f7-4816-a9b2-0f1a974b7b3a",
        "cursor": {
          "ref": "9cea6f1e-7ea4-4497-905d-2d3f3df43073",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7bf89e4a-de55-4563-97ed-887fc1c17ff8"
        },
        "item": {
          "id": "911dbc5a-91f7-4816-a9b2-0f1a974b7b3a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8f7f3f0a-f5a6-4b02-8b48-c033759d7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce8a938-0450-4abf-a73c-36b678284b8c",
        "cursor": {
          "ref": "92661f77-1444-41c5-80f9-d9666dee13db",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "05d2504c-7ed8-4940-88bc-33318f62ac8c"
        },
        "item": {
          "id": "9ce8a938-0450-4abf-a73c-36b678284b8c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "49c2770b-10ad-44fb-80c5-80cb50ce48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8cdaee-7130-46bf-b68a-c06d99701713",
        "cursor": {
          "ref": "bffc545f-8730-4d4f-a655-c81aa2da399a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4ca60a11-8287-496c-b453-2c16601509d9"
        },
        "item": {
          "id": "3e8cdaee-7130-46bf-b68a-c06d99701713",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3c50e82e-b326-4f39-b7a1-02fce5b69854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2f673-cf96-4bc9-9331-b1bfac74a18a",
        "cursor": {
          "ref": "8016c551-261e-471d-a023-d2303d56848c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a7fa9882-df36-4f26-9446-6c4324cfb2f8"
        },
        "item": {
          "id": "a2d2f673-cf96-4bc9-9331-b1bfac74a18a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b9c5f9c7-95b0-4e8f-ac71-416b7ba381c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9729697-dd50-43a2-bcf0-e1630e588919",
        "cursor": {
          "ref": "553f6f84-115d-4240-b052-d00f81c32e8b",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ebeb5d7c-5485-45e9-b82d-9467ad41400c"
        },
        "item": {
          "id": "f9729697-dd50-43a2-bcf0-e1630e588919",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ace461ee-1591-429c-8fc0-c4a0eec68deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f6b964-37a1-4cc4-9157-690633109bb5",
        "cursor": {
          "ref": "cb15c4c8-eb86-4c62-afce-34b07ec195a9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b12fa3d6-882f-46e5-9c55-2febb0fa2d88"
        },
        "item": {
          "id": "e0f6b964-37a1-4cc4-9157-690633109bb5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e6143a71-d0b7-4539-ad3e-3606d93281e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2286371-6e64-4986-a7ea-4192fb413dda",
        "cursor": {
          "ref": "e558d38e-54d0-497d-b9e3-a1b547bed2a4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8d8f0021-5965-4f19-9fd0-36679b67e695"
        },
        "item": {
          "id": "b2286371-6e64-4986-a7ea-4192fb413dda",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59de1e08-1248-4d37-a11c-205f8ada2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bdee8a-3c15-4c8e-8248-7ff14a7a2771",
        "cursor": {
          "ref": "b5194c6d-d054-48da-8d09-8545a3ed41a4",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1a6afc4a-da4a-419e-b1e7-c531a933ae75"
        },
        "item": {
          "id": "d8bdee8a-3c15-4c8e-8248-7ff14a7a2771",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c62b2d33-b670-4065-8fa3-9b1ec6e9e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d0e5e6-ab5d-4d46-92e1-21aa82595aac",
        "cursor": {
          "ref": "8fbd1f3d-f80f-458e-9421-930faa51db6a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d836d72a-528f-4b4b-b330-e24f52c1ea07"
        },
        "item": {
          "id": "92d0e5e6-ab5d-4d46-92e1-21aa82595aac",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d90693f-82fb-40a3-9eef-b3ccc0274a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cd86b9-444e-49f3-80c6-712b8ddb6e8a",
        "cursor": {
          "ref": "d8d18362-b829-4b13-8249-4b012b3a4d3b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "73115f42-6489-45f2-ab0f-851db60e2dcf"
        },
        "item": {
          "id": "70cd86b9-444e-49f3-80c6-712b8ddb6e8a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da05eafa-fcbb-43a7-baf0-835fbcd19b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ade1e4-8a94-460a-929f-1f2898007daf",
        "cursor": {
          "ref": "88274690-77ae-45d9-9ad0-c046b430e202",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "72f999a6-cf54-476e-9c2f-7d8c529ff036"
        },
        "item": {
          "id": "b3ade1e4-8a94-460a-929f-1f2898007daf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2b5081c2-6a85-475f-bdc3-ede13582a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bf04b4-183a-4113-82b9-00631834185a",
        "cursor": {
          "ref": "6fe03768-5d81-42ee-ae68-4eed825ce05c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0e592826-c6d3-4841-97e9-467d52bbd7c2"
        },
        "item": {
          "id": "23bf04b4-183a-4113-82b9-00631834185a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "30a13492-c8e6-4b61-b3d8-f93d451e171e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9903695f-81a5-439c-bb42-e70e40c28540",
        "cursor": {
          "ref": "994c8681-13a3-45a7-9128-e3c664e88cb4",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cb0421bf-dbd1-4d58-a584-22784be498fb"
        },
        "item": {
          "id": "9903695f-81a5-439c-bb42-e70e40c28540",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d483d07f-33ee-4e01-973b-ce5986a18b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d57ffc0-fa6b-4d11-8649-a631ec0d2cb3",
        "cursor": {
          "ref": "d00b529e-0b34-4251-9d89-79ef7c0a10d4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "573e18ea-5bcf-46b9-8364-1310715b4415"
        },
        "item": {
          "id": "5d57ffc0-fa6b-4d11-8649-a631ec0d2cb3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "131672a2-81a3-4da4-bebb-0ee31e1924f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e084e3fc-3f66-44b1-8a0e-5cc9351df44e",
        "cursor": {
          "ref": "af29aac0-3541-4fad-8db6-895251ac5408",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a7630f84-f8e1-4916-bd93-c6ba29e8c583"
        },
        "item": {
          "id": "e084e3fc-3f66-44b1-8a0e-5cc9351df44e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c74d229d-1f3d-46b9-9274-01abe2d09b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8760860-5064-41e5-9832-8445bf0f4de0",
        "cursor": {
          "ref": "945a1610-e979-4861-b617-3257d0afcd09",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6d0b67d4-151e-45e8-a053-04ae1b92cd28"
        },
        "item": {
          "id": "e8760860-5064-41e5-9832-8445bf0f4de0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cdc8735e-c791-48c7-953e-262c41aab767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ba24a0-0bb9-445b-b023-d03fec7ee4ee",
        "cursor": {
          "ref": "2b26aaef-ccf5-41e7-a4ee-6c7d2f483c89",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "523bd9cb-a36a-45b2-a849-787d3c5556f7"
        },
        "item": {
          "id": "b0ba24a0-0bb9-445b-b023-d03fec7ee4ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2e239efe-cedd-4918-88ee-e59a2102112b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd2e47-4c64-473d-afcb-e5dc60371e2a",
        "cursor": {
          "ref": "0ffb0e65-f20f-43bc-8bef-f72311b00f92",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9eac6715-fc1b-4f68-8c7b-3bdeaf00039a"
        },
        "item": {
          "id": "50fd2e47-4c64-473d-afcb-e5dc60371e2a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2fad9af4-6b40-466d-8924-2d85dba15fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09085bc-5cda-4547-acbc-c97367166ff1",
        "cursor": {
          "ref": "8dac8666-4053-43bf-b6de-8b525439b9ad",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "945cdb40-9b64-448c-ab5a-fccf2c71beda"
        },
        "item": {
          "id": "e09085bc-5cda-4547-acbc-c97367166ff1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a09988f7-9d75-42b9-95d0-1ac95e48069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919aca77-950a-4036-ac27-a61918672e7b",
        "cursor": {
          "ref": "6b10e377-a812-4944-968c-50f19ad64367",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2f02cc9f-3db8-43b9-8c38-ace9534f1921"
        },
        "item": {
          "id": "919aca77-950a-4036-ac27-a61918672e7b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6f8d7c79-559d-4b4b-a947-9eb5087b4d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94d35a-46a5-472d-9771-e86eae63293e",
        "cursor": {
          "ref": "90fc5f3a-198f-4ce7-9693-0ee38f334a4c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f9fdda17-0471-4ceb-ad1d-7890f4991eaf"
        },
        "item": {
          "id": "5f94d35a-46a5-472d-9771-e86eae63293e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1b7f9523-a6d6-4d28-bfc8-b1d4e7870e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c6d0c-ccae-4374-beb3-8d7c8185418e",
        "cursor": {
          "ref": "116019a6-ceed-48d6-91fe-4a5d6cd21c48",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0531640e-e1ad-4178-8821-6239f0d0ab37"
        },
        "item": {
          "id": "3c5c6d0c-ccae-4374-beb3-8d7c8185418e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fa0aba60-2ae8-4c7b-bb27-71d7ccec13b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbca0ee7-80d3-4273-ab1f-0c56d762e9b2",
        "cursor": {
          "ref": "c49de33f-b849-429d-8297-3ed223e17c46",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dff0f34c-0460-4994-905b-a2817adc3270"
        },
        "item": {
          "id": "dbca0ee7-80d3-4273-ab1f-0c56d762e9b2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5d4cf025-cd1e-4823-90af-d07e4eceb158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0242be64-fdc3-415c-a738-08653972201b",
        "cursor": {
          "ref": "8579e449-4981-4f49-a96b-6db7f20d409f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a8e14185-b254-4b50-b6e1-5993fb0caf1d"
        },
        "item": {
          "id": "0242be64-fdc3-415c-a738-08653972201b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c997c2a1-4693-44aa-ae59-234508601b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bcdf3d-5b66-4fb0-8f70-61efc07142e7",
        "cursor": {
          "ref": "ce6ba85e-dc30-45d3-bb78-22b03c7ecc8e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "215bfc96-9fca-482d-93eb-30ea3116dba4"
        },
        "item": {
          "id": "57bcdf3d-5b66-4fb0-8f70-61efc07142e7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60e3542f-99d2-40d9-89f4-19a03eddef50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea57d086-f25c-4313-b3c5-ce2dfae4a8c2",
        "cursor": {
          "ref": "6cf9db54-0929-442a-bf93-d08537b04502",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1090f3aa-7bc0-4293-83c3-2442e74e552c"
        },
        "item": {
          "id": "ea57d086-f25c-4313-b3c5-ce2dfae4a8c2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e2b70eb0-56de-4acc-8802-9dfd92b35d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211b2b41-c578-4919-9941-763fdafc8a28",
        "cursor": {
          "ref": "50c930da-42a0-4900-b406-407e4b5ff1a7",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8c288e89-df3f-4a20-afcb-5eb6beb4f394"
        },
        "item": {
          "id": "211b2b41-c578-4919-9941-763fdafc8a28",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9d156b19-b6ba-4a47-b10f-ba3db49f1e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74c49e-39bd-4995-b381-d8d28efe6021",
        "cursor": {
          "ref": "203c8ebb-53b9-4dd1-a348-71090422a4db",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1253c6e2-7b17-4590-9d31-a7761759d737"
        },
        "item": {
          "id": "0e74c49e-39bd-4995-b381-d8d28efe6021",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "91d089c9-0428-416a-9776-f02bf1120e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0344a4ea-218e-40cc-bcba-273e8cfabed0",
        "cursor": {
          "ref": "65daec0c-3166-431c-aaf2-6860491fdb57",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "11406a83-3fe9-4d5f-a4e4-954e709f95fa"
        },
        "item": {
          "id": "0344a4ea-218e-40cc-bcba-273e8cfabed0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f8ed05c-67ee-4c2a-b623-044dc14b8673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87165e-601f-4229-9279-b0e5db16a8ba",
        "cursor": {
          "ref": "b4d18ef5-a5f9-4921-9ed8-36d1d81e501b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1ea7fbc-5112-4886-b203-99177acdd096"
        },
        "item": {
          "id": "1d87165e-601f-4229-9279-b0e5db16a8ba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "194bc319-47f2-4086-bd00-ed0ab21605b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbe62e4-cb5d-47f7-842a-d44ac7ea4797",
        "cursor": {
          "ref": "e3283e14-59d3-4bcc-831b-f8a93fafaf78",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f3020d08-efd6-4613-8318-86509d27676b"
        },
        "item": {
          "id": "bbbe62e4-cb5d-47f7-842a-d44ac7ea4797",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26003157-4a00-4bea-80ce-d455bbd338e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8879c-9f07-4f85-b827-b5dd2dcb6823",
        "cursor": {
          "ref": "2fcbeb19-4dd7-4f6f-a983-a3b69412e68c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "147ef477-531a-4e32-b035-53837f007a6e"
        },
        "item": {
          "id": "3fa8879c-9f07-4f85-b827-b5dd2dcb6823",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d6004f3d-b83e-4a2a-bfa3-46ce12c0237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d879f3a6-b0f5-4c97-b05a-eefc852995dd",
        "cursor": {
          "ref": "98524796-c6ed-42cc-a9b4-63da47206c2b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3befef13-0cf2-42c8-9dab-84b3ca38e633"
        },
        "item": {
          "id": "d879f3a6-b0f5-4c97-b05a-eefc852995dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "093a2ce4-2fea-475b-af9f-a9ff9b72c1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c114d84-e614-4b64-ad8a-5d3d3394d86b",
        "cursor": {
          "ref": "f0cc1d99-1b3f-441c-96ba-ab6a4ff0a0b3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3fd25bd8-2def-442b-b531-7984027f8dd9"
        },
        "item": {
          "id": "3c114d84-e614-4b64-ad8a-5d3d3394d86b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dad3ab8f-349e-4923-980b-c76e0867ea4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f6b8a-05a4-48d1-9c88-38ddb5a5b25c",
        "cursor": {
          "ref": "d391e89a-c82d-46eb-b322-c8b46cdeb47c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2229d929-2d6e-40a3-bab1-16e787b874de"
        },
        "item": {
          "id": "c28f6b8a-05a4-48d1-9c88-38ddb5a5b25c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e7e81749-fb71-4196-9ea5-0d1daed0d42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512ec378-33de-4a94-9613-ffdc1f555193",
        "cursor": {
          "ref": "fccf5b19-eb00-4f18-bf51-df0cd1c31866",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c14184ea-68e5-433d-bbfb-ed1c52334d8f"
        },
        "item": {
          "id": "512ec378-33de-4a94-9613-ffdc1f555193",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c369f1f8-6141-409c-a85d-d635452ad7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfb0858-21e3-4b9d-b9e3-ca65264e2b08",
        "cursor": {
          "ref": "2965e7fe-6dea-47a4-8cc7-20f140916674",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3a999994-0bf1-42f6-ae58-fa556e6415e9"
        },
        "item": {
          "id": "cdfb0858-21e3-4b9d-b9e3-ca65264e2b08",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f7016d30-baaa-4166-bea6-8a6d57edcefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e587d68-442f-4909-a345-98fdd21af0bb",
        "cursor": {
          "ref": "4e7ede4e-7437-48d7-860d-b34404da014b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9a61eaf4-274c-4dfe-8316-328397e6bd97"
        },
        "item": {
          "id": "4e587d68-442f-4909-a345-98fdd21af0bb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bc621e4d-b58a-40e9-8fc9-b99e45b9b477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9126f6ff-a6d6-4f82-9ced-84cb9f70e9c1",
        "cursor": {
          "ref": "2653de8b-b5d8-46f1-873c-f89d353b0dd4",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "be89e20b-35e3-4a2c-b220-8e89f18b9172"
        },
        "item": {
          "id": "9126f6ff-a6d6-4f82-9ced-84cb9f70e9c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1b366a54-2887-4d5e-804b-f17d2b20ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7886c31b-b69c-4b02-940c-2d137a792dcd",
        "cursor": {
          "ref": "443f007e-86ff-4a42-a442-3e4a3dde9d83",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae2a7722-edad-4eda-ad0a-49f3c7d636ef"
        },
        "item": {
          "id": "7886c31b-b69c-4b02-940c-2d137a792dcd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f302399a-b556-496e-a548-74a12e93accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302816dc-b435-4d4e-90ed-cb486d13b801",
        "cursor": {
          "ref": "8172ba4c-5bde-4dc2-bc06-9d70e7805814",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "74b53435-f0a4-4554-af05-4406189f9686"
        },
        "item": {
          "id": "302816dc-b435-4d4e-90ed-cb486d13b801",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d87ab127-2990-4f63-b033-4574bfd87397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb90de9-50d8-44eb-8cd5-5eb89953f86d",
        "cursor": {
          "ref": "5ff5e4fa-bb73-44f3-aa91-dd77e29191bd",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "672a2d59-a79f-4fae-a348-aa3f507d7499"
        },
        "item": {
          "id": "4bb90de9-50d8-44eb-8cd5-5eb89953f86d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "def5ba1f-8d4a-4819-a762-7af829980e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ba3aff-699d-43b6-be51-95560ccef29a",
        "cursor": {
          "ref": "eed2aeb3-c74a-4697-975a-473b93cde318",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ed7e41e5-2f53-418c-bb28-9e7588d32ea9"
        },
        "item": {
          "id": "76ba3aff-699d-43b6-be51-95560ccef29a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e93100de-fe19-4d23-982e-51f279447204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a56c463-232c-45de-9a14-87a3c459c128",
        "cursor": {
          "ref": "627ad8ef-f97a-41f5-bc1a-d6b5203405b1",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "506b4b43-c1af-4fe3-a540-4eb7fc423013"
        },
        "item": {
          "id": "9a56c463-232c-45de-9a14-87a3c459c128",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ac47d047-971f-4add-97f3-c4f14f166157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471dd7e5-35a5-4604-bbe7-ba7b96f73783",
        "cursor": {
          "ref": "699e107c-84cd-486a-9bbf-4841e1b80d80",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e3c9d931-485c-49dc-b2b3-b836707c2536"
        },
        "item": {
          "id": "471dd7e5-35a5-4604-bbe7-ba7b96f73783",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4af9fca9-6edc-4e3d-b3a6-48e00bf5d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f48044a-7c43-4bdc-9fdd-084feefd9f93",
        "cursor": {
          "ref": "ee1a15e5-59d5-4101-8043-bb6df34c7f89",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "13bec0a5-e1a0-4e81-a53a-4b483c5f516e"
        },
        "item": {
          "id": "2f48044a-7c43-4bdc-9fdd-084feefd9f93",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9ba9ce74-4079-4565-b08e-2976fb0099ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739dc99f-c9ab-4209-ab8c-53bdaaeed76e",
        "cursor": {
          "ref": "0b681e2d-01da-416a-bd4f-34e0951f8715",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "543473be-2358-418c-aeb4-bd2094f6d2b2"
        },
        "item": {
          "id": "739dc99f-c9ab-4209-ab8c-53bdaaeed76e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "56fbe2b6-fe4e-4f67-90d9-75f04879fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492d09ea-0c6a-45f6-9b8a-1776199b3615",
        "cursor": {
          "ref": "bc2db9d8-b8dd-4c3d-80c1-51774a87283c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "732202d4-c3d9-41bd-a5b3-35f926145666"
        },
        "item": {
          "id": "492d09ea-0c6a-45f6-9b8a-1776199b3615",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ad72e456-5948-48b1-b892-ec00f4d8b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df340c5-8e92-4bd6-9ae1-2c355b30fad8",
        "cursor": {
          "ref": "1f67b91c-6594-48ca-ad04-c981d58401ba",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2ac7b343-93a6-4315-b022-de7c47027506"
        },
        "item": {
          "id": "5df340c5-8e92-4bd6-9ae1-2c355b30fad8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6e7da4ff-6513-4dfc-b169-21c63fd2b080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d871a05-b19d-455a-9c6b-fc03fa094dbd",
        "cursor": {
          "ref": "b3517d50-3724-460c-981e-becb5446eeae",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f3f344ab-77c8-4ad2-8095-aee33251669e"
        },
        "item": {
          "id": "3d871a05-b19d-455a-9c6b-fc03fa094dbd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3cc1b968-5b3c-4d5f-b589-77bc110a89c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6389a7b-3c31-4cdb-9e4e-78676658e79c",
        "cursor": {
          "ref": "9b4cb983-5e93-4030-8154-cb91f167354a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ae5a9946-32df-42a0-8952-ab0a4a730176"
        },
        "item": {
          "id": "f6389a7b-3c31-4cdb-9e4e-78676658e79c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fbff376e-bc5b-4dd9-a746-0a1893a23a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca06359-d96a-4942-99fd-9527436c7586",
        "cursor": {
          "ref": "61414fb7-0edb-4115-8e81-66bcb0794447",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3b66b33c-eedc-4fdd-8d9a-4686deb16957"
        },
        "item": {
          "id": "bca06359-d96a-4942-99fd-9527436c7586",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0f23bf04-8030-4457-9ff5-8ba94b3d3be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad486c6-2d44-4313-be9a-7d89d0cad98b",
        "cursor": {
          "ref": "05a8504f-0824-4054-82f7-25fe337ecb5e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a9670c5-06f5-402a-9921-d954ea33eb06"
        },
        "item": {
          "id": "fad486c6-2d44-4313-be9a-7d89d0cad98b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fbaeebd7-6711-4d5e-b462-91978e126b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73e8a3-e05a-4ce3-ae8e-9c7dce9774b8",
        "cursor": {
          "ref": "6a1bba5a-4b6f-48e9-97ef-672883161bb6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4b538693-afde-4c1e-a948-c22a66a90d32"
        },
        "item": {
          "id": "6c73e8a3-e05a-4ce3-ae8e-9c7dce9774b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8bedef62-ba43-4825-ae6e-707e171f9b80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff3ee94-7c5d-4367-b03b-c8c0b431e1fb",
        "cursor": {
          "ref": "3edef8f1-ad71-4c7d-845d-038a47c19f9b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "650a7113-5594-4377-ab7f-832d847d6729"
        },
        "item": {
          "id": "7ff3ee94-7c5d-4367-b03b-c8c0b431e1fb",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5e8d9456-941b-4b68-a2b9-489207abad7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd6ac2-bfb3-4946-9361-c17041c670e7",
        "cursor": {
          "ref": "277767b3-3eeb-4167-af97-12f7035dfa01",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b47158a7-bb0d-4ac3-ac5a-71fc31760dc2"
        },
        "item": {
          "id": "34fd6ac2-bfb3-4946-9361-c17041c670e7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f1a01ab5-6bf4-4b6c-8841-91e37e72af8e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "64157ae7-e2fe-4011-8de5-d246e1072a2b",
        "cursor": {
          "ref": "daccc16c-8e55-4fb6-819f-02499e29e357",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c3833330-1055-4e76-bfd3-10fdf91508d7"
        },
        "item": {
          "id": "64157ae7-e2fe-4011-8de5-d246e1072a2b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9ce2b513-702c-4b5d-a566-194caf487205",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "103ba376-9fb5-4066-927e-b98b90964a2e",
        "cursor": {
          "ref": "93b9eaa2-d360-442b-a9a4-aaac0a300178",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3d8adc85-b55f-4987-bd82-2fc279266cc6"
        },
        "item": {
          "id": "103ba376-9fb5-4066-927e-b98b90964a2e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3bdd5c90-4593-424c-b416-131dc257cae5",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
        "cursor": {
          "ref": "63f050b2-f40c-49ac-bc66-c1bc4e5d9e49",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4bc1eef0-286c-4234-94c4-684a3657d246"
        },
        "item": {
          "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06e140bd-dd76-4367-8090-5e6b7115cdd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
        "cursor": {
          "ref": "63f050b2-f40c-49ac-bc66-c1bc4e5d9e49",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4bc1eef0-286c-4234-94c4-684a3657d246"
        },
        "item": {
          "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06e140bd-dd76-4367-8090-5e6b7115cdd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
        "cursor": {
          "ref": "63f050b2-f40c-49ac-bc66-c1bc4e5d9e49",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4bc1eef0-286c-4234-94c4-684a3657d246"
        },
        "item": {
          "id": "0de2be4c-024a-4c61-ba86-d139091c9110",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06e140bd-dd76-4367-8090-5e6b7115cdd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f752a1-3cba-4017-a910-52f926345586",
        "cursor": {
          "ref": "391d0982-fcf2-4223-8e08-8366afdbb3c2",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cea903f6-fcb9-4e44-9194-99a9c01d2ad1"
        },
        "item": {
          "id": "31f752a1-3cba-4017-a910-52f926345586",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9423b296-3eb0-4d25-8382-a4a16163ae62",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72bee84-02d9-4f50-8921-a2447fa7d62f",
        "cursor": {
          "ref": "55dd4678-3cdd-4002-9790-7691b3edb718",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74fe2713-e199-4e42-96cd-0ac41c8c2cb5"
        },
        "item": {
          "id": "b72bee84-02d9-4f50-8921-a2447fa7d62f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38ecbdf2-e8b5-4e52-ba02-0e86f60827bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72bee84-02d9-4f50-8921-a2447fa7d62f",
        "cursor": {
          "ref": "55dd4678-3cdd-4002-9790-7691b3edb718",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74fe2713-e199-4e42-96cd-0ac41c8c2cb5"
        },
        "item": {
          "id": "b72bee84-02d9-4f50-8921-a2447fa7d62f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38ecbdf2-e8b5-4e52-ba02-0e86f60827bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ef8eb1-704b-4e68-948a-58475502b237",
        "cursor": {
          "ref": "c175164d-b802-4f7d-820d-ceb086196c64",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3fa581fc-5a0d-4f43-b61f-449151fc6a17"
        },
        "item": {
          "id": "52ef8eb1-704b-4e68-948a-58475502b237",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "429f29ae-8462-427d-88db-f0c8e9fdb64d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c092d394-f540-4b6b-b6cc-a19c5ca7296a",
        "cursor": {
          "ref": "d75aa437-5ecc-45ac-af13-78bede30f19e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1971ccfc-baff-48c7-971e-8c980ba471a4"
        },
        "item": {
          "id": "c092d394-f540-4b6b-b6cc-a19c5ca7296a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "065cdefe-7db4-4656-ac0e-0b35050c6013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c092d394-f540-4b6b-b6cc-a19c5ca7296a",
        "cursor": {
          "ref": "d75aa437-5ecc-45ac-af13-78bede30f19e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1971ccfc-baff-48c7-971e-8c980ba471a4"
        },
        "item": {
          "id": "c092d394-f540-4b6b-b6cc-a19c5ca7296a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "065cdefe-7db4-4656-ac0e-0b35050c6013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98b85a2-8d90-4f23-8195-c8a289ad4a8f",
        "cursor": {
          "ref": "522803a4-d886-49da-9f63-31fd927fad89",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2e7d5529-63ec-4cea-a210-00c7df1ccee3"
        },
        "item": {
          "id": "e98b85a2-8d90-4f23-8195-c8a289ad4a8f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "66856356-1a6e-4c51-b4f9-81f30a895a8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}