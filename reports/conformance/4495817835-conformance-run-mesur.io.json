{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3b01525-7fcb-402e-b2e5-f6a502eee267",
        "name": "Clear Cache",
        "item": [
          {
            "id": "90cd83de-d7ef-4673-a34a-5814cd532640",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00e1de04-88dd-4e2a-b721-cb7bb1d47196",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f2be290-3f23-4a9b-b1a3-99a681be95d5"
                }
              }
            ]
          },
          {
            "id": "d3b6d129-ddd0-4dff-b6fc-d93047816fba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bed56f4-424a-4eba-98e1-f06fadf5e0f3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e58caeb0-e3dd-452e-95d9-b8ae7f6c0149"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d507869-0694-4051-9446-f1f7987520d5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "823ac512-a90c-4a52-a3c4-fb89e326abf1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3861bbf-5b9e-4a51-ad37-35a12531cba8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db60e247-f735-40ba-83e0-51aac23610dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "566ecf35-e25d-4dc4-86b4-2190a90c5e64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e6183c6-8dac-4962-977b-f49e0bd1b777",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7952a8b-c111-43dc-891b-7c61d41c57c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37ea30db-429f-49f2-9e7d-c82830e40614",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "337e1c08-a97f-4bc2-ad84-40724387bec4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dffd2f2-6c9b-44f8-90c1-1b3f57044b1b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f3a72ad8-e99b-4b5b-ae4e-5700da781e10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eed17497-cc5c-4690-a429-f106e123ad74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1aeacc2-2276-49b7-98a2-5bfddd0f4cf1"
            }
          }
        ]
      },
      {
        "id": "95cd7a00-57ac-4fbd-9315-3fbaf1e5271b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a8eb8f74-7c63-4d1c-8f24-af04f98ac67d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98e01957-a1c8-43ce-967f-74b297cf3d77",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74172a95-7ac2-467c-8075-95936770c6dc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39fabad-56a7-496b-ae98-ee5407a635af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccbb39a6-4488-4141-95d6-c1ba8d7ffde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a9d1fd-f6b8-44ca-a4d8-d19f26983e7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2191a661-1b9e-4eda-a7e5-c4e885d579c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6a1b5d1-85c4-44eb-8ed1-627fbc736856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3278e2-c6f5-4521-bf88-324dcdd39620",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aff7f3-249d-4aeb-a679-5c4fe6c9807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90a8492d-78e6-41c4-a620-510e78706b36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6907677-87dc-4456-881a-568e4607d33b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f842e7a-6e65-4bda-95dc-cbf954452778",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4374980-382e-4bc0-9249-632e128c2594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfb178f4-9c34-46ec-a863-450dec3c094e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2657ea1e-3430-49f7-9750-215d0c80c685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c06798-1c75-4587-9974-a3e55344bbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db21ad0-1992-41b6-8ade-804148b7d0c0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8444fe4c-abec-4db7-93fa-115bb1de1ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ef28531-827d-48f7-9fd9-d2b7b81f42f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb2a2d7-60a8-4db7-97fa-8cf8eebaba34",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "54a85b35-e54e-4976-9b69-12acb24a408c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ad95617-802d-482f-a36a-e9fc3977ca7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "857ca30e-d1db-4a3f-847c-215a4026d4ad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2d7f609-a54a-40ea-8ac5-d9678dbae808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7f9a061a-3604-42c6-ae0b-73f636c46894"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9f3903d-07ed-42b0-b297-e73860407f99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d83ac07b-1161-4490-9802-1c742fff8ba6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "550bd3bb-4f0f-458a-aff2-44b714968039",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "964fd490-9c5a-452f-9fd0-3b2387f188f8"
            }
          }
        ]
      },
      {
        "id": "4b523c3f-1282-4ad9-92bb-d50d13c2b81a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4e8d4e7d-b2fe-427b-b573-050428eacef6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "930a7fbd-e55c-4041-a261-8003f38de0a8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f3922bef-99b6-4c67-9bc6-ceed9dbfc811",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469e7e87-0b71-47fe-93be-a3562be80528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3cae30-699e-4a37-bbf9-1a66e6c88264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a68a66-981a-4c41-8dd3-6bbc673882df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3644c9-67d3-4b7d-9a89-65166d7874a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae4248a-23d2-4c47-b590-94cf361bb905",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd66d66-d349-477d-93e3-f70773b278d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f0a334-daaa-4ebf-8a65-4a659a659669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc1f6f3-92b4-4c68-a4f2-b2fa4acaadac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f169afa-1c76-4dd7-a8d8-d0633b7b288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbb589f-eb02-4a3a-92b9-a2163e3c73f2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed002a72-e24f-49a4-91a6-e37e6ff9f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527185d1-4855-4e18-9e2d-8d4de0f88e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e8c78b-04eb-44b1-90ce-869e1a2602c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "693ee81e-d3c7-4b64-97fd-56c676e945e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a9639-1893-4217-8ffb-e5d717f57db1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80de34c3-044e-4fcd-9181-17466f5b13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6099be44-532b-432e-8330-065438f3fa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e37e796-cec5-402a-8455-bbbc82bba6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ad3d36-e68d-4e42-a5af-059ed1da6082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19523651-1f27-45eb-918a-5daf6a504a99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c54a58a-2e1f-479c-9256-5ebe68eb0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d51a00-81a6-4af3-95c0-773a07ee1271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e505492-9b51-463f-bea7-40e2c2ca9743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21105fe-05ed-4810-a407-218b210eadfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec692f-bff1-479f-baa5-db3da44001f2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c74ff45-04b4-4cde-987b-b2eb6e5a3690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918b13a3-57ef-4180-8785-7f05168e8b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670c9b8e-04f6-4deb-849b-d71591a374bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0ef91a2-ac4e-4402-a8bb-b7d2c2edc54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceac3ca-30ff-47ba-b16c-f6a23402cd6e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d42924-33be-4902-a3ff-d9c69373488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d615e39b-bae0-4006-bf52-1dca9bc21dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677c6192-09e2-41ca-a1bc-c91eb000065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f1f53d-3ab0-4ca4-a34b-2de5ae89a5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a028c4de-b31c-4dbf-ad5f-d8535e7ee118",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45f4781-f014-4b8d-a24d-a7fa2613ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1049934-1d37-4de0-b4b7-3bb2c2d4fd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fac1b22-86a8-45ac-b87a-f43d3f467413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1d8874a-9050-4403-9aed-879fe0d4455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5876cc94-9256-40a9-87f5-25ab5fc7cf5e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf04d36-9d06-4ee5-8f32-13a7e85935af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e6ac51-a467-40f9-9aac-901aaab11303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6b1bc0-c785-4544-82e2-6b1b3388eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d141232b-2e75-4f77-90cf-814f0ffcceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b0064e-7e73-484e-a5bc-fb2a38fd2eb8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ff38d3-cd23-47ee-a604-c310b463cc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04775c50-2336-4ae7-ad8a-cb4fe1a5a89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6e49e-9da7-43d4-a2e8-fb03525a7b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b4147a-13e8-4899-898f-db2c67e9f83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5eda01-2592-4a40-b301-cbb5a7a8d861",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3a182d-85b0-4b90-8a37-4b69c6743504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf31e12-97c4-47a0-9c77-d1f14e35743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13060dca-cc66-46c1-93f3-afe521629e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d26db60-85cc-4734-91c1-69690305918c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c4dc63-c0ea-4d24-997f-92351d494a89",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968b08eb-3833-4d8e-9ee2-75b11bb94d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1028e2-b2f9-4abc-990c-f2a2ebfc9738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfa78b4-62d3-4bc8-a434-a03b815917bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904b56e9-bda5-4ae5-ba0d-5807abf58faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5274fcce-bfa6-4049-96ad-1ee59b2ff542",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80385c9-8658-4aea-b543-0205d62e784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2ae48b-3dee-4636-b7f4-8afd2cc3b846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0222f1b4-f184-461b-8e90-1524209b227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2013c347-76ea-4087-b2cb-7c8cff146c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ede07-e080-4171-b7ea-bd52f8b633be",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1419a96-663b-4b76-80b7-b00b4bc95187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f486d3-be68-4eca-8dca-f7dc6d645be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54d7b8a-b972-40d0-9168-4c4ce49b33e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01cb896-0c7f-4251-abaf-7995b3c28ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fa0947-c7b4-46bd-813f-965422631534",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5d25b-4a2d-4107-9fba-6ad276886aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547e066d-3036-49f8-a367-16af73615a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c275772-5d9b-4bc7-bfdb-aab0b641f354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff5927f-7aa6-4746-83ff-75f8904980d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8371bcb0-1d7b-4d05-84a9-c1d178788287",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12a4b62-cbcf-4a80-994a-cfa0fc5a315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1126c7ef-f896-45bd-8ed5-2a0133f34902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853796f4-ce5e-401c-81f3-cc6285a82a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceea4bc9-811f-42f6-ab9f-294b949e3435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0efc9b4-3aea-4b83-8361-95b266a96c36",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f54717-678a-40f7-8f7f-cbf795f55b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437be427-c3ec-4019-bc9e-a94a352b0360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483039cc-5b8e-4635-a659-95019c995119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f701a8-79b9-453d-a630-fe31dba4fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d97a55-2e4e-4e33-ad80-1384ec71d4e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cca1512-4b97-43b8-ba61-5e6335c398d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728db4e0-a0c4-4e1b-a0bc-be534830d515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2add72e1-d335-437f-b5f0-edbce6bf3650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a180a7b7-c4b2-4143-a257-941a38b4f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd7ce4-4a54-4b86-855b-67873deeb949",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626f9e3b-3ede-443b-842f-a2f7c8074f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efd69ca-7ff0-449a-bfb7-640732bca8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753f3b3a-4e95-4406-81a7-652337eb2731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f395489-0a3b-4189-871e-d5a72cef1699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33601b6e-9281-4cd8-a8d8-a992fa2166fd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7d90a2-2744-43a5-883e-3eec206c7c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf715b-e5a5-4f67-83e8-97434c2510aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b544c897-03b8-4023-89ef-291101932236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5048e728-da7f-4d4b-969d-38838ff2768b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3debbfc6-cafe-45a3-9a11-45c923ced6e3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb2a07-dd43-47b6-b790-c444a3b2eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d91c34f-1b72-48b2-96df-cf94337031af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f77fa-09e3-403e-b6f1-ce84cc3f7fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b49cf2-edab-40ba-bdc7-4ff90aa4bacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283d8516-5565-4fa0-9318-6ce85a5f5bd6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c359a2-0fc3-4b2f-a117-e1741799e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b7e7d0-b67f-41c4-8a13-7d0a2fb55c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fc2239-2609-403b-b067-14a970736ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6b023d-ddfd-492a-a6d8-37ef3973e89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07934c60-9f38-412c-a001-ded3d02188a6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511d8c44-f1a4-4d1f-92c2-e8f165e3ea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab5511c-0099-4fd8-967c-150216a9fb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44df260-0159-470d-8c4b-fde86e0b43ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea824e7d-291c-4b69-84e7-09b77a4060ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55247ea8-e94a-4581-ba67-21bd6acf442b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70866b17-04d9-44bd-ac18-d0c245743a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa400960-5f47-4473-a974-42cd104678a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83d4130-8b12-4ad9-be8a-ad1a1281b68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "727dc57a-1c5a-43b8-a75b-6e3aaef37e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c3e8e-811f-403e-886b-68edbb3a748b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c02957-fb1d-4094-8802-806d1163bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bb9ebe-e8ad-47d6-923a-3e71083dbf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8c92b3-daff-45ac-b569-c33a81bb2910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8245c7-d4c5-4097-af9f-8a97085ad378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8146f-cd78-4f5d-97df-a6e17139107a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f6c773-eaca-492b-8133-cadfffff3d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57bf93c-f38f-4eff-b581-cd889e4f6a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf405a-a3b2-4376-8126-531d73f7c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4603e57c-3f69-4113-9ad1-ac46d2eaafdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be26882-f488-4367-9fae-54c3c56fb7dd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942dce0f-5fea-4a70-beac-33a50ab287e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfd0825-c031-4d43-a0c5-11ee5b89aa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625eeafb-9c4f-47d5-af5b-88abca4f632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05df8e92-34da-4b6d-9c3d-6e5b50c7412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46768ebc-e863-4153-91c1-820f73d59518",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49034df8-ebc1-4d77-871c-95ad08b00b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03a5222-61f2-46c5-bcdf-2fc1115b92cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac776e26-3f78-4824-9bcc-e2ebd2124ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "411e02db-0d20-4ae0-8b71-a83f29be9fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a597960-a1da-4661-bc42-39118e6c8e3e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75db440-d05c-4c37-a3ad-01bd5016ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bf5896-f755-4fed-b211-00bfae1a8980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ba121-a121-41d5-9dd5-15b4cb9c6590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "291781fb-b064-482d-9fee-ab4430572c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316621c-dedb-4043-9608-9f5a54590e4b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2ea122-bd07-4d98-a821-f693457f7a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f403fbe3-ab14-4fef-8d6c-2bbb84c7ed94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d9089-b867-482c-9b2b-7952c8cb5859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6670976-69dc-43d1-bca3-1378a8281341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf765ddd-1ca6-49f5-a409-de70c706dad4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdd3eaf-7384-46b9-bbbb-98a50e48ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71588548-7b8c-4758-88ce-da1fc360f5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8fe12b-e4bc-4fe6-8067-46bebe983d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "780b6f28-2dcb-4284-aa99-6c972a39046a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98190da-a349-4bd6-adf7-c391ac711cf9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050e4400-52ab-4567-b1af-5a9043d5f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b329375-3316-45b5-9443-7b3d7bfaa34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c78598-8b4a-4994-b139-2d8388f5740f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9bec89-3f62-4846-aa09-22c28b3fe40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a2f9d2-4b83-47eb-a3c7-563e36537b30",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b95b93-1365-4310-86c6-e426975badde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7166fd12-e9c1-462e-bb2c-b2fd11af5df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdff707-361a-4b27-941a-4f38383d85aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc9e2af-6af9-4256-8a3e-ccb16e8f8444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1dd33d-c5f2-442c-9016-b14fd9e325a0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53715cc4-e3c7-4aec-b969-f4cc0097264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1740ffae-5099-4d7c-8468-040051e5ced6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77acc8b2-0bb5-4c00-a8cf-260c1628ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a345b50-2917-4941-bccf-4a27e781ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1684d753-73d8-4e8d-83c4-d45daf409f55",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505549d-8aa0-47a3-9105-cd9741b6efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c950449f-5032-4cf7-aacc-0e0afb8d7eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3df874-9f25-4f46-933e-86b69d5952d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdd24bc-a955-4999-987e-9d9a0e66d398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf30ec-cdcf-4083-a317-0e9fc1aaf7b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b15adf9-8d95-401c-83c0-3dbfe7cdcd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c67383-684c-4e32-9c75-0017cfe89f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed1649d-694f-4a71-8afb-531794075a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "476405b4-a6cf-4d9b-ad26-d722ecf3fc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df874256-b6c5-4c13-af3d-07b94313ae61",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc9de56-4b1a-4b17-aa0c-9b63086ecea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a103f675-e63a-4f03-9cb4-cbdaa9720a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2cb17b-fe1e-41d1-994b-5e79f1a2ecfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3250761-0ad4-4214-9cc9-aa5769abec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc4e569-e9b3-4fde-9d57-f14ae9fc5f3d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79f4f0d-657f-4b29-a348-3efecd6ce12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b15ec91-6269-40c5-a7f1-e62a1e11abf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132e50dd-7e66-41d2-a257-449d510f4a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbda1a0-63e4-4675-b681-ec05bf3729ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4af9ebd-f2ae-4155-b5cc-ef3c99f8d56a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344311a1-2830-4bac-aaed-a6454ba67a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e089cd-25c4-408e-95e2-13bfb0798d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b02421c-533a-4fec-bd1e-d96f29162be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "612fc1a5-e035-4128-8b73-b4b237291deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f66962-1b10-498a-90ac-2310fb42e0ef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b4833-8353-4fc9-bf0c-a50ef637d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47323ea0-591d-4cb4-91b2-145d9c23cbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457fc6cf-e969-4add-9dc8-56cc30778425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43011f6-5200-413d-8375-6399c57f5e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc99b404-de73-45be-beee-caec3d45e139",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00006d7-5c64-4011-9fe2-13bb53a78e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3ef6b3-43a4-4240-add4-c5ccae0b1d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a8c35-e93c-447f-a3cb-c240e7859609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45247549-2450-4750-939f-82135b08edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe49722-13ed-493d-ab34-4fbc25b01984",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e16c271-1e60-4482-aa3e-2a41aa849fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e074e3d6-1d80-4d6f-8cd1-1db8a6ab9cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b63177-2579-4fa3-b5f8-67d825900075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "691f515a-5744-49cf-ae6c-27280492674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd22c0a-c85f-4ab5-906a-19c9e9889904",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db394a7-3f6b-4919-a4da-16f62ecdf791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da078591-b635-4155-b6f3-9c5b1671a767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccc9e98-3e37-49e4-9afd-58b6cd144bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12312480-47e4-4f07-a49d-ef490f3125e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d665d92-3478-4032-a232-e4baf68d42e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f24d03-6c74-4313-ae60-d71014497cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3faef610-676b-42ad-aec5-225235c0563f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af33b21c-89bc-4d1c-a216-08cae54e05b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b816eb-3cfb-4133-aa7a-13745c54ee07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7756967-042f-4764-abc7-77a6eb1766a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dee512-51d6-490d-99d4-2a919262462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9202eb-887d-49a1-9bc0-07b66c6b2ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6e12fa-084a-4d3e-a228-ce57ab12f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "559a2e5c-8139-4e18-a94b-ea34d92a16b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b033a99f-d712-46ff-b961-ef9ba9e5d1c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a20230-fed9-4608-8f8f-339d55bc93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a594dc43-ca3f-4c28-9237-a9e62feb3f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba43417-31fb-4cbe-b0ef-0981f41a413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8168bb-13aa-4415-9dd5-f0c54e7ce875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b39b83a-b98c-4086-9484-b000dd7a84d8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df72b974-b019-417e-8b44-d8cac08c1388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0313a1-c869-478f-9ec9-c248e4d76ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c010a9-04f2-4c06-84c7-6cc13901481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79987ac8-8141-41d9-a957-4ad18372cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6a94e8-0292-410c-8575-4ccc6d78abb8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b549cabd-7cf7-45b7-98fa-0b4269e8a07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c674edf6-82da-41f5-b5e9-a805f1b11f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da050a4-2776-4c68-b91b-cea85918cdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95cf08c-e342-415e-965e-1e131eb2f806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4e2a77-80a8-4655-bb88-17057882be40",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9121bd64-2e64-41a2-8326-bd8be531fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aff756-3482-4b8a-bf37-e4f0d5182e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea56e1c3-279e-41f5-b551-4b292d086ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d06ff828-73d0-4042-a012-bff4cbdbc90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d4e5bd-d9d1-46f6-82d4-b13d6483fda1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cf6989-52ee-4fcf-a940-a322f090ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7935681-8077-4ee0-be14-fc928fc0c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93152a9b-a324-457b-a672-9b4031503357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2cf6fe-9dae-4968-9a9d-540c849f137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41ebe35-dcdc-4ad9-8867-a51ae014a073",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a4b6b8-d661-4f86-98fe-b6242bf90416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986b88fd-b66d-4884-9129-e9f0fb370b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad963b4-0cfc-4584-affa-fbcf13e033d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b4dd9e-5f59-457c-a3e1-bddef94536f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19dccd8-0fb0-415f-b3ce-7c7197ca7e4b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152ce7e-3fef-4a99-b1ed-55482f3ed141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b331f6-0d10-4c9b-823a-8209bbaae01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8158e05c-1e32-4bb6-a7ca-3ccc1a17adb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccfd9a4-0a69-4596-8779-489fd4d4be97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e405b887-8975-4dc8-808a-37e9810d7cb1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c757f0ac-0b6d-4725-911b-bc17886ce3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c39bd0-b84d-4c2f-adf0-19f84011e81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acbe450-704e-4027-8c48-ff72be7a53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cefe669-613a-40e5-ba99-9595587148bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b97ddad-8b99-4b4a-a339-870f23c7b1fe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb6c1f-a401-47da-bd58-db7732d47171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7918a5a9-f8b1-48a2-9830-110622862054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99305fab-42cc-41cf-a11c-22edf9411061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3321a93b-30f7-4aa4-99ce-6d866409d66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081170f6-7675-4a4e-b701-84443aa34823",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0186e0-8ec3-4951-91c4-e564ca43ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24876ba1-aa0d-4e3e-820f-98abc958ce21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df7c5e-30a9-4bac-87ef-7e7bfcd52dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3084d28-647a-4c7c-9fca-7716a60a69b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30344987-a168-409a-9479-7c0cdd1ff307",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff16213-68f3-4e19-a422-52c910ea183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f1d48-a4af-4737-bd04-2c215937e43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51babf33-678e-4118-885d-0867a14d1e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ece4368f-d9e8-4f30-83e5-912ad59419dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35f1f8-94e0-4d19-a867-b037c1c6205b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70134b89-5824-4be3-b94f-ee887bb2a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5fdf1e-8a44-448e-90f7-e3eee4b9205a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f695fc3-1643-4332-acc8-a20e13835716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "748527cd-4fea-45db-b211-d58100a45e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039ccc76-1e5c-43fc-b794-104b464dd9e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc5f6a0-3f13-4974-881e-e866850fdedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4acf324-3d93-45dc-95d5-4533d892e9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b4442b-23c0-4825-ab2e-6e4fde5041c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5fecee-7f83-4508-97ed-cba63708eb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2df5dd9-5176-4e39-bc6d-a804473e19d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f0f79f-83ea-478c-9413-caccf3826aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d786d6-697c-476e-b451-5daa709a2ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b66766-b088-4cd5-89b4-4d1515bd8490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "810532c4-54cf-4f44-9580-25beae1cb416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e9eb94-94e7-49f3-b25f-a6e3453a56ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec1ece-2ea9-456a-a42d-522a6263bdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afce186-90da-4702-8bd9-f95ee81cd303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a6639-422c-4c5b-b756-5194718ebf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2103720a-ecd2-465d-9afd-318cb087065f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3494df42-c4af-4be6-aea2-ef2ac80cc234",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5667d1-5f04-4abe-8def-e6d41c422ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e959082-2003-42f6-b439-c4ba93e495d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4efade-cbec-464c-b00c-2287d1f61510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d2f8dc-7c0b-4fab-871c-c552ce9ebae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe8371e-9d25-4af0-ba9c-06990bfec818",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d7b6a-b602-4384-8aa5-1a01e1c99d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f545cbf5-d649-4e65-bdfd-0865c4aef8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639b962d-07b1-44f9-bdd8-4257756ef2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df44be2-e8b3-429e-8885-8233d55ac865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa716c0-53f7-44aa-b96d-0ac0cc38f93b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eec86c-2357-4334-9cf3-5c7b76ad13ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196aaa71-9402-4c62-8480-bcfb0df2bd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1ed87a-c9df-4b19-99c4-d38e5601bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e2b110-55e1-4949-b4ad-ef4adc29f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62baca0f-e78c-4bdd-bf1e-e94e3a068191",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9811cca6-af91-498d-be26-da02927f5961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128bc19-d2a5-4a12-a8fc-96e0c3f4659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da865a52-7b19-46bd-adde-f773aaec2d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9893ee3a-5fea-4785-b40a-9fa4456b8a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e3ae84-c3c6-4963-a56c-39a8f9b0a021",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5623da2-f789-46ad-b822-3b3d562d9821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23e321f-1a69-488f-9f2a-97fd3d6bfd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a1ed2a-3e2d-4458-9d58-6480703fa928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b09e93c2-fe2d-49ac-a43a-6230d105317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa326135-1f10-4109-b280-dd4eb8cc769f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abed0e3-7942-45f5-81b6-d9edeeebebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549a2da8-6cde-45db-83f0-cf1cb68669db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485ca438-bc27-48aa-93c9-408d38694623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4d6486-8ffe-48e5-abe6-ca982bf7b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752cecb8-dfb6-4c0f-9fb5-99a9a26cdd60",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed32329-92ee-4f88-a629-371ce8f2b6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d09e57-c00b-4087-b7f3-f0a13b6678c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b84c62-725e-45a0-9395-3dd9c10d5ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed11d466-55e7-4bcc-b018-84cc25383c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12e336e-8df2-4db9-9714-6186f6be2afe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277d307-0e43-420a-beb3-59bc2adc5c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473fcf85-5cf5-4ebf-a35c-8470913aa706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985f1ab1-c9da-4e24-b6a9-76dd1ba86d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5d1e65-6354-4df3-a75d-a83b8a7fcd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627bb5ba-b094-42d7-bc56-4d93c4402702",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ba8f3-f5c9-403f-b9c2-048d4877bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699a3b08-5067-42eb-96bb-c6ddb453940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db954bde-7c58-4f98-8332-cd5240d6bd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4afc7c-58ce-419d-bcaf-33bba9421ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7a77c0-fbb4-4081-8a95-6562abd63f5c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99418ee-597e-4f11-8964-530f6a51a634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d712bab-ebd7-4083-8156-98fc8c9d283e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9042c7e-b0fc-4127-9440-0f22e59171a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b12e05-f0d7-4997-8a55-e94f7e425179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf47eac-7c14-4699-9dc6-527c7c2e5ef6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73b624-1d0d-4c63-9117-1a214108db91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07d1f32-c0f1-4780-9640-50607af8a217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c07fa-0410-4b81-89c4-9665c564987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95b93fa-a0ef-476b-a4f3-630746a72317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c4c5e5-6399-4383-9661-84c6b3b3afc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c8493d-1677-464b-8201-ad38a3239dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b25bf26-f530-40ad-b358-36ecc2270d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc6e8ef-d522-4dc3-90be-98f83c6e29cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bc3024-9ea0-43f4-8486-371d2de568ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d13aec-d697-437b-818a-d7d21d9acc58",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a4d7d-b768-4ad3-9d6e-5412949ed66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45f025b-7f5d-4b4e-a56f-827aaa9481dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a620da-d945-477a-a185-3ce7163d6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3638836d-30a6-4064-8016-3451fc118f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e219ab-1796-4254-9f39-51c51cf41fea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b5117-61fb-43f9-b69f-a111ff35a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec83c9b5-53ba-4c89-9e19-c232ad8c35af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5d711b-c647-498d-94fb-937c6925efd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74513e31-1063-4757-b994-4fe254b0fe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac4f2a-322e-47b4-b5c6-34c004f1afc5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eff567-d4c2-45cd-978e-289326849931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee39f703-e0cb-4e0a-9ee1-13245cca6d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d54fb89-24ac-494c-b7bb-ad70b15f010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33c521d-1aef-4625-8f70-9f2dbc80e4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45945da2-bec0-4a4d-b490-acdf14801a0e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4da653e-6714-42e8-b4a5-1a391087108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187a8a77-11cd-43f0-8587-ffa4a77db5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f935c64a-c463-4114-9114-8bf116c48171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a0e982-ef84-4436-b235-32afaf61f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd593887-b908-49b6-bcce-feb0289df38c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f338686-a5f4-4c51-b9aa-3fd2c9504f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090c0fe3-8b8e-4711-9bd6-a8e334caab35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd604ed-0064-4efd-9e7d-e8d19cb1a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be3a111-ec2e-41db-9da6-4c150e9aa018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9a013f-94b9-4192-87ba-10e672bd2b47",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf21568-6281-4e3f-be4a-0381a2d7373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e266811-fa87-4e0d-9e70-6421665eba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc0d803-8179-4351-b83f-95839f421b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cae2e34-5870-42e1-b36a-5af0fd185f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32e7d0c-3e2d-41cf-af32-84da3cfd6ffe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08021e50-4339-430d-9141-0533affaec7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5914b7dc-26ad-45e7-b115-f58db8275e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add616c7-3be6-4459-80f1-6cdc405f249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8212a2b-9bfa-4710-ac82-a7601e007033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92da2a69-2c81-4c2d-a7ef-052e2fdbe2a6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a05f5-0793-47fc-92f3-8692c68cb49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1118fe08-2ade-41ad-9e2a-148fb07fe44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e85bc-4673-4f28-b072-afc9bfeef0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c49b7e0-805c-48f9-b172-cd6726cb4364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae036a-7337-4f05-a0c5-7e38881e9615",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a083b0be-451a-493f-9ee0-1ca10ba77e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91b19ef-230d-4cf3-9756-8e379bd469fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2eeec1-d303-4ae6-ae8b-7b87f7e3f022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e274cc-1e89-45c8-89fe-a0db62e6a8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c533cdba-d723-4b3e-aed0-c9cc70b366a3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176b68f6-4003-4dd9-a51c-4a278c1a80a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25510409-9351-46a2-98d3-beba2e358dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36068996-38ba-4cce-a862-0e78a97f5315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86215312-0d7c-411d-a652-aa4343d55664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081fae90-0a06-4356-872f-ce0114084b5f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f668bd76-0229-447e-aa86-7b1a8dbd9d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a34b7d-09fe-4439-b4db-50a2c89d7a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289d0951-6e09-402b-b7a0-49e0432c0591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faff7561-bb7f-4a06-b760-e79e0d075074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1128a087-3678-43ce-9de3-b7b8d20a9565",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5644b144-5968-45b1-a12d-75edfb8a7659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f183d8d6-d12a-44ae-9480-87da9036ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16007d02-809c-4a87-a552-19644d5c7b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2379501-881f-43ad-9769-c8c4e643b6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6e4a49-2ffa-4285-82d6-83d21ee1b733",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16073617-8654-4b99-ba22-5fb8216c3247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8d6780-9257-49ab-a0ab-5cc97c04602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dda49a-7f9c-4ec4-9567-6a028100daa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bca06827-fee8-4d17-9c14-15cc055c9966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccb8343-ec53-44c8-b3c4-a9cd57e2653a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68166a69-de30-4068-9ee0-31c66b764398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e85b1a3-ecea-4e62-98f0-7fa69694d245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe499d7-b078-4418-924b-55989e9e9e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0a6490-e837-4889-ad9c-bb4841a360b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a6293b-16be-479c-82c7-e3b220bccfb1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326a774d-e974-45a1-a5e4-c0901e57f39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b412310-9bdc-4e70-8c43-8fb0578f15d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05eef85-5fe0-4ba0-84ba-b7eb98a982b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab2650b-6f77-4646-ae69-95cb23709df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8b8e42-ce65-4735-9dbb-cfe366149877",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1d218e-bc0e-454b-a741-227330962e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1798fdb0-4cbd-46fa-819e-3a7b52059914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d43fc2-bc72-465f-87bd-08667015aba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05e55e1e-d0c9-45fb-80c7-b9c1d4a111e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b66dd8-7d59-48f0-b406-3f6ed4b66fda",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a50c0f-c0aa-4629-8dd4-921fec5b45c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c95c390-ad2d-4a18-924d-8490de2334e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59d8a81-abeb-48db-91b3-584daeb47b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06392843-4a45-4de5-b6a6-56fb53b84e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e71b0b-9dc6-4562-93b7-d17773e8d64b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bee6cad-6e73-4e62-90f1-0799cdd71f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b58ddb9-f1ac-4bd0-b2d0-dd1db682c45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcea26c-4ae7-413b-a4b9-9febecdee611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88597b45-3116-43af-8481-e4ea516d177a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aa6a9c-b360-40ec-a1bf-55e97a4c32c4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d27ac6d-fb83-4167-aedd-0baf3559496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f4dfdf-8f1b-4969-a919-4d661c0f0e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b92e14-5464-4710-802d-82346df257ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cdd086-b2c1-4e2a-ba6b-a248d7f4f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c7d6be-cb0c-4fbd-b972-993bc41354a2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ed818d-c57a-41ef-b42e-b2c2eb692b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "32a0d333-575a-4c8a-8688-594301de95f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74094228-7a31-4484-bade-030614caa2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a288f6d2-76f1-484b-b828-b4133dfdd3c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e51b0da0-99b2-4b69-8876-bc414e5b90df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c754b18-41f9-4d5a-a4d8-8d1e20c57fcd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0327a945-cab6-4b86-b952-3af4c74ff2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26ea6b69-e59d-4e66-8b55-d4232f8b6d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8ebda8-30ee-4f13-91ca-2497ef3d8b43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3a1509-5d83-4abf-966e-ac71edb7bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e3d818-fbed-4ada-acd1-7adf48ba3921",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24d813-1ccf-4b51-8006-25f9ee0ef130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2281649-b514-41f5-97ef-b3bc06edbeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160605e-3569-4fd2-8834-7ac4345f337d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d60bd1b9-4d81-4694-9b24-95f4ac4b978a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "948254b4-b621-491b-905b-2a265011be11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61545e53-b90b-44e2-b35c-e5cd438de171"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97e6a52d-fb1f-4334-843e-e20460a8989d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26dc6fd8-0e52-403c-a1c8-bb5da2a427b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3dd3bcd-12db-4b2d-97bb-a0f5e1541c16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31345895-9a67-4255-9990-fa3dfbce1174"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7600367-2691-4637-b00a-dede0722674e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b643e1a-c6d5-4a19-9583-dc70d6507b0a"
                }
              }
            ]
          },
          {
            "id": "0326262f-8cf5-4ab3-a11d-56f8fa8bbb62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc0ba8a3-1b46-4cb7-8f2f-373c013d7501",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff8f8840-83ff-4a8e-a050-488d4c06bc5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8582d676-c28d-43c3-9705-f027cc9401cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac4169a2-51c8-4433-8572-d8e367a4fa1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b40c970-d831-4fb8-a306-421566fd1925"
                    }
                  }
                ]
              },
              {
                "id": "5facc5f1-edb2-4f9a-8aab-7cb077c17dc6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6217a0-a5c2-4d69-a97a-cb5a44df1b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf393c94-ff9f-4230-be2a-3f9bd194d255"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eece2f9a-db25-4c8d-8c1a-b08cbf215f82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d156f2ac-ddff-4816-a42b-01918a94157b"
                    }
                  }
                ]
              },
              {
                "id": "ea16cf6e-86bf-481c-b767-942492501e70",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38a1b086-2e87-4fb5-8452-7bc93b4c3758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc8c3f3e-a82d-407c-be02-f4a27263c187"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dee9b263-46d9-49e3-b1a8-02b34be4c096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f067e3bb-4068-4086-992e-79b6fe11330d"
                    }
                  }
                ]
              },
              {
                "id": "a6623200-c0e7-43e7-89ff-bbdff6e05fff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "946bb9d7-58c6-4d15-97ca-41b5f798e57a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "caf172d9-adc4-429a-9fb4-493d7ca42062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e23e1d-0534-4ca7-966d-3f2497b6b626",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f355bcc4-57db-4074-9172-0e2c2fda6ae1"
                    }
                  }
                ]
              },
              {
                "id": "b4ee38ab-ea69-4e32-94f8-624984c50bfd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6b35b7-9a59-4929-a3f4-423c21e0d12d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aabb13d-0f22-43ef-9201-b3140d2d8c50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f5cb0a8-867b-44f9-b522-22a1b6e1d1a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "140eb558-8bea-4370-a7d8-94aa01e914a7"
                    }
                  }
                ]
              },
              {
                "id": "28016762-f9d0-46a8-b6bf-9f647629a7bd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02658890-782e-45b0-a3cb-6693759159d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af7d2cca-0259-4450-89dd-a7c2e54ae23d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "197a02d7-18d3-4814-9a14-93cfda8cf94e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "063a5a50-da4e-4bb3-af3d-62a2c38ac5c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7d724f6-7ce6-4350-9db2-4cb2eb34126e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75f4fbbb-b241-4e24-8a12-18760921147b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb8c0f0b-2fd9-4231-9ce6-ad28f9d4ac72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e5c8996-0efd-4b17-a95a-46a7acf7ab25"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9daf624d-865b-4737-b17a-d76b02f1fd3c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e786205f-f072-41e2-a8da-a648b5e7d899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f035122e-88a3-4ec3-8a61-28c1b7cc54c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "583a83c2-bcdb-410b-9842-bc76a7bd6e3b"
            }
          }
        ]
      },
      {
        "id": "5548559d-8807-4b00-8d83-2801f6bfd4f4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d0f502c-7708-49bd-979c-28cbb573a2f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f633a10c-60a8-473b-ab53-3295c4d1ba63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f8aabf8-7f80-4182-ae66-973feb1b7c1b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606b97d7-8d2d-480c-b326-e9b8cd2cd744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b576723a-8ecb-4c06-b3ce-ebd009440176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db74bb2-af76-49ee-a4b0-ae3db245b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a841560d-eb38-4029-b930-537bb0e7a51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e359232-f659-4245-98f2-3ebc47e6845b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49aeabe-36ca-49d1-8e18-6dd471f11726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c29b820-284d-45cd-8b4f-d1943f86052e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8f267d-8a2f-4805-a2a6-d5eaf3c9337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "478a0af7-e438-43dc-8bab-0335d5a156a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716dbea5-c41f-40df-8395-a91985fe5423",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ccbbc-425f-4b68-9e7f-1a9f149b6f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d12c8e-fcca-4d68-9174-2b6d66d8c478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c3cad5-432e-4cc3-9520-2b32fe3d180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46da69ff-bf73-46c0-a006-6181d6777d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b9c35b-96a7-4af6-b4b7-6b42a695d706",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2da272-b5a1-4b92-be7a-935e8ff2e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698ce22f-a4ee-43a3-b41e-de0394ffd82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab4e87d-cc76-49a0-9e1f-2f7d22151bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fe9b77-ff22-4c2b-a50f-d1cef4b51369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10296ae2-b268-4311-8a10-c2f58edb44f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36084eb3-bc06-4258-8304-d04a43ac98ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bcee7c-61f1-4aed-a513-16ac700b9c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba1ca07-712e-4231-937a-570725b59ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "783db299-d8f5-418a-be97-58c580365615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f905c7-8a20-470d-af33-80afb47635e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab247e19-b8cf-47c8-97d4-a80a97c4347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feba13e-d9a4-47cd-935e-3114098bf10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9541744-11ee-4238-8e58-23abe4575b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9620f2fb-42e7-426d-96a9-dd3130ae638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e2590b-a9bb-4c61-87c8-a279953c5e4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dd4f0f-a2f9-4636-930f-b677c6e9607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686d44db-2c2b-4ba5-b31a-1ecdf4e3b17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577e07c3-1788-4b2c-bc47-29bc2f78c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc6ce34-f534-44a2-b40c-1a547f28fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b314d1-b9ac-4789-a449-3303e81807c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cc9735-3d43-4a33-ae1a-802ddbaaf990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf81e0b-c622-41ff-a0ef-7661712b17e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c865cc11-050c-4d64-9448-67e0e3e304a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8690565b-7853-43bf-a8bc-66c7dbd52c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9faeda-8f92-4e34-8d50-f4f024521474",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c06633-99d1-4196-bd92-6e32f9cc653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcfffdf-d635-4236-8801-e75c5e8affbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e49501-ba67-4c78-9f7a-535443ef0568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf100996-c8f5-4986-96ef-400019f472b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5fa370-b649-4eef-95f2-5902f1e47cba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383b7834-e093-4643-ba69-859b4aac17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b6b435-4903-42e0-846e-a76b0aff0b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6a8916-77b2-42b7-869d-e712ee553376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4332fd91-429a-4dd6-94b8-486e9091058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf5bbb2-3b89-43b5-9dd2-517fbb2a5457",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743dc41e-94dc-493f-9bcb-3d883ace5597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ddcf07-5853-41b9-986b-6b3c466c7a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa594e0-7909-4b5b-be92-042b09bf92c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbbe52f-7803-41c2-be62-81bb323f163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35ed7ea-df72-4855-935e-1eba78891e5f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc2c322-d1c9-401f-a2a3-5540f540ccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0572b4-57ee-4e09-b6f4-f71e59ae702f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f78fd79-cc68-462c-8b78-7cf83a53cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd2c22-478c-4711-8347-1c2a1542e621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfdd98b-5634-42c1-9457-df7c958064c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70454d0-12a1-4647-8f8a-c2893d576879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6312c13-8e78-46ba-a82c-931ed5c19b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a279f3-f971-499c-b85d-785603b4ed54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff99ebed-928f-47f6-88ba-c4465893f8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ce8698-d631-4f3d-baef-7fdcd94ba6f5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a973428-a792-4f1c-b331-36e602b81c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb0d24d-e4b9-4ed4-9e2f-c23d85f5fb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511ec7f8-6413-4693-82b2-3e9a94e157b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0c23c7-dad0-4e9f-b1a9-402eb51c0bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557cd8b5-4178-48f1-9ce2-1f50aa8773ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e4afb6-2216-4c41-857c-2f9c08679a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64954a5c-5c28-4b8f-ba00-67821b7562d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe5c27-2e4d-4483-8458-ac38b175365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e64baa-194e-4528-95b0-48a8e5e09681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2e07ea-6f4d-48ab-9c7c-037561ac88b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5c6151-e13c-4994-a84b-331fe16a1656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055d80b8-3b4b-4306-9ebc-6622fc015297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de3e028-7f8e-447c-ab6e-0c45db8d192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "635ea7a5-3a20-481b-8fa6-adbfda4c0c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fbda2f-e720-49b6-b23e-436f18996343",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd6b319-f2d2-49a5-a6bf-c0ec2303177c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb2ad04-d1fd-4e21-84ad-e8130adccd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88585003-e445-42b5-bcce-aed877075adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7f0d89-16d7-4166-927a-30a3459100d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a7cc74-c55d-47c5-9f04-00fcc1dea7f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fbf349-2c4e-4b77-a935-ce8b228d0e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3780075c-3df4-4bf7-895f-c6522bc8650b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c32dd5-dbaa-495f-a38d-71e01dd6aae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "852ff8cc-52f0-4e8d-bad7-ab14ebdaa7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0378135a-519a-4fc7-8d78-df539a4c7e2c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b187967c-7197-4763-a556-5405d5c97dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50af5f87-98f7-4604-a7df-536bbe621ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e6c422-8729-4634-aa3c-8395bfbeb9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff59b7a-0367-4943-a5bf-d07bc94f67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29578c0-4a5b-4aab-b3d3-f58617dae95b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d898f04c-15da-4518-a129-866371cf87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47beb945-295a-413d-9e90-1e2562c841de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b3cf3a-1a7f-4d6a-a4bc-c2781bef15c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c63190-2ef8-4662-a7a2-aff03add1f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81083c0f-b075-450a-b448-06208f8b9e39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd7ed38-be5c-4941-9cf7-1ecdacd9d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f00ebb1-819c-494f-ad4f-b686ee2498cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b514a13-0003-4291-87d0-34bbf8cbc3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c31458-0a60-4891-8a4d-9f5d525c7457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f4b919-9419-4b38-bddf-e85258e84e9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944c3043-98de-418f-be37-e976bb23a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2b065b-93f8-425e-a873-f5b6b5b5b30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdf57ef-0c03-4139-a94a-a6d3797893ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9e7361-69d4-467a-bc6f-fe442dd29654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e734ccd-47c6-40d8-b208-e725f28b1b34",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809e6c68-d28e-485c-91f9-0498f46e20d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa624c68-afd4-4416-a6a2-d06538f43994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76150eae-5ac5-4a79-b9a8-6575355ad79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57293104-b5bf-43ef-a9b4-2f77fc132947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c656304-f0d1-4c5d-91ce-af06f41079a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0a08ab-1059-464d-a2bc-793e406d6006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f006df81-69ea-41cc-84d7-cd83c7a70312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7090df89-3834-4bf3-bde2-fde1a311ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2460e99d-d813-4732-b0f2-e07310163ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3fd3a3-2f85-4845-bb17-ea85c2b3bc53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3776a3a-875d-4c98-a78b-f5e90aba6c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1753d701-4cfd-4e58-8a8f-050f8ed7d777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede74a65-b2f9-4aec-90ea-c08e57066420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0110f5-6be0-4742-8d89-3c3300b1711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5260b14f-4134-4041-8d70-befc9b0f2f92",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fafec0a-822e-4ae6-aa0b-9bfa96e5291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0366f30a-17f5-49c5-a274-7c72f2197f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f853fec-674d-4799-a8ed-3f36e20642a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d262993-6e43-4c4e-9c89-4984577066fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ff2a7f-4231-42c9-8138-d7568a185934",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5715f6-e53c-442f-9129-c709ff71329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cefb25-64b1-437e-a332-6bc94928b226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd5d752-41bf-4f0f-b82f-20045dff1729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d684e8-224b-41dc-a811-7a1eda123c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f3356-3d2f-48e5-8dac-6d2b834762a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10acea5b-cc62-4c03-ac7c-96a06989a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb16af1-b43b-4f2e-800d-ba211cd9048a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914c0cdb-40db-401b-8d04-8513eca00e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf695fd-3bbe-4dee-846c-43066fe67ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a7170-cd7a-40a5-adf3-5f268cd74d82",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998c98ff-a3ce-45a6-bb8b-3ed6afa61fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c84c984-2495-4863-b503-3b9ae9cae746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a94bf1-a3cf-4cec-810f-faea63d411c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13cbe56-7659-4833-a4a1-8f64db8fe482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82132d43-a11f-4185-a00c-ea5d0b971ca4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0954e412-c60d-4d11-8b7f-d123110a768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f184c65f-4e75-42f7-86f3-2bf15e684f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1676cc1-2d02-4565-9d73-9e76fd22dab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2090d6d8-e4b4-4ac9-b735-1c703aab9e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172c7954-9646-4637-a94d-631c86c54b87",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1df8b7-586a-44f8-9845-4c1a5bbf131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a88ef9-0064-44e1-9a6d-bb8f23271f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2431725-85d0-4224-8e64-e5db7bbd01b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "770b5972-d855-4ae3-8ec8-f77b17e24115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12c2a13-3bf3-4de2-9048-f1511068307b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b66b72e-1830-493f-8ddd-78f62a907ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c531b433-8d67-47c8-ac5f-46c8e9bd0a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be04d757-6a56-4072-a41f-48808af7a09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c09ab1-90dc-4669-9e28-571485fb86d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5273f6ee-cdf5-4b05-9e1d-18a3515f214c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad7dbe86-a548-4f63-93a7-f2b7667899e9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea92441e-3a7d-4206-838f-886249c8a774",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f09deeee-c51e-4a4c-b745-8e6b0dc165df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4665011c-9242-4dda-b87f-6c9440da4b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5674a9ee-07d9-4822-836a-5e0e131685f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6390caa6-fceb-4ade-b4b1-c9783583a761",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec2e8c3-841d-4c09-9869-c737ec11df82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1bb318-ef86-4f14-aa75-cc51584740b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b8ae0a-292a-45cb-a9e4-e92aac8f60a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d9bb56f-3901-4c50-b042-a7a97de92fe4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df6457d7-04fb-47a3-ac00-337724fe6178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c3f00a0-634b-43a6-ac6a-adf354ed9318"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a161e587-5492-42d8-bda6-050b9487a235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99654dd9-02c6-4497-99c3-47d57c03d8cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfdb098e-d5ef-4bfe-94d1-21d29fd92faa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "499abb47-13fe-4a40-bf40-3351377ffd76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afab0720-91a0-4207-8c72-ef207eaffd18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13ee030c-3be6-46cd-88bb-2851a1e11ffb"
            }
          }
        ]
      },
      {
        "id": "17fee61d-b9db-4bc7-af32-a26944912ce7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ff3f1e95-a75d-4d7e-9597-819cebc1d592",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c6946b6-b5e6-495e-9651-ba3f93651d94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db4e327a-47da-4086-bfa8-405279b9c1cd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21613340-6030-42ad-9a5f-d45714d0d842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20acd5d0-6d6d-4887-a264-9750f542a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2e0707-a319-4f39-bee1-c21a0746fdcb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5445d-3a11-4f41-9dc5-5c0628527d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb45b12-a3d5-49ee-ad85-95ecd649c243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda1e7fc-9d0a-4d8c-8aa0-a5c1fd739a27",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee9ccd8-4134-4dc8-a418-50f00c4b6f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50b53ff-3684-46fa-a308-1962355acb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecde845-baca-4406-a7c4-a978ef6efec8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458bf215-11e9-4ef1-961f-c04330ff16cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198ef6f7-af71-4c42-846a-2d667061646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18719b68-c660-48cb-978e-6c27dfaec36f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bba392-0bac-4d6f-a6ee-3e2cbb37a0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1f28eb-f6ba-44e4-a870-fa52dbf01992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b124e-d63d-4ffd-be77-8621551118ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e88f50a-8b3f-4e6a-945f-bf29514321e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f1daa4-19f9-46c9-a4ef-605245cf89ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085f0950-6f6f-439e-b0b1-ff45f4d4689c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2801afc-099b-42c6-a696-df3449b27d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e6af9-e198-4b21-a99f-4f42ad07f116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422b10ec-9b0b-4fa0-99ba-5a196d9571da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b76d318-952e-4244-9c77-4e95a20addbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cbca67-18e4-4c87-be24-b2ee1172a45a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb957db-32e9-48f8-bdda-549156a3f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5355b82c-b82c-4f2e-ac7e-4e297265b93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b09197-d270-4924-adad-fdc20be9e2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edea843-ea54-4059-9d82-1ec58a08a4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c265ee3-fc94-4f70-96f5-53b22856517c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde392e-bc98-411f-bcc5-131a321015c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aaead45-c3a4-4e0e-8249-cb5664b9a127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9c80b5-fb45-4fee-b9f6-704a5b4635c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0e7903-e35f-40e3-b500-a4a00f6dabcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf14f1-f51f-4e8a-8214-166b43549231",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24176f4f-6d4e-42a0-9d55-95cf11b16e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce671ed-9767-4188-ba97-f2ca7df0c55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6881e4e1-a7d3-4f2c-a08e-53f8f5914650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95195de1-0e6d-462d-9d5e-bf093a5cda56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef76dd-5e70-4f29-a08b-e02621fb37db",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1a9598-d272-41c8-ba84-123b41dbcb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc66cfd-fdd4-4ee9-b062-3925edc4f518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dbdc59-5a34-4671-8809-a6589fb05b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58e0414-7053-4770-998b-20589bc6af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab04f5b-1cfb-4ee1-8524-df924e82bed8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03ad5ef-e90f-44c9-97ae-923988fbd23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f8549a-670f-41ae-b831-8f82458622d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd9b24-981b-4ea1-981c-d54c6eddbcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ceadde-a3df-4a95-b526-086533e6a468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7a3b6-cabf-4c9a-8b03-7f34992efc42",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645e7151-c9e5-4858-ace3-d94e98a46a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eea0841-bce4-4ec1-b556-392696c054ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a4dd75-4a06-4687-9cec-c263c7bfab3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dde9c9c-ef64-47c1-ac57-6c954e523f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a344ec-378a-49e9-ab45-05e2ca3ccce4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5556df5-fec2-4a42-81a9-fe8a585cca39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80903fac-2987-4d2a-b0b2-b4bb8610ac99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfd7511-e9e9-4d1c-b56e-91a640b19d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d497c6-d543-471a-afc8-6b5ee7221b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05d5cbc-41c7-41bf-98fb-a2fb77474fe3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f435a964-a9f9-4c68-96f1-01169b305327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bf9477-8e2a-4d1b-b5af-53be53ee83a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310d6174-524d-4a61-99fc-0dcfee3b3f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d1d09b-881b-43d6-98ff-3df159d6c690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafa7765-df16-41f1-91be-587e962ff194",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7d64c7-48a6-41a6-9e81-619f24c5ab01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78382830-4a2c-41c7-acc8-25af2efe9dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a418486d-7cc8-4ade-a48d-01d448951aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faae5902-ab5b-459c-b3dd-b8917f9d6eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b088a075-b858-4aae-baf6-8b72220d3c38",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc089056-e7c3-4811-a555-d80d415bc24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07f883b-3598-4fe6-9b96-938bff659739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1062007-365e-4974-bdc9-ef3b9286ac86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11c41be-0a90-4b24-b7b9-47912786e60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1614ef-5b03-4753-919b-e67da28ef00f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf88a5d-1792-4ce6-8dcb-8cebb740a867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff8ddd5-793e-4a68-b79b-b0926f99c481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20835ba2-e1ac-4cb8-88ec-abdf6f962ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fb3994-cc04-44a7-b2b3-2787c31e76e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9be3bc-160d-4c99-a5fd-593a8547304f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dacb5c-2171-4d81-81be-749f5c3848ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0391a2eb-7142-4cee-9d81-7afd179b4bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaeb575-3c4c-421f-92e6-f3e76c19f387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b25b77-6eba-4b95-ba00-90a62ca5ce66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aa20ff-de29-480f-8262-59d6c7cb7b59",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3138e99-0ed0-4ab3-98da-6735c458f6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e808acd4-e886-4b41-9578-91eaf022e8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231012e0-5aa4-4ca0-88f5-c7740ffb257a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8143fe2-abef-4de7-adb6-13411e4c5485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ecefbb-d2ba-481c-85e8-7f3aab16818e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5114de-0395-4760-a5d5-42737b701191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69752b4c-d4c3-4999-9db5-bcec771d4271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8df832-bae2-4109-a0b1-e975af14e0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96857862-42a8-45ab-a678-5551c85651ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987aad3-4f2e-41d3-b754-13a61369dcf0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e848e5-3914-42b0-a3f0-1dd4231187f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a020b3-0b1a-425b-950c-03372b243166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84de2a32-568b-41f5-b930-9f37385d0f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1459609e-1a08-4d0a-b591-0e1aa86053af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4ee5f7-d129-4104-b3a4-90a534c827bd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f85ed69-aa6b-4804-9646-da12e0f7557a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11cb73f-e115-4b7f-9e0b-294315a14b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fdf956-fdfd-4069-a0aa-333cc4533e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e71c67-9af6-47e2-933e-dd724d51fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa08a9ef-4e96-41f4-a7f4-8582b87b86f8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5235adf3-6d91-47fc-a5b6-e5e1462a964d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394001e2-f694-45cc-8aa9-a8b462a6a1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a938b5-b2c8-43db-84c1-0858f05101f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5799c729-6e71-4af4-9a95-1ce01326fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d1a0a-40bf-498a-81f3-a4494ff7f5d7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb99eb-7539-4153-bae5-4703d6750e4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb72ec9c-7538-493d-9a5d-09860c7cf04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf27c0-e737-42af-982a-33a8432d8c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62de9c28-6804-40b0-8fd0-6400d8cbb07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127bdf82-d398-4754-80fd-484785d538c7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a492a0-d05f-4f4f-8e26-ff62064453b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b290e3b-8187-4188-9b85-3651eb48c614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bb3e84-6966-4c66-ae2c-4b6f9de1d1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b841f6f-b26c-4e21-92cb-3be7dd8c5519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98855536-0a9c-461e-afc0-9446e9f94c08",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e194067-7c7f-40f5-bfc2-dc4150b1b104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbf0a85-55ec-49d0-b05a-ad607d1c5444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc630782-8d84-4c33-967f-a06b2194f02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b70999-2787-4ee0-9c9f-a30195a653bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c98c03-9c00-4d1a-993f-f12ed92809e2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a208507-8375-45b2-bfb5-99ea2a9e04b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e2f63f-f85f-4c9f-9609-4eed5c215a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71e200e-2899-4275-8f94-f11927ddbcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f980ac5b-7dd6-4020-bed5-ec021fb8d0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7488dddf-362b-44f5-96bb-5a6ee3f20238",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b1a7a7-bf31-4f48-a8d1-ad042adab740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d380500e-0dd0-4106-98b8-3732c8a8fabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd8c960-224b-4b6f-b788-daff0c389664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee46a26b-c150-4e57-b3b3-403a93346480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f42bf-cfec-4326-98b5-50b6a7ef22a0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c352da18-4adc-4248-b140-7e6a84da259e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a841d9c-09a1-4545-9ccb-4994855a1f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f9fddd-8795-4fd2-a953-e650fee13922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe1f075-3094-45c6-9519-6b0915e923ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95df0284-9bac-4487-b834-709fc9229e71",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b1293-8a43-408d-8e14-6af5da450d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c9a40e-1f84-4d0f-9347-00971786abc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a6a41-ca99-49fe-9066-bf29c72782fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c032ea55-c23f-4af5-939b-a176d8805b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6eca09-e360-49f3-8f4a-e652153d8a09",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cd7dc6-84f4-4e7c-8528-3127a7fd5391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b413ff-aed4-4883-8dc9-2cece7dddff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2904e11-4f3c-457b-a2d4-fb648dd9d662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225c7117-515d-4151-9bfc-e86a646e0b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450f6fd5-2b14-4f56-82c0-9e2d6d4a47e4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57927f26-3ccb-4ac8-a876-4693e9e62282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d372e900-7f77-47ab-af43-911ccc7b0328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c57294-1fd4-4d6e-9d3c-0a9760340013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693c924f-d5bc-4e72-a5da-4b6be4ed5057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1e802c-89db-4511-8206-02de2578cf55",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d34625a-643d-4bd8-9115-0abaf97b169b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945f2cdd-928e-4169-adec-3808bdf97a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b625838-55c6-4f94-a152-b78c2ac433e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd76ebb-ac37-49d8-b67f-a4acfa8700aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120ae63-779a-4f79-a1d3-a2f39d6d4d6b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a71722-73c0-45b3-9861-18908fcd5ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c187eac9-7d11-4869-a7d6-d966cd6bbac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76ba3ec-1d06-4257-a49c-0e613c511bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef67b25-b30f-4ec5-a712-da817a3706ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0c5a1-e6fc-4bd6-8a85-a8f5e8b48146",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157acca2-0355-4980-9dd7-e8cd57e42f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7057699d-a4af-47af-bc8c-4420bb5e096a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2776f9-e17f-44c9-920e-7c95a8f10a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e821c007-d69e-4976-8283-c0f6a8e391ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432a73c4-426b-4f70-9623-934d943804db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca2098-e49d-4b6a-95b5-c0fbf6dc96f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ae9056-5f57-431d-960f-4473f8185540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e678800-5a38-4160-b51b-171eda65bf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3ae93f-d02c-4188-bf01-5cca1edec8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be70bbf-f7d4-4915-ba32-46655ee4462f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975f35e3-5012-4c3c-9cb5-8328a24d3bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39a991b-2781-4540-a1fd-e98634a6ebda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e27ae01-d79a-46e8-b3e6-91af935c5f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee8158e-ddb1-4afa-9596-700a4c103169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5288c589-4487-4f12-89ac-3ecba431037e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4457f0-b8c5-4b68-9269-be9b2c9d9fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd22673-8bb2-407d-aa5f-1938bb756198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5568ad-2deb-4ba2-9e92-dcf344faa66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2840fd-2f72-45de-bd1d-81b0fd019446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe2baec-ff6d-4d78-9692-d22db1ba7618",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b750ceb7-3d91-448f-90b1-2906dee3723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1148f2d8-b372-46d6-b79d-d515c4970933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7681e274-e6b1-45b3-abaf-8d786665092b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48f51a9-d0ef-4cf9-a55f-b5bfeb6b1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d5521a-0289-4780-b27a-969fba941655",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ee3d3e-0578-4d80-b842-35e4f95468df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18fee81-f61c-4c64-b425-835fa793a275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cdeca8-109c-4549-8431-ddcf0b6207b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e8ab86-252d-4329-b380-76c4db4d6d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fcfaaf-87a3-49b3-8921-c844bce6451d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6589240-f4c5-4b79-aa1b-15804aefdcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8265bf-148c-4c9c-8710-202892b393cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829feeac-3479-41db-a20c-a872f7f16e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0444060-58f3-4dc7-ac75-b2d2fe108ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aacb243-db3a-4c9b-b93e-4ff01ff4a299",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ee65f2-77fe-4bfe-8ddd-0fbef1ef1131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5efb555-6871-4b11-8765-4963d63b9ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bba9b72-d148-4cc2-9eca-0d532a032b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70e7e39-7316-4b30-b00d-318889e76f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eef8dfa-022a-4751-92f0-5bad8c2b7820",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d57f7e2-581e-4f99-97ca-3dfa4fa0a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3952e232-a6fd-41a3-95e9-cd2b4e213686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543dbe55-d4b6-4719-b45a-c26c95454077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8998c0a-e391-4680-8f2c-c04d701d0d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4139c6-df95-412d-8ba5-85d7620dc73b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537fd067-abb2-4e54-b511-973c66bda0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f62f66-e3cf-4ad1-8408-4e975912455e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7569c1-88fd-49b9-b554-5e38e6d8b619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a80f60-6189-48ae-82b2-77fb5e785c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdbd22a-2e7b-4c68-b9b0-80227545615a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad91f11-abec-45f9-a364-0689933a07ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0a6ef5-c809-4786-97eb-01fe64f4de49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cacf65-f49f-419e-9d63-dc414a4b94cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20fc60e-b7ab-4206-b887-8ac5c7f02924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69406912-5099-4e8c-9647-b411208d8233",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455af26e-93ce-4f51-b2c5-0df74d83590e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3737bfb8-8de7-47d9-8ad3-54d04aebeee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e4fbd4-1b4a-453c-82b4-7d3e867ec26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6883c684-4102-4f3a-97f7-3ec195ab2223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e3b53-2f93-4fac-b7ea-e4a71df68e5d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841125a3-8557-4a0c-bb5e-031908709316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65943493-10cc-4832-8eca-841a66c82fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eadcb5a-e049-47e8-a798-dcd8ad529e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e61b44d-8cb6-4d76-b1ae-c23db7217ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca85a38-e7f9-489e-82f4-3e7544dc191c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2f46ad-131d-4841-9d96-389e40ae5c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75d8484-e40a-42ac-af5c-f446e987ec16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cdb9ab-12d5-4b54-a7a6-57fd2fa4ac63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6117d261-fa1a-463e-b17d-4678d2f83ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0ef4a-e94d-4c5a-a032-a6c419c93786",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71f49c1-b144-4be3-a719-29dd3b50f4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d706dea-4a6d-4c48-9c3a-041bcf5cf7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e6742-63ee-48af-965b-e6d9131c2f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b9803d-4f51-4629-928e-e72cd17bbe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c055fd7-132b-4d18-91f7-8e92c8a632d9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea886c-29e5-453d-8f6b-e7836977a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3654ca-60bd-4329-80e9-2653b2e7763e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571b6607-1e4b-4dae-9356-40c5f2ef98a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081bbfa6-37ea-42fa-8e47-563f03cb22ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facb7a3c-6051-48b8-bc0a-14e368377653",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47818b31-1a5e-4cb7-a1b4-dd48873f5c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317f47c7-f475-47cf-9abe-6cd17b60b152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a348777-5b67-4675-b42c-477c8ed9d606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c021a063-a916-4aae-bac5-8778ad19d2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f172e15a-229d-41ee-acda-97f351981fef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3cbe6b-3177-43e8-a6ec-6d2f3271ea2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ea478b-f2cb-4942-ba78-6835f5c9953c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0a0d6e-9b9c-4448-8777-c0f8267df625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cea5e2-edf8-409f-aa5f-ecedf198708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5cafc6-5d49-4623-9694-d417852acc76",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a1b994-6a5e-40d2-a40c-7c104cb8f568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cb822a-b2f5-4bfb-80f6-6e8d892c5d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea144081-6fe0-4952-8a31-0da9af0963ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df22cc1a-0785-4851-88b1-14401f04682f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b337aeb-809b-42cf-b5ba-998bb246734b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a11db07-2992-4311-82b4-e4e177193af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a14d231-3f74-488d-95d0-cdbd2d3b075d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b18ec-52f6-4c45-bc01-c274b5bd91ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e69132-0943-47f6-8fd0-4450a4f19b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921a95c-9760-43a3-bde3-a9a335726fbe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e7aa3-4422-4a71-b1ba-4740d83562ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c29745c-c6c2-463d-b702-a1cc8b1f7a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244e7d9f-9ab9-4f76-97c7-838d62d84c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2840aa79-ab3d-46c3-a798-cfa2fe39f8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6dfef3-25b6-462b-a2fb-30f7e17b0af1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977a513-5140-4acd-a490-75e0a603f4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db008f21-dd47-4980-9c9e-ae636eb211f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424d4e6a-8d7e-44f4-8482-51001ef4325b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f36a33-a7e1-457b-b115-832a36c029cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5f5f46-ab22-4b78-b8e8-e62519c034aa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d967b3a-60d7-41cd-b70b-480cb434f7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a19c7c6-bdca-4c24-bc21-c258e091aa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78febe79-6324-45c3-a79c-2f9ca9bb0f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac9c4d2-fadc-4a2f-b316-87e8de238eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9a2da5-c047-4aa2-8ddf-f4746282432d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d6a8f8-ca84-4597-ba07-6a9f536b9dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdd0523-227c-4706-8c7b-792d90a0d1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b79f18-10e1-4750-98a8-e6982a1683f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595317ec-0b24-4ce1-8717-146b2c7f6622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17919ec0-eca0-402a-850a-d1b9f2a5c0cb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d2e7bf-5eda-4429-b2c9-da77b6cfff3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee3b251-5163-4593-9324-3e171fac4f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7faf6e-5f91-45e1-869c-149a30dc16dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678683e7-64e1-4cc7-968c-ed935de85e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe018949-ea2a-4a6d-b718-9e8f3d45728b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d326beea-5ff5-4dd4-aac7-1e64d5793193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360956cb-d8d4-4277-976c-769ee5c4a908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c9809c-d5d7-4842-a5d8-fabf41ce0b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91437639-72d0-4094-b5f5-c71a9f5db905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89182e61-392b-4e17-8d18-d6a0fa9cba69",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49437459-252c-48c4-830e-faebeecc3282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555279c1-1cbf-45e9-82ad-b5c46210e8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72680cc2-d15b-43ca-9054-051068b1a263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd1119e-882f-49d4-9ffb-e7c7d0bdca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168261dd-e025-4c4c-bb90-021963eaa8b3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a196c699-77c2-47bd-9a02-37411dd4a589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9e6307-ff20-44b3-9b4c-529615eb3f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a4d2a-08c7-4862-95b0-4a75c09917c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea13d5-60f9-4269-92ec-aecc8b84fe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232cb68c-7835-4bdd-9314-8e000421f677",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c92601-ebd9-479e-8e32-8032b6a8f806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc0c4cb-4197-4fa0-8d2a-414ad0f7af23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f03109-4ba6-45f5-b2c4-edd0a8eeef97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dd82b8-f362-4525-812b-67855611989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd95c66f-7521-4e91-8280-5968b0a8b6ef",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c110b67-fc1b-4233-bc63-24b386ab3754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226d57ea-9279-4ead-a1e7-8fd479fc39c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24c70d4-fcb9-4b86-9584-0571583754b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef0b46d-45eb-49f7-97ba-234212b99dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2899c05e-23d8-4277-9cff-a33038c59f0d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92f6103-f79f-4030-8aad-09a2031e769e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdba41fb-8cb2-4f7e-990f-21aa43cfd3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f71f2-7282-439e-88bb-b576e57e7497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d95bcbb-ae85-498e-a834-dedb3d77146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee0a0f5-fb82-494c-9e20-77ebc652f4b3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4adf8e-82ec-4086-b10c-d8e2ce914d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448cac86-53a3-4870-9afb-4324a99de14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7609db-1a45-4f9c-9a51-dc60f517eeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3204afd8-df04-467a-8df9-f492cee683db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772cde1b-744c-4c57-ac28-b05be1570815",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f6718-cb5f-4179-a99e-8306d7b142c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a52ef26-669f-4790-a0d0-ff6c7f93ac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa14607d-3b3b-4cad-bcc1-69b5b6e41fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f160f279-3a9e-47dc-bc1c-f9d9e055c1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16626e3d-fb5e-41f5-ac5f-9ff66b4d2b52",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbd9431-4dee-46f1-9476-fa8802cf3136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e371f6f8-247e-4b4d-8454-46685825d242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec9aff5-bbc7-4cc0-bf85-2b051145aaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54612f9-b4e5-4157-9664-c1d507cfbaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b0b971-e69c-429e-a96c-33cf35200f40",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e8e890-9479-4c1e-ad17-33ca25c7c0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02d55ea-a0b5-4458-844b-ac803ad4cb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7000e5f-4ade-437b-9af5-fad74cb2eb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6d2243-4467-4306-9249-51b4e7ff68be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9853c-e363-41d3-927b-5606935e527a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51680a59-c5e4-46b0-813c-914608c3e99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505abedd-d080-41a2-b840-8b221fbdfdfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e958779c-af9b-4c3f-982b-3579d8423ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e5128d-3bb3-4c66-a5b1-fd8ce40d5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66cff1d-5857-4827-bf16-bfd323230e5d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5491f74-0a1c-45ba-b4bb-0f003de7cc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6579e6-7a99-4511-ac1d-a6d18f9a8882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d35989d-a941-4282-9cbd-fee77a660e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcb3764-3b59-428c-aab8-2728cbf6223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e465b0-497f-4440-82ba-d71dcfe11b14",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4460195-c21e-4bc8-b5a8-327f140fccd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683579a2-9d73-4b24-88fd-298d990ea4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21afb9d3-b9cb-4f6c-8cde-61b3075e947d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c5e091-0082-4b3e-b9d6-a7a1769ac928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11da0c9b-8a6f-46a3-8588-f9b419145ebf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ba7fdf-e8e1-4a63-8f47-5903ce00506f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e01cb95-e347-475c-a2cf-c18327538d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e527bb1-0739-4ed3-9612-c385121247f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bdb6ab-2154-4393-912f-9e4cdabae852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703dd731-f34b-4e02-92ab-9f2d5b53e58a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1b9b44-36f9-41c5-b1eb-49dce5de15fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c066bd3-a5c9-4f1b-a08b-1c00c76c1f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5722aebf-64ab-465c-80d8-8c0395e82272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc729be7-0bc1-40c7-b21f-87a7f74d0e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7f8b66-e144-4604-b58f-80f1c0e11823",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0d4ab6-4be6-437c-a4a3-edd9e6e873f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3158d38-b8ea-4234-8aa7-7f0a7d047c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29757ca8-c34c-4e0b-9677-e8b454de8630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15cfb62-bd50-4108-adf4-01442568e8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249c9c9-9685-4cbb-9086-45a7ed542718",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877b25d5-a21c-4d9a-b2a0-f2cfa44b025e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4c50ff-8d5d-4759-99c5-13d3541479e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0918316b-6b7e-4c05-80b6-0d17b223a518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fcf7db-7ae5-4b1e-9afd-9b9d11e2193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd0bba6-7f86-4bfc-8c7b-e9c88bd9133b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ab931-3119-40b2-87ed-321ecff15c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168450ac-9b54-4d86-82a2-0ed484b8fb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c881a69-b1d2-443a-88a4-a3af521f388b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d8a732-3777-4930-8726-e1f08d23afde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c117acf-764a-4b42-937e-460194493efa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d5b23-0ba0-444f-82af-af5ab687a56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be7f3fb-9780-4aab-afdd-0600384eafd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0196663e-5688-4e82-b497-6cae0e90f658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bad469-4907-4e33-8dc3-9ff0ba723ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cfef9a-4f6f-448b-bc82-816e74f4cd75",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd8bf7-fe93-486d-8325-02eda43a4831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8538e284-08ea-465b-91c1-6982f1c5b3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e72783-e7b3-4873-8b92-63fc914c3421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d311a96-4959-4188-8f7a-923011e42277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae70517-afd3-4932-8fba-cad66fd5c238",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d172df-1b45-4414-9a51-b5da76c120fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2d923a-aa07-4531-8313-52ca27adb4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b8084-13d0-4dc8-9e6e-462acbee6009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecdfb20-5b4c-44dc-918f-cf4ab94849ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7357163-54e6-452f-b7ed-c0bd5ab740c3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb72bf-68d0-46fe-abf3-923623ce5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9f7a53-2e15-40d1-aff8-9d429ca0d1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff33a4fe-b6e3-487f-8574-a2c15da54e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9eec07-ae28-4b1a-a876-6c6e5d3e76a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78d90a4-7c68-4077-a3ea-7425f4a4648f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c056caa6-e472-40d2-9700-68b001bc1954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc147e2-b1df-43e5-9989-943cd3db5e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759e7059-ef29-4a12-8ab4-7b307cef747f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ad5135-63be-434b-994c-669302efc61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8080f78-fc5a-40d5-b6b9-8b3898230d05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c7dc1b-13ae-46d6-9a0c-534aba5e9931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4c0a73-f0a1-4d07-8f49-3242bd343f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb301e8-c314-497a-b165-ff878b7c8b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030b7c5b-2188-4959-ae7a-6184386f0a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f389e8-d660-4ba0-ba2b-8c6a458ea9ed",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10793890-1ab1-440e-8c04-a7eecbd4bec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381dcf49-b676-4946-8011-19a3d7706bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f53c52-f997-4814-ac7a-2e2a09ddc04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef08bd3-b16b-4df0-b263-c7488b827f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0737ba50-80fd-4a82-85e2-ae4c75d95f2a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d981c10-d51f-414e-8135-8cb1831bd2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bbf761-92c0-4385-a40f-fab50cc28d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf880eb3-0dce-4ca2-8225-61dd4e988b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61b0456-6d87-4368-b57a-4a146b73d445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355460e2-e9f8-4cd5-b1ad-09e459e76124",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b63485-e255-4deb-a4b6-8a485d0ffaef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89ea248-9dae-4410-9674-1a03ee9de2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad6b5f-c64c-4cc4-9396-15f8e640942a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0fc776-93ec-4dc5-ac0d-c8b7b487cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d437cc04-7366-4eea-8eb5-a7d36bcf6ee6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed802268-5c4f-405e-8049-6f4f283de920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6249f76c-692d-458f-b3be-43849b3053c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623c038b-364f-4fa4-9d7f-9c077c9a50ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d11cd84-2555-4241-8784-aded68e2ece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b369136b-d425-4c3f-8a85-631a06090567",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b0dc0b-ab44-46a0-9772-472b35eabab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a779070f-595b-4fcb-943e-e2dba02f568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6d25f-2873-4421-9609-fe266ebefff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd159bf-03ab-450a-8a27-dd45dd1705ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d387ea0d-e9e9-4dad-86e8-ebf96079f012",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d6994b-d7a9-4cd9-80ff-e645ff61f631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280fa286-e65a-4d41-bffd-2abcccf6ad9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9212d35a-7206-43de-bf1a-d0e3e2af8260",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726b43d0-219c-42a5-9ed7-42c09f145f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e65f26-2714-4dd3-98a7-307260799e03",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d25207-bfb3-4297-8641-4668ce9ba26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc87c5f-ea6e-44a6-8173-b7ac0cbfcac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf8e27b-abfd-450e-8582-efa722b58a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b85d48-8747-4201-a0a8-678143fc5299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe4a335-25b9-4a05-be13-e58c7cf01e8e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1956366-57aa-4af7-b52d-cb84f175f732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84572ab-6bdb-470b-ab6f-e6517cf97bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22972950-9ea8-4f87-8289-11307bcad651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25edf42f-ecf8-4973-a00e-2586cbbdf3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547f0d1-a13c-4989-bfe4-42622078c21c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8dda3d-ff9b-4832-b584-9ec07621038b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf2de6d-788a-4c21-a463-f5896652a56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f015df-20d4-4924-9eaf-6798bff634d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310df516-ba11-4a03-9bb8-26afdf93659d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc45b6ed-b114-47eb-9315-a4ce80937834",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308d9aa0-13da-488c-9967-be7d60291b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a7c66d-775c-49a9-8093-3e38e86ef694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f71c0-b81e-428a-9b97-250f9a34ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab189db-2ef4-44b9-86b1-00ba51956978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c761a38-8f6f-485c-94d9-b5bcec2bbb9e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1002fb09-8019-4ffc-94ff-6e0c4766d628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa16ade-c1aa-46d9-ae57-7784b64c8652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f38d042-6871-4900-9ca2-1007df18d15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6aeca1-2fad-41be-9da1-942cd309607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accf2daf-96c1-47b5-b43c-d2ee299913ac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cec726-09b9-4684-85a2-b48b143bf5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a66321d-5af8-453c-b90e-86718cdf6aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc91f74-f09c-48ff-a143-f1c5646ceba8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0232079a-3b04-4640-a0c8-6fa647a18b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0201128b-4b75-420a-8efc-11210c8fd448",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f416ae72-1add-418f-aafc-80024ec6cf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c7cfcf-51bc-41f9-9760-3dd01ffad454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87773b27-f3a3-4a17-b1d9-f121c2216d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e804e0-54f3-4943-afbc-448f73af1b40"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a717d0c-17c3-4338-9e57-c702d00fb8a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c299c517-a0dc-4e7a-9d72-d58420d90604"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c211c63-dd29-4add-b57a-b14bf609417a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ab5b668-0522-404f-8d5f-e27a6b3de81c"
                    }
                  }
                ]
              },
              {
                "id": "9aff0055-858d-4495-910e-c8f9320c5d2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edb506b3-46e6-493e-bd52-798cee1b4f11",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2562fb9-064a-4f7a-9dbc-27e22113171e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "73bb967a-bb2f-4645-9855-b91dd6952f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe5d4f-2ee7-4a57-b9a3-546521b924b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9794617-7771-4b82-94f3-249a87ea4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9c10a0-0e10-47b5-b0b6-20a559fb946a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8ff6c4-50f6-4b14-b2aa-f73b4741e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "599afd30-7d45-42a7-b2db-1cd5822be200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdd25a9-3baf-4172-ba1d-0bbfa53d9747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9649787e-a805-4e13-9d03-b981d5b221bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a53392e-d7c6-4d68-aedd-3cc0d67c294c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4bd5f6e-d026-48cd-ad8f-d4aaa59247e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e876caa6-ce95-497a-845c-109bce541363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7c60dd0-8d3f-4d0b-85dd-be36202ce662"
                    }
                  }
                ]
              },
              {
                "id": "63bf2772-3bd7-4f9b-a0d0-cbf1b5159376",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d611ebac-611c-4112-a488-47f7a6ccb2c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cae260f-a936-450a-bc93-0867457270de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b39514d3-4fcd-4a0c-ae3b-4955f80f78ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef12c48-3bce-4090-9056-73ae5a297d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf5b442-9da3-4c3c-9fae-90dd9a931550"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a798400c-a040-4866-8377-6f76f3a549d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc98db51-4976-4119-b2a1-febf35fa960d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11773ac7-4216-412e-a2ce-6eaa53e77aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "849e2ddd-ed19-49ac-9db6-39a3668abadb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b4102a-dc9d-4adb-80da-5cdd0188af13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c72ccb5-1dfa-49ba-b7a6-a6c63b3a288c"
                    }
                  }
                ]
              },
              {
                "id": "ea5054d4-d5ab-4ba6-be69-d6d14fc77521",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db9a89e4-8635-48b8-9e3e-dea52b3cfbf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6bbfc6b8-fda9-401a-95cb-51e14787f369"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62bebc8-8ebd-4ff1-be2c-6e22985cc143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc661bb-877c-4419-8e76-15af68d65997"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97e16122-4fb1-4d62-97ca-52ad8476e845",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5c4bf8ef-ce7a-4049-afe7-f6763f940982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6620cbdd-5b9d-42e5-89bb-8f0cb50c104c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd2a40a2-79ad-410f-8380-64a9da1692cb"
            }
          }
        ]
      },
      {
        "id": "279806df-a775-4e4b-966e-b6a4c2001c40",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "17531852-764a-4743-814a-8804e553f7e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4da11819-c0de-4554-9a99-5367ac08557c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d052844-7c78-44f8-b818-e009c11f7473",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3786232-1b40-4575-9883-b58f4b88a761",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "898c2108-f7bc-424b-a4ed-1b8895f8a820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e9f9e0-99a8-4202-b691-1a5cc61132f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "558d8dfc-a31e-44b3-8a0f-da7df5baa465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51180be5-7e4b-4802-823c-d5bf923fe3df",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3782e68-4cab-4e9e-850f-6d9652388623",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ab9f104-5f40-47e8-856a-3d02b318215e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bd01dc-d47a-4bf5-a191-a8410fcd5529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daf277f4-8021-4e85-a40e-fae8d0886f60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "392c25ed-e4c6-4769-815a-a17dc31502e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f9d100a-89dc-4886-b194-7a0fbc87a010"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a022512-4230-475c-ba4b-898ef901e113",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3197f8b7-7b55-4f77-a9aa-5c1650de8589"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec6ab125-0ec2-4e43-a870-815d19401a72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f195f146-0e85-44f3-9a00-76504df6e849"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89d0fdc0-ac01-4274-95b3-4434bf41f6dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abf7c507-0700-4fe0-ae3a-4db38493f688"
            }
          }
        ]
      },
      {
        "id": "bcc97476-6c99-49fb-9c72-7775c7cf2c62",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e261f707-2161-4515-b860-05abee83e89c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7267592f-1cc5-4ddb-8333-59b504fbe856",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "220c1aaf-413d-4301-bff7-35f2f6796a92",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d63d4f-4d01-4ce1-a3ea-2f933663ba83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e1ddba-d435-4298-be60-5f0d6c17361a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0c3c7-b1e1-428c-8385-b6194f75cb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba6223fe-e9cd-4f84-b519-3c1b477868b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4837b4-3d8e-4242-9e26-0751ebc9a824",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a66895-6678-496b-b4cf-24f532c96271",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "18bf2804-ef75-4486-af6f-64231adfbc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d279d5-d4af-487a-83d5-79cef8529928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce008683-95ca-49aa-ba47-e26c54bb1ac8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6025924-61df-4885-a52e-c8bd7b4194c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf6c6e9-a529-4ab2-92d9-d09195ffa08e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4628acd2-4abb-4f91-8173-4c7ce9fabf90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c177f7f-daeb-4b91-be77-8e87e35e547c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58f0e367-9a9e-46d1-a914-5436e8e94db1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27682a56-1bed-4271-9127-a3b3cd0980c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bffc6453-e80a-4346-838f-0ecaa8ba9e06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "079dae36-8507-45ba-955a-081323fbe945"
            }
          }
        ]
      },
      {
        "id": "fe4cb41c-6b36-4d89-a631-d5076ebd6a73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ea7d9f31-4aa3-410f-8b5e-29456fd19c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "459f2cb2-3e14-41a0-b15a-ce22478330a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "819ae5eb-040c-48ce-8775-b300c7f5df5b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322e90bf-39a1-4f13-847c-2d2ddaa0bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8273dbd-0cc8-48f7-a1a1-ada4b71f5959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd2473-46da-4c31-98f4-6c1ebd1d7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1ffe8f5-c3a4-45ae-a545-641117b880dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9acb90f-6e9d-482c-a2c0-3954721e0272",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f346cfa8-7a66-4e6f-ad47-5387b466ee68",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a57586e2-d31f-4b63-a303-7647cf240115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e6b999-fdfe-4f05-b919-dd84ea064fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "393d43a2-d7cc-4351-a46f-0d6786d5addf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e26876-c720-4237-9ddd-b70e3213ef1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "077d4842-88b7-4c7f-a5d8-12784e0301d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ec4e216-6a9e-470e-88bc-f69cd511daaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2442e4ab-8008-48a4-87b3-1a6ffd25e83d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fe7dadd-c77d-4a2e-ba2a-f0bd52ccbfb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd52bb6f-3a0d-4ad4-a4fb-1b918cae17b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "871d27a5-b625-46f9-bc7f-6202a01c198f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abcc9f6e-348b-4e15-ad8f-752e7b22c36b"
            }
          }
        ]
      },
      {
        "id": "83ba9fef-dcdb-49e9-9a81-4514b9d0e2cc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b736a93-2931-4e65-9d8a-533f4a7eedc2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06b002fa-a482-4526-bec0-55a2315b20ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "824d31a9-5ae6-449a-be4e-07a408945094",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10560923-a978-4aa0-b8ac-21c05794b230",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93810c2f-31c9-4ded-be0f-ce0326b66de5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 43.32692307692308,
      "responseMin": 17,
      "responseMax": 560,
      "responseSd": 51.074425767262596,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679531934162,
      "completed": 1679531958143
    },
    "executions": [
      {
        "id": "90cd83de-d7ef-4673-a34a-5814cd532640",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "862edd5d-5654-4e42-84aa-d9a1d26ab512",
          "httpRequestId": "820f653a-f42b-47a3-9ce7-cda60ed03421"
        },
        "item": {
          "id": "90cd83de-d7ef-4673-a34a-5814cd532640",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "57c75ccd-f1c3-4e94-b51d-17201826522f",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "d3b6d129-ddd0-4dff-b6fc-d93047816fba",
        "cursor": {
          "ref": "c65ee114-e73e-49c3-89ad-e179923f430e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b8a205e7-64d2-4fd3-83f4-632780efcfd8"
        },
        "item": {
          "id": "d3b6d129-ddd0-4dff-b6fc-d93047816fba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d466c64a-5fd6-4c39-a6f9-0407d5cecc1d",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "f3861bbf-5b9e-4a51-ad37-35a12531cba8",
        "cursor": {
          "ref": "26d5f333-86b8-4759-be52-b26237028b9d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2a6c861a-0c48-4524-8134-96582d738dc7"
        },
        "item": {
          "id": "f3861bbf-5b9e-4a51-ad37-35a12531cba8",
          "name": "did_json"
        },
        "response": {
          "id": "54d783af-de43-4b4b-b9b0-19e6d2012afe",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74172a95-7ac2-467c-8075-95936770c6dc",
        "cursor": {
          "ref": "42e4210e-9c05-4d7c-9b8d-92da64f6fbce",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6dda8a1-928c-4e8d-9e91-7adb70dab184"
        },
        "item": {
          "id": "74172a95-7ac2-467c-8075-95936770c6dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1b15511-f7fa-4680-ae74-bbc47918e247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74172a95-7ac2-467c-8075-95936770c6dc",
        "cursor": {
          "ref": "42e4210e-9c05-4d7c-9b8d-92da64f6fbce",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6dda8a1-928c-4e8d-9e91-7adb70dab184"
        },
        "item": {
          "id": "74172a95-7ac2-467c-8075-95936770c6dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1b15511-f7fa-4680-ae74-bbc47918e247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a9d1fd-f6b8-44ca-a4d8-d19f26983e7d",
        "cursor": {
          "ref": "190eb5b4-37db-4361-a384-d96b3e9e9e07",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9915cb1b-92e2-4aab-94fb-b8909f8b8f4d"
        },
        "item": {
          "id": "19a9d1fd-f6b8-44ca-a4d8-d19f26983e7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8cce35ce-b5ce-40dc-a57d-a58a6856f9c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3278e2-c6f5-4521-bf88-324dcdd39620",
        "cursor": {
          "ref": "c371723f-541a-475d-af27-8227a5dbe627",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6369f884-7241-4e51-93f6-ca7cdaa8d695"
        },
        "item": {
          "id": "1e3278e2-c6f5-4521-bf88-324dcdd39620",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0f3cf509-b96a-4fd8-95c6-d190d99f04b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f842e7a-6e65-4bda-95dc-cbf954452778",
        "cursor": {
          "ref": "1fdfaef0-0417-4b3b-962c-e6aba81a5097",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b403482-8867-4d60-ad32-148d6d62422d"
        },
        "item": {
          "id": "7f842e7a-6e65-4bda-95dc-cbf954452778",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5e51a5e0-4f69-48d6-864b-32ad7000a45c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db21ad0-1992-41b6-8ade-804148b7d0c0",
        "cursor": {
          "ref": "3f36f994-0d37-4885-a456-e2af99ad14fa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1e8e7b28-d3f9-4507-8b5f-ee35992edf5e"
        },
        "item": {
          "id": "6db21ad0-1992-41b6-8ade-804148b7d0c0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "75da622d-99f6-4619-b546-8690274e8739",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db21ad0-1992-41b6-8ade-804148b7d0c0",
        "cursor": {
          "ref": "3f36f994-0d37-4885-a456-e2af99ad14fa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1e8e7b28-d3f9-4507-8b5f-ee35992edf5e"
        },
        "item": {
          "id": "6db21ad0-1992-41b6-8ade-804148b7d0c0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "75da622d-99f6-4619-b546-8690274e8739",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857ca30e-d1db-4a3f-847c-215a4026d4ad",
        "cursor": {
          "ref": "5be815e2-129d-4895-8cc5-b5c39010645e",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ead6d179-8b34-45fe-ab8f-eaee93313e36"
        },
        "item": {
          "id": "857ca30e-d1db-4a3f-847c-215a4026d4ad",
          "name": "identifiers"
        },
        "response": {
          "id": "bde69508-05e3-4f1d-9962-b765f54ea2f2",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3922bef-99b6-4c67-9bc6-ceed9dbfc811",
        "cursor": {
          "ref": "71327a9c-7c98-40f5-9209-ea00ba687cb2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8fcbaf66-ee00-416a-9ea6-c13705004084"
        },
        "item": {
          "id": "f3922bef-99b6-4c67-9bc6-ceed9dbfc811",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c7ae11cf-8cf6-4c58-af2f-f3d613925d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3922bef-99b6-4c67-9bc6-ceed9dbfc811",
        "cursor": {
          "ref": "71327a9c-7c98-40f5-9209-ea00ba687cb2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8fcbaf66-ee00-416a-9ea6-c13705004084"
        },
        "item": {
          "id": "f3922bef-99b6-4c67-9bc6-ceed9dbfc811",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c7ae11cf-8cf6-4c58-af2f-f3d613925d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae4248a-23d2-4c47-b590-94cf361bb905",
        "cursor": {
          "ref": "c3716d68-8c11-4b82-a075-feca0de54e84",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2099519b-eef4-4661-b3c8-68925d1481e3"
        },
        "item": {
          "id": "cae4248a-23d2-4c47-b590-94cf361bb905",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1aa29dee-ecbd-4fc1-be0f-7fa282747587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbb589f-eb02-4a3a-92b9-a2163e3c73f2",
        "cursor": {
          "ref": "e68abfc8-90c5-42cd-bdd9-769b0d3c950a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8cc79899-3b6a-4293-b0dd-53d2159647ed"
        },
        "item": {
          "id": "adbb589f-eb02-4a3a-92b9-a2163e3c73f2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "70373b68-19ed-4f63-8873-8f3520f8d91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a9639-1893-4217-8ffb-e5d717f57db1",
        "cursor": {
          "ref": "3f06e116-3deb-4238-9de4-6a6e0c32bfed",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "702be2d5-44f2-432e-954d-8193f6c2cc9a"
        },
        "item": {
          "id": "ad0a9639-1893-4217-8ffb-e5d717f57db1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bdab23e7-3264-414b-aaae-bc968d43d2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19523651-1f27-45eb-918a-5daf6a504a99",
        "cursor": {
          "ref": "2013ecbb-4b3f-480f-9a74-bad21dc07c6a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ddf345ca-c43c-4324-bdd2-3864e126f948"
        },
        "item": {
          "id": "19523651-1f27-45eb-918a-5daf6a504a99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1132e71-dc1e-4a5e-8659-341ccf093ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec692f-bff1-479f-baa5-db3da44001f2",
        "cursor": {
          "ref": "78b6ce2f-6943-4fb7-9966-6fb66f55d7d4",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "113c321e-2a44-46b9-821b-6aa359038a6d"
        },
        "item": {
          "id": "a6ec692f-bff1-479f-baa5-db3da44001f2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "91fb56e9-0100-4b6c-b6e7-f5b3cb7a7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceac3ca-30ff-47ba-b16c-f6a23402cd6e",
        "cursor": {
          "ref": "17162908-32cf-4bff-b5a3-d23cd2518708",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "55e6377e-9111-4642-90e2-6a8d04e8e4ce"
        },
        "item": {
          "id": "7ceac3ca-30ff-47ba-b16c-f6a23402cd6e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "effadf7d-192b-4512-9b74-11c9d68aae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a028c4de-b31c-4dbf-ad5f-d8535e7ee118",
        "cursor": {
          "ref": "38f60281-89f6-4b9b-aa69-e4a5cd8296f7",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cca30260-7004-408d-ab9e-131be9a470d3"
        },
        "item": {
          "id": "a028c4de-b31c-4dbf-ad5f-d8535e7ee118",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c2d28a1a-a5b7-4e6c-bbb5-b69ee7983e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5876cc94-9256-40a9-87f5-25ab5fc7cf5e",
        "cursor": {
          "ref": "7762822c-d15a-4502-b944-05ae2dd6f9ec",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5b501e02-4f3f-4c55-b62b-da122804c6f5"
        },
        "item": {
          "id": "5876cc94-9256-40a9-87f5-25ab5fc7cf5e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "99278d42-ceb5-41d7-a4a0-d3f20163f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b0064e-7e73-484e-a5bc-fb2a38fd2eb8",
        "cursor": {
          "ref": "0c228cbd-18a7-4df3-8263-3cb2d081f0b3",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9bf83315-2765-4e89-92ce-e556525385be"
        },
        "item": {
          "id": "20b0064e-7e73-484e-a5bc-fb2a38fd2eb8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fcf053db-3b1a-4d0a-8529-94db9d4e5dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5eda01-2592-4a40-b301-cbb5a7a8d861",
        "cursor": {
          "ref": "25518af7-57a3-49ea-8367-090ace72485b",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a36ab532-a479-4df9-96dd-4000fba49bd1"
        },
        "item": {
          "id": "ac5eda01-2592-4a40-b301-cbb5a7a8d861",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9635b8d0-925f-4662-b71a-52ae7519f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c4dc63-c0ea-4d24-997f-92351d494a89",
        "cursor": {
          "ref": "77ba8b56-7c3c-41cd-b599-9b7d6832f848",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fc0d8b86-0163-42ff-a46a-c53292cc18df"
        },
        "item": {
          "id": "c5c4dc63-c0ea-4d24-997f-92351d494a89",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "13bac4ff-e704-498e-ba1f-4a68f9e3e4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5274fcce-bfa6-4049-96ad-1ee59b2ff542",
        "cursor": {
          "ref": "fd28f25b-af58-4b1b-8337-0eca5f0df873",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17c48a61-1107-4eb5-befe-047edd1ae7fa"
        },
        "item": {
          "id": "5274fcce-bfa6-4049-96ad-1ee59b2ff542",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9f6bf13a-4d3b-4efd-aaff-32edc85c4ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ede07-e080-4171-b7ea-bd52f8b633be",
        "cursor": {
          "ref": "c6983e81-d69d-4644-9da3-fc4bf6d34650",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "28a68154-0e72-48e8-b42a-65b3dfffe5f4"
        },
        "item": {
          "id": "765ede07-e080-4171-b7ea-bd52f8b633be",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70da0bf2-4bfb-4aa0-8ec5-f921e90575e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fa0947-c7b4-46bd-813f-965422631534",
        "cursor": {
          "ref": "1edd9743-c246-47f7-8e38-cbc1e586d007",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19ac7e48-334d-42c4-a083-3f4e56658c00"
        },
        "item": {
          "id": "42fa0947-c7b4-46bd-813f-965422631534",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "74f0b138-65ff-43a2-af93-229464c21129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8371bcb0-1d7b-4d05-84a9-c1d178788287",
        "cursor": {
          "ref": "9de32f87-f8df-4d8f-aed0-f36a7377999b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e7b3e4fa-4127-4f5d-90b9-e05966e73b8f"
        },
        "item": {
          "id": "8371bcb0-1d7b-4d05-84a9-c1d178788287",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "29516d9e-a19d-45cc-a751-14a834805d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0efc9b4-3aea-4b83-8361-95b266a96c36",
        "cursor": {
          "ref": "4cfc3595-5ccf-4bc1-bc07-1ef7c988bee4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3774920f-bd61-4f9b-8a95-4a5a7e9745a3"
        },
        "item": {
          "id": "c0efc9b4-3aea-4b83-8361-95b266a96c36",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cd67e70d-28ff-457b-9692-c600aaf79462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d97a55-2e4e-4e33-ad80-1384ec71d4e9",
        "cursor": {
          "ref": "a39af685-4812-479e-b717-eaebf8cce62a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c74e345-bedd-43fc-ba2f-111847e0c230"
        },
        "item": {
          "id": "d4d97a55-2e4e-4e33-ad80-1384ec71d4e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0912f00a-5169-4e85-b52e-743a6d34ca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd7ce4-4a54-4b86-855b-67873deeb949",
        "cursor": {
          "ref": "8a5b2c89-ef95-46eb-9513-89edcd830f96",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "655850de-6f81-41a7-92c0-8356574c3200"
        },
        "item": {
          "id": "90bd7ce4-4a54-4b86-855b-67873deeb949",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c90fcf0b-b8da-4136-b774-a251bc94a558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33601b6e-9281-4cd8-a8d8-a992fa2166fd",
        "cursor": {
          "ref": "5d52ce8d-0c07-4709-8dfb-4a9d62ea95c8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d540e068-9064-4d3f-a641-8839c13c870d"
        },
        "item": {
          "id": "33601b6e-9281-4cd8-a8d8-a992fa2166fd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "64ecb525-a927-4d94-8215-e0136900bf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3debbfc6-cafe-45a3-9a11-45c923ced6e3",
        "cursor": {
          "ref": "01f2ebb2-5327-42e1-b042-8bb0c755d708",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "40784f22-d6f6-4af7-9703-e8eb99fbff3c"
        },
        "item": {
          "id": "3debbfc6-cafe-45a3-9a11-45c923ced6e3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef97b3e7-8bf4-457d-8199-5438613fb5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283d8516-5565-4fa0-9318-6ce85a5f5bd6",
        "cursor": {
          "ref": "a75c9dbc-8fbd-4337-8539-67a8271b01ac",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a77d8b18-f452-4d33-98ca-73b9b9b149a0"
        },
        "item": {
          "id": "283d8516-5565-4fa0-9318-6ce85a5f5bd6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c1ef4b4f-b207-4a03-b47e-d1bf2b8edf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07934c60-9f38-412c-a001-ded3d02188a6",
        "cursor": {
          "ref": "b436f5a6-5049-46c8-bc9d-40218e2e55dc",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4db6ad6f-b663-4a78-814f-a23772c06e5e"
        },
        "item": {
          "id": "07934c60-9f38-412c-a001-ded3d02188a6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e42b8382-7221-455f-b697-81878f3fc07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55247ea8-e94a-4581-ba67-21bd6acf442b",
        "cursor": {
          "ref": "466f47e3-bc0c-4018-b315-4aa14a5e5b35",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e224d3ed-fa0a-4c2d-93c3-0d11c98ab5c8"
        },
        "item": {
          "id": "55247ea8-e94a-4581-ba67-21bd6acf442b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b1c346c-6ef1-49da-a8b8-bad2194d38b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c3e8e-811f-403e-886b-68edbb3a748b",
        "cursor": {
          "ref": "2d414741-4a34-4c44-bf79-605b36a7973d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "18cfb617-dd84-4511-9b48-93c3d0fed915"
        },
        "item": {
          "id": "291c3e8e-811f-403e-886b-68edbb3a748b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2dcee4c7-9a6b-4e2a-aef4-a0e0f41a84b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8146f-cd78-4f5d-97df-a6e17139107a",
        "cursor": {
          "ref": "13ee7f35-c38f-4545-9633-44710ca4fbd5",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "73f14331-dff3-454a-bb1c-f67221e91292"
        },
        "item": {
          "id": "3fa8146f-cd78-4f5d-97df-a6e17139107a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "469ff5f7-cf8b-4695-9406-4c267350b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be26882-f488-4367-9fae-54c3c56fb7dd",
        "cursor": {
          "ref": "09c9e22a-4e90-483a-a2ab-152b68a61a51",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "069e50b6-f50e-492c-9f9a-acf269acb330"
        },
        "item": {
          "id": "6be26882-f488-4367-9fae-54c3c56fb7dd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6c24b97-0ea1-48c5-b61e-da886bb37740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46768ebc-e863-4153-91c1-820f73d59518",
        "cursor": {
          "ref": "7d7a3b50-5873-4a54-8d81-839f36dcac66",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0bbc6b4d-14e0-4fc1-9482-6c7c6e5fa4a0"
        },
        "item": {
          "id": "46768ebc-e863-4153-91c1-820f73d59518",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "44efd83b-fada-4eae-a0a0-22e4684a5680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a597960-a1da-4661-bc42-39118e6c8e3e",
        "cursor": {
          "ref": "cddaf8b3-4d3a-4f7d-9889-bd778c87afbf",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4eef1dca-1046-45ed-99c2-2b9f62967374"
        },
        "item": {
          "id": "2a597960-a1da-4661-bc42-39118e6c8e3e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "80d871b9-992e-4458-bc17-8da74d278196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316621c-dedb-4043-9608-9f5a54590e4b",
        "cursor": {
          "ref": "537f2ca0-cdbf-4c6f-8298-c91f313a3fea",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c6e6f448-0779-44d1-b83a-619f454b8e6c"
        },
        "item": {
          "id": "6316621c-dedb-4043-9608-9f5a54590e4b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "64ed3d22-30df-45bf-b3ba-c3a6676a63e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf765ddd-1ca6-49f5-a409-de70c706dad4",
        "cursor": {
          "ref": "78b6a443-4021-4711-83fc-6b86547db86b",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "36270530-c5b0-4da4-b727-4f417d895385"
        },
        "item": {
          "id": "bf765ddd-1ca6-49f5-a409-de70c706dad4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9695ae1f-75ea-4ed5-b3b5-426ef2edf0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98190da-a349-4bd6-adf7-c391ac711cf9",
        "cursor": {
          "ref": "9df639fe-82d1-40f7-b56e-a01d14140fa7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1e34f7a1-7194-423c-84a9-90ce6c1c71a9"
        },
        "item": {
          "id": "d98190da-a349-4bd6-adf7-c391ac711cf9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca8f34ee-19bd-4bc6-9ed3-d79bd4fc0e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a2f9d2-4b83-47eb-a3c7-563e36537b30",
        "cursor": {
          "ref": "372dc66b-23d3-4e8a-b51f-71af2d8a1532",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5f903313-e87d-49c6-b542-c896b12b821d"
        },
        "item": {
          "id": "49a2f9d2-4b83-47eb-a3c7-563e36537b30",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e61ffbbe-c55c-47ab-bc9a-3092fc97793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1dd33d-c5f2-442c-9016-b14fd9e325a0",
        "cursor": {
          "ref": "f295092a-580f-44cf-bfa1-f346a627fa9d",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "340fff22-9592-4a21-a6c2-88136dd2a8a3"
        },
        "item": {
          "id": "9a1dd33d-c5f2-442c-9016-b14fd9e325a0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "534186f0-f51e-4da5-a689-b05db7c7a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1684d753-73d8-4e8d-83c4-d45daf409f55",
        "cursor": {
          "ref": "5c0b220d-cee5-4f77-80ef-02dd745ba7e5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "794c98ff-938d-4146-af03-3f1d6c59c8af"
        },
        "item": {
          "id": "1684d753-73d8-4e8d-83c4-d45daf409f55",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c889c2c2-fbe1-4f0a-b9a8-188fbeec134c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf30ec-cdcf-4083-a317-0e9fc1aaf7b9",
        "cursor": {
          "ref": "f6261073-a4ca-4323-bab8-e04b8d2f55d3",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0089ac5-6acf-4da5-96d0-3f47458dcd64"
        },
        "item": {
          "id": "7bdf30ec-cdcf-4083-a317-0e9fc1aaf7b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "be28e6ef-f927-44a9-bcaf-2d4b38dc4895",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df874256-b6c5-4c13-af3d-07b94313ae61",
        "cursor": {
          "ref": "9aed2947-2a09-4c0f-a100-ea98cd817041",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c337323-22ba-414c-b352-7d70fdf1b37f"
        },
        "item": {
          "id": "df874256-b6c5-4c13-af3d-07b94313ae61",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "af69342a-243b-4e13-8560-0282db67d0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc4e569-e9b3-4fde-9d57-f14ae9fc5f3d",
        "cursor": {
          "ref": "126b3446-1ea6-4412-93b4-e2d8b9391c0b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1e131144-d1e4-4441-aa70-a0dd619035d4"
        },
        "item": {
          "id": "6bc4e569-e9b3-4fde-9d57-f14ae9fc5f3d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ea37332c-755b-4ca8-b16b-8e4d28b9e3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4af9ebd-f2ae-4155-b5cc-ef3c99f8d56a",
        "cursor": {
          "ref": "24a586d2-712e-4f4d-b81d-e2e5eba36bee",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c466a37c-fec5-46ab-9d1e-d34a5e5ba0d6"
        },
        "item": {
          "id": "c4af9ebd-f2ae-4155-b5cc-ef3c99f8d56a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0fd77569-5dbc-4ee0-9252-f352f860bb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f66962-1b10-498a-90ac-2310fb42e0ef",
        "cursor": {
          "ref": "3f3f3c07-a582-4650-93c6-10d5d8ce3ab9",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f936ee68-77ea-4c98-9c0f-e2b7bb8b00c0"
        },
        "item": {
          "id": "05f66962-1b10-498a-90ac-2310fb42e0ef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6afc8cbe-d920-4a9d-812f-c31a26be5835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc99b404-de73-45be-beee-caec3d45e139",
        "cursor": {
          "ref": "32ca3493-8bfe-4827-bb7f-0c6a62d1d927",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9ebf1587-7ba5-4385-bf31-d4b70e15308b"
        },
        "item": {
          "id": "cc99b404-de73-45be-beee-caec3d45e139",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ac0b9db0-71ac-485c-bf8d-ac0c97889063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe49722-13ed-493d-ab34-4fbc25b01984",
        "cursor": {
          "ref": "20785ef6-8659-41d3-9844-f1f900820d31",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "11b136a9-50c2-40ce-af1b-0300eadeea12"
        },
        "item": {
          "id": "bbe49722-13ed-493d-ab34-4fbc25b01984",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1a2b3f5-76d1-4f96-824b-a3a685a37a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd22c0a-c85f-4ab5-906a-19c9e9889904",
        "cursor": {
          "ref": "51d6b376-1047-4c11-90df-48779f858e05",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "84702c20-53a0-4f4e-bfc8-05e2717e713a"
        },
        "item": {
          "id": "7bd22c0a-c85f-4ab5-906a-19c9e9889904",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "33051139-976a-478e-9868-12c26d3beba1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d665d92-3478-4032-a232-e4baf68d42e8",
        "cursor": {
          "ref": "2808a5e6-4863-4d33-b71b-04d17cacb980",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3d2f30a1-b9a3-415d-98a2-d39cdd6f06e5"
        },
        "item": {
          "id": "2d665d92-3478-4032-a232-e4baf68d42e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e5dbcf4a-c8ca-40c4-a2dd-642e4596061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7756967-042f-4764-abc7-77a6eb1766a4",
        "cursor": {
          "ref": "92cbdaa3-2866-4776-afe5-700bd166150d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e9e7eb2-109b-4f42-9d58-baf34d307619"
        },
        "item": {
          "id": "d7756967-042f-4764-abc7-77a6eb1766a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "806b4b39-8de5-4bd8-b38d-bfc668d41fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b033a99f-d712-46ff-b961-ef9ba9e5d1c4",
        "cursor": {
          "ref": "fc6c1f68-3df1-48e2-a2b1-0fd4ffffaac6",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "92f34907-5adc-4f59-b1ff-47105bc7cb7d"
        },
        "item": {
          "id": "b033a99f-d712-46ff-b961-ef9ba9e5d1c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f5be226f-0f38-4d1d-bdfe-cd254ea6f563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b39b83a-b98c-4086-9484-b000dd7a84d8",
        "cursor": {
          "ref": "4cd58eba-928d-445f-a7d2-c9fb0182145b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1c26ae12-787f-4790-8f27-bb0252ab6fae"
        },
        "item": {
          "id": "8b39b83a-b98c-4086-9484-b000dd7a84d8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "16d89d11-9207-4e22-91b8-6da449f6e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6a94e8-0292-410c-8575-4ccc6d78abb8",
        "cursor": {
          "ref": "c2942d84-2271-49c1-adbd-ed7988fd4e6c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6754f383-e18e-462f-8efe-78bfa9b3b4de"
        },
        "item": {
          "id": "5a6a94e8-0292-410c-8575-4ccc6d78abb8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "321a3bb8-cd2a-48e4-a93e-581ded41f1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4e2a77-80a8-4655-bb88-17057882be40",
        "cursor": {
          "ref": "1cb36872-429e-45fd-b573-98229a279841",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b3bf0002-7a75-4b6a-af49-6b253b1c2e6b"
        },
        "item": {
          "id": "4e4e2a77-80a8-4655-bb88-17057882be40",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff3dca50-a062-448e-8d9e-32e072f70f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d4e5bd-d9d1-46f6-82d4-b13d6483fda1",
        "cursor": {
          "ref": "d17e5071-450b-44d4-8552-f5f6f946d256",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8e025b04-0bd9-406f-a8b4-82a935930f8a"
        },
        "item": {
          "id": "94d4e5bd-d9d1-46f6-82d4-b13d6483fda1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "695d44ab-a25e-42cb-b2d2-b90b00c2adb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41ebe35-dcdc-4ad9-8867-a51ae014a073",
        "cursor": {
          "ref": "8768df4d-19ee-4100-bfa7-ec788d24f42d",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dcfbe022-c825-403f-a84f-5f405fa5c387"
        },
        "item": {
          "id": "c41ebe35-dcdc-4ad9-8867-a51ae014a073",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "02bed154-6688-4690-ae33-65856ebdbb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19dccd8-0fb0-415f-b3ce-7c7197ca7e4b",
        "cursor": {
          "ref": "5a30159f-65d5-4fd0-b327-637b76dc4254",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de2a23ea-3ee1-4b6f-91b6-86a2011b59f0"
        },
        "item": {
          "id": "f19dccd8-0fb0-415f-b3ce-7c7197ca7e4b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00d9cc2a-e14c-4601-a38e-6876f31be356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e405b887-8975-4dc8-808a-37e9810d7cb1",
        "cursor": {
          "ref": "3a5c583f-25a3-4f58-b07e-40765ff5aced",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae4ad3e0-c4c1-4d2f-923d-27b1b062e3ca"
        },
        "item": {
          "id": "e405b887-8975-4dc8-808a-37e9810d7cb1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ac9fcc24-b62c-4d24-bb3e-67e2d89c0ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b97ddad-8b99-4b4a-a339-870f23c7b1fe",
        "cursor": {
          "ref": "645e338f-10f9-4e32-a264-54ecc867b833",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d31c5827-e5d4-48e6-8d34-97f6182fbe76"
        },
        "item": {
          "id": "9b97ddad-8b99-4b4a-a339-870f23c7b1fe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "48111713-6f52-407f-b894-5cc4dbef15d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081170f6-7675-4a4e-b701-84443aa34823",
        "cursor": {
          "ref": "a4a532ad-8f30-4c9b-939a-59b49e667c2a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9a0d84f7-c587-4f2e-a9b7-eca371489b74"
        },
        "item": {
          "id": "081170f6-7675-4a4e-b701-84443aa34823",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0696191b-17de-4ed1-8f71-790b813054d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30344987-a168-409a-9479-7c0cdd1ff307",
        "cursor": {
          "ref": "04dcefd1-073d-40ca-8d39-69e7e0e1d844",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ce73e53c-a6b0-480d-8147-dd221bac2176"
        },
        "item": {
          "id": "30344987-a168-409a-9479-7c0cdd1ff307",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fe66b059-33df-4b1b-a2df-909c04f0a740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35f1f8-94e0-4d19-a867-b037c1c6205b",
        "cursor": {
          "ref": "218515c2-cf4c-4258-bd0b-dedd9662574e",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57c8054f-f966-43a2-ab7a-67febe36ed2f"
        },
        "item": {
          "id": "5c35f1f8-94e0-4d19-a867-b037c1c6205b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3623b46e-a535-444b-8a8d-07c723c78880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039ccc76-1e5c-43fc-b794-104b464dd9e6",
        "cursor": {
          "ref": "403fc1bd-3436-400f-bae0-44b10d0e75fd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2d0a44c9-daab-4710-b28d-a2633fa9633a"
        },
        "item": {
          "id": "039ccc76-1e5c-43fc-b794-104b464dd9e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d237d5c4-6927-42a6-bd37-23a3dd04bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2df5dd9-5176-4e39-bc6d-a804473e19d8",
        "cursor": {
          "ref": "7d147919-0c18-4f17-8850-2c1d7d95434d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4e7180c3-44be-4312-91d0-afcd09cb0c77"
        },
        "item": {
          "id": "e2df5dd9-5176-4e39-bc6d-a804473e19d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "417b16e4-387a-416a-b899-34a2d8cbb70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e9eb94-94e7-49f3-b25f-a6e3453a56ab",
        "cursor": {
          "ref": "a3e68806-f79b-4075-b38b-d7f23e86649a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c1ff061a-f4e9-435f-9bfc-42ca4750ee47"
        },
        "item": {
          "id": "97e9eb94-94e7-49f3-b25f-a6e3453a56ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f693e715-86af-41de-8148-9cfe3bc9d0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3494df42-c4af-4be6-aea2-ef2ac80cc234",
        "cursor": {
          "ref": "b615dfec-a6b0-4b8b-a213-faa956f2b07f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a7fc77ae-4334-4579-ad25-39b1c7464c93"
        },
        "item": {
          "id": "3494df42-c4af-4be6-aea2-ef2ac80cc234",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a38f5fb7-cc01-4dc5-bd04-19ec9c7b97dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe8371e-9d25-4af0-ba9c-06990bfec818",
        "cursor": {
          "ref": "b7e513c5-24da-44ae-844b-34f6a9839871",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b1cfc2c0-f262-457a-9e61-b65dc3977ff8"
        },
        "item": {
          "id": "ebe8371e-9d25-4af0-ba9c-06990bfec818",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a7ff878-e557-416c-89a2-b1a7fbc2492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa716c0-53f7-44aa-b96d-0ac0cc38f93b",
        "cursor": {
          "ref": "06e7e950-a6b4-438e-85ba-ee394501cfa4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61259f1b-de86-4852-815b-389f443d6f91"
        },
        "item": {
          "id": "6fa716c0-53f7-44aa-b96d-0ac0cc38f93b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8c7b282d-6246-4726-b468-b7266a5b0525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62baca0f-e78c-4bdd-bf1e-e94e3a068191",
        "cursor": {
          "ref": "dc2b1e1b-c7ea-4053-9848-12d26109381f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fa4f3eac-037a-4985-8bd2-9e9b40e4ab07"
        },
        "item": {
          "id": "62baca0f-e78c-4bdd-bf1e-e94e3a068191",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e6f0ef3a-ef54-478c-b3e1-f8cd91014282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e3ae84-c3c6-4963-a56c-39a8f9b0a021",
        "cursor": {
          "ref": "694360b2-4b85-4ef7-a233-97f6cfff0f10",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a914bca0-f8e8-4ff8-ad1b-1ee0a0fcfd2b"
        },
        "item": {
          "id": "e7e3ae84-c3c6-4963-a56c-39a8f9b0a021",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9030ed73-dc48-489c-a910-b76279e484d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa326135-1f10-4109-b280-dd4eb8cc769f",
        "cursor": {
          "ref": "f1816b47-78a6-4776-b463-4375a504670e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8eb45a0-a934-4a7d-91e0-d9d3dd818387"
        },
        "item": {
          "id": "aa326135-1f10-4109-b280-dd4eb8cc769f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "48899ed8-aa9f-429e-91c9-ac7dfd72d9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752cecb8-dfb6-4c0f-9fb5-99a9a26cdd60",
        "cursor": {
          "ref": "3b12912d-7926-458f-a4b0-643665aab46c",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07c634e8-5295-4827-a98e-2eac40c8e381"
        },
        "item": {
          "id": "752cecb8-dfb6-4c0f-9fb5-99a9a26cdd60",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "37ea6fdc-61a4-4127-8904-a7e2f80814e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12e336e-8df2-4db9-9714-6186f6be2afe",
        "cursor": {
          "ref": "b261c630-7316-4b81-a2de-6013ccb9de1b",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8642f7c8-f8e6-49be-8e23-ee353c95d517"
        },
        "item": {
          "id": "a12e336e-8df2-4db9-9714-6186f6be2afe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1b8840a8-877d-44f7-a7fb-2683bab1b86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627bb5ba-b094-42d7-bc56-4d93c4402702",
        "cursor": {
          "ref": "322bee14-1cef-47ca-bfe1-b8576ea3e6f1",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "872f7a83-17a3-4574-b168-4000d6abbc83"
        },
        "item": {
          "id": "627bb5ba-b094-42d7-bc56-4d93c4402702",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ef7609a2-5eba-4c1d-88e3-c145c7e5847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7a77c0-fbb4-4081-8a95-6562abd63f5c",
        "cursor": {
          "ref": "757d8e67-158b-4634-812e-98fd77c42f72",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a51a1d5-f574-4909-9aec-4cf318da6518"
        },
        "item": {
          "id": "da7a77c0-fbb4-4081-8a95-6562abd63f5c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b489ac70-1b33-498e-bb0c-c8b979c9be7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf47eac-7c14-4699-9dc6-527c7c2e5ef6",
        "cursor": {
          "ref": "31a315a7-4d7a-40da-8fda-fa79f46e0df8",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "65cb447e-7f05-4e7d-9ac1-45b5fd68f247"
        },
        "item": {
          "id": "fbf47eac-7c14-4699-9dc6-527c7c2e5ef6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "966e6edf-5ff6-48f1-9452-c24ec8da92d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c4c5e5-6399-4383-9661-84c6b3b3afc5",
        "cursor": {
          "ref": "e953b056-74c2-47a3-94cc-919f4524da1b",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1a124c3e-e736-4bce-819d-562605d33199"
        },
        "item": {
          "id": "79c4c5e5-6399-4383-9661-84c6b3b3afc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4898ca94-159a-4146-b0b8-2731de4670b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d13aec-d697-437b-818a-d7d21d9acc58",
        "cursor": {
          "ref": "8a1fe782-8e48-4dba-854d-9d432ad02b6a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48a7c9a4-ff83-468b-b9ca-66a655cb4e99"
        },
        "item": {
          "id": "38d13aec-d697-437b-818a-d7d21d9acc58",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7f6bae78-6604-4df9-ac1d-7b7796d117ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e219ab-1796-4254-9f39-51c51cf41fea",
        "cursor": {
          "ref": "25fb40a5-eecd-4dec-87b0-b06411dfda93",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7bf17db8-174e-4588-b22a-53a589274d21"
        },
        "item": {
          "id": "f8e219ab-1796-4254-9f39-51c51cf41fea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e77e7740-195a-4869-9c64-79f90025d2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac4f2a-322e-47b4-b5c6-34c004f1afc5",
        "cursor": {
          "ref": "73f8993f-46fa-4a43-b33b-7ec451b1115b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58266fda-a25c-4539-b5c8-71a9026f51fe"
        },
        "item": {
          "id": "95ac4f2a-322e-47b4-b5c6-34c004f1afc5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0baa927-e0e7-4317-83ed-6d53e8de8536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45945da2-bec0-4a4d-b490-acdf14801a0e",
        "cursor": {
          "ref": "49593049-cf50-46e8-809c-154fe94f1ffc",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "756ee101-b0e4-44d5-8585-cea13b266a12"
        },
        "item": {
          "id": "45945da2-bec0-4a4d-b490-acdf14801a0e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ae9efe62-06ae-4cf4-a306-1356851d4d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd593887-b908-49b6-bcce-feb0289df38c",
        "cursor": {
          "ref": "972bf351-22f0-4f9f-8605-71efd132f96c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0fff33f6-2f53-4fcf-a6ea-b37aa0071653"
        },
        "item": {
          "id": "bd593887-b908-49b6-bcce-feb0289df38c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b1a7cc91-993b-4761-a6fa-fa24d5b12ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9a013f-94b9-4192-87ba-10e672bd2b47",
        "cursor": {
          "ref": "4e932d2a-d75d-41f8-b2ad-9bc45aa4f137",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8bac4882-25f2-4fb4-9c68-01551c9d4d71"
        },
        "item": {
          "id": "db9a013f-94b9-4192-87ba-10e672bd2b47",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1518749b-966a-4c7d-ae32-92b4adb0822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32e7d0c-3e2d-41cf-af32-84da3cfd6ffe",
        "cursor": {
          "ref": "ffc83d10-806a-4b24-9da7-7eaafe4705d2",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7f39f8fc-c316-40d9-8f4a-721391ab0f4a"
        },
        "item": {
          "id": "e32e7d0c-3e2d-41cf-af32-84da3cfd6ffe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "62d3008b-15d8-4c46-bc53-b5e369a001ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92da2a69-2c81-4c2d-a7ef-052e2fdbe2a6",
        "cursor": {
          "ref": "81fa26dc-51d5-40df-8415-9c8c4bc18632",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "838b99dc-8753-4e4b-9bc6-d6b4a85e0dda"
        },
        "item": {
          "id": "92da2a69-2c81-4c2d-a7ef-052e2fdbe2a6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "901d2d9b-6a45-4fc4-aeb8-de153b3d9c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae036a-7337-4f05-a0c5-7e38881e9615",
        "cursor": {
          "ref": "ecd07557-5dd9-484a-a145-0ffdd863abef",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "186dfacf-811c-426d-b636-7724f4153d79"
        },
        "item": {
          "id": "38ae036a-7337-4f05-a0c5-7e38881e9615",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "03214bd2-ccc4-4a40-b9bc-3c2e9caf79d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c533cdba-d723-4b3e-aed0-c9cc70b366a3",
        "cursor": {
          "ref": "b69131a5-1020-4234-b32f-bba781befa80",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "15880ba6-1974-4dd7-936a-70174cd37b57"
        },
        "item": {
          "id": "c533cdba-d723-4b3e-aed0-c9cc70b366a3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3e0f454-a72d-4a52-b9a5-e4aa901f7c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081fae90-0a06-4356-872f-ce0114084b5f",
        "cursor": {
          "ref": "e46aa245-c47f-4ad4-afc8-711b32b2bfc1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3eb1fd7f-5df8-4125-8166-a44704d71c69"
        },
        "item": {
          "id": "081fae90-0a06-4356-872f-ce0114084b5f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "07ec54d2-a592-43fd-8703-27bfb91b56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128a087-3678-43ce-9de3-b7b8d20a9565",
        "cursor": {
          "ref": "65988da3-e824-4b9e-9590-b7fbcfd36c59",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d10b934-43ab-42ba-a904-dd49cb3af580"
        },
        "item": {
          "id": "1128a087-3678-43ce-9de3-b7b8d20a9565",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d4d82e31-c045-4ca3-b7da-610efb0f487d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6e4a49-2ffa-4285-82d6-83d21ee1b733",
        "cursor": {
          "ref": "0ab60efe-cb0b-40ae-8401-ff8be631c5e6",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9083b616-9f40-490e-b050-ea8e45a2c9a2"
        },
        "item": {
          "id": "eb6e4a49-2ffa-4285-82d6-83d21ee1b733",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ef4d003-11ce-4b99-9f03-c24ea7a4827e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccb8343-ec53-44c8-b3c4-a9cd57e2653a",
        "cursor": {
          "ref": "51529559-7d46-4449-ad2f-b11df88ae79d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3851cdce-1a41-4fcb-acc9-4784696f6e77"
        },
        "item": {
          "id": "bccb8343-ec53-44c8-b3c4-a9cd57e2653a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "249ccd3c-745f-4b5d-84ea-345b0a27ad5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a6293b-16be-479c-82c7-e3b220bccfb1",
        "cursor": {
          "ref": "1cf41a5b-3a3f-4f4c-a141-055077356847",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27a82ff1-b864-48e3-9926-7f5697e2cd60"
        },
        "item": {
          "id": "28a6293b-16be-479c-82c7-e3b220bccfb1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ede3d68d-07e8-4efe-b236-b30304d84a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8b8e42-ce65-4735-9dbb-cfe366149877",
        "cursor": {
          "ref": "8cf89709-bce1-4510-a5f6-0ba0794dedc2",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "18198838-5c7e-42d8-aa1e-e2131ef116ea"
        },
        "item": {
          "id": "8d8b8e42-ce65-4735-9dbb-cfe366149877",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "41e070c9-f06d-417c-b00d-c826c81c5733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b66dd8-7d59-48f0-b406-3f6ed4b66fda",
        "cursor": {
          "ref": "6c60c538-e0ea-426a-9131-afd117373b6c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "08a68382-db62-4b24-8717-05d6dd750c81"
        },
        "item": {
          "id": "32b66dd8-7d59-48f0-b406-3f6ed4b66fda",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "67d112e7-9e6e-4e7f-8bcc-fed060296971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e71b0b-9dc6-4562-93b7-d17773e8d64b",
        "cursor": {
          "ref": "1e7d8ff7-66f0-4aff-aeb5-76d6ef0309a6",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "81a411b0-59e5-45b4-a285-0c24b914b99e"
        },
        "item": {
          "id": "55e71b0b-9dc6-4562-93b7-d17773e8d64b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3eed509b-6f22-4a69-89d0-c89e536aeda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aa6a9c-b360-40ec-a1bf-55e97a4c32c4",
        "cursor": {
          "ref": "08b20419-974a-461c-abfb-c390ad1d9a57",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e158b7d8-1791-4d9b-8e54-4215a65433c3"
        },
        "item": {
          "id": "a7aa6a9c-b360-40ec-a1bf-55e97a4c32c4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0745a75d-d5c4-4446-830b-1a142f58fe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c7d6be-cb0c-4fbd-b972-993bc41354a2",
        "cursor": {
          "ref": "4382439a-5d5e-4cd1-b634-3973f82d3877",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "39b7f582-8598-477c-aecf-5782b510694a"
        },
        "item": {
          "id": "85c7d6be-cb0c-4fbd-b972-993bc41354a2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bf0fa8ea-3010-47f0-ad47-95059333b6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c754b18-41f9-4d5a-a4d8-8d1e20c57fcd",
        "cursor": {
          "ref": "f13de2e4-5548-46e4-8b52-594e203de350",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d66a67db-1506-4fc8-8d96-3c65ffff48c2"
        },
        "item": {
          "id": "2c754b18-41f9-4d5a-a4d8-8d1e20c57fcd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0eace1b2-f78d-4e67-978a-dd8b4da345a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e3d818-fbed-4ada-acd1-7adf48ba3921",
        "cursor": {
          "ref": "00dd7069-fae2-4db4-a23d-50d6afbdc007",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5dc80552-f598-4ad7-b698-1741ce70cd29"
        },
        "item": {
          "id": "78e3d818-fbed-4ada-acd1-7adf48ba3921",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d8fdf367-1fc2-42b0-997f-3f91d9b62ea1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 124,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0ba8a3-1b46-4cb7-8f2f-373c013d7501",
        "cursor": {
          "ref": "109973c0-1d34-460f-98d6-f421af50f997",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5ea4281a-a37a-4dce-90ef-7d1d1dddbf1c"
        },
        "item": {
          "id": "fc0ba8a3-1b46-4cb7-8f2f-373c013d7501",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72f5ceb1-1336-47d8-a33a-0a3096414c8a",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5facc5f1-edb2-4f9a-8aab-7cb077c17dc6",
        "cursor": {
          "ref": "c5ad6379-7594-4533-9ea0-3adf768466e9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0b196471-425d-4154-9da0-10174d3b574b"
        },
        "item": {
          "id": "5facc5f1-edb2-4f9a-8aab-7cb077c17dc6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a266cd68-fb1a-4843-8312-4d620bec53a3",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea16cf6e-86bf-481c-b767-942492501e70",
        "cursor": {
          "ref": "a19b7e50-00ae-4138-b717-e68f48f44c88",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c5855ed-77b3-4932-9f16-d60d6ae15871"
        },
        "item": {
          "id": "ea16cf6e-86bf-481c-b767-942492501e70",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d0fc4144-5cce-4431-b73e-cb3d0ca6ae9b",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6623200-c0e7-43e7-89ff-bbdff6e05fff",
        "cursor": {
          "ref": "6ae69e72-d06e-44e8-a780-c618e2d5dad1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cd094108-b358-4d23-b88a-758d4c962e8f"
        },
        "item": {
          "id": "a6623200-c0e7-43e7-89ff-bbdff6e05fff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "92796e67-6f15-439e-8127-befd24b84418",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee38ab-ea69-4e32-94f8-624984c50bfd",
        "cursor": {
          "ref": "a3ea913e-fcfa-4cca-b1b9-f11bc67bf853",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59fbb73d-7633-4c36-b63a-90d738d0427a"
        },
        "item": {
          "id": "b4ee38ab-ea69-4e32-94f8-624984c50bfd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "192dca44-1da0-466d-8a96-f860c7d200e0",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "28016762-f9d0-46a8-b6bf-9f647629a7bd",
        "cursor": {
          "ref": "fdc1c0bb-cbd0-4c0a-aada-fb85e7c5c261",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d9279425-3e24-4601-bece-b61d3e0fa0e8"
        },
        "item": {
          "id": "28016762-f9d0-46a8-b6bf-9f647629a7bd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a566a1b6-c5a7-4536-9664-2a38d1ddbf22",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8aabf8-7f80-4182-ae66-973feb1b7c1b",
        "cursor": {
          "ref": "2aaf70ca-3253-49db-b3ab-2b96782550dc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74e84e71-6697-4325-99bc-b3efcadb56df"
        },
        "item": {
          "id": "6f8aabf8-7f80-4182-ae66-973feb1b7c1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9bd2023-5035-4f41-b5e0-fdccb5f35b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8aabf8-7f80-4182-ae66-973feb1b7c1b",
        "cursor": {
          "ref": "2aaf70ca-3253-49db-b3ab-2b96782550dc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74e84e71-6697-4325-99bc-b3efcadb56df"
        },
        "item": {
          "id": "6f8aabf8-7f80-4182-ae66-973feb1b7c1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9bd2023-5035-4f41-b5e0-fdccb5f35b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e359232-f659-4245-98f2-3ebc47e6845b",
        "cursor": {
          "ref": "ad174188-8aea-40fd-bc86-7a04b1aaf215",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cba05350-13f3-4a15-ba46-8719f60cfc9a"
        },
        "item": {
          "id": "3e359232-f659-4245-98f2-3ebc47e6845b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b4c3f42e-6bb5-46f7-9547-c8ead8ed22b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716dbea5-c41f-40df-8395-a91985fe5423",
        "cursor": {
          "ref": "2f63dbbe-7f2a-4ff7-a78f-d9aeaf02e912",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8f2a8f2c-438d-4d7a-818a-7a32f9871268"
        },
        "item": {
          "id": "716dbea5-c41f-40df-8395-a91985fe5423",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1f98de5b-f027-49f6-96eb-c8a8cab70d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b9c35b-96a7-4af6-b4b7-6b42a695d706",
        "cursor": {
          "ref": "6481228c-973d-43d9-a496-ac990ea85f9f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "929b89b9-746b-473e-ae1d-1fd0c477965f"
        },
        "item": {
          "id": "f1b9c35b-96a7-4af6-b4b7-6b42a695d706",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e088a78e-b946-455b-a0c7-741868b4050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10296ae2-b268-4311-8a10-c2f58edb44f8",
        "cursor": {
          "ref": "b97b57c5-3627-4112-8dd6-79dac82ba02e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acb62af8-52c5-4444-b418-955951277931"
        },
        "item": {
          "id": "10296ae2-b268-4311-8a10-c2f58edb44f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0cd6a015-64da-413b-9486-cfc8c80430c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f905c7-8a20-470d-af33-80afb47635e4",
        "cursor": {
          "ref": "430db667-4428-4d58-b27d-f99376ee2fc6",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "82ca9bfa-4e71-4961-8a6b-03810cfd7bd7"
        },
        "item": {
          "id": "10f905c7-8a20-470d-af33-80afb47635e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6e588670-9223-41e3-8257-177d38ce1ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e2590b-a9bb-4c61-87c8-a279953c5e4b",
        "cursor": {
          "ref": "966a767d-2179-4f4b-8160-5915fb69f092",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7d23bf02-cfc5-4211-b5b2-9b5b83b9b59c"
        },
        "item": {
          "id": "71e2590b-a9bb-4c61-87c8-a279953c5e4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83d68627-8ecf-41d0-a407-a5a0d12b6d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b314d1-b9ac-4789-a449-3303e81807c2",
        "cursor": {
          "ref": "4048b5b9-8b45-4266-a934-cc6a025f6dce",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1e24bd5c-ba2c-4243-8afb-67cfe0ba9190"
        },
        "item": {
          "id": "91b314d1-b9ac-4789-a449-3303e81807c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f8fd8c1-173a-4514-972f-a34d1077acab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9faeda-8f92-4e34-8d50-f4f024521474",
        "cursor": {
          "ref": "e7b20768-4b44-41cb-a7b8-3fa1602343cf",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1caff3b4-3746-4500-910e-745e5bfab19c"
        },
        "item": {
          "id": "bd9faeda-8f92-4e34-8d50-f4f024521474",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e71f7a0-be05-4313-bb40-ed290d4b936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5fa370-b649-4eef-95f2-5902f1e47cba",
        "cursor": {
          "ref": "5b221c58-1f07-4b08-a820-55bb01ef8c44",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c4d6afcf-1ad7-43b8-9342-44883092dfae"
        },
        "item": {
          "id": "6a5fa370-b649-4eef-95f2-5902f1e47cba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "50aaf448-3146-4f2f-9f98-3f49291be81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf5bbb2-3b89-43b5-9dd2-517fbb2a5457",
        "cursor": {
          "ref": "de03d568-1a09-4c7e-92a3-0e73d3a2c79e",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c95215eb-07f7-48bd-84e6-d27c4267db16"
        },
        "item": {
          "id": "9bf5bbb2-3b89-43b5-9dd2-517fbb2a5457",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33758a3e-0753-4d9b-9683-d28ae450b875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35ed7ea-df72-4855-935e-1eba78891e5f",
        "cursor": {
          "ref": "09208107-c98a-41fc-b54b-28b5e0009baf",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f06ad3e-c3eb-43e7-848d-e77b1b87d029"
        },
        "item": {
          "id": "e35ed7ea-df72-4855-935e-1eba78891e5f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2dfcf8c1-dc16-485b-a46f-a0125e8091dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfdd98b-5634-42c1-9457-df7c958064c9",
        "cursor": {
          "ref": "2d4691d6-2e5f-4940-b8a0-59dcb7422a01",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a20a5e42-8c19-4d7f-b632-8a693b9bbdfa"
        },
        "item": {
          "id": "0cfdd98b-5634-42c1-9457-df7c958064c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "118120f7-3346-4e76-9faa-44ee9e83a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce8698-d631-4f3d-baef-7fdcd94ba6f5",
        "cursor": {
          "ref": "cd21e89a-25e1-4d7e-9aec-557425cd2eda",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "08cb3da5-815c-40f2-bbdc-b56c550fb45f"
        },
        "item": {
          "id": "06ce8698-d631-4f3d-baef-7fdcd94ba6f5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "57b0c7a3-300d-4c66-9b05-5da196f11442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557cd8b5-4178-48f1-9ce2-1f50aa8773ad",
        "cursor": {
          "ref": "6ec98788-47d2-41e0-b95c-5c9d297138f3",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7d3b69d5-052b-4044-a2ff-c89a9c71e9b1"
        },
        "item": {
          "id": "557cd8b5-4178-48f1-9ce2-1f50aa8773ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3b12b36f-cdaa-4cb3-b4be-36adb96afb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2e07ea-6f4d-48ab-9c7c-037561ac88b9",
        "cursor": {
          "ref": "87eb4fd2-78b2-42be-9d1e-338309cfaf54",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "698ee83a-80ba-45de-8f58-56423c563e0b"
        },
        "item": {
          "id": "0c2e07ea-6f4d-48ab-9c7c-037561ac88b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bfa7d3e1-4402-4784-8956-ceb002229041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fbda2f-e720-49b6-b23e-436f18996343",
        "cursor": {
          "ref": "b8b51584-05ef-4314-a216-da1ca57d5a1f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "916f66b5-c0b8-475c-8953-8e23f7e2f045"
        },
        "item": {
          "id": "54fbda2f-e720-49b6-b23e-436f18996343",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dc1b84a1-6604-4f14-896f-2c41ce0f597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a7cc74-c55d-47c5-9f04-00fcc1dea7f8",
        "cursor": {
          "ref": "3282cb25-8e5b-42fe-bea6-99419d9937de",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2dc93338-e824-41b9-a535-6000d37434cd"
        },
        "item": {
          "id": "b7a7cc74-c55d-47c5-9f04-00fcc1dea7f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3d0299eb-fcdd-4345-8c24-af34645e59a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0378135a-519a-4fc7-8d78-df539a4c7e2c",
        "cursor": {
          "ref": "1bccc3fb-7e8a-4b89-86af-bf7111c640a5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d1b8be7-5245-403a-90ee-8f5d26119d11"
        },
        "item": {
          "id": "0378135a-519a-4fc7-8d78-df539a4c7e2c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "664400eb-d172-4f6f-80d2-fe9daa068871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29578c0-4a5b-4aab-b3d3-f58617dae95b",
        "cursor": {
          "ref": "aede52a3-0f27-4f37-850f-49a49eeac8ab",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a6f1017f-c69e-4c30-a4bd-08291ee78285"
        },
        "item": {
          "id": "e29578c0-4a5b-4aab-b3d3-f58617dae95b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f66ad0d-d75a-4227-84da-f0cbe72d1476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81083c0f-b075-450a-b448-06208f8b9e39",
        "cursor": {
          "ref": "7ea7ea22-9d90-46da-a0c7-7ebdddae8719",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ccb464bf-d087-4f8f-9b48-8025e5736dfb"
        },
        "item": {
          "id": "81083c0f-b075-450a-b448-06208f8b9e39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2584ab8c-ab16-4cbe-804b-fbf23da1d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f4b919-9419-4b38-bddf-e85258e84e9f",
        "cursor": {
          "ref": "c069ed1a-ce9c-4c27-816b-0884d71fa6a4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "259aff53-e64f-48a8-be29-1ec14734836a"
        },
        "item": {
          "id": "a1f4b919-9419-4b38-bddf-e85258e84e9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "64cfd7fd-ac00-4075-85ab-965e2a300b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e734ccd-47c6-40d8-b208-e725f28b1b34",
        "cursor": {
          "ref": "704a2238-f1c1-4cbc-a33b-65d2867737ad",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aba49726-ae3d-437a-84f6-e721b0282436"
        },
        "item": {
          "id": "1e734ccd-47c6-40d8-b208-e725f28b1b34",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9aeae987-e49c-4b60-afb2-0d66afdc4adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c656304-f0d1-4c5d-91ce-af06f41079a9",
        "cursor": {
          "ref": "48bc178d-e0fa-4006-bb1c-c744515d1559",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "80af5f21-95d0-4f40-976e-0213e18807da"
        },
        "item": {
          "id": "7c656304-f0d1-4c5d-91ce-af06f41079a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "058ac182-7c1f-47d9-9f74-5e8b6ba70bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3fd3a3-2f85-4845-bb17-ea85c2b3bc53",
        "cursor": {
          "ref": "d409800d-5af3-41ff-b715-911889e16d70",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5f537313-dbed-4338-8312-bbe412b4ee75"
        },
        "item": {
          "id": "1f3fd3a3-2f85-4845-bb17-ea85c2b3bc53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1ef37be9-31a7-4312-8634-4c6d20244cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5260b14f-4134-4041-8d70-befc9b0f2f92",
        "cursor": {
          "ref": "2ffc3ded-2708-4d20-a0e9-28824f24efb8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a118eacd-53ad-4cb9-837d-a1c59961156a"
        },
        "item": {
          "id": "5260b14f-4134-4041-8d70-befc9b0f2f92",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5f1623d0-363c-4645-9a26-e0ce660037b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ff2a7f-4231-42c9-8138-d7568a185934",
        "cursor": {
          "ref": "2db4a432-838f-4949-936b-f6c01e67c5c9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24bc1a0e-4b6d-43a1-b3c2-8a766d01787f"
        },
        "item": {
          "id": "03ff2a7f-4231-42c9-8138-d7568a185934",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "65f54b0f-568c-4ed7-b6c4-db29843a659a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f3356-3d2f-48e5-8dac-6d2b834762a1",
        "cursor": {
          "ref": "9e49b5e6-3ccb-4a97-983f-b2d3d0b7756c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9c0db50a-78c1-40c8-a93e-ea0ced733f80"
        },
        "item": {
          "id": "3e4f3356-3d2f-48e5-8dac-6d2b834762a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "269dffef-9731-40ba-84c7-4cd754ef8da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a7170-cd7a-40a5-adf3-5f268cd74d82",
        "cursor": {
          "ref": "fd213e96-5231-465c-ad6c-5050730cf680",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5a9b49d-7dd5-4dbc-93cc-262b4a6d9b0d"
        },
        "item": {
          "id": "b99a7170-cd7a-40a5-adf3-5f268cd74d82",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b67a548a-f467-4b98-9e01-39ffacf86341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82132d43-a11f-4185-a00c-ea5d0b971ca4",
        "cursor": {
          "ref": "2077a242-b000-4543-b681-35db457b2b3c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6bcba931-5815-4eec-b240-8a62e553be1d"
        },
        "item": {
          "id": "82132d43-a11f-4185-a00c-ea5d0b971ca4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8b60c1b5-54eb-4f92-a4f7-f8e67fe6e781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c7954-9646-4637-a94d-631c86c54b87",
        "cursor": {
          "ref": "5635a2a7-9d6e-435b-8ccb-c3301feabd6a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "83752b21-09d6-45fe-b530-fc2050b86900"
        },
        "item": {
          "id": "172c7954-9646-4637-a94d-631c86c54b87",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f028dda4-482a-4238-8e88-5e4627fce74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12c2a13-3bf3-4de2-9048-f1511068307b",
        "cursor": {
          "ref": "b874bcce-bb6b-43ea-ac85-50912349e91b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "136eba52-f9f6-4f38-993f-ba52bffaf010"
        },
        "item": {
          "id": "a12c2a13-3bf3-4de2-9048-f1511068307b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d52b096-a427-4069-b368-8bc5d69432fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7dbe86-a548-4f63-93a7-f2b7667899e9",
        "cursor": {
          "ref": "6fc1329f-512f-4753-82a9-3a9db9e1f92b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7fdaf95d-9e42-473b-af1b-628681ea3470"
        },
        "item": {
          "id": "ad7dbe86-a548-4f63-93a7-f2b7667899e9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "77ebc029-202a-472c-9672-2b1108c1856c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6390caa6-fceb-4ade-b4b1-c9783583a761",
        "cursor": {
          "ref": "3d8fcd6b-4c82-44bd-9587-47e666fd1dea",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d1c33acb-5f61-4e58-abae-489e105c7573"
        },
        "item": {
          "id": "6390caa6-fceb-4ade-b4b1-c9783583a761",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "40bcff42-1322-4ea2-81d4-0bcc76b11e22",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4e327a-47da-4086-bfa8-405279b9c1cd",
        "cursor": {
          "ref": "e4c4feb2-1093-4ad1-b883-b5f6490b5c6c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a77cd58-e628-4339-a8d5-6fcf14db18d4"
        },
        "item": {
          "id": "db4e327a-47da-4086-bfa8-405279b9c1cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4977e19c-9b1d-4605-804e-b6b88fd44a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4e327a-47da-4086-bfa8-405279b9c1cd",
        "cursor": {
          "ref": "e4c4feb2-1093-4ad1-b883-b5f6490b5c6c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a77cd58-e628-4339-a8d5-6fcf14db18d4"
        },
        "item": {
          "id": "db4e327a-47da-4086-bfa8-405279b9c1cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4977e19c-9b1d-4605-804e-b6b88fd44a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2e0707-a319-4f39-bee1-c21a0746fdcb",
        "cursor": {
          "ref": "05e56ba8-0219-4d15-b29a-5aa0994492f4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7113eca5-2ec6-4cb7-aef9-4dfd9654161e"
        },
        "item": {
          "id": "ac2e0707-a319-4f39-bee1-c21a0746fdcb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f21201aa-6e08-4d22-94e9-77cf6ed7e3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda1e7fc-9d0a-4d8c-8aa0-a5c1fd739a27",
        "cursor": {
          "ref": "8da64c01-3b7c-4fb0-b67d-155944d8da7f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "615db3f0-51c6-4c27-9f48-5276a46e4048"
        },
        "item": {
          "id": "cda1e7fc-9d0a-4d8c-8aa0-a5c1fd739a27",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a3e5915a-dc96-4cb1-aaab-79a4e60c1a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecde845-baca-4406-a7c4-a978ef6efec8",
        "cursor": {
          "ref": "517f647e-e9f4-4d3c-bc09-08ee1db4e398",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "66ae0e35-d4fd-455b-bc29-856e81f0409c"
        },
        "item": {
          "id": "0ecde845-baca-4406-a7c4-a978ef6efec8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c13fa098-2db7-4401-a0da-cc3f723e85ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18719b68-c660-48cb-978e-6c27dfaec36f",
        "cursor": {
          "ref": "bcbcf29a-ac90-40e9-9211-aeb8df0ed88d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "46585b94-88c1-43e1-9f35-97c76e6db8d4"
        },
        "item": {
          "id": "18719b68-c660-48cb-978e-6c27dfaec36f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01c3d9db-cbd1-4e02-8333-b4b6f166f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b124e-d63d-4ffd-be77-8621551118ab",
        "cursor": {
          "ref": "c3411c04-f5b0-4bf7-963a-8a01c197c6d2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bd540cfb-f218-4f6d-8896-ae303a479635"
        },
        "item": {
          "id": "0d0b124e-d63d-4ffd-be77-8621551118ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "afc006ca-38ab-43a4-9c71-ed03e1c02b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085f0950-6f6f-439e-b0b1-ff45f4d4689c",
        "cursor": {
          "ref": "0ae7f0ea-bad4-4303-a54d-2d03daf8f65e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f79f8536-f942-4d48-9439-8db2cdd98db9"
        },
        "item": {
          "id": "085f0950-6f6f-439e-b0b1-ff45f4d4689c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1b0c593f-7ca8-4061-a2bd-1afd57744209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cbca67-18e4-4c87-be24-b2ee1172a45a",
        "cursor": {
          "ref": "a5b5af10-737b-4b73-b7d9-656b3a3ffffe",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d882e309-3f90-497b-919a-5e7dbe555543"
        },
        "item": {
          "id": "39cbca67-18e4-4c87-be24-b2ee1172a45a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ac4421c4-76f9-4372-91a7-51f6d82d3990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c265ee3-fc94-4f70-96f5-53b22856517c",
        "cursor": {
          "ref": "9f90ddd7-e61e-49a2-99ba-0965b99a9aea",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ec049ff2-235c-4fb5-b741-4b33450074ba"
        },
        "item": {
          "id": "0c265ee3-fc94-4f70-96f5-53b22856517c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "67755872-99a3-45a3-940a-bffd9e9bfb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf14f1-f51f-4e8a-8214-166b43549231",
        "cursor": {
          "ref": "b3440e13-d225-47fb-aace-df8d786cab18",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48b964ec-3f02-484c-982f-05ced3599f2a"
        },
        "item": {
          "id": "19cf14f1-f51f-4e8a-8214-166b43549231",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "51d3d7b6-a213-4155-8ecf-d479d0b541d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef76dd-5e70-4f29-a08b-e02621fb37db",
        "cursor": {
          "ref": "d866dc53-cc60-4376-94a0-b8535a22cb79",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4cc49a13-19f1-4af4-92ae-2fa80ad6ba49"
        },
        "item": {
          "id": "f6ef76dd-5e70-4f29-a08b-e02621fb37db",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "35dff9f0-cbd5-4213-be08-765bf0f5efe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab04f5b-1cfb-4ee1-8524-df924e82bed8",
        "cursor": {
          "ref": "6a803148-bd7f-42b1-af7a-d528543cd784",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "687e3176-a1f3-4c9a-896d-513bd890b968"
        },
        "item": {
          "id": "7ab04f5b-1cfb-4ee1-8524-df924e82bed8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e63086ec-58c4-443c-8307-d60aaccd2d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7a3b6-cabf-4c9a-8b03-7f34992efc42",
        "cursor": {
          "ref": "99144051-59f2-401d-96a9-8f1838a7797c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f8c66120-760d-45f1-8d53-660be2be5e6e"
        },
        "item": {
          "id": "afd7a3b6-cabf-4c9a-8b03-7f34992efc42",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2f654b6d-6c73-4deb-99ba-b2fb0b4922ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a344ec-378a-49e9-ab45-05e2ca3ccce4",
        "cursor": {
          "ref": "7615fc2c-d2b1-41de-8a96-747b7d124bc9",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc934cba-6fbc-494d-84e2-6ceb75000ffb"
        },
        "item": {
          "id": "b4a344ec-378a-49e9-ab45-05e2ca3ccce4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69ccf51c-9176-41d7-ab28-40d4435fe1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d5cbc-41c7-41bf-98fb-a2fb77474fe3",
        "cursor": {
          "ref": "ab25c044-12f2-49fe-98f6-c13643e24167",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6509ad97-9920-4d62-9d04-644d203c95c8"
        },
        "item": {
          "id": "f05d5cbc-41c7-41bf-98fb-a2fb77474fe3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1abe61a5-1398-4c39-9bee-4f1c6fe3ce18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafa7765-df16-41f1-91be-587e962ff194",
        "cursor": {
          "ref": "f2ef41af-d9f2-4b6c-861e-4c562307103f",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f50d3ec6-729f-440e-af18-de1cba53e59f"
        },
        "item": {
          "id": "bafa7765-df16-41f1-91be-587e962ff194",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa2e6ef9-4985-419d-ad86-9b1f92248b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b088a075-b858-4aae-baf6-8b72220d3c38",
        "cursor": {
          "ref": "acfb1ab1-1f14-4597-9d51-e50331f63f13",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6eee2a1a-bef1-465f-8f9f-fe737b3cd404"
        },
        "item": {
          "id": "b088a075-b858-4aae-baf6-8b72220d3c38",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "16140d27-f11b-410f-8a2d-289da780528c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1614ef-5b03-4753-919b-e67da28ef00f",
        "cursor": {
          "ref": "26294c9e-2b6d-450f-9504-52f3b6353a2c",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fbc50891-3319-4588-8097-0ac100f5a48e"
        },
        "item": {
          "id": "6d1614ef-5b03-4753-919b-e67da28ef00f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5f17d001-7e28-403f-a205-f6715ca9b351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9be3bc-160d-4c99-a5fd-593a8547304f",
        "cursor": {
          "ref": "09727301-6533-4f25-914f-8906e5df0c5c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f18229c8-b1a2-4eea-b96c-aa782437398b"
        },
        "item": {
          "id": "dd9be3bc-160d-4c99-a5fd-593a8547304f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c77f1828-641b-4390-9b45-a08bcb042b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aa20ff-de29-480f-8262-59d6c7cb7b59",
        "cursor": {
          "ref": "8dd24de1-57c4-4bb6-a7af-f1e19065f2c0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "73022317-7810-417d-80b2-72f2dc2a8ccd"
        },
        "item": {
          "id": "d0aa20ff-de29-480f-8262-59d6c7cb7b59",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f16f7d87-a6b1-434e-944f-934adff3953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ecefbb-d2ba-481c-85e8-7f3aab16818e",
        "cursor": {
          "ref": "29b38616-2d8b-4d79-94b9-75f428700211",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e2f6fb21-3ede-46cc-b59a-7fa0f008f5e5"
        },
        "item": {
          "id": "d2ecefbb-d2ba-481c-85e8-7f3aab16818e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d136c37b-8b3e-4d05-ab39-7c6159cf80ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987aad3-4f2e-41d3-b754-13a61369dcf0",
        "cursor": {
          "ref": "214dec72-8570-4760-9150-cb1c2f3a8416",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "11cae3ab-712b-450c-8d0e-2bbc4a18a890"
        },
        "item": {
          "id": "d987aad3-4f2e-41d3-b754-13a61369dcf0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4871649d-2cba-4c19-acfa-334c4301b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4ee5f7-d129-4104-b3a4-90a534c827bd",
        "cursor": {
          "ref": "4fcc542b-8fb1-4107-a51d-44a66b68718f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d02ac1d-884e-44ad-91cd-1d6664dad93d"
        },
        "item": {
          "id": "0f4ee5f7-d129-4104-b3a4-90a534c827bd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7bcbad6f-5761-457b-be23-949446449d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa08a9ef-4e96-41f4-a7f4-8582b87b86f8",
        "cursor": {
          "ref": "648c2f97-96e0-4a35-8d71-8303c7ae7336",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "939829c1-5432-4896-acdd-f0dc1416b624"
        },
        "item": {
          "id": "aa08a9ef-4e96-41f4-a7f4-8582b87b86f8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "30185bb0-8d8c-4e00-a3f1-07ac88a0813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d1a0a-40bf-498a-81f3-a4494ff7f5d7",
        "cursor": {
          "ref": "9bd46859-96f5-42c3-9fc2-0e3919c7df72",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9958d4d4-755f-49b5-8acb-46f977badd06"
        },
        "item": {
          "id": "ee4d1a0a-40bf-498a-81f3-a4494ff7f5d7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fca45856-a876-4ec9-970b-037c1f3c376c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127bdf82-d398-4754-80fd-484785d538c7",
        "cursor": {
          "ref": "d5d15ad8-5408-4524-b874-34b30954c11d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89b27ba9-9bda-4af7-b28d-6c0a8be39572"
        },
        "item": {
          "id": "127bdf82-d398-4754-80fd-484785d538c7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1add1397-a3b4-4356-9030-03448eb8cf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98855536-0a9c-461e-afc0-9446e9f94c08",
        "cursor": {
          "ref": "6f99d106-8ac6-4a21-b381-ca45a767b371",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc3e80bb-efe8-4264-9641-43d76a7ad84c"
        },
        "item": {
          "id": "98855536-0a9c-461e-afc0-9446e9f94c08",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "85c4354c-55c3-4e51-bc82-34125545bbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c98c03-9c00-4d1a-993f-f12ed92809e2",
        "cursor": {
          "ref": "45dacfa9-7599-4866-aa60-2e1ed96f8d06",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cacbc0d-299d-4c2d-97a3-693672e3e154"
        },
        "item": {
          "id": "55c98c03-9c00-4d1a-993f-f12ed92809e2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b01b0a1c-b603-465d-97a1-a63fc8579ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7488dddf-362b-44f5-96bb-5a6ee3f20238",
        "cursor": {
          "ref": "691de7e2-8abb-4920-bc82-ae354a8d0201",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d48a1c3e-ab9b-43fb-8fe1-d52da982e1ee"
        },
        "item": {
          "id": "7488dddf-362b-44f5-96bb-5a6ee3f20238",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ee65883-6a96-4f3d-aa02-e1a422ae0262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f42bf-cfec-4326-98b5-50b6a7ef22a0",
        "cursor": {
          "ref": "b41e309d-2a78-4443-86ff-64101258af89",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "adf9c327-550a-4f68-be0b-1638a7f51743"
        },
        "item": {
          "id": "326f42bf-cfec-4326-98b5-50b6a7ef22a0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "db7b7829-99e1-4194-a251-8c58857501b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95df0284-9bac-4487-b834-709fc9229e71",
        "cursor": {
          "ref": "bc1a9055-e314-4d02-82f2-ea87bd8230b9",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c93bf942-3fe5-46ff-925c-c3a42efe59ae"
        },
        "item": {
          "id": "95df0284-9bac-4487-b834-709fc9229e71",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "83d4e738-3463-41ca-82a1-827a8786efb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6eca09-e360-49f3-8f4a-e652153d8a09",
        "cursor": {
          "ref": "705d8f7a-9704-40ec-8593-f6171d27302c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e778c596-2981-4400-911a-e218bcc0ffc9"
        },
        "item": {
          "id": "3d6eca09-e360-49f3-8f4a-e652153d8a09",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8c6cde8d-c3e4-498d-9ef1-3240b0393007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450f6fd5-2b14-4f56-82c0-9e2d6d4a47e4",
        "cursor": {
          "ref": "88a49a31-6a2c-4d84-a08c-2b8a671913b6",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2a2e6be8-9ae7-4d32-826b-58d39c53c114"
        },
        "item": {
          "id": "450f6fd5-2b14-4f56-82c0-9e2d6d4a47e4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e8d5f47c-8a9a-405d-86d1-2d73da0b6310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1e802c-89db-4511-8206-02de2578cf55",
        "cursor": {
          "ref": "2185cd5f-cd55-48be-ba81-756c57944de5",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e31711c3-80e8-43bc-a4c5-73f372c0b635"
        },
        "item": {
          "id": "ff1e802c-89db-4511-8206-02de2578cf55",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "096e1f4b-3b57-406b-b364-e06d26c0d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120ae63-779a-4f79-a1d3-a2f39d6d4d6b",
        "cursor": {
          "ref": "0d5374e6-fc98-4cd5-b775-f6ad2f597683",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5c65e417-5fe0-4426-837d-f7b21a152e60"
        },
        "item": {
          "id": "b120ae63-779a-4f79-a1d3-a2f39d6d4d6b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6fb8ad7-382d-4592-86ff-c0fb5d794018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0c5a1-e6fc-4bd6-8a85-a8f5e8b48146",
        "cursor": {
          "ref": "9179e6f3-2d57-44da-92cc-6efcb7ad7639",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2d0dc2de-ecc0-4628-8a71-4467e2168875"
        },
        "item": {
          "id": "36c0c5a1-e6fc-4bd6-8a85-a8f5e8b48146",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cced7e2d-94e3-4361-8780-7f5adba3920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432a73c4-426b-4f70-9623-934d943804db",
        "cursor": {
          "ref": "a3bf1a73-43fe-4a45-84ed-bf9d8314bb41",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0b9945a-b852-4fa1-a24d-017331a5bf8d"
        },
        "item": {
          "id": "432a73c4-426b-4f70-9623-934d943804db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7376b76e-a232-4e04-9f1d-0b2075e52803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be70bbf-f7d4-4915-ba32-46655ee4462f",
        "cursor": {
          "ref": "0ba879e3-04f7-4abf-844f-e5e40995a19d",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc5cf944-b708-4eb2-9da0-bf51eb9fb0d3"
        },
        "item": {
          "id": "7be70bbf-f7d4-4915-ba32-46655ee4462f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bc4ae2f5-4276-40a2-a99c-cc72cb52ebe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288c589-4487-4f12-89ac-3ecba431037e",
        "cursor": {
          "ref": "82330cee-e45a-40d5-9891-81d5f86e8d6c",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3810ec3-fc22-4e48-a156-c603a868175e"
        },
        "item": {
          "id": "5288c589-4487-4f12-89ac-3ecba431037e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fcc650e0-42d6-4614-907f-160efe4eaa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe2baec-ff6d-4d78-9692-d22db1ba7618",
        "cursor": {
          "ref": "24cafe87-acc1-4fb9-9655-d3237fb9251a",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f517accd-97e8-4996-9a17-d4c17968ba8c"
        },
        "item": {
          "id": "cbe2baec-ff6d-4d78-9692-d22db1ba7618",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1986c1ca-e789-4e41-91dc-814ff65b4f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d5521a-0289-4780-b27a-969fba941655",
        "cursor": {
          "ref": "009eb6f7-a0f4-4be4-9cc3-0ac7394b6868",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1256748d-bc8a-448e-ac5b-88d63f3fab84"
        },
        "item": {
          "id": "b0d5521a-0289-4780-b27a-969fba941655",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c84ba0b5-ac49-4e75-abe7-9553cbe1bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fcfaaf-87a3-49b3-8921-c844bce6451d",
        "cursor": {
          "ref": "2f603af4-c6fe-45e7-8b41-6ba8e041f365",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d44208c5-e6d0-4dc2-af15-38bfb33fbcc7"
        },
        "item": {
          "id": "07fcfaaf-87a3-49b3-8921-c844bce6451d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8b0ca2ab-c9a2-477b-bf67-75550cb15e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aacb243-db3a-4c9b-b93e-4ff01ff4a299",
        "cursor": {
          "ref": "1a91b789-a93e-4dec-8553-bfed9bafb860",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cd99a32e-74c4-49f8-8804-fd0f1c48b474"
        },
        "item": {
          "id": "1aacb243-db3a-4c9b-b93e-4ff01ff4a299",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "38813875-cb61-494e-a523-f9add7a87c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eef8dfa-022a-4751-92f0-5bad8c2b7820",
        "cursor": {
          "ref": "137086d1-5066-440d-b54c-76e0abd55c3c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0aa341a2-c280-4c9d-a26a-4f9111ea8204"
        },
        "item": {
          "id": "8eef8dfa-022a-4751-92f0-5bad8c2b7820",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4df8dd1d-cdd3-48a1-b528-36424e7988a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4139c6-df95-412d-8ba5-85d7620dc73b",
        "cursor": {
          "ref": "bde4286d-6137-40b0-b135-cca96154fd19",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bf62b9d9-713c-4f57-8bff-42527cea0cde"
        },
        "item": {
          "id": "8c4139c6-df95-412d-8ba5-85d7620dc73b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "382866e8-c86d-4800-ae56-ccd1848fe5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdbd22a-2e7b-4c68-b9b0-80227545615a",
        "cursor": {
          "ref": "5e753c3f-794a-457e-8adf-155d2914434c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7842c2e8-1d61-4443-b26e-4fe942da9e04"
        },
        "item": {
          "id": "dfdbd22a-2e7b-4c68-b9b0-80227545615a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f2d672ac-63ed-48e4-ba9b-efa0ca8611ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69406912-5099-4e8c-9647-b411208d8233",
        "cursor": {
          "ref": "23fa5014-43a2-4cee-aade-c94a65e2e566",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ba22a0b-917d-404d-93b2-8c756c2d3cf8"
        },
        "item": {
          "id": "69406912-5099-4e8c-9647-b411208d8233",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b68d6eae-9848-43b8-89e7-78fac694168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e3b53-2f93-4fac-b7ea-e4a71df68e5d",
        "cursor": {
          "ref": "9deb6832-04bc-437b-96a0-798275f1fa78",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e320e836-144c-4ebb-b5ba-3bb26d3a05cc"
        },
        "item": {
          "id": "d81e3b53-2f93-4fac-b7ea-e4a71df68e5d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d702a36e-a197-401f-8a72-1f36ae1b0a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca85a38-e7f9-489e-82f4-3e7544dc191c",
        "cursor": {
          "ref": "13c074cd-29df-4479-9b20-0445cee4c94f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "41163357-adf0-4f19-a177-40158b92e4a6"
        },
        "item": {
          "id": "fca85a38-e7f9-489e-82f4-3e7544dc191c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "90c646e7-d07c-4d71-9788-f6d7a92551e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0ef4a-e94d-4c5a-a032-a6c419c93786",
        "cursor": {
          "ref": "fb025248-1022-4637-a6cc-7687a4d0a438",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "513e0795-d5f2-4e22-b600-a0d27ba6bb44"
        },
        "item": {
          "id": "fed0ef4a-e94d-4c5a-a032-a6c419c93786",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6e8846b7-4eac-4cc1-b086-a4e13a8a3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c055fd7-132b-4d18-91f7-8e92c8a632d9",
        "cursor": {
          "ref": "82c7ee33-37cc-4875-9967-4459e1f046d9",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "09aef464-266b-4343-b65a-9b8efdc1d9ea"
        },
        "item": {
          "id": "2c055fd7-132b-4d18-91f7-8e92c8a632d9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b72717a8-d6a4-4920-bc6c-23235a7f90cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb7a3c-6051-48b8-bc0a-14e368377653",
        "cursor": {
          "ref": "40ac4991-8dff-42e8-8eeb-007b4ca63f14",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2c81182-08e6-4453-bf46-efb68ace8594"
        },
        "item": {
          "id": "facb7a3c-6051-48b8-bc0a-14e368377653",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e47c70c-e6cd-4fbc-b22c-0a9d5ca311ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f172e15a-229d-41ee-acda-97f351981fef",
        "cursor": {
          "ref": "867368d9-febe-4df0-9982-c6095b62a05e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "343a2a59-564b-4137-9c06-15bb28acfe0c"
        },
        "item": {
          "id": "f172e15a-229d-41ee-acda-97f351981fef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2cc684b7-0f65-4b78-a914-72b9ca08ae4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5cafc6-5d49-4623-9694-d417852acc76",
        "cursor": {
          "ref": "14129116-752a-4acf-9aa5-89cde10d3157",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8726ff41-e80b-4684-bcb6-f9fcc7458dbe"
        },
        "item": {
          "id": "df5cafc6-5d49-4623-9694-d417852acc76",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d5411d41-ae76-49b4-8889-177869318eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b337aeb-809b-42cf-b5ba-998bb246734b",
        "cursor": {
          "ref": "f2368a31-ca19-4138-a053-3110ffbed12f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d8e721b2-b78a-4084-b268-28591b3069d0"
        },
        "item": {
          "id": "1b337aeb-809b-42cf-b5ba-998bb246734b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b88bdf63-b622-48f4-81a6-b1f2e6140fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921a95c-9760-43a3-bde3-a9a335726fbe",
        "cursor": {
          "ref": "67729c2e-925f-4408-8304-f027a1eb5686",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "17b28f6e-7e6f-485c-bd20-709ed6eb0cd3"
        },
        "item": {
          "id": "4921a95c-9760-43a3-bde3-a9a335726fbe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4caa765c-1a8e-4df3-8b94-dce7f3f43196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6dfef3-25b6-462b-a2fb-30f7e17b0af1",
        "cursor": {
          "ref": "ef7ed8b6-4c2d-415c-95df-7bd9e7a70161",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7e55855c-3d9c-45d8-adb4-265df133f5f9"
        },
        "item": {
          "id": "6a6dfef3-25b6-462b-a2fb-30f7e17b0af1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7b54f4ec-8589-410b-8d9b-f12e25657ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f5f46-ab22-4b78-b8e8-e62519c034aa",
        "cursor": {
          "ref": "ba47e8dd-a942-45f4-b945-a83d0c79f3c4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ed161a0c-23b1-4d93-a915-6f4b15d64692"
        },
        "item": {
          "id": "ec5f5f46-ab22-4b78-b8e8-e62519c034aa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c31f4926-e697-4841-a06a-6c802cb1c194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9a2da5-c047-4aa2-8ddf-f4746282432d",
        "cursor": {
          "ref": "d67ceeba-89bb-4963-b0d0-8279177a30a4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "86485da5-04f8-44d8-9fe2-69d179d9aefc"
        },
        "item": {
          "id": "4c9a2da5-c047-4aa2-8ddf-f4746282432d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9aa5406c-ca4c-4230-99b2-7217ae325a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17919ec0-eca0-402a-850a-d1b9f2a5c0cb",
        "cursor": {
          "ref": "2f96d447-ef2a-49fc-bdd5-914d58a7370e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ba40c7f2-f014-4033-8391-cf6b5b8c043b"
        },
        "item": {
          "id": "17919ec0-eca0-402a-850a-d1b9f2a5c0cb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "84399c3d-9e6b-44a5-bafb-c0fb29bc33c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe018949-ea2a-4a6d-b718-9e8f3d45728b",
        "cursor": {
          "ref": "a34b3b67-536c-467c-ba19-65c5311bb202",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "735c42fd-1aa2-44d2-8581-1b8c9bd32fcf"
        },
        "item": {
          "id": "fe018949-ea2a-4a6d-b718-9e8f3d45728b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "95592911-3415-4d76-90b7-0eab78ad856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89182e61-392b-4e17-8d18-d6a0fa9cba69",
        "cursor": {
          "ref": "04469cb8-d160-4cac-b1d8-0a812bc3ca2e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7823f786-7d56-4bf1-9372-b8a4cc26af92"
        },
        "item": {
          "id": "89182e61-392b-4e17-8d18-d6a0fa9cba69",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "24b2593f-d140-4631-a2f8-ececa4eea320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168261dd-e025-4c4c-bb90-021963eaa8b3",
        "cursor": {
          "ref": "9b13c4e7-e4a7-48aa-b835-1d0889bfa99b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f9a3d2b5-7e46-4d35-8b56-55e22002281c"
        },
        "item": {
          "id": "168261dd-e025-4c4c-bb90-021963eaa8b3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7ba3a2f8-eb14-4e1e-9cc2-e1963962fa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232cb68c-7835-4bdd-9314-8e000421f677",
        "cursor": {
          "ref": "82c2d8bf-8f53-48e9-a7b4-9aa4908e01f2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5470a202-ff67-44ab-be12-4d217c1ea150"
        },
        "item": {
          "id": "232cb68c-7835-4bdd-9314-8e000421f677",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f19ed6c-afca-4771-ba5a-f6016a860974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd95c66f-7521-4e91-8280-5968b0a8b6ef",
        "cursor": {
          "ref": "d33d7c42-8ada-4f76-837a-b22bbcf3de1e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d49c99e1-bb37-4ddf-8727-347ea930db9d"
        },
        "item": {
          "id": "bd95c66f-7521-4e91-8280-5968b0a8b6ef",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8e2c8ac1-560c-4723-a770-e766516cd6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2899c05e-23d8-4277-9cff-a33038c59f0d",
        "cursor": {
          "ref": "43cdce79-3139-47ae-bfc1-09b192f22511",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "08e121cf-4f90-4eea-ba50-8ad343a357f5"
        },
        "item": {
          "id": "2899c05e-23d8-4277-9cff-a33038c59f0d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57204751-a7ca-40c6-917d-ba4c51d589d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee0a0f5-fb82-494c-9e20-77ebc652f4b3",
        "cursor": {
          "ref": "3c4e89ec-6804-47b6-baa6-16f2c02a6e7d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5fbf1bd-abd1-4607-88c5-0bfa69868200"
        },
        "item": {
          "id": "aee0a0f5-fb82-494c-9e20-77ebc652f4b3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8e4352c-0bc5-497b-800d-c1b93e15448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772cde1b-744c-4c57-ac28-b05be1570815",
        "cursor": {
          "ref": "3ad20cb4-21ce-4dd2-84d3-5e61baba68de",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7c97b92-1eb1-4ed7-a025-8e40009eeccb"
        },
        "item": {
          "id": "772cde1b-744c-4c57-ac28-b05be1570815",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48c0291f-462e-4aed-856e-7267429d7ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16626e3d-fb5e-41f5-ac5f-9ff66b4d2b52",
        "cursor": {
          "ref": "bb9a1f93-64c6-4951-ad4c-e56884ac5352",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7397c65a-5d11-45db-904e-3849326bcf75"
        },
        "item": {
          "id": "16626e3d-fb5e-41f5-ac5f-9ff66b4d2b52",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "573173b4-0dac-4b7e-9d4a-11a0a59a5981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b0b971-e69c-429e-a96c-33cf35200f40",
        "cursor": {
          "ref": "608046aa-8335-4db7-9801-7b4f8e8fcf53",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ba8d0a83-94a6-4833-b654-8e7c6080ea72"
        },
        "item": {
          "id": "32b0b971-e69c-429e-a96c-33cf35200f40",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "06359a6a-b975-47ef-97b3-4f34744ce21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9853c-e363-41d3-927b-5606935e527a",
        "cursor": {
          "ref": "392020d7-ee28-405b-bfe9-d4c372cee9a8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5f1486b7-5a7c-4e3f-aabc-77765be8b8a6"
        },
        "item": {
          "id": "dcb9853c-e363-41d3-927b-5606935e527a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f4f2c465-25b1-40d5-8812-cc751c525416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66cff1d-5857-4827-bf16-bfd323230e5d",
        "cursor": {
          "ref": "c6acbe77-7e93-428a-9543-79614a713df3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ab902a9c-75e5-4eee-a80e-493a9cd87bab"
        },
        "item": {
          "id": "f66cff1d-5857-4827-bf16-bfd323230e5d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fee15d61-c35c-4d77-9da6-390601f4beb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e465b0-497f-4440-82ba-d71dcfe11b14",
        "cursor": {
          "ref": "0c8f20fb-b8de-4c1e-a9f4-9ab2a010594a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2f9dbfbe-bf07-4f73-a241-f55ec4e4af4c"
        },
        "item": {
          "id": "49e465b0-497f-4440-82ba-d71dcfe11b14",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1a612de0-32ee-4fc0-b408-e30b4633a4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11da0c9b-8a6f-46a3-8588-f9b419145ebf",
        "cursor": {
          "ref": "2647dece-1bc3-4821-92aa-32e3a0da477c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e42303ab-06b3-4ac7-8342-272702e4dfcd"
        },
        "item": {
          "id": "11da0c9b-8a6f-46a3-8588-f9b419145ebf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "41da92fe-cd30-45ab-9a4d-5548026836ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703dd731-f34b-4e02-92ab-9f2d5b53e58a",
        "cursor": {
          "ref": "94f5d6bb-6da8-44f9-bf8a-7cdf5dc113fb",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f0ca31cf-8c81-4a76-aa04-c3d927ebea13"
        },
        "item": {
          "id": "703dd731-f34b-4e02-92ab-9f2d5b53e58a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13f7482b-cc50-493c-ad53-cf3848a6cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7f8b66-e144-4604-b58f-80f1c0e11823",
        "cursor": {
          "ref": "25d0ce47-44e5-4ced-a846-2f829ec7cce8",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "35ba763c-a664-4b07-b2a9-bc06ebfb21d3"
        },
        "item": {
          "id": "fa7f8b66-e144-4604-b58f-80f1c0e11823",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "624b2af6-032d-485c-b5b4-d35d00238a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249c9c9-9685-4cbb-9086-45a7ed542718",
        "cursor": {
          "ref": "270630fe-4777-4a15-9950-e11706eff90f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "db6de18e-3f74-43fd-a359-c662d8b9e506"
        },
        "item": {
          "id": "8249c9c9-9685-4cbb-9086-45a7ed542718",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a77d3dd7-4d2c-4a44-8e75-8eb9365f0c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd0bba6-7f86-4bfc-8c7b-e9c88bd9133b",
        "cursor": {
          "ref": "6ec8da1a-9e53-4849-8892-5cd6906564cc",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07998ce8-f109-4c46-b058-770b8061b649"
        },
        "item": {
          "id": "4dd0bba6-7f86-4bfc-8c7b-e9c88bd9133b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "671b6a64-cf42-410b-8f8a-f39ed37785f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c117acf-764a-4b42-937e-460194493efa",
        "cursor": {
          "ref": "3ed1916f-44a4-476d-bf5f-fb8e279176f3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8483f30e-886c-4a02-82bd-3e552dc1bf34"
        },
        "item": {
          "id": "4c117acf-764a-4b42-937e-460194493efa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9a07a3de-d2bd-4abd-96ad-59000ca8173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cfef9a-4f6f-448b-bc82-816e74f4cd75",
        "cursor": {
          "ref": "0793cc7b-ac96-4cb8-a56f-cba16e15d131",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2c922a5-3404-4f03-916d-dd2bf46cb0d7"
        },
        "item": {
          "id": "98cfef9a-4f6f-448b-bc82-816e74f4cd75",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5714ff0-4d61-429f-871f-dadf9b9b9bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae70517-afd3-4932-8fba-cad66fd5c238",
        "cursor": {
          "ref": "138576b5-0dc4-4096-beb8-2fe12f54578a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "775cb77f-14d3-4f18-beb9-81ae6b37cc47"
        },
        "item": {
          "id": "1ae70517-afd3-4932-8fba-cad66fd5c238",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "83eb79f0-f9da-4b3e-a857-72e0c7f29c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7357163-54e6-452f-b7ed-c0bd5ab740c3",
        "cursor": {
          "ref": "a122f90c-e383-4439-aeae-856c0a5246f1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8bb3bce8-e8f1-454b-87fc-0ca3715697cd"
        },
        "item": {
          "id": "d7357163-54e6-452f-b7ed-c0bd5ab740c3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e411e732-ce88-480d-b4a7-d5765e17dbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78d90a4-7c68-4077-a3ea-7425f4a4648f",
        "cursor": {
          "ref": "949aeb90-fb1b-4f58-b624-6dc45aa98735",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0adec82a-d798-4c6b-9afb-47c3c8235910"
        },
        "item": {
          "id": "a78d90a4-7c68-4077-a3ea-7425f4a4648f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c73ee1c9-0616-4e06-9489-a87800129869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8080f78-fc5a-40d5-b6b9-8b3898230d05",
        "cursor": {
          "ref": "77c76e8c-6274-42bb-872a-12356fd1a391",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fc92a553-1553-4eec-90cd-0791eeaf40cf"
        },
        "item": {
          "id": "e8080f78-fc5a-40d5-b6b9-8b3898230d05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e3c19ce1-9668-4ca3-b8ee-758e0f486046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f389e8-d660-4ba0-ba2b-8c6a458ea9ed",
        "cursor": {
          "ref": "8cee9c7a-3ff7-4db6-99ee-6904891de298",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0fdf9fa-4923-4a31-9881-80043e0d92b2"
        },
        "item": {
          "id": "89f389e8-d660-4ba0-ba2b-8c6a458ea9ed",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d16fea8d-587b-4e56-afb9-6c9cb244b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0737ba50-80fd-4a82-85e2-ae4c75d95f2a",
        "cursor": {
          "ref": "d2525670-31ad-4f94-9d51-e2e57c8cc890",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36b7ff3d-ccd1-4ac4-b7f2-1226027dd995"
        },
        "item": {
          "id": "0737ba50-80fd-4a82-85e2-ae4c75d95f2a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4c476503-5b39-438f-b6f7-4a6d4ac5481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355460e2-e9f8-4cd5-b1ad-09e459e76124",
        "cursor": {
          "ref": "a1aff0a0-4674-4830-ae9c-de4ee352ea35",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6e19871f-334f-457b-81b1-db8dbb3e36bb"
        },
        "item": {
          "id": "355460e2-e9f8-4cd5-b1ad-09e459e76124",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "51d31b3c-9a64-49ad-a0db-adedef1e2356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d437cc04-7366-4eea-8eb5-a7d36bcf6ee6",
        "cursor": {
          "ref": "8ceb8e80-713f-4fd0-96ee-d67e88ca7246",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "acb0d2cd-6eca-4af6-8d65-3122563749a7"
        },
        "item": {
          "id": "d437cc04-7366-4eea-8eb5-a7d36bcf6ee6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d77bea21-b56c-45c2-9d94-d4717875c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b369136b-d425-4c3f-8a85-631a06090567",
        "cursor": {
          "ref": "eba90f00-08b6-4e3c-92ae-657b2b819d08",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "200fa3f9-4405-4230-aa64-a62bb6b833aa"
        },
        "item": {
          "id": "b369136b-d425-4c3f-8a85-631a06090567",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3254ab14-8f4e-41c9-ba21-3665415ba720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d387ea0d-e9e9-4dad-86e8-ebf96079f012",
        "cursor": {
          "ref": "909b1090-fd93-43d9-9c44-5327982ca8f4",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b9c4d2a5-e1b9-4cce-ac64-0c643ccef562"
        },
        "item": {
          "id": "d387ea0d-e9e9-4dad-86e8-ebf96079f012",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5b30a7df-35bf-4d77-91e1-dd68dd77df36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e65f26-2714-4dd3-98a7-307260799e03",
        "cursor": {
          "ref": "0e20de8d-b996-4c65-ba96-bb9951b55c74",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f40ba683-98e9-4b00-a978-7e863dd288e3"
        },
        "item": {
          "id": "20e65f26-2714-4dd3-98a7-307260799e03",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af31336a-942e-4a17-903f-07fcbc73ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe4a335-25b9-4a05-be13-e58c7cf01e8e",
        "cursor": {
          "ref": "2245c394-c0ff-4420-b670-13e48e823dcc",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5ef7e72d-7611-4119-92d0-c3319df547c7"
        },
        "item": {
          "id": "afe4a335-25b9-4a05-be13-e58c7cf01e8e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df770ced-0352-4278-86e9-f31e8cd0c6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547f0d1-a13c-4989-bfe4-42622078c21c",
        "cursor": {
          "ref": "4e6a3922-c36c-480e-b03b-c1213bb9867f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9f2654e7-927c-4683-92d9-22bc059a1e99"
        },
        "item": {
          "id": "a547f0d1-a13c-4989-bfe4-42622078c21c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6074f3c1-a959-421f-88bb-2b36711e8d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc45b6ed-b114-47eb-9315-a4ce80937834",
        "cursor": {
          "ref": "02d8af0b-2219-40ea-8262-19c6f01091a2",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "991bf3e2-cd6f-4634-b6ba-5d8eab59ea9e"
        },
        "item": {
          "id": "fc45b6ed-b114-47eb-9315-a4ce80937834",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4c1b5ce3-d418-4bbf-9876-84b0035fedaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c761a38-8f6f-485c-94d9-b5bcec2bbb9e",
        "cursor": {
          "ref": "cb2eaadb-548a-48ad-ba84-c548690d9879",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "93da2936-2f2b-4ca8-a074-a2078129cd47"
        },
        "item": {
          "id": "7c761a38-8f6f-485c-94d9-b5bcec2bbb9e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "30422c72-d756-46b3-bf88-1c3c4dee6895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accf2daf-96c1-47b5-b43c-d2ee299913ac",
        "cursor": {
          "ref": "094a0776-c710-470f-9ed5-d21a4aa87ccc",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1f40832c-f959-40b7-980f-6cb31376972f"
        },
        "item": {
          "id": "accf2daf-96c1-47b5-b43c-d2ee299913ac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "78f12820-dbc9-47ff-8c08-ceb4d32f6b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0201128b-4b75-420a-8efc-11210c8fd448",
        "cursor": {
          "ref": "047f54c7-1a3e-4888-8e2d-2ba206d59895",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f5547acd-b127-4ef1-84ca-6dd5ec175234"
        },
        "item": {
          "id": "0201128b-4b75-420a-8efc-11210c8fd448",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5cccacd6-4b4d-4700-86c3-b4b802ad2249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb506b3-46e6-493e-bd52-798cee1b4f11",
        "cursor": {
          "ref": "9effbebd-2423-47ab-ba06-d4f6c75f7d12",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e6bd42d1-4fe2-43a5-8dd5-74c9a0117811"
        },
        "item": {
          "id": "edb506b3-46e6-493e-bd52-798cee1b4f11",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16b3c95f-e28a-48fd-932e-ac0e96c7e663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9c10a0-0e10-47b5-b0b6-20a559fb946a",
        "cursor": {
          "ref": "5ffce2c5-86e5-4a0e-af42-31060f8e582e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d6094900-8df3-49e3-86c5-2eb4b66dbf2d"
        },
        "item": {
          "id": "1f9c10a0-0e10-47b5-b0b6-20a559fb946a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "cb3a7586-4ffa-49c1-b91e-ac245c9978a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d611ebac-611c-4112-a488-47f7a6ccb2c9",
        "cursor": {
          "ref": "aa206a8c-c913-422b-bfb3-d3fa9cd14533",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de82510b-fafd-4006-829b-29bf3fd72b60"
        },
        "item": {
          "id": "d611ebac-611c-4112-a488-47f7a6ccb2c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a80dc338-2d53-4120-a62c-2f34b96d7165",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc98db51-4976-4119-b2a1-febf35fa960d",
        "cursor": {
          "ref": "f9dbbb60-6048-488c-951c-35dd876a6004",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d4e04d8-ff65-46f6-9506-ba669a7b5b84"
        },
        "item": {
          "id": "dc98db51-4976-4119-b2a1-febf35fa960d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0adb92ea-fd2e-4667-809d-9f28a33580f8",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5054d4-d5ab-4ba6-be69-d6d14fc77521",
        "cursor": {
          "ref": "03412bdf-2b3d-407f-9b8e-90f5d6588bcd",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6566eda0-e3c2-427f-b1ae-41cf325867ba"
        },
        "item": {
          "id": "ea5054d4-d5ab-4ba6-be69-d6d14fc77521",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9b30ba9-ad53-470d-9b5e-b9fa530c308d",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d052844-7c78-44f8-b818-e009c11f7473",
        "cursor": {
          "ref": "b966fdb9-048c-4014-bdfc-0bd7c3a51efa",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a941ddcc-4ead-42e8-ba24-c54c8fa17e7e"
        },
        "item": {
          "id": "9d052844-7c78-44f8-b818-e009c11f7473",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e6b0a428-91fa-4637-9885-4d09eb9f1de8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d052844-7c78-44f8-b818-e009c11f7473",
        "cursor": {
          "ref": "b966fdb9-048c-4014-bdfc-0bd7c3a51efa",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a941ddcc-4ead-42e8-ba24-c54c8fa17e7e"
        },
        "item": {
          "id": "9d052844-7c78-44f8-b818-e009c11f7473",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e6b0a428-91fa-4637-9885-4d09eb9f1de8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d052844-7c78-44f8-b818-e009c11f7473",
        "cursor": {
          "ref": "b966fdb9-048c-4014-bdfc-0bd7c3a51efa",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a941ddcc-4ead-42e8-ba24-c54c8fa17e7e"
        },
        "item": {
          "id": "9d052844-7c78-44f8-b818-e009c11f7473",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e6b0a428-91fa-4637-9885-4d09eb9f1de8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51180be5-7e4b-4802-823c-d5bf923fe3df",
        "cursor": {
          "ref": "6f4f01ec-44a5-4e44-86a5-68cc99a83794",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9ae41da2-e778-4043-9461-a2283f94790b"
        },
        "item": {
          "id": "51180be5-7e4b-4802-823c-d5bf923fe3df",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f08afcd2-cc63-49a5-9d08-9a0c5ba88d1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c1aaf-413d-4301-bff7-35f2f6796a92",
        "cursor": {
          "ref": "13522876-4201-4c2e-9af3-e3105996098e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7432132-216c-4221-94f5-d29dbd454206"
        },
        "item": {
          "id": "220c1aaf-413d-4301-bff7-35f2f6796a92",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5024cfcb-485a-497f-aacf-2431f6775331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c1aaf-413d-4301-bff7-35f2f6796a92",
        "cursor": {
          "ref": "13522876-4201-4c2e-9af3-e3105996098e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7432132-216c-4221-94f5-d29dbd454206"
        },
        "item": {
          "id": "220c1aaf-413d-4301-bff7-35f2f6796a92",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5024cfcb-485a-497f-aacf-2431f6775331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4837b4-3d8e-4242-9e26-0751ebc9a824",
        "cursor": {
          "ref": "8fb374fd-00c3-49ae-9059-b4363065a1f1",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7fefd2b3-1c39-41fd-b7b0-005bafbd1209"
        },
        "item": {
          "id": "2b4837b4-3d8e-4242-9e26-0751ebc9a824",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e3aadd94-364d-45fd-bbaf-97b64527f4a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819ae5eb-040c-48ce-8775-b300c7f5df5b",
        "cursor": {
          "ref": "2009e8c3-4d20-41e2-8db6-8d6e08396495",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8839a495-91cf-4277-8ffd-01ab1ab086df"
        },
        "item": {
          "id": "819ae5eb-040c-48ce-8775-b300c7f5df5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd92f97c-3e7d-4ac6-820d-4fb24995c3c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819ae5eb-040c-48ce-8775-b300c7f5df5b",
        "cursor": {
          "ref": "2009e8c3-4d20-41e2-8db6-8d6e08396495",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8839a495-91cf-4277-8ffd-01ab1ab086df"
        },
        "item": {
          "id": "819ae5eb-040c-48ce-8775-b300c7f5df5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd92f97c-3e7d-4ac6-820d-4fb24995c3c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9acb90f-6e9d-482c-a2c0-3954721e0272",
        "cursor": {
          "ref": "7793b74a-0031-4c5e-88e2-1d662b87f664",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f901e49e-c6f1-4775-b850-eef0a62216fd"
        },
        "item": {
          "id": "f9acb90f-6e9d-482c-a2c0-3954721e0272",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "993b56e5-9cd5-40c4-bfd0-0085d3b913b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}