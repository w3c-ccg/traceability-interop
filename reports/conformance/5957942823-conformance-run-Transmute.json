{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5187c7e6-ef5a-4e23-a793-d70cda65793f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7b86b534-4cdc-4feb-9cc3-9a1e5be2b024",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1613e57d-c9ee-4f68-97ef-ba1a39571778",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "433722de-7399-4513-b08d-fa7341d449c2"
                }
              }
            ]
          },
          {
            "id": "6d32c0f4-cbc3-48e5-8686-f537e0801da9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "498c101c-f75a-4754-bcde-05e642e8a7a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b426e76-f9d6-4007-a262-448578d4920e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e451171c-b461-4c15-ac8b-da0cf0053211",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "adcdbcfa-f830-4d6c-b923-9003a8d7f9c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1590da2-d9ab-4e88-a38a-234b97932399",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "014e2f91-7719-43c6-ac15-37bdf91ad739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a412e27-e139-4450-a8d0-c0f1cf987eee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fc4d8c9-7e8a-4b1a-b168-fbd86e90631a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4e9b8cb-f0d8-44a2-b37d-63e29495e4ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea261a32-fb73-4eb7-8c62-c4b685557db9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ccefc4d-48d4-46b4-aba2-ddecae4eee0c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38b93912-d895-413a-8930-a4dcd7dbf386",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7332ab2a-1299-477e-8252-7238634e24db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4291b778-0d04-49cb-9db8-6944710e266a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75dc5a7d-6ed3-482b-a6b8-c5dbc169b2e3"
            }
          }
        ]
      },
      {
        "id": "c0bf9444-4b99-41b8-8d09-313d4ed1b1b4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f622b7f8-5651-4865-a8d2-6fdfb8cec395",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0eb5cb40-539e-4a31-a1a6-72900ccf07aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b677210d-72f7-4edd-98f0-9248b6afb274",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae24e61d-01ea-4f38-8c86-31cd80a9acf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a862bab-0087-4ffa-acdc-d2cf61e87b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539b17c-19fd-427e-8d81-b1979d615ee3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf152358-ed72-4c18-bc14-1e81d5ce7641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9d58b7f-9a5e-409c-a402-0b96cf787057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18450943-c6c0-4a54-94d5-bf31a7139b51",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4852fd-a570-41fb-8c24-a367316ea8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31bc2c14-970b-4e21-b683-8bf8140cbb79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db5612a8-36f1-4ce4-a6f3-74ad4d2d3be8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65c50c76-848d-45cc-a077-f5c59edd7c84",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acbf4c4-8598-49a8-975b-9ec3ff597c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07405447-4dbf-4ca5-93f0-f5db726e1365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b131533-ba4a-43f3-9450-163cec8810a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeb58c4-5d63-4cb3-81c7-80abe765468c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d05d2947-1e80-4d96-aaa5-4f8ff7fef808",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7d2ef34-3477-4b15-9589-f000f3483e25",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a20ea201-4927-4ed5-a74c-d5090983e5a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a6636c0-024c-4cdf-8508-cb7404ed23fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bfdc724-6f95-4d9f-81b9-270a37ef7b2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "965e3a4d-fcdf-495b-a4cd-2e9a1f5e822c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c694e8e1-42ca-4681-bcb5-d935585cffb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd34ed54-415c-4c85-a782-52fb9fb449a4"
            }
          }
        ]
      },
      {
        "id": "0f0c5b05-7d31-4aa3-912a-09dd770f1dd4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1bba8918-13ba-4e87-9101-64583880c1e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e83eabdc-519a-473c-a005-9fb025701211",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e12a4036-4b01-4c86-a8c8-fe394bc42263",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20471243-e486-422c-b7b6-d440a29f153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e2eba5-fc15-4007-9a07-5e53cf30809d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d735c198-063b-42ec-8f70-69a7f9cd145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e439692e-0d94-4d85-8bd3-6615bdfc5dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ec5c5b-19d8-49f6-ba5b-854dce0306f3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6b7d88-18ef-4e62-ba73-8e4a32bbe40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2431452-8982-498c-89fc-1279c3f4fd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f808ba0a-2383-48e2-b3cb-a893abe41af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b5a492-2d51-43bf-8d17-156a838fa1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5365f9-be52-49f2-b85c-78160c0f67fb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e022b2-7ba2-4b5d-92c1-1420eb94767c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0905ff-0c9b-4ffc-b750-249d0b44fa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f27f5ce-e4de-48d6-b509-ba6295884458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54ff8130-7709-4ff6-93e3-c1cad56233b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded9d9fa-d04b-45ba-ab07-dbafce8969b7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017809b-3502-4a18-993d-e0b816ea4572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106271de-b8dc-49b7-a1cd-26419a5c3074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2723f937-7406-4802-9e02-895a6d7997de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "029ace2f-ff74-447f-b61a-5fc93a01c383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a05c7db-d2b2-4785-ae9a-78275f03ce5d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4aa92c-1cc7-4163-a9f0-f04b19e86097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49328554-4145-4cc3-b115-6c806666591f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177d35d0-8e5c-445e-9480-bb51f824de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74f14bf7-8c8b-432b-ab00-5358b8bffead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfb3dd3-e633-4a29-90f6-7e21b9f68a36",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f83d17-7cae-4cdf-98bd-a3eb40eff672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b824a03d-b1aa-4407-97b7-0353133ec5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddece38-7f2e-4952-a5e0-1c248213e930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fc1d26d-ee1e-4b92-b0ff-b6c3435ca487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217292dc-3a50-46e8-bffc-cbbcf00adc9f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b852f7f-8e12-4049-99a2-b5833430eb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551537e7-553a-445a-8b3d-33511fa3bc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9343ed-4aa9-4725-9693-84235c75e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58aca804-a40b-41fc-8731-c32a65e203e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e5eb4c-efc2-47bf-ad39-5b670eb86a17",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87bf8ec-4304-4c3d-82b9-4e46ead8360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545efa90-dd95-4dd4-9cef-fee98c9c6d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2e42d4-9b16-4405-9bb5-d78dfce64901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56dba37-f6a7-4db2-af45-eb28d55e0b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca113a-25c8-4a32-89cd-21fdfdd186eb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52746a44-aa6c-4e0e-87bc-223d657864b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e939fdd6-2b5e-4bd9-adec-2661b362ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4899d99-bbcc-49c3-8375-f493471aec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6ace85c-624c-49d7-8ad5-701db200b14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2015c-9675-488f-aa5d-2b52cab2999f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed2481c-236d-4c42-8f5e-788c9ba9aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1144b920-a241-4955-af84-42c5e196352d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6242253-748e-4e70-8022-668cc833eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07705a3-bbcf-4f6f-ae46-867ee1e10960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e5833c-af1b-48db-b694-f31397350f2b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cb2414-6d13-47ec-8c03-f58108ff42df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b84ba62-c2c9-453e-a110-dbf6d3652bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cf5226-7b0a-4d4d-8f86-d2c3858fbb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64eef1f6-eca7-49a9-9d2f-d6fd7e765318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e93c0e-11d5-49d4-a45a-34132467100d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c15cce-1c7e-4c9e-89f5-68dcd4f243a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b76402-6e0c-46d0-bdad-ced98a236a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1488569-6681-473e-a8aa-9f50fd2dd60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31976894-5b14-4b2d-b2e3-c0fbe6ac8e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f34212a-d479-4475-b7d4-048771037c25",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818827c8-ff90-4184-85ae-85903b439656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466639e0-407c-4453-9bcd-8a8e64b63196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7080b2-85e7-4a53-bfe7-d9c8510fb7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c53550-695e-4132-af22-6d7a46cca3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87afd9cd-0d35-468c-904d-f7b862d4a21a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d3eda7-f363-45da-8f62-83cf6795113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ffbcce-87a9-4339-b43f-f292ea5e9b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9627a6c-843a-458b-8b25-fddc7a834a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f6abf2c-9bd3-4059-960c-ff22b9cd8f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e10505d-f001-4b7c-bd90-f35a3b21e2eb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9864a9ce-be35-4bf8-94f6-014b9e6e0344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f92bb0-ecd9-46a6-a840-34bd1460985b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4101ec90-712b-4dc3-a35f-2697a9004d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f934cc-2f0f-4bca-aebc-65b06f1e613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a85fe-6213-4641-8034-b2b5e2a42f15",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe2e12c-0674-4419-9dbb-59d444d8415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8381ccce-a136-4e9b-8f56-4469c963312f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bc00bb-d84e-432e-81fd-c3a24dde6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31b93ba7-f4b0-4f45-b680-6adcb7d8ad97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0ae674-c02f-41b4-8885-a7df9d1bd88c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad1e3c1-2ffa-4a90-a160-6df6a51ff51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5498946-f7c1-4878-a5f1-e9d1104c88b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1413640-64ee-40d0-aa69-2c5d8c0f19aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9978f188-aaa5-4830-847a-ad1b86b84f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8cfb67-1902-47e4-9e14-9e2772d06bc2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4950f8d5-2b34-493e-93f3-7774e7709ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058218d2-efce-4b99-a950-cf1ea6c4ce11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7e21fb-2899-4107-9a5c-3d2cc32afe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e16f5e11-a6d0-43fa-b6e4-d744198944db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67feceff-b4ec-4dea-a35d-5f74db493c11",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd3b93c-8911-480b-a3cd-4df93e9aeddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96c32b3-39ba-4f37-8c14-5ee80dc82eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49961e2f-c063-4f2a-9c91-7ba51f6c71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe334c26-d07b-40d8-a8eb-08193e865d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b7d90f-7f65-49e2-be1a-fcbc86659750",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61db961-9080-439f-8482-6f808f6f9bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d088e10b-1040-424b-bba4-20c510c4912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8200d2-ab8a-4f23-9799-5c410b5b266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcaf4130-ad10-4c30-b161-a0ae0b1bac42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1925dac2-21ce-4bcf-8fa7-e62284366464",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde3ef38-8b7a-4555-b7c2-aa7dde15b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2adfff0-398e-45f4-824a-1a5d1de99f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed81a9b8-5680-4822-b35c-d5243036e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "798340c8-6edb-41db-9629-080dddaed150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbc0b78-9ee3-406c-b572-f0231ce9f6d8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c680120-3089-4e8d-9993-1991622d215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4388db26-4bed-498f-945f-27d3a94be730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139f06f2-876a-49ec-836c-845b5f396558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf7bb3d-5dbe-46d1-8951-1dedd017f1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f1158a-f973-49f4-b4e0-91fa17e653ff",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29d126-34be-44b8-8179-de33b6d3f0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3baa16-c7cd-4d90-9f78-683d45498a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a249228-f2f4-4819-958b-5e4ca33eb1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18020159-9479-48da-beea-580535476bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ffcbf0-2424-4ac1-824e-be1b33b9f6b3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aa0b43-8bdc-4381-a0e9-4007f937ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16823c19-d775-4666-a7b5-a974b60389c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc67391-de2c-4837-b68c-01e77f7e55d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b510de9e-9c7e-4523-8980-e0128e4fbcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a0911f-e2de-424d-b5db-ae21c64b172c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a4aa24-6432-4e72-b7ad-942cf8852efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40000ea4-9fc5-4d60-b4cb-7e8573d2a7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9659a90e-8f2c-43df-9e9b-e1594bd2a739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5ea88d-ea4f-4e9f-9e07-5ae046fc08c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b52f2ee-de48-48ab-9d15-b16744cf963b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60bb9a0-3b10-4555-afa9-ee400655bd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b91d08f-0260-48e4-b545-5fc654d8c3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce3165-6410-4d70-87b8-8a1548df73e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab120ad9-84ca-4d8c-ae01-4b8c02aab172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d63ea-8fd0-4248-9eab-4ae4ff81d481",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788b4907-9602-40fa-91fa-1cffcd9d46dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd583422-8afb-4386-87a7-e96c22dcc38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02470829-ecc9-4c06-bcca-c0c1c9792b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d52635-e01e-407b-b1b2-387e935046d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d989a230-fb50-40b3-89f6-ab95b67bcd84",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bafcd5-5283-425e-a5e4-cdd2236724f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8b5212-c726-4710-ac6a-83acd23a26dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb195a-b362-4b32-9485-5616e7c7e97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfa477b-d8d9-4168-aeac-5b5f8b30b62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d09395f-d97f-4e14-bb98-652fdbc47795",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfae2316-2c1c-4946-b6d4-a613a37c874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cced82-55ec-49a8-9c47-036df18d84a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eff9ee1-c59a-4790-aa8f-d811f9eaee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c5920-d5bd-46cd-8e69-7f4e93fc9a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c52f0-b0d9-4bb5-9850-4485ab8a7a84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54cb08c-0872-4c25-a5f8-fc038310e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0c7dab-bce6-4058-b71b-3fb2db2c25df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ec5f9f-3274-4899-8829-f7b9e30ac55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0c0626-4704-4af0-b721-c091e5bd06b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ace1bb-7e5b-4d53-bcc3-d452badf6e6d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74129d8f-fc12-4aa0-a737-bcc20feeb340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae50faa0-155b-4298-bfe9-82bd99bd65f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89df7a71-ba30-4140-845a-403168ea7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8db79a-447c-4d61-b09c-aefd7cc2e10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44abbaef-21be-442a-93ee-8d1e5a47ecb8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bd33af-59cf-4325-904c-3a9b371daa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba832d-ca45-4caa-8a08-04da6c7f84db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e83824-9c7c-418f-a11f-4d16e8b972ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42214902-8de9-4a9e-b9f9-6ec4dd55c7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3136c033-d63b-424b-9662-4a0d455017f8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1ef477-f8ac-4449-b798-847bdb071be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b6ea03-2453-4bb2-98ff-70b3fd2b604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e64940-6ec0-4dcd-9178-56e3124b8550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc809635-5a17-4a7d-8c1e-69626f348a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d352f-0d9f-4cac-9ff5-1b56a59f349d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd2fae3-dae9-466a-a44b-be3847e56879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1373151-e3d7-4283-bd5b-3af2be7cae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6f5168-9baa-409f-b08d-df52d854fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaad874-f055-49f0-b75a-300d2b60b438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62701f1-ffc6-45af-97cd-6f5879e10c02",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b264e3ae-3698-4d4f-a97f-5474a54559dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832889b8-6f17-4b9c-a7b6-c4c29f3b71d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062b75ba-8ce5-4a9c-91b8-301f18ab9aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cab4fedd-074c-470d-902e-b19958f3956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb373b1-ef01-4659-83fd-27fab7b22747",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8d8f9e-444c-42d1-b9a0-a03a3a0fbe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e63f0b5f-bcf9-4069-8133-17f6e704698b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b5142-392f-4026-bbee-6577d56bed1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09a80f0c-d98f-45cd-ad47-853b7a12ce9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c1053f-8bb0-41ac-9291-5aa3e545f93f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9563dc-8007-476c-aac7-3086bba86bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d04b314-1839-4dcf-a347-a57469a92321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b116fe-3c2e-4453-86d2-9a065764ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8359b1a4-e82c-46f4-be8e-749a061f58a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01ef8af-38b7-4ed4-97af-f9804e076593",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e385a96-1b6f-4e29-966d-ce25b66a63dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d46aae0-ba98-426f-86a0-8012664edf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87a7bfa-62fa-42ca-85fe-52011d8e5374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "746f5e70-0c32-4cfe-82f3-e2669f0d124a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fef1191-7f0b-4fca-8b6a-58fba92e5b22",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f94621-7bde-4f06-9ccd-57fffcc1279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84d29f9-da33-41ed-8f1f-2262e90b0992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2b367e-d76c-4de4-95a6-5ddedc96e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f528ccde-3bc3-4844-8f6f-700ec72ee532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b89f89-cf69-405d-b0e6-d5ee0ab74844",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba6f88c-0f94-41fc-917c-b182a7b26aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3f7b7d-d887-4b25-bef5-cd2cb13e069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd965a9-c508-47f2-952c-e9d5a3585b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef4e1fa-d423-48cd-adda-3233a20c982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51908f7b-5e48-4f09-9b50-57888fcc2973",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e142e97c-6626-4006-8913-4705b7d01c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb32c59-29b2-464d-9321-2ac75564fce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3059a2c-b689-4fc7-aeaa-caecf6981100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5579b1d6-c327-4f69-8a93-12c6ae6a4070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2732800-0fc9-42a9-b953-4a719db94cb2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a41316-0225-408e-95c4-b929ce1a02af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b318917d-3691-4776-816b-ad775ab541ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c7ac45-65e7-4ef4-be28-887bad477b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8506b9-ebe9-4569-a4ee-094c186b2fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c846eac-e62c-4a6a-8c69-3700a703c78b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8692e0d-105a-49c7-ac83-356dafad4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a3ac6e-ab4f-4a5f-b1b9-235e3bac8fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6bf5a0-3fdb-4762-8bdd-e23d67c08d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "729bad00-ce2b-4a3c-91e1-8a780590a6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c786060e-46ef-43a4-836c-9f8088226402",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4137570e-ace9-4a74-9a6c-e8a7d77ba3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d80895e-dc59-428e-b4f7-81f4e54b31b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656fc803-787b-4b66-b03a-8a0629ce2472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b58672-83e9-40b3-8c2c-89466ddc19b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621c0c11-dec2-47d4-b51d-2e961908ed17",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68795476-0658-4425-ae13-05d876a40566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c675f403-bf44-4d12-becd-fdd979fa589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff2beb5-412d-452e-a5b1-a1496b4915b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd16d90-6cf4-4cba-808f-871610f70f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e08874a-6dab-42ac-9a73-e24ffd74c19d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddae17a-4a3c-4c9c-93e4-2551d27358d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98c016a-b0a3-41bf-8ec4-120820c29ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea449ca3-a626-4755-9e0c-2bbf96686f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a476e8-7968-4067-a78f-443c0b5f558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa6454-dd06-471c-b9fe-1bcae6e7fe49",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc178fd-8b55-4076-961d-49a15ffee01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88d1972-8cde-4a0c-9356-be2f6ecf5fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a915f0-6432-490f-b956-96727f49c292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07df7957-6669-48a3-89b1-9e20d785834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0487457b-1a16-4078-aa64-fa0071df072d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929087c8-760f-4d2a-a7d5-f361e3626c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dcdd52-e96e-4faa-a3ef-c83fda7ee04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870adc0-d408-4c40-b8c9-9a45e9bdb5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b804d6f3-e9e9-47cb-9808-59d0c224b46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac255ee-7e3e-47e6-a995-a134faa40db9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff88803-5b2f-4ed0-9d3a-f94e83770a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd75ffc3-7049-44d8-8e4a-7a12a73fb1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea63ca2-a917-4f75-b4d8-1468576fa44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e076a8-b38c-45e7-9195-804bb9b8fe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f177c3-6b7d-476f-ad6c-c1d5a046ac8e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eb8c9d-d98e-4edd-929b-8313b9b65fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42218204-a961-4b3a-8b15-0a8c9c687683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c4de2b-a817-4b24-9ef2-221528c76812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "041f7b33-369f-478d-98d6-6c558bc533b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1428fda0-8a3a-4950-9baa-0e2c068fb9f4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81785a9d-0228-439b-9080-026ba1ee19c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3e1fdc-a658-4609-b182-8fc72fd283ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5155c1c-f918-47b6-ac69-aaac778b9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "258db9ba-fcad-4d99-8a07-28eaf433e44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44914301-caea-4c0d-84d6-e9468757f405",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fcb2f4-0583-4faf-9410-8ce6f719f491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0bee01-ba82-4c57-aa47-5fc103b99971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a842f3-f258-4af8-8e99-745c41466967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc41cc5-6125-485c-95c7-8847781f596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ffe4b9-40b2-4479-81db-d771af463aed",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e4d350-48b6-4c85-9db0-31a772d7a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81eaa025-2215-45fc-94da-03c358462886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8630e3-9f00-433f-8cbb-273cff7b614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae11a048-45fe-4af3-8b45-8b0c709a22eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ea88f9-2548-43fd-88b2-9f873020dbf7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6075b96-39af-4316-9986-012acf27c1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc322603-99c4-4e99-a872-621ec0177ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dce23d-4645-47f1-ad03-46f1bda8fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bc2831-c1e0-446b-8511-dc55a9990fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f91a99-485e-4c0e-8855-2be2b60b5189",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d149df-2605-4a29-afde-7abff8643623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c229cc-0462-4091-9a13-d8be430a9b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83d6647-4f2c-4f37-8530-61b4fe0c5c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0073d6-e858-48ce-a836-ba7aa5e062e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88eab33-e428-4cdf-a0b3-e77de1c8faeb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfacc2b-c5ea-4294-becd-363053bf7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdb137e-ceb1-4f6b-bf8a-497081cdcf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afce8e2-c71c-4fa1-a2b0-f73471d77f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "03be5e50-f346-4a42-bd09-3e1333754e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaabd6ac-62bc-48a9-91ae-8c96598eb263",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7bbce7-a127-4bcd-98f0-f8aa74e3c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7523006e-140a-4280-87ab-83097441b7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d88db7-eb49-4c5e-93c6-fbbcb16d18a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70592c0-81ae-4e45-bef8-282b4854fb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6e975a-a06c-46f6-99a4-1af46c26cafc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567ccf0d-4ac0-4fe5-bf73-e501a0f0f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7ae225-25c1-4d8a-9952-db7eb801366a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f031ef58-3724-49c8-893e-a44c04d2cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4cc7b9-6023-40a9-ac6b-5f53efdedff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce4f82c-4dc4-4f11-b034-bde9f103c1b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b14f65-5f22-414d-9191-74f72ad83b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c6a18-cf2c-40b2-82e6-2debee751480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba9390d-7a53-4ada-8b36-4a2a222ce04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85a721c-71f9-48eb-9882-00a95691bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2344aa-59e6-44ce-bb18-9aa7ee970810",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303b69e4-3794-4e60-a056-1a2fd31fd27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d248831-791f-460b-9a41-b85b341a6bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a2da9e-c767-410b-8c6f-6cadac550cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58543512-32b1-4a53-9ad5-c967b0b7aba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19664b19-018c-4168-ac15-1489bad86475",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b94fbb-2c25-4aa3-adc1-02ff7e8d32cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f359d565-334d-48af-97a8-b820c60f2de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312348f4-9de6-4c85-a5f4-4ab249390768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa562eee-80ed-4436-9b94-552ba9a540e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c2341b-e526-4e5f-810b-65d00536fc63",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b033be-94cc-41a2-8071-597e34481a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949535fd-acdc-4a47-8192-89ed081f72de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6242c5d0-a9c0-4c7b-b8d1-4d8fe38a7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "101af694-2097-4569-8220-90fbd1a1d653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92865724-7dfb-408e-adca-a4de3d38ae16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c4f565-0d4c-4b46-b25f-ae3feda2d961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216da27f-6942-4c2d-98e2-93f89ff8864a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e5efba-2946-45df-91f6-ed169ba00683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e821b7e-e6cf-4de1-a513-7f3830b66ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89157d9e-a733-4119-991b-ba9d8eca651f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5bbc81-711f-442b-8e09-484f1b351a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75e3bc0-d0a0-4231-b877-3506913efbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86a7c52-afe2-4ea1-bfcf-445fd3997114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad8b581-4b6b-4af2-8dc2-a2dbd83e8684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1814e1-46cd-4479-975c-2552a638a284",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7b98d2-a2f5-4c1b-a130-b306773f3cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3236d4-42e5-4c8a-8291-72700d7e1734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dcac85-36b0-41c5-a57f-367e11c1dd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c91bd4d-02bb-4193-8fc4-18fefa8c96fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87fe78b-e30f-4407-b930-31d643b5aa28",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2196e830-d668-4007-af83-d7cc21cec08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cd1bf0-2411-4d28-bee7-6016b71ffeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222af470-62ef-4d01-b5e8-0746b02ada1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b165d360-a728-4809-a6bc-b48f0a1210c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e8fabc-8cd2-46f2-8071-2d1be00e927b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f3f981-8f85-4096-a871-8e9fdce7a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6aec28-e12a-4657-b717-7dd855918c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b59241-b9d4-4b07-a8b1-f7042cba4577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "266d5686-88b2-4cd1-8950-fb0fc026b70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80050794-f5f7-47a1-be68-b6e79d03999f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a64678-4986-41c2-af03-40c00986e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c154084-c641-4537-8487-c5af733bb354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ee0dc8-629f-416a-9932-69cde2444a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5a272c-ac4b-48c6-ab6b-c3c0ec493c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2ef615-8e39-475a-acc2-ca2486816be2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f9ca0d-eda1-4ef3-82f4-0ade129e3d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1fe67f-6ca3-4bea-9536-8e1356b5f8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c605f3a-e68e-453b-9469-c792185bd0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61443a8-f1e3-4fe6-a932-c44e1804c5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f26ad2-f547-4fca-b7ca-978a66720fb8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbf2f28-6b28-4efa-84b2-bd8cec548a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e797a41-2e6b-4b6f-997f-6170039702cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc8cc99-c893-4b2f-af70-5dc89fc86e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c99dfa1b-9dda-4c46-b804-50600f865f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8f807f-6d07-4593-8eac-edf4b4195c23",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96e6cf6-3422-49a8-b8a1-9c33f6b5d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dde50a-0a9b-45c3-8592-e7468d641d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d90a7e-fff2-4051-a964-1753bed17d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c706b7ee-8ac0-4db1-bddc-83b8da8c9475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b862b-8f27-4c03-ad23-a8d4f2299146",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2939244a-1824-4d53-aeea-6c93f026f446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35fb87e-1629-4e44-945c-7bc10086d905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3363bc-765e-444e-935f-f8065eacd621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80454333-6df7-4f9e-b13e-5b75c97d5081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1239a3-4048-4536-b187-4a1a1724bd88",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c7d8d3-1ee0-4ab4-b956-9ce49c23eb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b5dde1-2553-46e2-9ae8-c2bb1b12e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d21141f-d4ca-4de2-8006-04dad3f7f77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a235f2-53a4-415a-877e-3aea15135d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb313266-77b8-4441-bc2f-b80a5a805272",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51958da0-ab74-4163-a739-4ae7f6b498f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfa20c6-cc54-4b43-a5aa-0cab3c4cef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c252111-2204-402f-bef8-53cf8c2de219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4360338a-3af2-461f-bc86-1f5b2ccba0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3467beec-3ada-47ed-b755-596ccf0dbbb8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38b8f23-544f-4f0c-a452-77d4fc808c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4939bf-4f85-4c68-b6b1-a4883519519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c20510-c427-408d-baa2-6e07c904bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02458e55-70c2-4a23-9ed1-6ee3608d59cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f6b669-2499-48eb-80f1-267783d2c775",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9716aa8-2b27-4b36-bcc2-b314280b0fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae77bed3-749e-4f5a-9248-8dd54a3c3978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9ca7e3-940a-42d4-80b9-908aaa17ddda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd2e8cc-07ba-4bb2-9e3d-e25a8f98b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1861c01-29b2-4e28-b996-8be48e328db7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137f010a-8ad4-4293-aed4-92afc54692d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4e0014-53b8-4d15-b40d-b1ab87a0b9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24004506-f155-465c-987e-7cbf5b2ed142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce54d3f-4588-4cdb-8d5a-4c86db7dbf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa802a8-6948-474a-9da6-05b3b80dadb1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec293e7-e7b3-44c1-a009-243a958c0fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ee458b-6584-4d18-be8e-e00d48539e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c385ddc8-92e3-4919-aa50-f27b1858267f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7c70fa-6379-4535-b2db-90389ea2976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6506c94d-726b-4313-9fd4-e724cc0c84cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d86dda9-cf9f-47d2-afc3-e0164ce61b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf136248-b7d6-406f-805a-704e264dfc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a8cfd-75b5-4e3d-867a-060509fc13b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa5ce0d-a6dc-466a-98b0-399f5c5e5391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a76f82-65e5-4dd5-863b-2ece49ab386c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a8bd46-43de-456b-ad9d-81ec64db4ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4381cd3-6aa1-432c-a870-65643d20d572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822a948a-cdc5-4254-b523-6a3406823dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce423943-ef52-4945-9a26-d7a4cefb21ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393978c-02db-4998-9354-bf8d043cfef9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7652ef21-84d6-40ff-b436-30f8a9fb1190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363dbd88-20ac-46a7-ad23-7fda0cde5cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf65247-3568-45f8-a6de-1519239fbfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1401394a-426a-41b7-80aa-66fd50e79081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9044cf-02b0-4664-9a94-4e95fcc551f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1e4c0-6edd-4e42-8bc7-ecede75910f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af3ef5b-0393-474a-93d6-22f9ba8ffcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2420accf-8089-403f-8bc9-a2cb5d41f395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c48b457-5729-42de-a8e6-fbd45341a779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16c42a5-5f12-46ba-a084-b442b49f3567",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d45eed4-3f27-4416-b078-fa19b6021a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bef4a5-d828-48ab-931c-de130d90489e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3891cc47-ed40-42d3-83ae-8e173e2ef9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfb4881-2a25-4c73-ada0-1f35fda037ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e28fc11-849f-42ec-8bbc-967dadc6be79",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a022b21-f522-4d6a-a01e-4e68515d6c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2bd668-e06f-4262-8b9a-33207aceeaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4534cec-c96b-4283-a6f2-69584aa0e2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22dbcf4a-5807-4c36-bdef-e0a4384aad0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f9121d-fc67-4393-98ae-0f4e9c1cdb71",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a3cec3-25ae-4447-acf3-af2549139005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeb732f-767c-421b-88d7-b66accc0e393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ac5b0f-380c-4f2c-9880-d2cc301a7a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c67d0c-e342-4ac9-a362-07a59d17c491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1a4b43-6463-4f8b-b086-9e78a87e5c09",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a431b8ec-85b5-4b64-abb1-83dd85a56290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e1220a-b60e-4b07-a87d-ad534aa816be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ec766b-909c-45bb-aacf-1c259e53af79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbd719e-1bac-4451-80f8-c838b703275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5a6928-9b8b-4ade-a189-e4c79b1346de",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844cbbaf-0e75-4f54-84d8-325d758278db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4e8848-6779-42c8-8733-42d0eb103203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e900bc-9a71-4ce9-a77b-8d6b0d8e337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff952f5e-2068-4e3f-aac7-64834f94363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a5edab-4b71-4374-bded-b07aa640074c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff2a30f-ecd8-46da-84cf-a0ff34388e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dc0e78-b2da-495b-a2f8-a6be8d9f2fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dafc00-c068-4b1a-8220-7acf1c0480b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98cd66da-085e-4e6b-82de-22dcd73135e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe8594a-72ce-4c05-a0e9-97b6b35d675d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9fb4f3-e8ea-437f-8b17-3a93854e8aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971157db-42bd-4738-8c2b-7fd54c5bff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa773ae8-2f90-4dba-9f05-9275efc2f5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a852435-fea1-4ec9-8459-9e569ef7cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d93662c-4364-4f09-8fbc-3b620c7b6ffd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daf9f5f-e36d-4ab7-85f2-aafd42a5715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b284238c-4385-4c35-a787-5b53efe1cac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b0e47-b67e-4bf8-85dc-7389d79dea88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c62eb4-6663-4dbb-80b2-54ca3ccf9249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5739f1-458e-44c9-a152-a424c6c46944",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034c5c5b-05aa-4e0c-a5e2-3e50cdb7c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d30e18-f16c-4751-822d-0cb4cedc67ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ae65a6-f687-446d-8f52-e3a31d294b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ecfbcb-e583-4489-9a23-18b513975009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde34c81-5164-4eaf-90b2-7e1459aeeda4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9ad148-084d-44ae-8131-5497c445ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed87e545-3024-4b93-840a-d37dd31c2ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518c2b64-e08a-44f0-875e-1962141a331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b91e28-e231-4678-995a-6a60ddb5a7de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d31eb024-43c3-4bea-8150-60c322ace671",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b98b028-194a-45c9-bf4f-d9306ac31c7f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfda0f2-ee14-491c-9ba0-eb9609f84206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bef5e012-21f5-4287-a761-30377d1d8915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050726c4-f04b-483d-abb1-6a60bfa750bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f04e2f6-ebcc-4e78-b80d-0f7a0d562faa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18b23612-8ea3-403d-81c2-f1b6bcace932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26c440e6-2c25-4614-90f9-9c4f89c66e70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61fb7594-baab-4c79-b1aa-337e5d3c10ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b04fe79c-eb92-43d3-8fad-7a3f24b02b7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe991ef2-f436-4d2c-9fe5-85090aa38ac1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67db8b3d-149d-4781-a0a8-e629b1ecac5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6412c88b-f0b3-4bb6-ba4e-54f93d3a8150",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcf1e283-6373-42c2-aba5-7027062c848c"
                }
              }
            ]
          },
          {
            "id": "d3dd7404-edb1-4b55-8ed2-3641bbd8194b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1128599a-d338-4789-bdb3-fc8ee374873d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8968e4-4f36-4e64-a4b6-57b7ea870c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e45d6db4-9436-4aaf-9ef2-0955f8aae9bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9da2d09-ccae-46f0-b7f3-990a3acbae49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1f04bb8-3920-4682-afde-f35d7be73b2e"
                    }
                  }
                ]
              },
              {
                "id": "27c68702-6b8e-4cd9-85b1-94841ab6160a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d79dece-87c7-472a-abc4-ca68b5033f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feac67dd-7537-4a93-8a40-5d24e64439a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41f61f69-3949-4785-bd77-f42205a2a707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5851852f-94f1-4164-b586-025002e9ba9f"
                    }
                  }
                ]
              },
              {
                "id": "d567a291-1ba5-42cf-bb6f-aed404af0055",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9529dfe6-9c00-4c93-80f3-765e70b256a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e51237e8-dec6-469a-9851-07a9c35cbe9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47e5b0cc-888b-44ab-b221-10e3b93f20b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99a777a7-aa3b-45ce-885a-f870d0f490e6"
                    }
                  }
                ]
              },
              {
                "id": "0c7e86b1-6c8a-45b7-b7a3-7b24ddea41e8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f46adaa-ed03-423c-98c6-c1f5da1cda35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb81063a-9868-4fa8-ade1-911598e7a655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "206357cd-7bb0-4e85-9624-ff1684855530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8c6ddeda-c52d-47a1-b409-e8cf71370f79"
                    }
                  }
                ]
              },
              {
                "id": "08e7eca5-e770-4708-b3db-7708be384056",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c39e469c-6f2b-4d63-b419-ec54e0e83494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b9ed8db-5180-4542-bd2b-223f952ea923"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29272482-87c7-40b3-a240-97d067a3da5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "27630159-d466-42f9-9e8a-e9c9a1799233"
                    }
                  }
                ]
              },
              {
                "id": "9d0ee8da-fb8e-4287-92fc-6456ef825548",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "344fb266-e4ae-491b-a60c-1d75aeb08f6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4fc2bf3-fb7c-4d63-bb4a-835f9cc013c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "401c2550-0539-4c3c-b118-82ecafcd5b5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7eb02781-d6a9-4866-92c5-7a6b7319e6a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "147bfe92-7087-44e0-9755-7e6b4e19f944",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73164ab4-dd6c-4bc9-9276-2cb2099ad6fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cfa109cb-5fba-4ee2-bdfe-4b103bfe4bef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e0c999a-fda1-4e21-a9b3-d14dc4f1ab6d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fadf8a5-6450-4778-a81a-d25944fea7e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9b2522e-3811-4443-94b7-2491091a31e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a4bf7a3-8e8a-4b2e-b09d-bdf414037e96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "675860c6-85df-459a-b6ef-cb16dcdec782"
            }
          }
        ]
      },
      {
        "id": "d383af56-7a8d-44c1-b161-7abf7715c4b8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6fe53f59-b91a-4ff8-a615-2d0995838cc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60eb8af4-c3db-48a1-bfce-1273bcb1962d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f82d8fce-dd78-465a-ad22-6fc7ccfcfa12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f7bee-94e0-4b8e-916b-be4772eca2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b7cd9d-1905-42a4-8bc4-117dc3f71936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58613de-fe90-42af-9f82-bf8196aa4279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c61abf-31b5-43bf-9af1-cfd10ec56ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83f469a-3017-4c91-87a2-3882ae0503df",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78225fe0-7cda-4040-9ab8-cb2418a25748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79ca41a-6f3f-4f6a-a3b7-3b05f7b173ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e21ffb1-cf12-4770-8fa5-ce8989cea11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c967185b-ef38-45d2-bb1f-aac000016975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f59b58-015a-42d4-9618-a298da3499c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a850cca-65c8-4b41-a2c0-b87cd8ed8fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621f0fbf-7436-4865-86c7-285e16359384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d4c27-297d-4553-beb3-b5025b19a5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e41a1e3-5d48-47eb-ae9f-3bd21bac432c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325b4bb3-c3c8-42a9-93e2-ec4026a65ac9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206ab0e7-14c0-47f3-9b97-c148fc12dd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65af7058-3391-4b7d-a84f-a8ee889a8919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0e196a-16a7-4601-8889-411a182bcd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "540c3b09-6d79-4ef8-be32-a1c53b8f84b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e64777-0e7b-4a64-a6e8-c4758fac5d6e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b539507-8c3a-49da-a9ae-b96c8bda760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cc68dc-49e6-4a7a-89be-cfd58ad45ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c20ceac-3c1b-4181-866f-e7455a6b0969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb0a25b-8ca1-45a2-a873-78a0beee4f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4267528-f313-4730-945e-f46b5898f24a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531b2170-9d08-41ad-acf9-d689d216d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785af17e-03a3-490a-8b5a-79bf477635a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a2f0db-dc15-454e-831a-04ec60a23701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb049a0-66d0-4678-87a6-8a4f2f5dd625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8824b24-6233-4197-a672-c83701aa4112",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0189e27c-64a4-431b-96d4-d91e854eaecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4384db6d-4c01-42ff-9103-ed2cbdcee1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b32591-d015-4ed0-941a-8c2ad30c122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71ba029-8f30-4511-a7b0-e4f471423b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b36c37-8864-4f33-bc6b-95039ed3acaa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8b114a-2688-447b-afff-cbf4209624e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d042d909-3570-4598-b29c-bc4a4b15fe71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af21ecf1-68dd-4134-aafe-acf5b45bdd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cede7016-daa3-45c6-8c77-a59690722b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01607d33-e5a3-491d-ae87-2f545810d399",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b090a90-62cd-4534-88c7-a2e312583aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c147e3a0-b17c-497f-9a16-9560cac5fd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d52059-02fd-461a-9914-1baf1266cb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4152620-00cd-49c1-ac38-a74ee8750122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272af6e0-ec49-4a3d-9780-d4487e30a094",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420d43ee-6309-43b6-8062-58284eae343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed44373c-d043-44d8-ac9f-7d381c2af1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff7b80-8ea5-48db-b224-0ee3e70eefe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "264297c8-0f9d-4584-9ee6-008fd0f1250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa45e28-531e-4892-9c1a-aabc6c8c8439",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865be036-3763-43fa-867b-75a7f22d6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645fcb2e-3411-4548-a25c-cbdbf2504608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd0578e-16eb-46d6-a75d-9bbf4bb3d062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93ac249a-6992-4ba3-aad6-87e407566adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689587fe-2f36-44b1-81e9-c7c7cddea70c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf567f9e-01c8-42ab-97e5-5615474235dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c409a5-ca85-4bb1-b07a-eef42e29ff61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567e8c4c-d87b-4888-adfb-b9a7cdf03b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e94fee09-f119-4a33-af41-a125aa08dcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8145536f-b904-4b81-9715-46ce508bfd02",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c3a12-b171-4e2e-a1b5-38efbc99fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98658553-45ef-4a08-b9a5-52d3ec48289c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8647482e-13bb-4939-8e60-c3fa32a9c1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3660c8aa-5be3-4c53-91cf-8116d7af9f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f52324-0387-4846-838b-12c00cc1237b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870dc486-338a-4bbb-8c18-a341021cbb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7fd3dd-5a1b-4241-b138-fc40d1fb48e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2041aa-21e2-48dd-b28a-e2ca849b6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9809e3a-65ab-450e-8b88-577eeef76ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96031e56-2809-4620-bdb1-8623e4795530",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22175795-feb8-4457-96f5-a8e3d9c918a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666fce63-f4e9-4fc9-8e28-eee504a1e5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5ccf4e-761c-49d6-9793-1d1df9327623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9f0f8e-c0ed-4068-9176-a5bd634eb75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded21e73-eaa4-4584-8aac-3222244b32e4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcd01a4-0cda-4056-a915-8f93a2268591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d66b85-ba47-480e-8d03-a3dd6c5a0574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2384a751-bcde-4064-b3e4-62db2c7da2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bf2a37-aa2d-40ae-82fb-63c553b74eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a68adc-22cc-4b13-a39c-b9953dacbec3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c76889-ae7f-4a0b-af57-3a0a1103d0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e147098-73b5-49cc-bba1-275be4c9d14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a198fa2-3e24-4aab-b78b-6d679e341c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "83cb273a-2778-405f-a4c7-8a357fe0cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed06500-a393-404b-8940-44be94ff14c6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481803c-3014-4ce0-821f-7ed022f686e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e44eae-e189-4685-a334-8f6e42074388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc395f1-b1a1-4cca-8371-86d311767b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e64e681-4c3f-43ef-abc5-9ffa8daa8aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db195c86-11cd-47c7-a029-9ed5f785a198",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed688063-2801-4ed1-90e5-d8b1531dae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd9fca-9165-45cf-8ce7-1a4b2551234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84641817-dcff-4dc7-8ff5-944aa006e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12868afb-a3c1-4ed8-8b5b-fd5cae7c3d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ddce6e-f713-41f7-820c-08e8b5c56d7e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2411954-bd52-409b-b603-6d59f76e912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbc7474-8216-49b3-a524-55c392422274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1127b876-7b67-4a4b-8cd2-608ff83737c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e08e657-7592-4466-b991-14e8ac1c7c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929d41c1-e99e-48ff-a9c4-73b85f8c8502",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e328f56-1a15-468e-8132-6b04c09939e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd96a05-c31a-456f-bca6-a549adee2f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9927a-59f4-4995-a82b-a8ed755a4ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef7ebc0-f920-4994-a38b-fa2d58d3a648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db3cbd9-2cf4-4bde-8f99-c68fc3db4ad8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7154e5-4d3f-4764-8adb-ebe645f86bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecc8cbe-087a-4db0-9b72-f2f7d8e9b903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe02a33-48b0-4ac7-b52f-9759ef3528e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1a8781-a769-41ab-9144-e26d0e43f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928a94f8-9aeb-426b-b2b9-04927f700531",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d350127c-9c5d-48c9-b234-1403613eff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0380bb-88a1-4a7b-91bb-cc849dc5a9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882f02eb-2907-4dce-ad0a-9b326e03c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ac0f63-e742-467d-b7b5-84bfdc1962b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d057d474-9cc0-428b-89b6-7e98170b8d6c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee483f6-6318-4219-9e8c-fe6d157da3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030c8776-1e73-48b2-9d32-57b1c00dd0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892864eb-0951-47ab-a908-cb632f5c5031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5275be-f3e3-4d6c-9b1b-65484b7189a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487cdf65-e384-4a49-88d5-eea0d21f29e3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b4956-6c98-422a-93d8-8eb4586cc549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ebd6d2-b6ba-4a5d-9fe0-1a353408aa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e25cee-dfd6-48ad-9749-646015d36277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca82b176-d5fc-4eb4-a1bd-053bc236cfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e52edc-eb57-4dd3-9fb7-b270a58bf834",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac9f85b-be7d-4f2d-84f8-6546a6f3141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4216a53-04f6-44c7-ae35-00d57f2f078c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2723c96a-32a8-4ef3-99b6-c7605e3466b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c1b893-4079-42a0-85b4-bee322fddcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bc25ac-949e-4161-8a2f-6e2b1573fc53",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b141715-a2e3-42e9-8c7d-5debd3b1587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcdc1f8-cf7a-4190-81b1-72c1bad39d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb8bf7-d9a3-4b83-9cc3-8d9fe2f8ee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1afa0f-337d-4743-bccb-09dcdfdd78ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7919b4f-1af9-4480-9d1e-4f4e6b3e15ff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fab5dfa-216c-475a-93bb-23616965c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20f5f07-ff86-48d9-ba1b-37de15a191af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db034e72-af58-4e1d-97aa-c4d5f0bc235a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e968c786-6656-4ae3-968e-2505c1482b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415db3b-aec4-4938-ba74-d0eec6c525bd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74792a61-5126-4ccc-91bd-78e601e0628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaa3c96-11ba-4ed8-aea1-4dea04622f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caa0151-5a3c-4778-9c16-48046bc48f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a565f521-0595-41c7-a722-ad2790326d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b7bac0-0ccc-49c4-bab1-d2877d0b2348",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b26876-9b21-43f9-844b-e5cea92a18d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcb999f-164c-4c86-86a5-cd17c4b41047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2aa500-5691-4ac8-8b4f-97b16ec6be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec157bb5-ca8e-4bfe-9418-833201d774f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4b4680-e043-4b86-8670-ae533468c042",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aca294-9b1a-410e-a403-1ae2a536e446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e254bc-9034-4940-b67d-51d843796c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff31346-b13d-4406-bc97-817b1dad3785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f73b0d5-551c-4c81-a6fa-5c63811870e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1fc708-1a4b-4586-8293-86824a8c2d68",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4047482e-bb0e-4ed1-9c69-e3356f645845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d7f529-20c1-4f0e-bead-8c495ceaa44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cfa439-05b8-44a8-b8c9-a578c3b25bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d077368c-d82a-481b-816b-ac5b5f61d45f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "298449d7-0556-416f-b4e1-885819159e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c54fbfc-2272-46e4-b1bb-8e1f05ff563c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afcb0ea-0f93-49d0-b8f2-3151c0ce8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e79c078-4485-44f1-9ee9-d7f9ec7aea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe061a0-a75f-4ccf-9054-3b47abe48a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ca87e2-faf1-4d8f-8b81-dbae4899400f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "720fb9c8-312c-4327-89fb-30aedf7c13ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52d09f29-9629-4151-b132-698228c0853b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "065c36d0-42ce-4918-9b54-1cb81d683fb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17f4c123-0c9a-4172-8e8e-b939efd085bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b2f4bf2-6631-4e1e-ac24-417ce5c85fda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42d5ac69-98ff-4731-a999-17876e281bf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c480a122-1369-4f66-9020-84fa781d98d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a10156a-1282-4952-8575-3c9d5c6c8fe9"
            }
          }
        ]
      },
      {
        "id": "8aa498f7-7a9b-49d9-880c-4897444fb9e3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f5c6f3a8-1f49-4615-8357-b1a9730052ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08054346-7440-49d8-bc87-154304aafa41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d67f9c4f-fb10-4dfb-a2a1-300d2874022b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d581052f-7a32-4b96-95c4-31a6411010e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78804216-886f-46af-aa71-26f2919b29b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2aa946-bab5-4ffb-bc20-1b40be40e651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc02ccb-3e33-4a30-af1e-3d47f083c033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec98c6eb-7724-495f-b586-78e767a2710e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7565d287-e228-4fa2-812f-0def9a83ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898d4252-e931-4519-a0c3-277924f74eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f675033b-2502-46cc-9856-727338a7fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f5b1c7-5fe7-461d-a3a0-57e34501f93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c8c78d-eeb4-4b68-8d73-81cb31307341",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb8c48-ba7e-4bc7-9be3-7bb49c446b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e123b8e5-7f53-43aa-86a9-a0d5e63881db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb24a40e-8efa-4174-bd01-c401fa2867e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "784cd4cf-f645-4806-8205-0550584371b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01231a2-ebba-442a-892d-7387c22d85c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ecb64f-6373-46cd-808a-4c4a22517183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0017bc96-0c51-44fe-857f-a01d38748b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1bf32-2dca-43b4-a61c-872fecdccf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c4e0f6-d8b0-4f74-b50f-9458b7a52c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc9e7a-b4a1-4a23-9adb-2f3abb0df815",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62417265-322b-4529-9f5b-e4776b5a1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3687a632-dd00-4b55-aac3-52470550766e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d397ca74-6963-48b3-90a8-315dc644f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a051738-9004-4c37-9677-ed1ccea4c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0d8c4c-9c68-4e93-94e7-6c075d1abdda",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0e9abf-bc91-4d75-ae61-c9de6ce8f97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d182ae1b-f43f-4d62-97f8-0ec1179df658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66de273-9e72-408e-93af-0e9579c24860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f560e72-8f56-4f90-a97b-dec6ae4bbbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717498f7-e776-42de-a13f-3ffdd646403f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4f5f76-fe04-4b0c-bb6b-4df7a392867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a953d584-0b15-4ed9-8368-4781822e1aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076e9a8-1562-4d9e-bebf-d2565f4f624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "256f92ca-894c-4725-b7b8-663d3245e0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a764e78-8866-45ff-b5ac-51e1bb433109",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52924ab-7a59-4876-a1cf-6a9db594c434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e702bea1-f767-46e8-9d67-f31554fbc5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e32230-b177-42f9-b475-4b1116a0d3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2c3128-5e35-4d1d-bdb2-e9af1b3cd7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab68043b-a7c0-4d8f-9e03-189a8d2e0b70",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989a6635-b588-483b-b77e-1d8838e624dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b6a456-4e52-4302-b427-49966a3abe09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a715ca2c-bd88-4793-a7e5-22a1a2a849fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "937dda5c-d46f-4d35-882e-09d38e22a110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64457d4-fc3e-4bac-a369-b0d306d6d6b9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556f603d-44d5-42bb-b70e-a2b73ae788ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec8f35b-057b-4460-9023-5de5e2999219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ad0ed-22a8-4d6e-98d9-a9f2a16c0c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f8d0a4-98c1-41a8-9804-11aa22fd6916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6610635a-cdf8-47ad-b6d7-0bf8590c1d1d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af38a909-7cf9-40f7-9135-fe4e895054fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06392991-2827-46d3-955d-94aba64a5677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c93d5-3ee5-4eaa-b719-48caa8ccedd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3656dcb8-06a8-479d-a52b-576c4f74e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b6d55c-2a8e-4cac-8165-19f53e4ad8cf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54451536-fbc6-44b0-ac3f-73d6fb5cb02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e08e313-4ea3-42ca-8966-2e105e66b383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d83c0e-212d-4e9c-933b-ddfa3ebda23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd303506-f781-4e4e-98e4-4140a1729f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a375f-05a6-499b-95dc-c6533e8c41a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fafd89d-06b7-49f1-841f-93853f6ead4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b76496-6bb3-4022-8e17-34799df5ad81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663600d8-9f8a-4945-8a87-42bf26963bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b6b7cc-5500-47c9-8cdb-42dbafb3d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a7e5f-88c2-4dc4-9ea0-a982013acd33",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd48129-d982-4f02-a814-8ce6ceabd7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51da822b-9e04-425f-9c06-ae95f36ee3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9aafe8-baed-4cab-9a88-079d4a9f9ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2130da-1f2f-4906-b1bc-2cc830a7e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ec24e0-8b8c-48b7-8ac4-df52c4e09be0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860752d-a6ee-47eb-bc8c-47779c8d5399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ca4b44-1c65-4e4b-88c5-c5d52825a926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3263ec2-e63b-4249-8f78-e2fd40e3faa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b4c760-6b04-4f4d-ac08-3701013b8831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faf15ef-1848-4168-b9a0-e414d75aec77",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa35311-353c-4ca0-90ce-81102a546345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3da78f-3a57-4a3c-9223-bc0a0a1585a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9640026d-9361-4472-a21f-fe69ff527507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "579fc4b7-a9ee-44e7-b38f-d593b4386f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2334425a-c80d-437a-98a7-7e32a30f5857",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee7a1cd-65f3-497b-8a0b-f57138fc29d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f89aa62-1403-4ac9-852f-57b43cc46351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca003aba-0860-4e97-8233-4802951c27f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "375a47c0-0ec6-4153-a737-a8b299c74ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e3767a-1eac-448a-97a8-d262932cb88e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb46cec7-2eab-4889-9cb7-2363bf5083e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2818751-2c24-46f5-b4a4-1ae159f6c3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69af7f8-5ac8-458e-9f5a-6e78e97dda8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cad4be-403d-4d0a-9c92-da13974ef74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3af42a3-c615-4d33-bc52-bfdc6abd4704",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957d3e23-c595-4ed0-9d33-8450b2db5bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9741bc3-eb05-481e-b3db-463022198679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013fd215-c05e-4cd2-86b9-4c46fa54eff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f30145e-48cd-434d-b0e9-31afff654821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9721ca94-dce4-4f48-9143-fe8f4748e3ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424858d7-01c2-49fd-991f-b9d7b8c09cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea48b3f2-9b05-4cb2-a736-222e6f1cf0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73efadb2-9638-4471-8124-3724c48b65f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21c4340-1e7f-4bd2-9071-c48f41cd39c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e493b6e7-4dd0-4500-a0d0-ded23339c3ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b05e1d-0197-4d88-a0cc-e715e5eede44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74863ab7-7fd8-4cec-81ca-7dce01744915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f978a7aa-c70a-4cd6-bc72-d232338488da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c425178-2d68-43be-aff9-bab275e33932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf0d7a8-601f-45b2-8acc-32d47b9c5280",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cbba56-3a2c-4b87-941b-90813d5fb37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e43d35-8190-4cd1-a9f4-6a2481213806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1d32a1-48d8-4e71-b815-0479dd90ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97fd6647-c046-4d47-94d9-8f7f5aa798ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d77ca-2c34-49d9-847c-a710621dbb04",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdb3826-906f-488d-ab2a-f9318ed0fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c928b04a-3ed1-48b9-a28b-eb7a7353a209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51d56d4-29d8-42d5-a3f7-f9afe970cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350d20bb-0ea1-467a-b56b-136c02ff359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404b2b70-e101-48fd-a0d8-efc677e5f863",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d636d3-9ffd-4360-a4e9-b49acdd5ad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bfc935-b43c-413d-942c-161f2a2bb320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab46af2-40ca-4c73-8407-0ef3d767f098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c9c27a-388d-4d75-84db-d76c0f54ac73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cb3c69-1627-4643-88be-79aff12ce578",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d29d6e-510b-4eb8-a93e-ae7148fbfb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb63f15-43ad-42dc-b43a-bc6cc30e1b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9898555f-40cd-4812-8afd-53c4cc3b5a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5918b8a5-ab80-4b52-926e-9ab0c44a80c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ad052e-ced8-4c6a-b879-dc8099dd352e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c29b37-79ad-4185-8b40-c6e942c86866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957d0ec1-8d22-4105-b45c-6c21d08d97b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02a723-58d0-4f25-9f0e-4eb23e247049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d03a33-8128-4e35-b6fd-870111693ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05f755e-6a48-4443-a82b-7a2e3116b8c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fa8c12-ca8d-418b-b8da-a73707ea9379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4dfb9f-6cf5-4663-a6a9-fcd7d54a1047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f79c665-5d54-4edc-bd0a-b706f0ee1fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce161ba8-ec28-484d-8867-a152e3c702a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1066896-d01e-4a97-abc2-a3a92e5d6c80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5a855-849d-4b7c-b658-da6fc177295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e950d7f-d2e3-4556-9ead-ee418e2e37b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8484935d-c5a2-4231-8d30-6d7a65962b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43dfeb79-abf6-47e3-bbe2-2eb3e5eae148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b443fc-9dd9-4639-bff8-f6a3313543f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3fd5b8-257d-40bb-bd2d-b5502bbe7b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd510d99-7ac2-4064-a046-789ea76d8b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bb432f-8f58-432e-8886-33e6ed3d7cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8a5e35-c4b5-4571-9ace-b13cab315444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafa0a9b-4e82-4652-896d-27d3620fb7cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a2730-af33-40b7-a275-94679de8b8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85363de2-a686-4134-8b62-4bc6809369af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2626189-a42c-4e1b-919b-ea43f2532bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a41b2ad-678c-4639-905d-9ac631660cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e872d59d-f3d7-4f57-ada0-035ade1abbd7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee99291-133f-4d00-8a30-61a72cbc0e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef20caf1-d8fe-4b2c-b05d-7d10cfee4109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25bdb9a-9626-4d09-aac3-da8bfd4d68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849bc1ee-1ecb-41b2-8e73-1bc66ed6a60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36095512-ebe1-4022-9815-c5d8caaaa7f0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85490c85-87d1-494f-b197-2799731c2084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cfe7bf-94bb-4742-aabb-1d7b498b5190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b25c343-1e46-4b17-abd9-a3ccba3a2e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7fa2f-44a1-42a4-8269-1e439eb5493f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4539315e-0114-4db3-8082-8ce019654c24",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c1949-2f04-4f6f-9357-236549910282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a778dd-2d6b-4411-a49c-dc9c96ac4f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43289675-ba09-4f11-9e61-b112e66d68f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f61e84-610e-4dce-9d68-9d863d6cfc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa09589f-ea24-4983-a324-bec509e6051e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af98b956-3731-4f00-a35a-ba914ea5199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4edf5a-9c46-49d8-8332-18537ecca906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d19a8a-72f9-4c8e-b35c-15593f3c817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "569f2898-7026-4b01-ba44-0374b7556d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f11e599-e95d-4eaf-8f1e-ce0b6e83d6c8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81459a7-6ab0-4a0e-9040-36057d51a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d35e086-695f-40f0-af1b-43a2a304ce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a84c9e-c567-40f3-8de7-837227ceb33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "965c228f-3cd2-45dd-a78d-b7ccfdc2cacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6128d31-609c-4b80-b1fe-06971ca496b2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4682fbfa-5f8d-4455-8fc4-af8ee2004c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04097166-59ad-4e1e-93c7-3948598f610e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e54b5a-414c-4f3f-8162-405eea0c0908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7719bcd4-c427-4983-8da7-5b3dfa67276a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6f7f10-f3e0-4f57-b6ab-042a9e382ef1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0863a1d-a03e-4680-b533-ba92c1b15a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4018d33-0c34-42c2-91ca-41318b4ee667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1985417-1220-41e5-a323-ae3d91855170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07545414-04ab-4d61-a5df-06cbb4e7898b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9ef02b2-c2a1-42cb-9ab1-8c6615e7acb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a39b51e1-567a-459c-b1cd-e071fbc711f8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b39c82-086d-43f4-943b-f14d9d1bc436",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e64eb384-bcfb-4e82-bf27-8b2d2804695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a058d5c0-1786-4c92-85b0-452e39da4a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72f5581f-d463-4816-ade0-05e621ef29ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b52a830-c6c7-4376-8994-e8041dc6228f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fbcced2-17eb-48fd-b9ce-69a19f5e51ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "681614d8-388d-48b0-9035-5501062716b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b224bb9-a7bb-4f66-87f7-a35b0a017f9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62a4540b-a327-4ee8-8dbb-7d1e7945477d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6217c7a5-64e9-4ea8-ae12-cfa5de1bc9be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23a97d40-ab46-4138-9049-dbc1653745b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98831da2-8d19-460d-a613-7a78acbd0407"
            }
          }
        ]
      },
      {
        "id": "8cd17f5b-529b-4a4f-bace-b644273178fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "65ec5c9c-887c-4ad1-b5e0-b2fb68b5d20f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "801bfdbe-f4d4-4521-83cd-0854ea491cc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a407c94b-6bca-4111-aa17-fe54b90b7b24",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4f53d-2a54-4ec1-83f9-c8b2d6e34191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c4a98a-f34f-438c-be40-a9a7eb32cfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d659e738-3c14-439e-9737-ffc2e5a85750",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd69b77-5135-437e-b474-6f8b82488865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebabeff7-6a2f-4f5c-91f2-7a3b2e59a49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0960b2-b05a-419b-91d4-eefcb486a4b2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69170a9-36f8-403d-80ce-dd357f148cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8246a5-c6db-494e-8efd-3da836924361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44983e8-a5e2-4367-8c24-7432330c9828",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286dddd0-d69f-41b5-9975-ac49a9d3b3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f0a965-cebd-468f-8b58-a25223bb078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94501e1f-3378-42e0-b138-6ec378f34ecb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70693452-cf9d-4480-8506-7ccac2fe20ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8ab944-43f5-41a6-8f73-d453999706ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa66eea6-802a-48fa-9a4c-0e15ada36927",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07941c8b-c0d7-4a2e-a4c0-d3471ccadc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754786fa-5fff-41d8-8a10-70d82d4c09c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f2339-5c26-4186-b220-d7394b04b5aa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b251db-270d-4fb4-83c8-f237ef3be61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0819b7b3-5e8f-4810-833d-abadc5eddb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b9afe2-8116-48f2-b1a9-fb6f73dd10e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01095593-394e-44ab-b3a9-ae053ce2d9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba121157-0376-4088-b7f5-0b3164f89328",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9acfc7c-35d6-4f06-9241-54f876f58837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ed0b9d-e81a-49a1-ab48-505b61840a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b38e02-5cfe-4d75-a9ba-b393b6ea72ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4253a909-51d6-490b-b610-f3c9b52607fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883605f7-ba1e-4fe1-a786-7f4135ad334b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362ed38d-951e-4c78-b8d1-e1e9df24ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c808a72-8c8a-4a40-8608-a1a789f3605a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9baa9c-487f-4b03-9725-b2aabc1fae94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a5df94-d58f-4fd9-a4ac-642fac6bccd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515690d9-66fc-4209-847b-d51da78a0721",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6457d2a0-dbd9-4bbd-b8b3-1c2dd5aa6e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e810224d-6043-43f6-bce6-07b2ab16d453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c675ec45-a58b-42e0-8291-be852606ae6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99044a0b-e6f5-43b2-9051-06ffc9d079e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4d3798-e203-4726-b5f1-efd8f4f8ae6e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a65590-7a2a-4b93-b8c1-b134256513cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5244121d-92df-4cfe-91d7-37f33e624324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e704a-be57-4053-8f38-509115da3d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eda5ce3-25c2-469b-bb4e-659a8dfcadfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe7da98-5d77-449c-9404-6f46bcf8f3f5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4623d736-e1fa-4cfc-a511-85c8b9e8a835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb0ec5f-fb3d-4263-83eb-d374c8e0b00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea6ee0-8a53-493f-82b8-8f5b3ff14d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6dedd5-ccdf-4c2a-a20e-fbd499ebf165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4883c81d-31ba-427b-8e5d-3c9810fa60b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b0456-cf4c-45d3-baf2-205876cb32cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad7edfe-e29b-449e-b987-5518fa9d926a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d908d3f5-4440-41d5-be69-0f0aa969c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ade98c-c33a-4b27-b630-83a7d85f4954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b88cb-3265-4a76-82d9-21ffd5f8e647",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dc23e9-cf1e-4e98-9fea-eb6879f2d40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe6f5a6-81b7-4b09-a2d4-fa51f1074619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ca6140-7e54-4ae9-a7aa-3d7e0f316ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2450f6f5-5229-4332-bf18-0ffa0f7a6e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fcd827-ec9b-4779-91e8-55efb05d70f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36a9005-e6c3-4159-a666-7c66a13edd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36e5165-3ccf-4ca6-a17e-7fd226e8ace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20fd26a-b574-43de-9791-7fda7dad5535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51231e83-6743-4221-916e-385e3b0ce798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeca700c-e097-4ea0-97b5-5feb42c42929",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbd72f0-be08-4610-91b7-ea0a69cacb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e7e4d3-6e9b-4e3c-b642-41e61faeb723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb3708d-1637-490d-87df-4e9b98b4703a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c248e1eb-c81d-4345-a008-65d6dc6a58ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f103fe-94af-4534-a15d-5c20ac783c79",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050df211-ef1b-4b6a-a906-967fab67d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490b95b6-f1fa-479d-bfd5-ccea9392c126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0762b8-687f-4060-8a71-47d15d749580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1358b8-5c27-459f-99a9-d62b7a89b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34711c10-bfb8-4163-9e35-dd2900ef5ed5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f8594-6565-4129-a33c-11da5e4145e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783c789f-53c7-4d8c-bf3a-730d08553825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6fa6f2-83f2-409a-b87b-270b243f8302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5780ab34-17c1-4cd1-9575-b43ab69c1edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096515df-36ed-4795-9784-ef8027bfe9ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb4c379-b6c2-4446-ab15-24660c4f2d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe919d05-ee15-4d15-ac4b-892d94622267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb45dc2c-5a00-4edb-9f52-13b63760dcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01802afb-06ea-43bb-9171-b9dac8852ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff6b6ea-60ee-44bc-9bb0-6636ee95747c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9052fca9-62d4-4b9a-b425-5080e7fe7ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e81e5d-6584-42e1-ab73-3f7b4a7e020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f319d-df6a-46e7-8a93-b091e498b45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95478556-6720-4ecf-b7ec-eecbd8de2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c3560-068e-4bd4-856a-0823b800d59c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7148f9a-5701-4f7b-af49-2e3c79028152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d4f152-5200-4401-abcf-2372ba080131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e1a4d-a567-4189-bffd-e7f9843346d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c7c648-8dd6-41c8-8701-00a25674666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d93bbd9-5afa-4046-9165-dacef2346994",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f0442f-9b65-4104-93c0-a946e841445e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6e803e-481c-4517-a62e-7653a34b5303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b21d54a-d82f-4b62-acca-dc1cc03f9302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23023cf-ff97-442b-b102-fddd76d2f2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6038d4d6-1cfe-4796-a6d5-01101495b35a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a79a74-12a3-498d-ac60-ba9634df6bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c94423-1369-403f-aa15-7fb3f40f51b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715a17ba-1916-4e86-a6bd-7e08162e8488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1b272c-1cf2-4c01-b59b-fc4965244028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceab5723-a49e-4e9d-ac22-a8a5e82c8476",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41654dc-bc5c-48eb-bb24-13970f278498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781c9c06-5606-47f3-a9f0-5653108572a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdc2b88-75a2-4270-a346-91936b2b230a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6adb40e-0c82-4950-8482-2244bef5b360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd473d5-2db5-489c-a6a8-74350f0f045d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d237a4a3-c7bc-46a5-9c03-ac730af7669c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4b1e64-0298-41c2-9faf-c180c6f021a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a9561-efb8-4156-b178-436fdd7b108f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cf6877-e5fd-489e-bf41-630e0620bca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a894d3-ea3b-4d4b-853c-701e181a0bfc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d70ee6-763a-4184-b15a-e959a2ec8208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d379568-5280-4525-b93f-75ea59c61c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf133c0-d3f6-4cf4-b8a1-14c6d7fd707e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8e54e0-8289-4810-a9aa-07f167483dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864fc1d4-1959-4089-987d-3c2be8034918",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff767f4-75f0-46b0-8a08-d3ef2f8b84f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6f37ba-ec01-49cc-a184-2d3c87a45cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee549f33-cc22-4cdc-a14d-2e8b607d027a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b079a38-8646-4ba7-a779-9160e7c35662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08403e96-9ad2-4f21-83d3-4a92473bf991",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f90f4bf-5ee5-48b5-aa8b-a19213b4c457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece849ba-0992-4193-87c2-9d3eb90d38b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664b447-21c3-4feb-a293-ec6132dfb692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6ba4d6-c131-4dce-8850-7ee607284278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb062b6b-48b2-401f-a2f3-8b34731b9250",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bffa93f-4259-4ded-8d5e-5cc3f208400a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0286cd-a3df-4aa5-9277-5a613ef56eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295bbf00-dfe7-4400-9db5-020eed4a50f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009b5ced-b345-4615-98f6-7f38bd0a0e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b745f419-13dc-42fb-bc7b-d1d9d5d919d9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f50d5ef-c0ca-4cf3-a3f3-79329f2eec10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dcbf0d2-ac8f-4dcb-9815-7355c1cf7299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b04e69-bb47-4ae8-b41c-e031c886eef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a29276-7767-44ee-a536-a0ca16f3131a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcf3269-25af-414f-b93e-485d9548414f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249c81b5-d959-4266-8f24-0c2ba2a4986e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf19027-b1d2-4d53-a76f-237a872f52df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73bee5b-ecc8-4c98-ab5c-06bcf33c60f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1def7366-3d75-4884-8060-e22d39204ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23749ec-d5f9-4e0e-99e5-25e5ee7eeabc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2c81c3-4699-4240-8541-dac6f0f76622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e17a3f-28ad-4ba9-af88-e5d6022a264c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e2515e-431c-4e1c-a7bf-104f03880915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec69748-7454-4143-a5e2-9ac040dba996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7a27c3-92f7-47b5-9e64-9355b9ea35ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c178c0-1c2b-4843-a681-ba67c64e6d7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd41933-4abb-4ff9-8011-f53a42997a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3973d2-531b-4094-a323-b6e3f5e1ed80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a284ef6d-fd7f-49ca-a2df-d23092bd42ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1714031-3d63-442f-b0d1-36c6dc8c4b67",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a732722-9508-4511-95b1-5a1a537db696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebb64df-d159-43b1-a3be-fd7f701f5c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f335b9-f282-451a-8b0b-8588d174b5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed34a53-7e9c-4ede-ab0e-6213f651637f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb920c82-8ad9-42fa-8dcc-d1a1f2c2f919",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314d577a-6d32-4871-8f1c-856cc79325bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c5a6c5-46d4-413a-944c-3488c0daa7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8385fd0a-a29a-4f0f-a5ee-b9be592aadb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdc7bf2-f28d-4067-9559-f6318dab5bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c0ab0-7f18-48da-8142-027648d1efbb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6514b2-7d5b-4e5d-a154-919f87235c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86256ba3-39f8-49f5-aa56-114103dbeb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648483e-b4c1-43b4-b2e6-4fa1467c79e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10f80f3-c47b-4968-8357-2d26ea318bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7421ee5-f6a2-4e5b-b369-0bfd40b26b23",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b14d57c-d0a1-4fc7-89e5-c2338c6cd6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b29203-51e0-4751-86e7-786f35063417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983626c3-91de-45eb-93bd-29f1255c0471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0090e5aa-498b-462d-ac01-e3f089154283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2959570-2aeb-4591-9bd7-ecbf63d8cee6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d40ef-29eb-4e67-b272-69f1f4c0e23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17998e7b-ba96-4436-a7bf-4eb1868b493b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d316568-1863-434f-a976-6e2d910621bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fae7032-b47d-47e4-ac7c-48527d216229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f5ae4-28bd-4c66-ade1-610deea640f5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221c0d69-83ca-4e5b-b598-2ca96e35e9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a31240f-25bd-4589-839a-70985a3bd1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2174ab95-e4b7-4eb7-8791-584ea5c4539c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c64fddd-0260-413b-b2be-19da526d396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72afaae4-b711-400f-8483-56452bb08fab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e037612-f97c-4912-af6b-4b94fec33a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2cce56-dacf-4d8c-9fd4-c78382849dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b21cd9-5149-4036-b1ce-8aa807a7ce7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5457a0f-4b15-4e26-a88f-a5dce971b37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3b9e0b-8855-47b2-875b-fd6b221fd571",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f64dae6-9837-4f63-b178-80bd80700ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee72e969-1038-4750-99ec-6fa701ae8a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e33f3a9-0960-40cb-abb5-c6d45c56e463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb71319b-4f21-400f-8daf-f45982deb406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd745cd-5d37-4170-9fc8-ed8ec6b71340",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae0fc1-0fd7-49a1-80ac-e0ab958169d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8d79e2-6cd3-46c5-b068-239bde1c5d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4b0b3f-87a3-4e9f-9cd8-13e39839f398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d00e9bd-bff1-4f2d-ac41-5dbbe4ef1c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2159d1-9333-408d-8318-5ad3f137c6eb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56475cbc-4d4d-4d79-922c-463c2214193d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b356046a-2368-4b9f-871c-6a8182807cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3651d01-6df7-4428-9448-d989b6dcb429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db286e1-f9e7-4529-b7a3-0963968709d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79b3fc-2a12-405f-b8bf-47cce5632ca3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc70395-cb0c-40cc-b93a-fa1f4787d2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efb9543-eeda-41ce-b87d-fd95ab794c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879f8500-3d6b-46b1-8a80-f8417e45a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5846018-f0c2-470b-8097-06ef7729f4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8f2732-058c-404b-a60b-d2afa8bb8c58",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f096403-2d38-4a3c-96e4-30b368f0d9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e521328a-d254-462f-80f1-7e3c0fb8b9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d0ab07-41c7-4552-9d4c-46f223429a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a08cfa-0e15-40d6-8431-841b60cf5acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1370b1e0-b55c-4caa-a4fe-8aa835cf01bf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd344aa-7114-4df3-8b7a-4aa805ef09b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e894cc4f-21ad-4273-8318-380129750676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfb1dbe-5643-4c71-8b6c-5fddb1401a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b292b7c-702f-4b90-a4d5-8bf5228f42dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2ebbba-cfb4-458c-a152-671f12fc16ff",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3341eab-db47-4e06-960b-436f32f029d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47000c2-02a7-4cd2-8ab6-bcd6889eb3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3db4e3-90a6-4c79-9ddb-e7a9a66bcc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb027b2-fef5-4516-8449-0634a00f672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11676d4-c034-4883-980e-1feff33e873e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0635680-d7c2-4d94-877c-f519ea23cd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edd90d8-3f00-40ea-999b-7e64a4978853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab45139-dd60-44c4-afc7-f426c5ba2e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec1a376-8301-4340-a7a0-081c77428c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a694dd-389e-40be-a46b-fd71d2315c1e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedaa661-da7d-4038-a02f-4e25f25d0e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec32bcb-8fc1-44ae-82ab-9268afbe27f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13a5990-eb33-4111-a6b6-c5be0eda1b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c0b326-badd-41af-8dbe-1cb6fa93128d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612645dd-dcd4-4874-b98e-729e20e2108d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26173dcc-8f92-4c4b-b516-ea256c24d63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eecac1d-18ca-4412-8dff-b1825b2057df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c32a0f0-155b-4b7b-88f0-9e5bd60c71de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677a7241-e6c2-4788-8602-ed198f2df89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216b2e5-5ce3-4028-9ff4-2fbae75490e4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed6e52e-26a0-4145-8df0-bd09932d5d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d79117-a97b-4d5a-8f7c-1807494142c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f9e921-77a6-44f5-8f12-a2eb9a7c1ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99787ed-dfb2-4186-b506-dd1301a5b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e950f6e-a788-4943-bd76-138cbc869262",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adef6ce-bd6b-465c-8076-ac9bda9ca434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0f9bb9-5a66-4fc1-86ae-79a0ed8f9f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8b4eda-7ff3-4499-810f-d7074d8a65fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f951abd-8847-4d3e-b0d4-65d1f6ac51b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a46d6a-8139-46e4-b763-4837fdb9902d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56e45ac-ca81-4522-817e-877c4c3c3e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8b4f6b-3d45-4939-8c29-6bcd125d5861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796b622-f05b-4293-a3bb-87901d5af0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d478cd7-3c16-43ee-bab8-9db873b1537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faead22-2e58-4ca8-9b24-2ab4824aee1a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab209e9c-c42c-4f7a-8ccd-ab7692101fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06a50e5-46a7-4194-93ce-036e74058eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78e4667-bedc-4cbb-9710-8bea7306da4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291fdd33-becc-47af-b2d7-c3f8d7ed0b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7406c0a7-c150-4ba4-9c8c-d0c90726fa73",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccfa394-86ca-4d29-a588-bd6ba150c937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35b455a-0e3e-4cf3-b788-dbeddf2cadf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781dfc7a-bda5-448d-a02f-b80e7a65a8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d31345c-0b0e-419b-bc1d-e1207fe4f038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8b9e9f-5b44-4561-8008-a1a7eae8e289",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdceb53-0a72-4a38-a3fe-c82510cb04d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333bb461-8d97-4f3b-a296-40ce737bebde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929d3fe0-55f1-44d3-902c-6329d9783a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafa1985-2558-470f-8af1-fbb4087790d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2541f-d71a-4bc1-b8f5-8b7a686b5117",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e671221-2126-482a-974d-88005aea836e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53d4cb8-a49a-4fc6-9575-f7f1fe4ab3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103543e0-e15a-4952-aee3-97b767be1ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28929b22-78be-488b-ac66-78f864766b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43bcee4-48e8-4e7c-b0cb-60eb1c4ecf06",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7118500-cd78-411b-b1a6-43351b85f582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa1883c-2e6b-46fc-b312-398472b431b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1b5d51-4dbf-4091-8440-2a4b3e9a7c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfcecd1-e1a2-4119-a79c-e5278ae8adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f23ffc0-a20e-4024-92fd-a43ca73bb6a4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b3a6be-9460-49ea-8d5d-4482df3b1647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db94f13-56c5-4875-bd0c-735279c2194f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cfa20f-0837-4533-aa44-9dfaeb625434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37949876-1e4d-45ec-867d-f9e4c5146a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efcca2e-8f46-41ef-a3f1-91a56ee25031",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f4053e-658f-4f7e-8b93-69370c3f4fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6610984d-97df-4ee2-85a3-a2ac1580e11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02807284-bb3c-4eb8-a0fc-3f859b804d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2df2502-37e1-4eb8-b636-cd062ad96d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20701fad-443f-44d7-9cc2-ec6d27e2d6f1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe70d0-977e-4cbf-be38-7d3181f808dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2d2618-b1a8-4791-b0f8-b7898137ada4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51ef6aa-2345-4767-8d98-6c96b0a430a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b52d538-74d1-43cf-a622-aae7f5317914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7285fa5b-3448-44d5-ad88-1bedf4c02c29",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b43d1ee-f984-4712-8e3b-6df4af915b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee65ce9-a4a9-4e92-a1aa-a24748d9ebd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54664292-2607-41ed-a173-55009a1eb9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0abd586-fc7a-4db4-b3ed-1e0079b2afff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298676ab-af8c-4519-8234-c603375612af",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb056049-2f8c-4f01-901d-6c8947092de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8d0811-c248-4d83-b6ba-b7691dd33a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df946e01-f507-414f-bcf4-57916fd7cfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e682abe-3212-4bd6-b77a-95fb45c051c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcf2f04-1614-44d9-a8ea-c74c4a0929f4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1be6bf-f616-49f6-80d9-265b63227fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "089abc3c-284a-4602-b639-50eee14cafc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931064b-720b-4233-b4d1-b900420fc29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17e92b7-87fb-4f36-ba15-6ebe19df012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55233e84-34a6-43f1-85f1-e6de885a28f0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a98a6e0-5e36-4a2a-a29a-8e71b4c02f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451359c9-deb8-4d8f-82bd-959857a1c7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68575f1-ffab-49ed-b9a2-25d5168320a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dfb2ea-3d45-4bc5-a272-fc0d2b632996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318f643c-cc42-4bbc-a0ee-1df57adcb789",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f79ce8c-fe2f-4a3a-b220-a7d7491c46c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07eb7c00-e76e-4971-80a9-736cba6ac670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9b7421-a8ab-4ce5-b13d-d8ae1f342915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7259fc22-d36b-4791-b2de-163fc64ba739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8272546-1b4b-40a9-bf54-3458d86784c1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973187f6-05f5-4cc5-9f5a-6b5370c85b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cb6a53-324a-40ee-9467-a1516059c098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aebece4-9536-4360-90d8-4efaf878ced5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656fe70b-b40e-4768-98aa-e9a50f1ab176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d667cf-a10a-4269-9538-44460f3465ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695a9d94-c80c-4d69-ad59-3366f5454edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e34ba62-7b2c-4923-b20f-130d8641d38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3272e535-f053-43b0-a5f1-e27db180ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffbc8ac-8202-450a-b446-04c7eb304c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c2773e-8dcc-4826-aabb-8fe44b3ecb34",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb3d603-77ad-4a7a-8eff-371bb7f6e55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcaefa9-af90-4178-ad47-3352d220e270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed187198-c4c7-49c8-8c2e-8af80cbb7fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accac04f-5a35-4a2a-8ecc-3c5a993ca112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e60a97-685e-4677-b4e3-f4e4b35ab37e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841cf1cc-a664-4f0f-bda1-729aa36ff35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53801e90-cd8a-4b0e-825a-ce7c6c2cf8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6442d305-5739-4e8b-a822-3f57a6f45902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe88c29c-61c8-440e-8100-0c917f365246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc5771-a648-4f1b-bfae-9d9259e9606f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae116515-a210-468d-bd34-6bce8f845543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24b655b-b30b-4155-aaba-cf565eb6e826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571df27f-3b6c-4cce-a3cb-02bc55680885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f418e003-c41a-452d-8d3f-aa6f9d4ac6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc286cfc-2cb4-4fb6-af1a-4516f4238824",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbb8187-470c-4669-9612-da74c5dbee36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e79efef-ebfb-4361-8a65-2d0b8526ed96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7947643e-e7f4-474b-b9e5-2e8d419d6e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a42c395-968d-42ed-9c4a-4248f579f291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a425388-1df0-4b02-bbcb-753c101b65bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657074db-ed80-4b60-a37c-87b8726a0f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da4de2b-adff-40e2-b072-5d151affe76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41314b-8947-47b2-8b71-160891ba3e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c756cea-cf5d-4280-b93b-cec0db961883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9513b7-f990-4755-8ea1-00fa9f7e00a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bce6ce-ba3a-46af-9cad-0aa155378578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee3b401-1daf-4a1f-80c3-3f8a9d0e4767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf7a2ab-df3e-401d-a5be-beb16989f374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a598bfc-a24d-41fe-8c12-01cac388b44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d027dda3-dbee-42a0-971c-6f1141f91b5b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069b02dd-4955-4eba-92ca-e1397a635a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20d391c-75cf-4292-88ac-472de0b04ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfd4774-9ff1-45dd-a31d-a7045f05853e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53fce2e-12c9-4d3b-95a5-89f24e2b15ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4341d7f2-89a6-4bb7-a8f7-4de0b30f3ada",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c67afd8-3e1c-4729-b990-cd0eb6c8b37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bef43d-d134-43f6-a893-d145ec6342aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03308d6-b2ae-4542-bb4e-4322684c41cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d26de1-5add-48bc-bba8-efb5ccfcc489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb0d3f-d922-4353-9265-85a73446d2ab",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d3ff05-1206-43cf-9a30-396992c28b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470fb39f-71a6-4df3-9df1-44d958eb3a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995c370c-bd3f-4338-be4f-e8f7e6094963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd300d0-b506-4465-a05f-8109358e3ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb05404e-1bc1-4185-ad5f-00ccb88d0572",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ea71e2-e76b-4d25-b39f-3f08c219e94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88c9ef8-ba4d-4d68-acb1-f18ee0c883dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29974dd6-07c2-474f-b99a-62f66fa0fab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffffffc1-7f69-4803-b5d6-f2d573db10de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b458a0-1076-4a72-a49f-ca349df41618",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b314e6b-20dc-42df-ba60-26e44dac815e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bef713-3837-4e46-bdac-73ea6504c0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92499a7-7627-42a0-9227-1b8e473ada23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8bb72d-9edf-49c3-92af-af71e1fc6c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73c801e-3aed-46c2-9b95-af1854a4749c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d497d13d-8832-474f-9191-4a26e5e0f92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993cd3c7-f679-4033-88cd-dc74baca91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4264ee19-2f6b-4f32-a861-3174eb877de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10173181-25f7-42a4-9f1e-876632090053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2331cea8-0a8e-45d2-a324-799d8cbc12e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c4a275-8163-4ea7-8e6b-f31fd56613f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6117c0-488b-4815-b74d-0da5521466d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd951a4-1b48-458c-9d47-d76739357b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bc6c3f-1f44-4575-96df-e21c031ce87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d502f2d-4467-448c-9c7a-7251b28ff02e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb7846d-277d-4fb1-9c55-4af6a034d1b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15bc36e-4143-4c33-87f5-143a68c25505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b8aeb7-ef61-4f9d-be67-334dc4af8fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39d14c8-efc0-4115-afd2-db47e31a7334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30bbd77-cb7a-4d72-8af8-781369b045a1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7c71e9-164d-4db0-9416-c628c9e0591c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6397d6-b9bd-43fd-af51-bd9e92db0dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2d402-e82a-474f-a222-a1e9534eddb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478dd3c6-07fc-4286-99d4-f9041a43aa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a7d79-8b4e-4324-abc7-d457fb481350",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d46378-a6a5-4b6f-b6aa-3f084546197f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a97044-3330-41b1-af1b-c5edc339c439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fd6a9c-6f90-42d5-a3b1-b70f0ae5c3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c62a0ae-9c66-40c5-ae16-abe0b3568fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9776d5-b163-433a-87a0-97e6f276cd02",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cb5285-2847-4e63-88e1-935bdd8f9b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d2410b-90f9-4252-b46d-b359baad6004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9647ef46-c74d-4130-98cd-a649fd5ed720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e646827-1036-4366-8668-6cc9709c6d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7993cb06-4519-465e-8a43-5be7e5f7f178",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda706e0-6650-49dc-88fe-0e8b528b4b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040111d4-cfce-4d11-8b0a-523c4cf6f14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ab95b-cb1d-4ccc-a7d6-1a4bfb76a8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6492fe6-c8fe-49b2-b9d5-2d45551b1f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e6555e-a168-4fe1-a6f8-54fb75d3b97b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30deddea-42fd-4b5b-9b0c-ce904a5b5f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd7d462-c3a0-4ea2-9e17-988e17773431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adadac8-b980-4d7f-8ad6-9bf7e02c22e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9027b1e-0c90-4913-a6fd-1fa143ac056b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfdbec4-796b-4252-a2ee-2f69a9b16590",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abb6d80-5185-42a0-95af-58344a59dce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dffff1-9bf4-4b95-bec3-5962a19c3242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f949b3-abce-4aa3-97b6-c6397e852a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583f5e61-6ddc-418e-92ab-895dfa505d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce25c94d-e671-4d4b-92cf-b33bb1b53d3a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d88526e-64c3-4187-be03-0995ffcbcf96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48277f8-d7c3-4be4-8305-4eb692bc336f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259bc9a1-5e7f-4d1b-8e6d-2c0cdbd7f333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea276d4-c029-4da7-86c2-58ceb59a86da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e039c8de-c968-461b-b985-4194e1fa48c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f67c1f-ed52-4b29-bda0-5e2f66ec6e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8641f58-5241-4b87-967b-9824b5e39540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a408b-4252-4bfc-8c29-41f7fe4cbc8c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8437b45-1e8e-4325-a03f-de6a289af898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5f324e-f739-458c-ae45-2d7566c6c40b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ac755b-7747-4d0f-ba9d-4c8a751b6d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2ed099-1f45-4cc3-bc90-464144d234d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03845b-bf01-4112-b1ae-431b66ccf9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81e45a8-0bc4-4957-8b1c-2cce9b190e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d9023-043c-4f70-91d5-15c92ab18192",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a90359b-d715-45ff-8841-cb58e4181fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbdf605-2f3b-4a82-a927-9ca3c5f9d643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c06334-e829-4972-b7bb-4c0d63407fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a50560-51fc-4e1b-b250-f6e91dfe7222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a3b8b-44cb-4b59-85b5-acdfb7f99adb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5bfbb6-961f-4845-b2a5-4543ace3c421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49bd450-a954-436f-b92a-b95ec1a6ec49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab4acf7-7ca5-44c3-b6d8-ace20b11c1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b445d166-e5bc-4b60-a76c-e0afbb15adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4076df-8177-449a-bf28-80dbc0dcabb4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b85774d-017a-4fd2-8d16-939ab7c57274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81de98a6-d96b-473e-b2e3-bd7a2b8be425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6659a32-bfc2-4c7f-b861-cdabedb79868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d10dee-5337-46cb-b34e-05ee1558d97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890a4a6c-7e01-47ce-a0f5-af7484bef359",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c622f99-4775-47ff-9bd1-5b6b93e2926b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51146f08-8670-4cbb-b38e-7c8fda939a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4428c9e-02f4-42ec-9e0b-d516f04bbb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98290826-a5e6-4535-89ea-b7b280fc2f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e9ec3-0274-4662-a2e1-6308d47f99e7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31e38f-e9f8-4f5b-9a13-61b14ac58888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a5d097-7e75-4694-a95c-c5d91c1325d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c32385d-f679-4e8d-ac45-574f5bec20fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cfc1b5-cfb2-4db1-8186-6e9ce96721ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3559203-cb77-490f-90a5-535fadc400b9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309f2bc-8b03-47ac-99e9-6e134ef091c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77ccad5-5f40-42c4-9290-8a3695cc9d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac75a48d-0de9-46b0-b4f4-713130dc53c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26466379-f381-4073-981c-f2bfb310a426"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e4d2237-580b-483c-88a6-2a32f5a3ba40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e5e6eed-8891-4765-9782-5e66b8493b5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "228a4bde-e06d-41fb-8e72-aaa604eae47d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37c750c0-864f-489e-9906-8694b61549dc"
                    }
                  }
                ]
              },
              {
                "id": "4f9f9a62-f9e6-4e6a-a09f-b046a40af047",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a80295d-6b1c-4813-9eef-a6da92d524fc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab7a37a-8a31-48a3-a795-bebe6c1856f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8fd83813-869a-431a-908e-61734c74b18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb559da9-b450-4a1c-a535-d3920632f185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81286dfc-6e34-4cea-b4fd-b81105bbaa18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb0ea28b-d3ae-414f-b008-8e974a8558d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef47bcb6-259b-48d8-820d-1aa6a37d18a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b33c80e8-3a5b-4808-8c68-a693f161cfb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "184a2385-dd45-4832-aa74-0196b6f95326"
                    }
                  }
                ]
              },
              {
                "id": "9efc3ba5-ab23-4084-94f5-7b76cf512ebb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "45054c75-de20-4edf-b438-3df61789a588",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae1f59d-5d96-415e-b1d7-b3949325a6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "af683a8a-e0b6-417b-a741-7a97a25cc4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69fdbdd-7819-4692-82d3-16fc9d2d9a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0655bca2-f5d4-4a79-94e6-6d9055b0f9f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d206f8bd-b034-4eb2-92a5-0cc17153a619",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f473fbfd-8a4d-4c03-b636-9c28a36b97c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94217b80-006c-4839-8e61-08655fed646c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a0157ca-bf7c-46a4-83b5-e7c3fb5540b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77e44221-94e7-4a33-b15b-f6c1c4185d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa36cc73-f8a7-4873-937c-8a181f8ddc56"
                    }
                  }
                ]
              },
              {
                "id": "383b335f-b56e-41e8-8da8-ee5c8a2184ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d85c91e-ffaf-44e3-b8b5-0b8935f75447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec86baf2-0d16-4108-abff-e0639e87d3b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58dca7c9-f2bc-439a-b8bc-1c35ed16d2a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b68431ac-aba8-43dd-8d74-07793977d5b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16162f2b-7398-4396-af04-25996924e01d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1f2bbf0-785d-4669-94e2-86cd1d559ef9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c56761b-0bdb-4aa8-a404-9e9ea0a30a39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6559ea98-f62c-4c1e-8367-8a9c8f2d924b"
            }
          }
        ]
      },
      {
        "id": "27d5f701-499d-4423-81c1-b245af1a1257",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "78d85b08-aad1-4b7b-ad00-f7955da8379b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad4f8a1-fa74-46b4-a2a4-20c96e7625e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4f90749-3910-4574-9e95-3f1b635ea08a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0ce59e-841a-4e9d-b3a8-4c29670449a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6a312797-df0a-48cd-99a6-a89bc1eef3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2602406-3395-4783-aced-0015c6f4cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e44a0035-3b1b-4e4d-9c16-d703381f957c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0b936e-1446-49b6-8912-81bd7f4f4bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c83d19a-0afa-43b8-8b2b-f484025d2d1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc4086a0-26a8-4ce2-a700-a332b86c01ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "920b4956-6581-4dd3-aef0-4a63d28f6553"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3280cd8b-949a-4e86-b736-dc8d7d0d0b36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9dd0ffe1-684f-4486-b62d-6911b7eb1a58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a320d16c-a534-4e25-bebb-9675cf869ac8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1c905d8-06f0-489e-9829-fc96fc0e8e50"
            }
          }
        ]
      },
      {
        "id": "dfd422fa-30fe-4ed8-b302-640aafba0803",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3a65a6e4-c674-496e-adf2-43562cf45bf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f082ae82-bfe1-47f7-998a-9af409e69cfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f87732b3-6013-4f30-81a2-1eeed4251140",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373da765-8b4b-442d-823e-f0514fba0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c185db-db2c-4577-b22a-e80f5133a24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2b7eef-eda6-478a-8b92-4384ba655300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee1abd67-fff0-4806-981d-968af5fe6ec4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdeffeb8-a91a-4377-9451-b33ff1a92107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5be3051b-ba52-4e8b-a486-abf440e18fe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5894459c-1a7e-4511-8c53-6f509e3ed39f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe4121a9-d831-40d0-aa62-e7c2a1d1859f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64ff1ae6-621e-4a12-836a-13bdfa4848d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90dc0ff6-61c2-4ba4-8f93-a101640ae77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11c62590-fcce-4852-a35a-747f65fe45fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a8c5145-340c-4001-bd97-a4e651553033"
            }
          }
        ]
      },
      {
        "id": "da5e5b5e-b532-489c-bc96-c7ff96ad0569",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b8fdd6e8-8b75-4aac-8e40-67ecd2090cb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc45a6db-b088-4b43-a997-7e5d0d267b71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90f7bd34-7f07-44d1-817f-94d7717f036e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d4f12-a107-4df0-99ba-9822a730cd21",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ec8a9b5-b866-47a5-88de-3c5223faa8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61c94d8-2d52-4e4e-b56c-7cbb295cc80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8e92cc2-b86f-42fb-abe5-17972b301e5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d136f8a1-8dc2-43de-87f3-2295be6cc252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ea4b4f9-5f7d-41fd-8c52-626cc996cfe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "275eb292-67da-4970-a2f2-f3f2e8774d36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2db346f-68c8-4ccd-bddb-81fb238600f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8677dca8-3116-406e-ab4a-6b80c4c464e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "781ac2e6-89d7-4384-bdb3-d53324e66624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fbadaf7-b8fc-4fcf-937a-b3204536a44e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6ec1460-5573-48c2-a660-fcaf96f8103e"
            }
          }
        ]
      },
      {
        "id": "3a84b039-7916-4c90-9204-b35a22da30d9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e44bacaf-4d99-441c-b38a-383bc1eb71fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52a5ed44-cac9-4757-a009-7cd935a77bae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "185eff7e-844f-46e9-80ed-155b8e4dee58",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83217a02-1d44-413e-8f89-1bacedef4beb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d71c39a5-3303-4cc4-a80e-38e6208c2b4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 317.1619718309859,
      "responseMin": 11,
      "responseMax": 6812,
      "responseSd": 841.5986685086588,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692837096527,
      "completed": 1692837198783
    },
    "executions": [
      {
        "id": "7b86b534-4cdc-4feb-9cc3-9a1e5be2b024",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80e6e821-8707-49d7-8e3b-6e62c6898778",
          "httpRequestId": "3eefd74d-c248-489f-a21b-929685dcb7c2"
        },
        "item": {
          "id": "7b86b534-4cdc-4feb-9cc3-9a1e5be2b024",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d374169a-1baa-447d-ae26-910f907de617",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "6d32c0f4-cbc3-48e5-8686-f537e0801da9",
        "cursor": {
          "ref": "fab64e6a-0aa1-4e18-bed2-c5080184fa3d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2d6d53f9-edc4-4008-b44e-3ade20cae31f"
        },
        "item": {
          "id": "6d32c0f4-cbc3-48e5-8686-f537e0801da9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "59678f39-bef3-425a-b4c6-1b9dff4a28c1",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "e1590da2-d9ab-4e88-a38a-234b97932399",
        "cursor": {
          "ref": "4aef935d-9833-4663-9060-45d9986f5e7a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "37f24dc3-8830-43e1-9a59-0e8d8c1cd7b9"
        },
        "item": {
          "id": "e1590da2-d9ab-4e88-a38a-234b97932399",
          "name": "did_json"
        },
        "response": {
          "id": "23a3f931-26e7-4921-aad1-5ffbb2a3a539",
          "status": "OK",
          "code": 200,
          "responseTime": 1573,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b677210d-72f7-4edd-98f0-9248b6afb274",
        "cursor": {
          "ref": "e9ffd2fb-9a73-40d6-9ba5-1c3cb80517c1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71a64ae7-bb70-4744-a56f-1e1544123fe7"
        },
        "item": {
          "id": "b677210d-72f7-4edd-98f0-9248b6afb274",
          "name": "did:invalid"
        },
        "response": {
          "id": "35681645-e89e-488f-84da-be4a9b74a020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b677210d-72f7-4edd-98f0-9248b6afb274",
        "cursor": {
          "ref": "e9ffd2fb-9a73-40d6-9ba5-1c3cb80517c1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71a64ae7-bb70-4744-a56f-1e1544123fe7"
        },
        "item": {
          "id": "b677210d-72f7-4edd-98f0-9248b6afb274",
          "name": "did:invalid"
        },
        "response": {
          "id": "35681645-e89e-488f-84da-be4a9b74a020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539b17c-19fd-427e-8d81-b1979d615ee3",
        "cursor": {
          "ref": "4e23ce30-79d5-4e8d-b59b-3e0e2a6add89",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f351406d-8dd2-4abc-98cf-88479613b9f4"
        },
        "item": {
          "id": "f539b17c-19fd-427e-8d81-b1979d615ee3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f31bcc79-6eea-4c2f-ac92-61084714bd2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 318,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18450943-c6c0-4a54-94d5-bf31a7139b51",
        "cursor": {
          "ref": "d468c09d-9bb7-4c5b-803c-96a6a558ff3b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db223f3e-e565-491a-9eed-775461b5eb16"
        },
        "item": {
          "id": "18450943-c6c0-4a54-94d5-bf31a7139b51",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "48063692-f588-46ce-931b-55eefdd92603",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c50c76-848d-45cc-a077-f5c59edd7c84",
        "cursor": {
          "ref": "ece6d5b3-0326-497a-b97e-2c6fd965330e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "691e1ac0-dbc1-47d2-b180-c1b853fee930"
        },
        "item": {
          "id": "65c50c76-848d-45cc-a077-f5c59edd7c84",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5f759ed8-c67c-4892-b0ed-549662813083",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d2ef34-3477-4b15-9589-f000f3483e25",
        "cursor": {
          "ref": "00dfeb3b-8e05-47c9-b691-38e494e8e9a5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7f7345d2-db7e-468c-866d-a519dc750180"
        },
        "item": {
          "id": "d7d2ef34-3477-4b15-9589-f000f3483e25",
          "name": "identifiers"
        },
        "response": {
          "id": "b6963f57-9fe5-449b-a554-6b590db2c2b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1674,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12a4036-4b01-4c86-a8c8-fe394bc42263",
        "cursor": {
          "ref": "bd33bde2-5c2c-4858-85b5-b85c887a8edf",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b416e4f1-7f89-4e2e-bda4-8b887602425c"
        },
        "item": {
          "id": "e12a4036-4b01-4c86-a8c8-fe394bc42263",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a46916c1-967f-4129-8e2f-35f86b9bc695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ec5c5b-19d8-49f6-ba5b-854dce0306f3",
        "cursor": {
          "ref": "a2a2b786-5d64-4132-a016-884a3116887f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b95d42b-2a9f-4590-97df-85bc1dea491c"
        },
        "item": {
          "id": "c9ec5c5b-19d8-49f6-ba5b-854dce0306f3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b3b5aa1e-6371-40b4-8e7f-b1ce6b1b12f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5365f9-be52-49f2-b85c-78160c0f67fb",
        "cursor": {
          "ref": "a64204c1-c401-46e2-bb5f-89347e436669",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "890b1a1b-2686-4861-88b1-988c370990bb"
        },
        "item": {
          "id": "2a5365f9-be52-49f2-b85c-78160c0f67fb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e96bd0a5-898e-449c-85ea-7c38ca90b1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded9d9fa-d04b-45ba-ab07-dbafce8969b7",
        "cursor": {
          "ref": "26d38851-3d83-452b-9540-1e1e12066cfa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eae7c554-23d8-42b9-b57c-f24d119b677f"
        },
        "item": {
          "id": "ded9d9fa-d04b-45ba-ab07-dbafce8969b7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "40cdd82b-0acc-4791-8d3f-441b779fdb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a05c7db-d2b2-4785-ae9a-78275f03ce5d",
        "cursor": {
          "ref": "e4678f94-260c-451e-a770-d756d3b5d3a2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f1b90de-ddc1-4acb-a1fa-5dd792ae23c3"
        },
        "item": {
          "id": "6a05c7db-d2b2-4785-ae9a-78275f03ce5d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ac0820ee-eca6-485a-b7cf-377a296c6d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfb3dd3-e633-4a29-90f6-7e21b9f68a36",
        "cursor": {
          "ref": "03dd4754-3fce-4e95-9a79-1537a22fcd51",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "01cd9934-6f5f-4ed9-bf1c-8be576fc6238"
        },
        "item": {
          "id": "fbfb3dd3-e633-4a29-90f6-7e21b9f68a36",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ae88b86f-4d31-416d-b4f6-3d1d6deac3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217292dc-3a50-46e8-bffc-cbbcf00adc9f",
        "cursor": {
          "ref": "ccea45be-358d-4f5b-b3dd-0cefe0bfbff7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9f733e5-7ce2-49df-8385-8938ee99c890"
        },
        "item": {
          "id": "217292dc-3a50-46e8-bffc-cbbcf00adc9f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "faa4c1f1-f46e-4fab-bace-ac67de59d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e5eb4c-efc2-47bf-ad39-5b670eb86a17",
        "cursor": {
          "ref": "54198244-da02-4e50-ace2-43cd090806ad",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ac0f5731-ae18-4948-888c-8fb0759e58b7"
        },
        "item": {
          "id": "15e5eb4c-efc2-47bf-ad39-5b670eb86a17",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "39ad0d1b-a5d5-4ac5-b30a-9d1f9cd100a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca113a-25c8-4a32-89cd-21fdfdd186eb",
        "cursor": {
          "ref": "956128a8-e2c0-4174-819c-5dbc1fceee14",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1315ab6b-2aa0-4bae-b2ac-681ce3f97f4f"
        },
        "item": {
          "id": "9eca113a-25c8-4a32-89cd-21fdfdd186eb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a278ca88-2dd0-480f-9159-0e4db525ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2015c-9675-488f-aa5d-2b52cab2999f",
        "cursor": {
          "ref": "79c94abf-512d-45ca-8ed9-fea50e5c9963",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6d5170f8-391a-423b-a298-bdd2f9bb8f7b"
        },
        "item": {
          "id": "7bb2015c-9675-488f-aa5d-2b52cab2999f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dd2fc020-2682-41b8-a892-ba3682d708b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e5833c-af1b-48db-b694-f31397350f2b",
        "cursor": {
          "ref": "4860b88d-39fa-4a84-9a1e-dde4e9adef06",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "803f356c-dd03-4fa9-aa43-94e7dd4ef07e"
        },
        "item": {
          "id": "79e5833c-af1b-48db-b694-f31397350f2b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "67bb5454-ca3b-4815-80aa-ef95cc307990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e93c0e-11d5-49d4-a45a-34132467100d",
        "cursor": {
          "ref": "0886ab68-7262-432b-a546-bdc52f4dffd7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "196b2675-4936-49de-8e92-805a28e1bde2"
        },
        "item": {
          "id": "44e93c0e-11d5-49d4-a45a-34132467100d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8bf6c65e-06e6-494d-9b00-974208859b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f34212a-d479-4475-b7d4-048771037c25",
        "cursor": {
          "ref": "a9a426ea-219c-4eed-bbdc-731cf6b04aff",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c6ce5088-9d56-4058-a495-39eb85ba56b5"
        },
        "item": {
          "id": "5f34212a-d479-4475-b7d4-048771037c25",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "04ab603f-5c62-4755-820d-61ee75235924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87afd9cd-0d35-468c-904d-f7b862d4a21a",
        "cursor": {
          "ref": "28c22498-7704-4b08-98d4-5bb6deff4de3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "882baf2d-021f-4f1a-a405-0b748bd3904b"
        },
        "item": {
          "id": "87afd9cd-0d35-468c-904d-f7b862d4a21a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa73e6af-d6e0-42bb-8c99-af9f9f268488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e10505d-f001-4b7c-bd90-f35a3b21e2eb",
        "cursor": {
          "ref": "8facc9e4-ec06-4279-8c11-6770129eb8f4",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3bf125ba-0f68-4445-b7a7-ead93e275a54"
        },
        "item": {
          "id": "8e10505d-f001-4b7c-bd90-f35a3b21e2eb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e0d2e15-1c34-4c3a-96db-ffa9d86bee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a85fe-6213-4641-8034-b2b5e2a42f15",
        "cursor": {
          "ref": "403dc0b5-e960-4c2f-90a0-7f3407240f5e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba74c248-1883-4f03-877c-bdedaad2a3ef"
        },
        "item": {
          "id": "e93a85fe-6213-4641-8034-b2b5e2a42f15",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cedeb268-1af2-4014-a9d5-522201c2f3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0ae674-c02f-41b4-8885-a7df9d1bd88c",
        "cursor": {
          "ref": "deb5a9e8-1b1c-437e-ade2-caa8d28113ea",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1391f607-f81f-4404-b247-806a0e5ef2ff"
        },
        "item": {
          "id": "7a0ae674-c02f-41b4-8885-a7df9d1bd88c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b82e51a-0404-410f-924f-e835381cd565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8cfb67-1902-47e4-9e14-9e2772d06bc2",
        "cursor": {
          "ref": "d94f665e-564d-4f94-8fcc-3bc5e1eea4d5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9cc23481-7238-4fe5-a932-2d48c90ab442"
        },
        "item": {
          "id": "3f8cfb67-1902-47e4-9e14-9e2772d06bc2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dec8d1fe-1a47-46bf-b874-50f20b505aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67feceff-b4ec-4dea-a35d-5f74db493c11",
        "cursor": {
          "ref": "3d17dd77-6ba8-4b32-a89d-5aa2a51e23c7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "117843c0-4f07-4a96-b1eb-d66bfb141cd3"
        },
        "item": {
          "id": "67feceff-b4ec-4dea-a35d-5f74db493c11",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7392b28b-c017-4ad3-b4d7-a4706553e52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b7d90f-7f65-49e2-be1a-fcbc86659750",
        "cursor": {
          "ref": "c5273132-2118-4c54-8515-e6383bcdcb22",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b38938eb-cae0-49c8-adfb-2b643e494365"
        },
        "item": {
          "id": "e6b7d90f-7f65-49e2-be1a-fcbc86659750",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "58ae01cc-6b03-4d47-8dc0-bd06b45c2680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1925dac2-21ce-4bcf-8fa7-e62284366464",
        "cursor": {
          "ref": "86ea94d4-3b05-4871-9e66-6a40e63c6d11",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d56232e7-411b-46c0-8b26-6864d50c7a6e"
        },
        "item": {
          "id": "1925dac2-21ce-4bcf-8fa7-e62284366464",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d18fc74-0c28-4503-b642-d46cc7026e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbc0b78-9ee3-406c-b572-f0231ce9f6d8",
        "cursor": {
          "ref": "fb0b7ff5-8e01-4b9e-a431-583524e2bf40",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "629c29b2-8c59-4eca-bb9c-5736fd02965b"
        },
        "item": {
          "id": "6bbc0b78-9ee3-406c-b572-f0231ce9f6d8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c4dbb363-d1f3-4497-a63a-6fd49271cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f1158a-f973-49f4-b4e0-91fa17e653ff",
        "cursor": {
          "ref": "e3df86e1-e0f7-4039-9fa6-6517b2557a03",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "851574b7-9451-4691-801d-19ebbedca393"
        },
        "item": {
          "id": "a7f1158a-f973-49f4-b4e0-91fa17e653ff",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2adca6a6-cfa9-4132-bba4-71f237335551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ffcbf0-2424-4ac1-824e-be1b33b9f6b3",
        "cursor": {
          "ref": "cc2fd0d6-11b3-4129-aa70-2558b704158d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3dc6583-5fbc-4c2c-a68e-723777cc2d8e"
        },
        "item": {
          "id": "d0ffcbf0-2424-4ac1-824e-be1b33b9f6b3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "544e9f9e-9e3f-4eed-bf76-8e971a95e66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a0911f-e2de-424d-b5db-ae21c64b172c",
        "cursor": {
          "ref": "2dc798cc-6a7b-49b1-bc5f-25574d629da3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a08c6716-ca79-418d-bbcc-d133ae818a7a"
        },
        "item": {
          "id": "51a0911f-e2de-424d-b5db-ae21c64b172c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "89027bd0-6c61-48b7-a857-ef84123d0459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b52f2ee-de48-48ab-9d15-b16744cf963b",
        "cursor": {
          "ref": "fb374895-6d49-481e-a392-7ccb29894787",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bb830081-110c-4173-8094-7ae5471d9101"
        },
        "item": {
          "id": "0b52f2ee-de48-48ab-9d15-b16744cf963b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b3a0e57c-5996-40a5-ab2e-892e3af9f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d63ea-8fd0-4248-9eab-4ae4ff81d481",
        "cursor": {
          "ref": "05456cbc-df9a-4801-8057-3b19017f90e7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5bf3e67-50bb-40bd-a0c4-81462a0e5034"
        },
        "item": {
          "id": "041d63ea-8fd0-4248-9eab-4ae4ff81d481",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f86d6f98-f524-42f2-beb4-dfddd0b252a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d989a230-fb50-40b3-89f6-ab95b67bcd84",
        "cursor": {
          "ref": "e27a874a-5ae9-42c0-a6b9-7adf549eb072",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "369c23f5-1434-4a6c-abe0-815bc2b589f8"
        },
        "item": {
          "id": "d989a230-fb50-40b3-89f6-ab95b67bcd84",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "07dced78-d0a4-45e1-9663-85373546e807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d09395f-d97f-4e14-bb98-652fdbc47795",
        "cursor": {
          "ref": "b9bbc5a1-ea7a-490e-899c-af72a2d858cc",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5664f145-6090-441a-9465-d750ef7a8e39"
        },
        "item": {
          "id": "4d09395f-d97f-4e14-bb98-652fdbc47795",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5ee3a02c-6756-403d-9151-9d5544b3fd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c52f0-b0d9-4bb5-9850-4485ab8a7a84",
        "cursor": {
          "ref": "7b6b4f8d-3437-4e3f-a57b-80770181f814",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "27a678c3-cf36-4385-bff2-4a097acc8f47"
        },
        "item": {
          "id": "620c52f0-b0d9-4bb5-9850-4485ab8a7a84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e191fecc-3500-4708-b005-1823065b17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ace1bb-7e5b-4d53-bcc3-d452badf6e6d",
        "cursor": {
          "ref": "2e4fdd17-f341-45b1-ae0f-bc513b31795d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9a762e2c-3038-419f-a36e-eab84b3a6800"
        },
        "item": {
          "id": "c5ace1bb-7e5b-4d53-bcc3-d452badf6e6d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "854487a4-6293-410c-bd24-198a0836e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44abbaef-21be-442a-93ee-8d1e5a47ecb8",
        "cursor": {
          "ref": "fd09ae50-2ea7-46fc-bc0e-0fbdb45c8326",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "20d2fdc8-ca3d-41a4-b678-fe255f62f497"
        },
        "item": {
          "id": "44abbaef-21be-442a-93ee-8d1e5a47ecb8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9f28c1bd-d5db-4a58-9624-5af86fde618c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3136c033-d63b-424b-9662-4a0d455017f8",
        "cursor": {
          "ref": "3b7ca34d-7dab-4ead-8036-2a63b7596fe9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d406dd5-b396-49f4-9e15-abc4c535b3a5"
        },
        "item": {
          "id": "3136c033-d63b-424b-9662-4a0d455017f8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "399344dc-f2af-473f-aacb-3e878437151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d352f-0d9f-4cac-9ff5-1b56a59f349d",
        "cursor": {
          "ref": "6e34b3ff-3fba-4d7c-8470-60a1165530cc",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5c8ed821-7d83-4a2c-b30a-a3ffc83e5e27"
        },
        "item": {
          "id": "ce8d352f-0d9f-4cac-9ff5-1b56a59f349d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7ed45d1c-5998-402a-af87-a63c9de2e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62701f1-ffc6-45af-97cd-6f5879e10c02",
        "cursor": {
          "ref": "3526b32d-ff47-4e1e-8a4e-e9157b768cea",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "305bf69c-4713-4b85-b85b-1421745b878e"
        },
        "item": {
          "id": "f62701f1-ffc6-45af-97cd-6f5879e10c02",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "79ed8da7-12c1-4e99-a413-ec1953f53c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb373b1-ef01-4659-83fd-27fab7b22747",
        "cursor": {
          "ref": "d0008cd8-8648-4600-be04-6ced263eb7d0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f984e5a-db45-4fb6-bee0-d5f209d4bc1e"
        },
        "item": {
          "id": "0eb373b1-ef01-4659-83fd-27fab7b22747",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ffc56559-06a5-4a55-81a1-75954cae58a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 610,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c1053f-8bb0-41ac-9291-5aa3e545f93f",
        "cursor": {
          "ref": "3fe538fb-95ae-407e-b4f7-13b8fb6848ea",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aa6d222d-286e-45ad-86d5-afb7857d089e"
        },
        "item": {
          "id": "69c1053f-8bb0-41ac-9291-5aa3e545f93f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc229d4c-6e9c-478c-8a40-c5b7f9b5cb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01ef8af-38b7-4ed4-97af-f9804e076593",
        "cursor": {
          "ref": "8b36e3bc-73a2-4aab-8d09-e44f1c172d46",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "430f3d83-2cfd-49bd-85a6-ea6ee587ecbc"
        },
        "item": {
          "id": "e01ef8af-38b7-4ed4-97af-f9804e076593",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "22648fe1-f1c2-4220-8233-eeea5172c497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fef1191-7f0b-4fca-8b6a-58fba92e5b22",
        "cursor": {
          "ref": "15407fba-6b68-4680-8f48-475e265dff90",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "980da788-bd3f-4a06-962b-41f68f779a6d"
        },
        "item": {
          "id": "0fef1191-7f0b-4fca-8b6a-58fba92e5b22",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "62b91017-7541-4d3e-bd3a-a3e10cc4d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b89f89-cf69-405d-b0e6-d5ee0ab74844",
        "cursor": {
          "ref": "243263d1-11b7-445d-859a-9c34e4fb2b74",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "64a02402-02bb-4696-8310-f98b1ea05e05"
        },
        "item": {
          "id": "e5b89f89-cf69-405d-b0e6-d5ee0ab74844",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6cec8dbd-3a50-42c7-95d4-207548b77ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51908f7b-5e48-4f09-9b50-57888fcc2973",
        "cursor": {
          "ref": "a938ffa5-6316-404a-abca-cbe26758c2a0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d7761910-3f7c-4515-a99e-4a8321e95433"
        },
        "item": {
          "id": "51908f7b-5e48-4f09-9b50-57888fcc2973",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a2e1869f-1d29-4cbe-891c-e59cbc2feb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2732800-0fc9-42a9-b953-4a719db94cb2",
        "cursor": {
          "ref": "de3a4fde-3af0-4a6c-bc0b-402f2fe64417",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "70983961-0d57-4dae-87d7-817233c47517"
        },
        "item": {
          "id": "c2732800-0fc9-42a9-b953-4a719db94cb2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1949582a-2789-4d90-a8d8-2bcff389080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c846eac-e62c-4a6a-8c69-3700a703c78b",
        "cursor": {
          "ref": "8438c6fd-44b2-4f30-8954-99b49ed07c96",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e5fa7f87-2abb-483e-a56e-056be3ea1548"
        },
        "item": {
          "id": "5c846eac-e62c-4a6a-8c69-3700a703c78b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef3633a5-86f4-4fa8-b460-c5972b8c762b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c786060e-46ef-43a4-836c-9f8088226402",
        "cursor": {
          "ref": "669f052a-5f36-4d18-b148-de1c5e2e9143",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9a5bf3ec-f5fa-48b7-9d63-2e270b99ba81"
        },
        "item": {
          "id": "c786060e-46ef-43a4-836c-9f8088226402",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ee0e5a0-10e0-4863-8667-1c675ec990ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621c0c11-dec2-47d4-b51d-2e961908ed17",
        "cursor": {
          "ref": "f0e0f1e3-9aec-4107-bc6c-4a05a1095fbf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ba361096-3327-48b5-b0c2-e9bdefbc815f"
        },
        "item": {
          "id": "621c0c11-dec2-47d4-b51d-2e961908ed17",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1028b49c-ceb2-4d8e-bee4-89b8e8f837c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e08874a-6dab-42ac-9a73-e24ffd74c19d",
        "cursor": {
          "ref": "414bea88-436d-4865-8b2d-a4df2b046992",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a972f3e4-d1a5-4bf9-b186-13cc7a45367f"
        },
        "item": {
          "id": "7e08874a-6dab-42ac-9a73-e24ffd74c19d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03959e68-f76a-4c2c-af5e-943b9107933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa6454-dd06-471c-b9fe-1bcae6e7fe49",
        "cursor": {
          "ref": "34f08d8d-0f1e-4dc7-9d8b-cee9b8291799",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "787d36aa-43a6-4426-885c-917fe0ad7a86"
        },
        "item": {
          "id": "f5aa6454-dd06-471c-b9fe-1bcae6e7fe49",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "905d334c-bafa-48f1-8403-fba023b40f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0487457b-1a16-4078-aa64-fa0071df072d",
        "cursor": {
          "ref": "b6483d64-9076-4613-88be-6718c1cc2a13",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db063a6f-776b-42a0-8644-8e857c0486bb"
        },
        "item": {
          "id": "0487457b-1a16-4078-aa64-fa0071df072d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "71a70308-c26a-46d6-8bda-46009ca7428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac255ee-7e3e-47e6-a995-a134faa40db9",
        "cursor": {
          "ref": "ee75e6c7-a708-4805-8c28-efd6c4973564",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "92ff83e7-10e2-4234-b1cc-ae0bf392aabb"
        },
        "item": {
          "id": "9ac255ee-7e3e-47e6-a995-a134faa40db9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fca88f14-1f2a-455d-9568-a147f76aa234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f177c3-6b7d-476f-ad6c-c1d5a046ac8e",
        "cursor": {
          "ref": "9c7a3a3b-54a9-4696-a300-71618a5cc52c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c05a584d-da94-4207-8f9d-867c7aec39d7"
        },
        "item": {
          "id": "75f177c3-6b7d-476f-ad6c-c1d5a046ac8e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "71d86d47-b4e4-477b-ae47-eac8124ce92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1428fda0-8a3a-4950-9baa-0e2c068fb9f4",
        "cursor": {
          "ref": "faffcd26-ce12-45f7-bbf0-73c288e8f7ee",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d26e7a0-fb41-4e3a-8cac-24dfded8946b"
        },
        "item": {
          "id": "1428fda0-8a3a-4950-9baa-0e2c068fb9f4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2984d92-fa9a-4a49-99f4-da522a834908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44914301-caea-4c0d-84d6-e9468757f405",
        "cursor": {
          "ref": "ad2d7070-67a1-49ae-a782-a784f99601d3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e583c24-d70a-48a4-ab9c-11b4edb92b28"
        },
        "item": {
          "id": "44914301-caea-4c0d-84d6-e9468757f405",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5b8204c7-a207-46ed-b7d8-8f3e209f3fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ffe4b9-40b2-4479-81db-d771af463aed",
        "cursor": {
          "ref": "340d5016-9b29-47d8-a610-c770198b7e96",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf153e01-af98-41ed-b761-9ef2fc4b7fd6"
        },
        "item": {
          "id": "b8ffe4b9-40b2-4479-81db-d771af463aed",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ffb0a795-26a3-47f6-a538-d640241c7cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ea88f9-2548-43fd-88b2-9f873020dbf7",
        "cursor": {
          "ref": "ee2886b4-d8dc-470f-8443-e50e73a84002",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d3c2e9a5-f59b-4f54-a33a-5f33375c6e63"
        },
        "item": {
          "id": "05ea88f9-2548-43fd-88b2-9f873020dbf7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4a07e54f-4f02-4907-b064-c18d06d6f427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f91a99-485e-4c0e-8855-2be2b60b5189",
        "cursor": {
          "ref": "1bc467b9-8bef-4fdc-b654-a50403927134",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ae330d07-099a-492e-891f-788ac3e1676e"
        },
        "item": {
          "id": "13f91a99-485e-4c0e-8855-2be2b60b5189",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "80e2ef86-6511-42ce-8652-b58b6bab9efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88eab33-e428-4cdf-a0b3-e77de1c8faeb",
        "cursor": {
          "ref": "3eb7f582-6a76-4f42-92e2-9e06d9e12730",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d704fead-47fa-4f6a-8679-c468cef080d5"
        },
        "item": {
          "id": "f88eab33-e428-4cdf-a0b3-e77de1c8faeb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b89ed428-23f3-460c-b30e-7e2b84427aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaabd6ac-62bc-48a9-91ae-8c96598eb263",
        "cursor": {
          "ref": "fb75f4be-1c2a-4ca5-a779-cf50ce6ad9a2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68128913-6742-493e-b8ca-2f04ebc0bde0"
        },
        "item": {
          "id": "aaabd6ac-62bc-48a9-91ae-8c96598eb263",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3eb64fda-8798-4ed5-898a-a2605735db64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6e975a-a06c-46f6-99a4-1af46c26cafc",
        "cursor": {
          "ref": "df5d87d5-e5b5-400c-80dd-f80ee31ee79f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "34944ab8-e95a-4860-947f-0bdea11950a8"
        },
        "item": {
          "id": "3c6e975a-a06c-46f6-99a4-1af46c26cafc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7c3c6b5a-5d1a-4533-a375-2f83b0d32e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce4f82c-4dc4-4f11-b034-bde9f103c1b3",
        "cursor": {
          "ref": "4de89e28-09a1-47cb-bee8-0ad04e379017",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "271dc4cb-df2e-4fcb-92b3-494606aaf77b"
        },
        "item": {
          "id": "cce4f82c-4dc4-4f11-b034-bde9f103c1b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b4767a9e-f618-4b55-bc78-2e8a0cad82e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2344aa-59e6-44ce-bb18-9aa7ee970810",
        "cursor": {
          "ref": "c38faa29-7a58-4607-9106-d07fc4bee7cb",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fa03163d-90be-4657-a59a-f70b8c1f8b9e"
        },
        "item": {
          "id": "8d2344aa-59e6-44ce-bb18-9aa7ee970810",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f5b824ac-225e-497d-b858-272dc47e97a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19664b19-018c-4168-ac15-1489bad86475",
        "cursor": {
          "ref": "0aa4d8a8-2eaf-4b15-9cb0-332afbd68edc",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "55ca99eb-dd82-4e32-bba3-834262c1fdc7"
        },
        "item": {
          "id": "19664b19-018c-4168-ac15-1489bad86475",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f1a358cd-6d86-48af-8a0a-57669200b66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c2341b-e526-4e5f-810b-65d00536fc63",
        "cursor": {
          "ref": "e3a5c172-0617-4ecc-b63c-890a87586a81",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "acd6a50d-64a0-4fda-ac86-569e1725ec4c"
        },
        "item": {
          "id": "f9c2341b-e526-4e5f-810b-65d00536fc63",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8cf83e94-69b2-4d21-b276-637bfce52788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92865724-7dfb-408e-adca-a4de3d38ae16",
        "cursor": {
          "ref": "71f0d3cf-4767-4fb4-83c9-a5c4e4354624",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3b9c52c6-c96f-444a-bff1-5be1777221cb"
        },
        "item": {
          "id": "92865724-7dfb-408e-adca-a4de3d38ae16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ee95f8ad-b449-41e5-8134-2ac740afa381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89157d9e-a733-4119-991b-ba9d8eca651f",
        "cursor": {
          "ref": "f99fd2d9-54fc-4949-9752-10d3aea11a2c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e07349a8-dc10-4087-90a2-452935f41e75"
        },
        "item": {
          "id": "89157d9e-a733-4119-991b-ba9d8eca651f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e1666ac-101c-4bf0-bbcf-e9923c143e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1814e1-46cd-4479-975c-2552a638a284",
        "cursor": {
          "ref": "8b1addcd-b4aa-40cd-8957-fab9693a980e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f0f6048f-3fc3-47ed-a478-070c0b84bded"
        },
        "item": {
          "id": "3b1814e1-46cd-4479-975c-2552a638a284",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "94f4d8fa-2247-4d3f-b40e-cc9fb0a18c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87fe78b-e30f-4407-b930-31d643b5aa28",
        "cursor": {
          "ref": "a39cc61c-9f30-4750-8f81-34d3a5fba02e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "217cb8fb-71f9-4261-bf32-c9ecacc67134"
        },
        "item": {
          "id": "e87fe78b-e30f-4407-b930-31d643b5aa28",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "50408aa3-0553-4d7a-8cd3-ef4d6fff2c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e8fabc-8cd2-46f2-8071-2d1be00e927b",
        "cursor": {
          "ref": "f1226923-ccbb-4040-b876-8b530983c6ea",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2d6e6bd-54c8-4079-bdbe-5800e8ed5eda"
        },
        "item": {
          "id": "55e8fabc-8cd2-46f2-8071-2d1be00e927b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "56ea9786-9cbf-4889-ac8d-4f58447bcc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80050794-f5f7-47a1-be68-b6e79d03999f",
        "cursor": {
          "ref": "e250c84c-31ed-4c99-8672-74638261519f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "87d1a35e-999f-4606-a8f8-0437644405f0"
        },
        "item": {
          "id": "80050794-f5f7-47a1-be68-b6e79d03999f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "683471a7-3d01-468d-ac24-9bdf1b3f5200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2ef615-8e39-475a-acc2-ca2486816be2",
        "cursor": {
          "ref": "7c503547-c08a-416e-b105-0edb255d5e1f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51d30110-5df4-435a-8b13-d8fd017443f2"
        },
        "item": {
          "id": "5b2ef615-8e39-475a-acc2-ca2486816be2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a9044e84-28e8-4dde-a36f-3f7a1d8e0b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f26ad2-f547-4fca-b7ca-978a66720fb8",
        "cursor": {
          "ref": "a660a175-be76-4245-8730-0c2bc9c423a0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66a1b3ac-ba50-4af7-a9ee-0b4abbb72b15"
        },
        "item": {
          "id": "a4f26ad2-f547-4fca-b7ca-978a66720fb8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "76ebdec4-1853-47f9-b89d-88fc30d35795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8f807f-6d07-4593-8eac-edf4b4195c23",
        "cursor": {
          "ref": "2974319c-f342-4bbb-a0de-0ea5e8d5cab2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c33bb0e-58da-44e6-8e6d-5498349b13ec"
        },
        "item": {
          "id": "bc8f807f-6d07-4593-8eac-edf4b4195c23",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b752d41b-0f04-4a49-bf25-a8f9672c237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b862b-8f27-4c03-ad23-a8d4f2299146",
        "cursor": {
          "ref": "4683aa46-0a08-45ab-9068-48e6fbbd181e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8802c1ab-7199-4c98-b552-bc832417fc48"
        },
        "item": {
          "id": "6a8b862b-8f27-4c03-ad23-a8d4f2299146",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7a453a61-11de-484d-a85f-29e00d1fb14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1239a3-4048-4536-b187-4a1a1724bd88",
        "cursor": {
          "ref": "8ee34fbf-c6aa-43a4-afea-5591465470da",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2795052e-774e-4f5a-85bf-2b5ef6305acc"
        },
        "item": {
          "id": "bb1239a3-4048-4536-b187-4a1a1724bd88",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "10dbe964-68da-4d70-b9e6-f628828199e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb313266-77b8-4441-bc2f-b80a5a805272",
        "cursor": {
          "ref": "b4b6cfc6-c99d-4765-974b-d830b17bd0a8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4aaa467e-263c-4933-821e-e0a70cca69f0"
        },
        "item": {
          "id": "fb313266-77b8-4441-bc2f-b80a5a805272",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eef3afb7-d7dd-49d1-b228-75294c7145f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3467beec-3ada-47ed-b755-596ccf0dbbb8",
        "cursor": {
          "ref": "281892bf-29cf-4099-b78a-6e082e612d48",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5010f8b9-6213-4ab0-9281-6279cada3a43"
        },
        "item": {
          "id": "3467beec-3ada-47ed-b755-596ccf0dbbb8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "92798138-fd3c-41d7-8a14-ba1be241bcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f6b669-2499-48eb-80f1-267783d2c775",
        "cursor": {
          "ref": "b9d3cffc-c3b3-4ab9-a99c-c4f4137b5384",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d4a0a221-56c4-44ba-9012-f567c586b647"
        },
        "item": {
          "id": "c8f6b669-2499-48eb-80f1-267783d2c775",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fc76e18f-0be8-4049-945b-819b451d7e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1861c01-29b2-4e28-b996-8be48e328db7",
        "cursor": {
          "ref": "05b21d45-3b08-46f2-80c6-8a271f4ff708",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "80b3a9dc-2fe2-420c-9122-d648dee93cc1"
        },
        "item": {
          "id": "c1861c01-29b2-4e28-b996-8be48e328db7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b5b3432c-430e-48e9-8566-fad7bfc3f76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa802a8-6948-474a-9da6-05b3b80dadb1",
        "cursor": {
          "ref": "becee2a6-e779-4800-868a-20c00526398c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "04a64ac9-373c-4425-a760-7d1140792c46"
        },
        "item": {
          "id": "1aa802a8-6948-474a-9da6-05b3b80dadb1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "70c39eae-5f9a-484f-8d03-1c70b42a5d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6506c94d-726b-4313-9fd4-e724cc0c84cb",
        "cursor": {
          "ref": "53e3c17d-f14a-4084-b509-42c9548dede2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "07c05a36-fbd2-45e3-9970-402d90bcc4e8"
        },
        "item": {
          "id": "6506c94d-726b-4313-9fd4-e724cc0c84cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "da64ec32-33ca-46c9-860b-fc1cab1620c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a76f82-65e5-4dd5-863b-2ece49ab386c",
        "cursor": {
          "ref": "11f4f714-b965-4950-b2c8-c7374e118f73",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4e6ffeec-00e1-4e74-bd17-7587b3e75696"
        },
        "item": {
          "id": "77a76f82-65e5-4dd5-863b-2ece49ab386c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ecf20b69-e326-476a-a102-49e83a05330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393978c-02db-4998-9354-bf8d043cfef9",
        "cursor": {
          "ref": "6d278efd-7324-4470-8c4d-5fcd12af3159",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87d7cddb-9920-4f1d-b6ee-003f40039cab"
        },
        "item": {
          "id": "8393978c-02db-4998-9354-bf8d043cfef9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "aaa930b5-57f4-4429-a9f7-43b7c25e23a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9044cf-02b0-4664-9a94-4e95fcc551f0",
        "cursor": {
          "ref": "1355a98d-8895-4b45-8266-8b97f940a3ed",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cfd60749-cb9e-4bfc-b88a-d8adedeed77d"
        },
        "item": {
          "id": "0e9044cf-02b0-4664-9a94-4e95fcc551f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0964adda-b9b6-408f-a087-de635083d98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c42a5-5f12-46ba-a084-b442b49f3567",
        "cursor": {
          "ref": "3575f0aa-57cb-4f0e-a5ba-1319af49a9cd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "234cbb09-50e6-4b19-a5ba-a15243f42a68"
        },
        "item": {
          "id": "b16c42a5-5f12-46ba-a084-b442b49f3567",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7eded62-c0ee-44a9-865f-3600a71e724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e28fc11-849f-42ec-8bbc-967dadc6be79",
        "cursor": {
          "ref": "77686479-d83e-4b39-a8f7-130a221ca314",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "652c3cd9-988c-4d40-9ae6-eb130a21f93c"
        },
        "item": {
          "id": "1e28fc11-849f-42ec-8bbc-967dadc6be79",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d2da8432-cb34-41f0-a49f-0a6557329781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f9121d-fc67-4393-98ae-0f4e9c1cdb71",
        "cursor": {
          "ref": "06a5ff9e-22a4-4805-8c14-02b9e8f54436",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b0fa585e-700d-41f1-92ed-95c43be79a39"
        },
        "item": {
          "id": "16f9121d-fc67-4393-98ae-0f4e9c1cdb71",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a34c5c63-da12-483a-b984-10321a193966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1a4b43-6463-4f8b-b086-9e78a87e5c09",
        "cursor": {
          "ref": "96ced4c4-a451-412c-91d0-8d02e72c8dbd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59e438f2-6ea1-4ccf-9f91-d9b0ad370dff"
        },
        "item": {
          "id": "cc1a4b43-6463-4f8b-b086-9e78a87e5c09",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d1c5279e-9b23-469c-8867-a7cd72248c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5a6928-9b8b-4ade-a189-e4c79b1346de",
        "cursor": {
          "ref": "1960b916-498b-47a2-83fe-50a0eca89728",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9eac0b39-d949-468d-bc8a-7ae644df1f26"
        },
        "item": {
          "id": "dc5a6928-9b8b-4ade-a189-e4c79b1346de",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9842de5a-9d92-411c-bd5d-5f1810962df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5edab-4b71-4374-bded-b07aa640074c",
        "cursor": {
          "ref": "f393c0da-9a20-4ba9-b323-9c0270d6a0c8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27748f32-d552-4999-a33a-6138c54c4479"
        },
        "item": {
          "id": "95a5edab-4b71-4374-bded-b07aa640074c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "032f06ea-3a56-4bbf-8373-2db5a4095eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe8594a-72ce-4c05-a0e9-97b6b35d675d",
        "cursor": {
          "ref": "4755ec77-0223-493a-a5c2-df171027cd6a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6cba3758-a5a0-4186-aa8f-94b949da18e8"
        },
        "item": {
          "id": "9fe8594a-72ce-4c05-a0e9-97b6b35d675d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "29ad625c-bf93-4f61-b1e8-dbfa20010b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d93662c-4364-4f09-8fbc-3b620c7b6ffd",
        "cursor": {
          "ref": "380ca2e4-88ee-42ac-abda-8d8ca7048b0a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94427f18-dd36-4c6b-b56f-cfb8f8e4449b"
        },
        "item": {
          "id": "2d93662c-4364-4f09-8fbc-3b620c7b6ffd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9a7588e6-48ca-4753-9912-af4aa21c6958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5739f1-458e-44c9-a152-a424c6c46944",
        "cursor": {
          "ref": "2e924367-d5fe-4615-a3fb-c7febb82cb6c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0e9eacd9-d154-4ebf-b088-3a6d630023f1"
        },
        "item": {
          "id": "4f5739f1-458e-44c9-a152-a424c6c46944",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "01a3f5c4-1348-496e-9ecf-48b049aa1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde34c81-5164-4eaf-90b2-7e1459aeeda4",
        "cursor": {
          "ref": "acfc1f7b-d033-4eaf-9262-5fe344aa1cd6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6cb4bb7f-1956-42a2-a043-5df5bc3e0414"
        },
        "item": {
          "id": "bde34c81-5164-4eaf-90b2-7e1459aeeda4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd646e89-402a-4983-aa9a-920a04258486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b98b028-194a-45c9-bf4f-d9306ac31c7f",
        "cursor": {
          "ref": "2b58cb9e-8383-4f33-8ff9-bf89b3312718",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c37f7dfb-b7b6-4ad4-b533-4cf6db9cb553"
        },
        "item": {
          "id": "3b98b028-194a-45c9-bf4f-d9306ac31c7f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "62182c4d-0a2f-4348-b224-68a149bcd770",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128599a-d338-4789-bdb3-fc8ee374873d",
        "cursor": {
          "ref": "36b53207-bd2c-4bf3-99c1-f1bdb83e743a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aef08848-8da7-48c8-83fb-180eb5a5a92a"
        },
        "item": {
          "id": "1128599a-d338-4789-bdb3-fc8ee374873d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2d165577-80f2-4b1c-8f89-bc01b55127b5",
          "status": "Created",
          "code": 201,
          "responseTime": 6812,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c68702-6b8e-4cd9-85b1-94841ab6160a",
        "cursor": {
          "ref": "8bb909d6-1c44-45f3-987a-e740e381e54b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fc081e97-4f41-41b4-853f-94c0ff186988"
        },
        "item": {
          "id": "27c68702-6b8e-4cd9-85b1-94841ab6160a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "42ec1f7f-c8a2-46de-942f-54fa48007996",
          "status": "Created",
          "code": 201,
          "responseTime": 6285,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d567a291-1ba5-42cf-bb6f-aed404af0055",
        "cursor": {
          "ref": "646df52b-6353-41d1-84d1-8a90de52330a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9ef7a11-e33e-4c52-8b90-5b9e14e8b61b"
        },
        "item": {
          "id": "d567a291-1ba5-42cf-bb6f-aed404af0055",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5b66de0c-db36-40b3-8e86-8f6b3b966012",
          "status": "Created",
          "code": 201,
          "responseTime": 6612,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e86b1-6c8a-45b7-b7a3-7b24ddea41e8",
        "cursor": {
          "ref": "b8dd4052-ca6c-4700-ba2f-dc5aa2f73a83",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aa3092e3-d783-4a83-b19c-186d44021392"
        },
        "item": {
          "id": "0c7e86b1-6c8a-45b7-b7a3-7b24ddea41e8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fe7f5deb-ccbf-4697-9ce0-411b1de94994",
          "status": "Created",
          "code": 201,
          "responseTime": 6148,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7eca5-e770-4708-b3db-7708be384056",
        "cursor": {
          "ref": "896e8797-0bf5-4388-b60a-80f16892109d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c449bd6-54a0-46da-9561-8296ba9cb320"
        },
        "item": {
          "id": "08e7eca5-e770-4708-b3db-7708be384056",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "318e073d-05ec-49e0-a9ef-fa74f94304f0",
          "status": "Created",
          "code": 201,
          "responseTime": 6226,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ee8da-fb8e-4287-92fc-6456ef825548",
        "cursor": {
          "ref": "f49e6a47-6f92-4150-8d65-bdefb12ec2dd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "88390cc1-1336-446c-bdb1-781f7982b99b"
        },
        "item": {
          "id": "9d0ee8da-fb8e-4287-92fc-6456ef825548",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c0f501aa-fa5d-44f0-b0d5-a8d25f016d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f82d8fce-dd78-465a-ad22-6fc7ccfcfa12",
        "cursor": {
          "ref": "8bf95616-100a-42b4-ad24-3ab10e6a231b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "61d0cd80-65e1-44e5-978f-1c9f71a3da22"
        },
        "item": {
          "id": "f82d8fce-dd78-465a-ad22-6fc7ccfcfa12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9a1a2949-9f02-4376-a54b-873651ede960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83f469a-3017-4c91-87a2-3882ae0503df",
        "cursor": {
          "ref": "4c146bfc-f6d3-4dcc-b18f-13505034f0ad",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d30346ae-4966-4ae3-b5ec-2cec3674e497"
        },
        "item": {
          "id": "a83f469a-3017-4c91-87a2-3882ae0503df",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e18318c1-4c1d-49c1-8624-351055f9e73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f59b58-015a-42d4-9618-a298da3499c8",
        "cursor": {
          "ref": "104bf496-da04-45f2-bfa8-164c0f0d018b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "acc4ddbb-616b-4dcc-993d-a397081be9fa"
        },
        "item": {
          "id": "a6f59b58-015a-42d4-9618-a298da3499c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc2bd01c-2351-409c-90b6-5c91cff7e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325b4bb3-c3c8-42a9-93e2-ec4026a65ac9",
        "cursor": {
          "ref": "e118d705-2d9c-40b8-86af-e48e3a100af4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ee7240f9-9ab5-4b86-8610-7963df721897"
        },
        "item": {
          "id": "325b4bb3-c3c8-42a9-93e2-ec4026a65ac9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e99c2fcf-2179-44c4-9b9b-97ac4d1a583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e64777-0e7b-4a64-a6e8-c4758fac5d6e",
        "cursor": {
          "ref": "cc1dc61f-d550-4d81-95b5-2987d9b84ec8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fa70dc48-35cc-4809-8c67-9e3c91b0e0da"
        },
        "item": {
          "id": "b4e64777-0e7b-4a64-a6e8-c4758fac5d6e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4f00149f-86d5-409c-a1b8-740199d3713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4267528-f313-4730-945e-f46b5898f24a",
        "cursor": {
          "ref": "9473b26a-7170-4d63-b642-ec83fbb0fd04",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "207f6388-be36-4241-9838-3c3b479b9c58"
        },
        "item": {
          "id": "c4267528-f313-4730-945e-f46b5898f24a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "98511666-ba5f-4e6a-9f98-ff5401ad252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8824b24-6233-4197-a672-c83701aa4112",
        "cursor": {
          "ref": "813d0453-7e18-46d4-88ce-789993221cc9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0bac2a37-b966-4df0-a91c-a138dbe8cdee"
        },
        "item": {
          "id": "f8824b24-6233-4197-a672-c83701aa4112",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "848830cc-05c5-4d4b-8095-74c0312ddd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b36c37-8864-4f33-bc6b-95039ed3acaa",
        "cursor": {
          "ref": "dcbf43e4-dd9b-404c-b5e3-0c2d71bd4b7a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "29e9aefd-aec1-4d9b-b0bb-a8b8eef8cf76"
        },
        "item": {
          "id": "15b36c37-8864-4f33-bc6b-95039ed3acaa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2679a0ca-e2e7-4a31-aa42-18bf19a40c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01607d33-e5a3-491d-ae87-2f545810d399",
        "cursor": {
          "ref": "c33bc5e9-e1ca-4486-b7b0-f3afa72fd05d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "745114ef-d639-46d6-9872-6b4668b1cdbf"
        },
        "item": {
          "id": "01607d33-e5a3-491d-ae87-2f545810d399",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f272321-14d9-4cdf-95ef-51ba5d6c232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272af6e0-ec49-4a3d-9780-d4487e30a094",
        "cursor": {
          "ref": "fcbc8ff7-c9cc-496e-8876-568c2aa24d40",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7e07cb6d-3fe2-4ed6-86a4-325b3d0bc7fd"
        },
        "item": {
          "id": "272af6e0-ec49-4a3d-9780-d4487e30a094",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "180f86d1-959f-4543-b422-fd1f1047b13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa45e28-531e-4892-9c1a-aabc6c8c8439",
        "cursor": {
          "ref": "0620a401-20a0-424e-be04-99e4eb91db68",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e83d7a20-5d05-4545-b68a-e4ebff1cf96f"
        },
        "item": {
          "id": "6aa45e28-531e-4892-9c1a-aabc6c8c8439",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e2ce2bc2-0055-4e44-8716-7d7d56714141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689587fe-2f36-44b1-81e9-c7c7cddea70c",
        "cursor": {
          "ref": "65be77ad-ae77-4246-b3bb-bf007800b196",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6844fe2a-20f7-47b4-b990-91d1795d9f83"
        },
        "item": {
          "id": "689587fe-2f36-44b1-81e9-c7c7cddea70c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b050f5b-c35a-40ea-9c6a-d66ae775e79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8145536f-b904-4b81-9715-46ce508bfd02",
        "cursor": {
          "ref": "6a6f7442-c6f0-40fb-a719-62f1e1be74b6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3bf35450-0820-49f2-88c9-033a92ab47c2"
        },
        "item": {
          "id": "8145536f-b904-4b81-9715-46ce508bfd02",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1bef83b-85e8-4e41-b057-db358ec6e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f52324-0387-4846-838b-12c00cc1237b",
        "cursor": {
          "ref": "14087385-2152-4ba2-accc-134e44766183",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d345cae-e856-407b-b42a-88ff4e015db1"
        },
        "item": {
          "id": "09f52324-0387-4846-838b-12c00cc1237b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "581d917b-c10f-4890-ba92-3ee78cdd410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96031e56-2809-4620-bdb1-8623e4795530",
        "cursor": {
          "ref": "b073e1bc-6218-4012-8573-69cb42d4a2f2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb0448cb-6e42-45e9-9ecc-48c980d7813b"
        },
        "item": {
          "id": "96031e56-2809-4620-bdb1-8623e4795530",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc804c80-62f6-44ee-afeb-c29492c229ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded21e73-eaa4-4584-8aac-3222244b32e4",
        "cursor": {
          "ref": "a731ed8e-14aa-4948-84a9-562d88aaeeae",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8409977-259f-4a6e-a695-693217ec9acf"
        },
        "item": {
          "id": "ded21e73-eaa4-4584-8aac-3222244b32e4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93be2f0e-0848-4fe9-aa17-0895cb28862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a68adc-22cc-4b13-a39c-b9953dacbec3",
        "cursor": {
          "ref": "460c289c-29e4-4ed9-ae6e-7302a7e4e60a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ac20159-f89a-49b9-841f-84bc9c6d1b09"
        },
        "item": {
          "id": "b7a68adc-22cc-4b13-a39c-b9953dacbec3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c147837-a0fd-4ea4-a8be-4978237afdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed06500-a393-404b-8940-44be94ff14c6",
        "cursor": {
          "ref": "42d3959c-17cf-4011-931e-b6bc5df8c9a7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "735ab67e-5087-4f44-8aad-aa55586a06c7"
        },
        "item": {
          "id": "bed06500-a393-404b-8940-44be94ff14c6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35323206-59ab-4adc-82da-a077701adefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db195c86-11cd-47c7-a029-9ed5f785a198",
        "cursor": {
          "ref": "8f4e06f4-e556-4ed6-9bbd-1c726b513287",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a66924e2-9b73-45ef-939d-b4fef0a49eb3"
        },
        "item": {
          "id": "db195c86-11cd-47c7-a029-9ed5f785a198",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f00754f7-7cef-4b57-b6ac-f83a54baef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ddce6e-f713-41f7-820c-08e8b5c56d7e",
        "cursor": {
          "ref": "12bce935-9182-4339-ac99-9ea01ad5d2b1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "db9329d6-8ff0-46a6-8560-6b5731fe645f"
        },
        "item": {
          "id": "c5ddce6e-f713-41f7-820c-08e8b5c56d7e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b35caa74-06c5-43d8-a101-90b0fcc55d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929d41c1-e99e-48ff-a9c4-73b85f8c8502",
        "cursor": {
          "ref": "05222eca-389a-4b86-95b0-93b776c8cc0d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "103e2503-b43f-4544-93ce-c96bd8eafed4"
        },
        "item": {
          "id": "929d41c1-e99e-48ff-a9c4-73b85f8c8502",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe3acbee-fcae-4af3-80da-9d74e5122c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db3cbd9-2cf4-4bde-8f99-c68fc3db4ad8",
        "cursor": {
          "ref": "314e4575-2d59-4e74-a2a6-cd97cb35224b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4041cabe-c012-40c1-8d21-2b4287a29873"
        },
        "item": {
          "id": "4db3cbd9-2cf4-4bde-8f99-c68fc3db4ad8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07f99200-b38b-4a1c-abec-2f2684c6ad13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928a94f8-9aeb-426b-b2b9-04927f700531",
        "cursor": {
          "ref": "e1690fea-c942-4d96-ac00-e085205a80d3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "382901c5-b866-470b-a518-7b8b5ea9804f"
        },
        "item": {
          "id": "928a94f8-9aeb-426b-b2b9-04927f700531",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fe1ab083-2b21-46ff-8a12-acf9e0841916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d057d474-9cc0-428b-89b6-7e98170b8d6c",
        "cursor": {
          "ref": "bae8a412-a015-4224-8f4d-f62d97a8d1e2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9db130eb-95af-44ea-af5e-973d6344fb93"
        },
        "item": {
          "id": "d057d474-9cc0-428b-89b6-7e98170b8d6c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "41578911-f068-4b3a-88c6-133cf55cabae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487cdf65-e384-4a49-88d5-eea0d21f29e3",
        "cursor": {
          "ref": "be0053b7-0a02-4bd1-a02b-d68dae9fb2fd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cb6854d7-e064-4b73-8a8b-2a403ef822a3"
        },
        "item": {
          "id": "487cdf65-e384-4a49-88d5-eea0d21f29e3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3b60d36c-2390-484c-875a-1ad6f8b11b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e52edc-eb57-4dd3-9fb7-b270a58bf834",
        "cursor": {
          "ref": "31060bf7-bff5-4ce4-a8cb-2c08c159977f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5b861635-d22a-4b50-bd68-52c2368191cb"
        },
        "item": {
          "id": "82e52edc-eb57-4dd3-9fb7-b270a58bf834",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50a62493-6bc6-40c8-ba73-f2a9c496301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bc25ac-949e-4161-8a2f-6e2b1573fc53",
        "cursor": {
          "ref": "9cbbcacc-cc60-4407-99ff-4fec7681a927",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6678017e-fa7f-4bd4-ba93-53a8fc7120e6"
        },
        "item": {
          "id": "86bc25ac-949e-4161-8a2f-6e2b1573fc53",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12e24821-fb05-4a50-a6d7-9248ab0eaa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7919b4f-1af9-4480-9d1e-4f4e6b3e15ff",
        "cursor": {
          "ref": "11922bf7-7213-4aa5-9f82-941755fe8f82",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e143a9e7-676c-4243-9415-b0609b8b657b"
        },
        "item": {
          "id": "c7919b4f-1af9-4480-9d1e-4f4e6b3e15ff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79c0b19a-01c3-4e05-b861-ec9cb17d47eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415db3b-aec4-4938-ba74-d0eec6c525bd",
        "cursor": {
          "ref": "896b96ed-beee-41dd-85e6-b5492c7358ed",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "56e584f2-ab82-4362-8e44-b0205e0087c3"
        },
        "item": {
          "id": "3415db3b-aec4-4938-ba74-d0eec6c525bd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19612d33-01dd-429f-8e5f-626b72a801da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b7bac0-0ccc-49c4-bab1-d2877d0b2348",
        "cursor": {
          "ref": "376b46b8-2b59-4ec5-81c4-ee4367b13db6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2aaf1db-652b-42ef-bd5e-41675937f495"
        },
        "item": {
          "id": "11b7bac0-0ccc-49c4-bab1-d2877d0b2348",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd1f5215-dc92-4bd7-ac17-86b1930c5f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4b4680-e043-4b86-8670-ae533468c042",
        "cursor": {
          "ref": "9b3588a0-f127-430d-982e-1ae129b47de3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9b8e3e24-1f94-48c9-9db1-b23772a437b0"
        },
        "item": {
          "id": "ad4b4680-e043-4b86-8670-ae533468c042",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8392263-f2f7-4961-b353-451b76f2b808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1fc708-1a4b-4586-8293-86824a8c2d68",
        "cursor": {
          "ref": "d1ef15e8-9384-4a88-83ef-84386f93a3ad",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "104b0d4e-7759-4ac0-b281-9efdb9d6d9b7"
        },
        "item": {
          "id": "5d1fc708-1a4b-4586-8293-86824a8c2d68",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "64e87fba-a004-4448-b946-208a1d308234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c54fbfc-2272-46e4-b1bb-8e1f05ff563c",
        "cursor": {
          "ref": "41f7ffff-8122-45a9-9590-5de45555896f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e82af285-2e21-4b7a-9c91-1d84680ac2bd"
        },
        "item": {
          "id": "4c54fbfc-2272-46e4-b1bb-8e1f05ff563c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "02f1ad03-578f-40a5-83ec-25c7cbec72d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67f9c4f-fb10-4dfb-a2a1-300d2874022b",
        "cursor": {
          "ref": "917d92a2-b9b2-41d4-b833-6624a643f2e3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dd2dadbf-1d9f-4741-8494-8c9869bc1d10"
        },
        "item": {
          "id": "d67f9c4f-fb10-4dfb-a2a1-300d2874022b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc7d39c0-c623-4157-9e04-b8f3e4f0f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec98c6eb-7724-495f-b586-78e767a2710e",
        "cursor": {
          "ref": "83659e88-811e-40f6-ab83-fa718c066beb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eea4c6fe-5671-4426-89a4-679d5ae96a93"
        },
        "item": {
          "id": "ec98c6eb-7724-495f-b586-78e767a2710e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a12dbef0-9c1b-432a-867f-9d5f4f177504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8c78d-eeb4-4b68-8d73-81cb31307341",
        "cursor": {
          "ref": "7dfaea90-0188-4b27-9e51-99780cb4eb5d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d71442a3-e5b4-494e-8159-343273be5954"
        },
        "item": {
          "id": "48c8c78d-eeb4-4b68-8d73-81cb31307341",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "effb3989-1be7-4da4-9c91-45712f169264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01231a2-ebba-442a-892d-7387c22d85c7",
        "cursor": {
          "ref": "d146bbe7-34f6-4963-9573-15f6c7d791d1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ce64c31d-9468-4510-8d56-e67ab90dc72e"
        },
        "item": {
          "id": "b01231a2-ebba-442a-892d-7387c22d85c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "801fa592-008e-4ae1-b098-4e8b0beba66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc9e7a-b4a1-4a23-9adb-2f3abb0df815",
        "cursor": {
          "ref": "a4e75907-cf23-42f3-9272-4d967d786156",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9af933fe-66bf-4d86-ad50-ba84ca20f5eb"
        },
        "item": {
          "id": "ffbc9e7a-b4a1-4a23-9adb-2f3abb0df815",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "33470c77-5143-44be-89d4-9bb3c1032744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0d8c4c-9c68-4e93-94e7-6c075d1abdda",
        "cursor": {
          "ref": "33be6516-d297-408c-9324-1042184d262f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "10eacd78-ee9b-4cfb-a10e-316c9ae10660"
        },
        "item": {
          "id": "cb0d8c4c-9c68-4e93-94e7-6c075d1abdda",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e110ed20-e6fe-4965-8519-912695558454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717498f7-e776-42de-a13f-3ffdd646403f",
        "cursor": {
          "ref": "c363e6c7-2fb2-4803-be50-905c6d967f4d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c6774efa-99f5-49bd-a1be-fbd0dd0f9e3d"
        },
        "item": {
          "id": "717498f7-e776-42de-a13f-3ffdd646403f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "324f27f5-0299-4f4d-8f02-751a9d8195e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a764e78-8866-45ff-b5ac-51e1bb433109",
        "cursor": {
          "ref": "6e9a73f9-3139-4d8c-a398-c4374048094a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "979d1ce5-6ba9-4836-a5f9-c75192e78361"
        },
        "item": {
          "id": "4a764e78-8866-45ff-b5ac-51e1bb433109",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3e6e907-eea2-4861-9899-8fbe8423a4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab68043b-a7c0-4d8f-9e03-189a8d2e0b70",
        "cursor": {
          "ref": "1a3c108b-5b0b-4735-af21-84e624382846",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70d5ca47-d29c-4a4f-92d9-c21c80568bad"
        },
        "item": {
          "id": "ab68043b-a7c0-4d8f-9e03-189a8d2e0b70",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9b3a22e3-9329-4d9c-8e5c-b0898488cfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64457d4-fc3e-4bac-a369-b0d306d6d6b9",
        "cursor": {
          "ref": "0c56745e-7490-41f8-9818-348dcac8d7bc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d175f456-b75b-4650-8923-eab3a0b6ccc8"
        },
        "item": {
          "id": "e64457d4-fc3e-4bac-a369-b0d306d6d6b9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "012b23a7-61f7-45da-8b65-237e735c54d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6610635a-cdf8-47ad-b6d7-0bf8590c1d1d",
        "cursor": {
          "ref": "3bff8b38-6407-4abb-b5d3-c6c605486e4e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d4e44c66-1408-4eb6-a09d-251207e4c8db"
        },
        "item": {
          "id": "6610635a-cdf8-47ad-b6d7-0bf8590c1d1d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "970e60eb-830c-4bea-af57-c049ebef4921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b6d55c-2a8e-4cac-8165-19f53e4ad8cf",
        "cursor": {
          "ref": "a8679f0c-7d70-42b5-a21a-d8de39218f8b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6970844e-064d-46ec-b67c-6f52952c32a8"
        },
        "item": {
          "id": "32b6d55c-2a8e-4cac-8165-19f53e4ad8cf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "efcbcf80-0b9b-45f1-bae4-035bf928502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a375f-05a6-499b-95dc-c6533e8c41a5",
        "cursor": {
          "ref": "0ad97671-c66f-4ff5-a4cb-50cba920516d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ac328a6-fe1d-412a-a42f-9bae46c60735"
        },
        "item": {
          "id": "6e8a375f-05a6-499b-95dc-c6533e8c41a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "db9116f6-ddc8-4ee2-9e4f-d7067249b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a7e5f-88c2-4dc4-9ea0-a982013acd33",
        "cursor": {
          "ref": "870d2679-dabd-4bf6-b62b-f854f489c3f0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "080ab96b-a27c-4af1-9831-2fc112de2772"
        },
        "item": {
          "id": "290a7e5f-88c2-4dc4-9ea0-a982013acd33",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6235293-1f1f-4f8e-a70e-4548fc5ab658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ec24e0-8b8c-48b7-8ac4-df52c4e09be0",
        "cursor": {
          "ref": "bec0c924-5812-4692-aea0-4370be3edfbd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3954ffbc-2f1c-4973-8093-7b8cb1dbb21a"
        },
        "item": {
          "id": "79ec24e0-8b8c-48b7-8ac4-df52c4e09be0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c131a4d7-26f7-4cca-bb2c-8c0e787890eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faf15ef-1848-4168-b9a0-e414d75aec77",
        "cursor": {
          "ref": "57a2ec03-7d1b-4c56-b55b-680ff772d59a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b693dd37-ea12-4fa2-b108-a2f30214ce55"
        },
        "item": {
          "id": "1faf15ef-1848-4168-b9a0-e414d75aec77",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b52cc032-cdfc-402b-89d0-c2d704eb2926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2334425a-c80d-437a-98a7-7e32a30f5857",
        "cursor": {
          "ref": "b2c9aee6-d730-475c-b051-9e2f3543cbcb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8817fd2d-5aca-4961-8cdc-9101f36c7b97"
        },
        "item": {
          "id": "2334425a-c80d-437a-98a7-7e32a30f5857",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7201eec7-928f-4f71-9ae7-858f915de46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e3767a-1eac-448a-97a8-d262932cb88e",
        "cursor": {
          "ref": "7e669ebc-421a-4371-8e3a-c891e8bd257b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c6ccb68f-be0b-4120-ac32-41b3f69edf78"
        },
        "item": {
          "id": "b0e3767a-1eac-448a-97a8-d262932cb88e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bdd0c1aa-1005-4004-9139-b167db1b8af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3af42a3-c615-4d33-bc52-bfdc6abd4704",
        "cursor": {
          "ref": "cddb6ade-3ee2-405f-a601-23d37d55bf97",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "866f60da-ab34-494a-93df-9daa04937221"
        },
        "item": {
          "id": "e3af42a3-c615-4d33-bc52-bfdc6abd4704",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8af56cc0-8d87-4d8d-b178-6950ffc7365e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9721ca94-dce4-4f48-9143-fe8f4748e3ef",
        "cursor": {
          "ref": "0294e73b-8739-47d7-8102-b50375d894db",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88483909-ac69-4eb3-b69b-3471f1897b2f"
        },
        "item": {
          "id": "9721ca94-dce4-4f48-9143-fe8f4748e3ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1460a201-1b10-4114-af69-088d93240915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e493b6e7-4dd0-4500-a0d0-ded23339c3ce",
        "cursor": {
          "ref": "4b1d73d1-05a1-497e-b8ef-615aba59768c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0f83863f-2fc0-48eb-aaf2-ab7d8bed5cc4"
        },
        "item": {
          "id": "e493b6e7-4dd0-4500-a0d0-ded23339c3ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d96526c-8b3b-45ec-a9d7-37af943b4795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf0d7a8-601f-45b2-8acc-32d47b9c5280",
        "cursor": {
          "ref": "3e38d622-11e2-4051-bfb4-ac5c3a604f81",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f62043e-5378-48f1-abf3-aa003faf11ce"
        },
        "item": {
          "id": "cbf0d7a8-601f-45b2-8acc-32d47b9c5280",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2fa05e71-92d4-4f82-9bda-e690ee3d1eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d77ca-2c34-49d9-847c-a710621dbb04",
        "cursor": {
          "ref": "f0b01ac4-0e05-4e80-a216-ba178071b377",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f4fa1997-91a7-4b63-8e97-51ac85ae408c"
        },
        "item": {
          "id": "660d77ca-2c34-49d9-847c-a710621dbb04",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cac8bc46-dd6b-438a-808d-f59e4dd4754e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404b2b70-e101-48fd-a0d8-efc677e5f863",
        "cursor": {
          "ref": "23eef9d0-09b7-48ac-b7a7-ba3d8ab057d6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "809dc360-fbd5-416f-94b1-beef4b8e52ec"
        },
        "item": {
          "id": "404b2b70-e101-48fd-a0d8-efc677e5f863",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3e6eeda-63c4-467c-818d-d89501ecc572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cb3c69-1627-4643-88be-79aff12ce578",
        "cursor": {
          "ref": "5bf62176-2821-4062-94cc-a38a76e17602",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6c8af98b-0236-47a1-abec-de06f514dadc"
        },
        "item": {
          "id": "f6cb3c69-1627-4643-88be-79aff12ce578",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "54471736-3d3d-4f3f-9960-69fa27b40bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ad052e-ced8-4c6a-b879-dc8099dd352e",
        "cursor": {
          "ref": "c925b084-43c4-4e03-9c19-144dbd4295e3",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "003aed16-9654-4483-afb3-40e8519318d0"
        },
        "item": {
          "id": "97ad052e-ced8-4c6a-b879-dc8099dd352e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2240bd3d-e0ae-44d9-9b4e-68976938843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05f755e-6a48-4443-a82b-7a2e3116b8c1",
        "cursor": {
          "ref": "67ddbfa5-ac16-4a37-8390-d428b80011b8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "70430993-b3f0-4dff-9241-4ae5c0244e00"
        },
        "item": {
          "id": "d05f755e-6a48-4443-a82b-7a2e3116b8c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "667d7962-39e8-4e27-9bee-d0c8206bc2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1066896-d01e-4a97-abc2-a3a92e5d6c80",
        "cursor": {
          "ref": "1597d6ad-9d0b-44ad-87a6-a8da9313ae2b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fc5951f4-6471-4bba-9c31-8a3f3b82ce18"
        },
        "item": {
          "id": "c1066896-d01e-4a97-abc2-a3a92e5d6c80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f00f1175-c8ea-4e52-86e2-997c980b0f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b443fc-9dd9-4639-bff8-f6a3313543f7",
        "cursor": {
          "ref": "5fb0e0ab-e610-4522-94a2-a38421b7c686",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "33355102-8b6f-49f2-80d3-1a607a261d79"
        },
        "item": {
          "id": "c7b443fc-9dd9-4639-bff8-f6a3313543f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2236c820-ea00-46d3-8832-746f5e7d51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafa0a9b-4e82-4652-896d-27d3620fb7cb",
        "cursor": {
          "ref": "3911e9f1-c980-47b2-a1a1-429bace744ce",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba010882-999d-46be-a6de-defb4b85fd1f"
        },
        "item": {
          "id": "dafa0a9b-4e82-4652-896d-27d3620fb7cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "123a436f-33cc-4ae5-9375-e6993f5e95a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e872d59d-f3d7-4f57-ada0-035ade1abbd7",
        "cursor": {
          "ref": "8a16a158-533f-4fdc-84fb-5bcc7f1cbbbf",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4d618955-550f-4d40-8f1f-ea5753306a18"
        },
        "item": {
          "id": "e872d59d-f3d7-4f57-ada0-035ade1abbd7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0812a34b-1889-47ef-9bae-f6e497a4341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36095512-ebe1-4022-9815-c5d8caaaa7f0",
        "cursor": {
          "ref": "8f20897b-896b-4cdc-b490-01f47dd9eeba",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2d10a022-eb57-4463-9008-63d27e0b90a3"
        },
        "item": {
          "id": "36095512-ebe1-4022-9815-c5d8caaaa7f0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5440c935-45f9-49f7-a5a2-5ba2489597b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4539315e-0114-4db3-8082-8ce019654c24",
        "cursor": {
          "ref": "8768d653-3bc2-4b4e-9804-a2a43be972bd",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7ca9f402-79d9-4be4-a474-55a43592650c"
        },
        "item": {
          "id": "4539315e-0114-4db3-8082-8ce019654c24",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6969f732-e7aa-4a8c-acf7-303689bef78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa09589f-ea24-4983-a324-bec509e6051e",
        "cursor": {
          "ref": "88de9173-dad0-47d8-a091-8dbbe207699d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "047e56f5-b0f6-4256-988a-e4f855e8b3e0"
        },
        "item": {
          "id": "aa09589f-ea24-4983-a324-bec509e6051e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2bb61ff5-9c82-48b6-8880-10cfae4fa78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f11e599-e95d-4eaf-8f1e-ce0b6e83d6c8",
        "cursor": {
          "ref": "7580dda0-3965-4809-917f-455947537660",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6b237cf5-2303-4dbb-94b3-af43c1f660e9"
        },
        "item": {
          "id": "4f11e599-e95d-4eaf-8f1e-ce0b6e83d6c8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dfdd1f2f-faa3-4094-b712-157886b1b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6128d31-609c-4b80-b1fe-06971ca496b2",
        "cursor": {
          "ref": "c8359894-208c-477a-b695-ae4c0120d161",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8d528146-6760-43a3-88b0-4778237af4f7"
        },
        "item": {
          "id": "a6128d31-609c-4b80-b1fe-06971ca496b2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "516bbb63-2c90-4020-9d4a-3e4d8e4b4572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6f7f10-f3e0-4f57-b6ab-042a9e382ef1",
        "cursor": {
          "ref": "5ad51819-2e34-4f36-bd7d-e2629c7266e5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c294c00f-7695-4c18-9243-2fc50c8d3af4"
        },
        "item": {
          "id": "7a6f7f10-f3e0-4f57-b6ab-042a9e382ef1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d83c1ac0-1d20-4deb-8b16-33eb3c6e350b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39b51e1-567a-459c-b1cd-e071fbc711f8",
        "cursor": {
          "ref": "21d694d2-215a-425e-88a1-a29c73dd2c76",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "106b559f-b01f-4477-8103-156b036f7819"
        },
        "item": {
          "id": "a39b51e1-567a-459c-b1cd-e071fbc711f8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d352b50c-4bd1-40fa-8383-1c04ce7e22c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a407c94b-6bca-4111-aa17-fe54b90b7b24",
        "cursor": {
          "ref": "3c1c2bf5-76f8-4645-a4e0-bba79ff7b4e7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f33e162-23bf-42a9-9586-8c21f7d382b3"
        },
        "item": {
          "id": "a407c94b-6bca-4111-aa17-fe54b90b7b24",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "acaea469-158c-44e0-a8da-92b19275570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d659e738-3c14-439e-9737-ffc2e5a85750",
        "cursor": {
          "ref": "6189bf54-9100-4d3a-bb8f-d70cd1e079bf",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "962865e7-d61a-48e2-8289-16b7623e51be"
        },
        "item": {
          "id": "d659e738-3c14-439e-9737-ffc2e5a85750",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "965c5bbb-748d-4ed6-aeac-6cba819ade91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0960b2-b05a-419b-91d4-eefcb486a4b2",
        "cursor": {
          "ref": "73b80fca-3395-4cdc-b4b7-0f493113db6c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b7e76d87-69d6-4473-b2f8-5fc7e74ec548"
        },
        "item": {
          "id": "6f0960b2-b05a-419b-91d4-eefcb486a4b2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3997d141-9aa4-4f93-a50d-11269e632883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44983e8-a5e2-4367-8c24-7432330c9828",
        "cursor": {
          "ref": "2cabb112-b7d0-46d6-a22c-56734dc6bd1c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "db5ce10c-c12c-49d1-b064-072784fe52c9"
        },
        "item": {
          "id": "a44983e8-a5e2-4367-8c24-7432330c9828",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da965bdd-fa5b-4f69-8f50-f214d5d996af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94501e1f-3378-42e0-b138-6ec378f34ecb",
        "cursor": {
          "ref": "8653d6b8-e5de-452c-b7a4-d712009eb486",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4729c069-5e4b-42d2-8e82-c7dc503e5e1b"
        },
        "item": {
          "id": "94501e1f-3378-42e0-b138-6ec378f34ecb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a7316456-ea97-498f-99f5-274c3ce9bd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa66eea6-802a-48fa-9a4c-0e15ada36927",
        "cursor": {
          "ref": "956c075c-b238-49a3-ad59-d2a370943775",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c8d07ece-ab5d-46b9-8f57-623b68465bd3"
        },
        "item": {
          "id": "aa66eea6-802a-48fa-9a4c-0e15ada36927",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6b8b900c-df3c-43ae-8849-04244ebaef76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f2339-5c26-4186-b220-d7394b04b5aa",
        "cursor": {
          "ref": "16b70cb9-0612-4294-9e70-08f79eac8afd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1bcf979f-56f9-4de9-ae0b-f4ba7b8a34c1"
        },
        "item": {
          "id": "3b3f2339-5c26-4186-b220-d7394b04b5aa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "52e553f8-ec70-477c-831f-b558c97f1513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba121157-0376-4088-b7f5-0b3164f89328",
        "cursor": {
          "ref": "86f971d7-acb5-49b6-9c93-58868ea71d28",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5264333d-1671-4e12-b776-956673a3d2e4"
        },
        "item": {
          "id": "ba121157-0376-4088-b7f5-0b3164f89328",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "897cb8e6-abce-4e67-848c-cec54a49c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883605f7-ba1e-4fe1-a786-7f4135ad334b",
        "cursor": {
          "ref": "e95cf640-255a-493b-aaa1-ec8ac8e4332b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "937d7110-5c85-48c6-a862-a49600477aad"
        },
        "item": {
          "id": "883605f7-ba1e-4fe1-a786-7f4135ad334b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d3b0fb7-d15c-4a57-8c0d-201ef2afc3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515690d9-66fc-4209-847b-d51da78a0721",
        "cursor": {
          "ref": "3715013d-c94d-4a29-a14d-f99ffaf18800",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6286ad7b-05a2-430c-9272-039d5e536ad6"
        },
        "item": {
          "id": "515690d9-66fc-4209-847b-d51da78a0721",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ebb3c548-e91a-4cc9-8f96-028b091ef91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4d3798-e203-4726-b5f1-efd8f4f8ae6e",
        "cursor": {
          "ref": "a6b31d04-0663-40fb-8c27-19276dc14265",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "530e9ece-0d28-4f2f-9beb-078d5bdd03d7"
        },
        "item": {
          "id": "be4d3798-e203-4726-b5f1-efd8f4f8ae6e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "73f0798c-d400-4c85-a152-0fb4cb3b62b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe7da98-5d77-449c-9404-6f46bcf8f3f5",
        "cursor": {
          "ref": "8fbfb132-8a1c-4f11-a85b-6eae40969eed",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "34ce851f-6f29-4376-8fd8-5b0d95f63a1c"
        },
        "item": {
          "id": "abe7da98-5d77-449c-9404-6f46bcf8f3f5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "67581ef7-0fb8-4cc6-9dd6-ab70e6698b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4883c81d-31ba-427b-8e5d-3c9810fa60b0",
        "cursor": {
          "ref": "a83a2462-1389-4354-90d5-4851dc7512ba",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c44f1917-bc60-4e6a-bc77-60fb3dced741"
        },
        "item": {
          "id": "4883c81d-31ba-427b-8e5d-3c9810fa60b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "04063480-cc27-4e2a-981e-e62d2eeaa649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b88cb-3265-4a76-82d9-21ffd5f8e647",
        "cursor": {
          "ref": "569b6c02-0861-4255-bbaa-b59296abe743",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24ad111c-f8f1-4826-9dcd-eff661973d83"
        },
        "item": {
          "id": "568b88cb-3265-4a76-82d9-21ffd5f8e647",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9b03c457-ebcc-4d7c-82ed-b51d62dff177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fcd827-ec9b-4779-91e8-55efb05d70f0",
        "cursor": {
          "ref": "f5c42fe1-2e07-4359-9b8a-7456c1fb1dac",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "75f28fec-0ded-46e5-adc2-e444a3bfcc85"
        },
        "item": {
          "id": "b8fcd827-ec9b-4779-91e8-55efb05d70f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fcddda62-9032-4fc5-af73-936e56fcda7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeca700c-e097-4ea0-97b5-5feb42c42929",
        "cursor": {
          "ref": "daca3f5b-622d-4202-90e3-18b65ff73f29",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f8e32c7b-2ef1-462a-a15b-7216097e6c76"
        },
        "item": {
          "id": "aeca700c-e097-4ea0-97b5-5feb42c42929",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "08937fe3-aea5-4a8f-b766-efea645b171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f103fe-94af-4534-a15d-5c20ac783c79",
        "cursor": {
          "ref": "46fbd57b-cc50-4a09-9af5-8dbdcecee3b3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c4f73a5b-4831-41bc-8657-2b91e024142a"
        },
        "item": {
          "id": "d2f103fe-94af-4534-a15d-5c20ac783c79",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "08c7f1b6-f4c9-435f-8af6-301752a3374d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34711c10-bfb8-4163-9e35-dd2900ef5ed5",
        "cursor": {
          "ref": "ab328f15-f487-48f2-bab8-c73d3eff29e8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8c34c8aa-adae-4f05-b7e2-68f002df9ee3"
        },
        "item": {
          "id": "34711c10-bfb8-4163-9e35-dd2900ef5ed5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a2964ed-cbfb-4f5a-8634-e82a483fd5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096515df-36ed-4795-9784-ef8027bfe9ba",
        "cursor": {
          "ref": "03925b9c-a5b6-40f5-95e6-214d57d44a5a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "190cd214-357b-4397-be02-d0c35bcb9438"
        },
        "item": {
          "id": "096515df-36ed-4795-9784-ef8027bfe9ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9b9a1587-e07b-4608-a9b6-60c2f4636690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff6b6ea-60ee-44bc-9bb0-6636ee95747c",
        "cursor": {
          "ref": "3abbed10-7d27-4169-a11d-f09fb382d102",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b8681303-625f-4822-956b-61246fa7d181"
        },
        "item": {
          "id": "4ff6b6ea-60ee-44bc-9bb0-6636ee95747c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21b020b1-aba5-4666-82fb-52da52e01db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c3560-068e-4bd4-856a-0823b800d59c",
        "cursor": {
          "ref": "493c2a34-a72d-4cbe-8ec9-423c6963ce4e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8754e577-db82-4907-b619-82511373e1e7"
        },
        "item": {
          "id": "d33c3560-068e-4bd4-856a-0823b800d59c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9119f1a8-bba6-47f6-acb5-e1518e586697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93bbd9-5afa-4046-9165-dacef2346994",
        "cursor": {
          "ref": "22c68b5e-4cc1-47a3-9577-3f8999c9735f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9e14b1fc-8550-4928-a9c0-012c086c2e9f"
        },
        "item": {
          "id": "8d93bbd9-5afa-4046-9165-dacef2346994",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "00f22b4a-9f47-46cc-bbf2-17d7aa03a2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6038d4d6-1cfe-4796-a6d5-01101495b35a",
        "cursor": {
          "ref": "c25e5798-d0cc-48c2-8873-5923894eb469",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bd838d92-923f-4be0-a41c-32a6e68e9249"
        },
        "item": {
          "id": "6038d4d6-1cfe-4796-a6d5-01101495b35a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5cdf2c6e-d246-485d-b126-e72016961aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceab5723-a49e-4e9d-ac22-a8a5e82c8476",
        "cursor": {
          "ref": "6c237e9c-5fc8-4e67-8c28-b6d09368eeb5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e59fdc5b-7a0a-4ab7-adde-d20f1452924a"
        },
        "item": {
          "id": "ceab5723-a49e-4e9d-ac22-a8a5e82c8476",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2c2aa5ff-9a10-4b9c-979d-4e03662db8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd473d5-2db5-489c-a6a8-74350f0f045d",
        "cursor": {
          "ref": "890deaad-e502-4f42-af9c-9db6259e3784",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "779e7075-f565-4f93-8ad8-35aed9f49d4a"
        },
        "item": {
          "id": "bdd473d5-2db5-489c-a6a8-74350f0f045d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6d814980-b9a3-4cc6-b084-ccf5e592618c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a894d3-ea3b-4d4b-853c-701e181a0bfc",
        "cursor": {
          "ref": "75d00f81-2902-43aa-96aa-3f5e0a80da95",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da78e6a5-4dc8-4e55-bef5-0e9bf4137242"
        },
        "item": {
          "id": "67a894d3-ea3b-4d4b-853c-701e181a0bfc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1bda57b4-0e44-40ee-a3e8-fb41f59e272a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864fc1d4-1959-4089-987d-3c2be8034918",
        "cursor": {
          "ref": "4649d56e-de83-48b7-a88d-e8e9507a6751",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a743c1e7-7121-4eb2-8018-919ac8783890"
        },
        "item": {
          "id": "864fc1d4-1959-4089-987d-3c2be8034918",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "11b878c4-1755-467f-a330-beb2b456d903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08403e96-9ad2-4f21-83d3-4a92473bf991",
        "cursor": {
          "ref": "127c0f3f-987a-4d89-a3bc-55c87a5e6a79",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c56349ab-73cc-460c-8b54-3a0e49d7c62e"
        },
        "item": {
          "id": "08403e96-9ad2-4f21-83d3-4a92473bf991",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a1cca97-a883-420e-8400-f31eba846180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb062b6b-48b2-401f-a2f3-8b34731b9250",
        "cursor": {
          "ref": "880c692d-bcf1-4ab9-8fd8-df27fa809bd5",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "655de0c5-121b-4adf-8c15-3892fc55382f"
        },
        "item": {
          "id": "fb062b6b-48b2-401f-a2f3-8b34731b9250",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab3ec815-c902-47b0-b8be-441f8651ca30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b745f419-13dc-42fb-bc7b-d1d9d5d919d9",
        "cursor": {
          "ref": "e59e459b-5da5-4395-890a-8df01d6cc77e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2db0ebf6-b24f-44ae-807e-a138e7e93273"
        },
        "item": {
          "id": "b745f419-13dc-42fb-bc7b-d1d9d5d919d9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "920c2706-ea2c-4f1e-a7ce-4ff861f9c50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcf3269-25af-414f-b93e-485d9548414f",
        "cursor": {
          "ref": "2a551326-ac4c-4eff-80da-501e41ae32d2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "900ff829-8ece-481e-b388-5c52dd5f1028"
        },
        "item": {
          "id": "4fcf3269-25af-414f-b93e-485d9548414f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "41257e14-e9d7-4e6b-9686-9c481bd7403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23749ec-d5f9-4e0e-99e5-25e5ee7eeabc",
        "cursor": {
          "ref": "25171303-00bf-4cc8-b29e-e9214a6c2569",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fbae6099-26bb-4cb8-b403-398074d6b325"
        },
        "item": {
          "id": "d23749ec-d5f9-4e0e-99e5-25e5ee7eeabc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47b5557f-310d-4b9d-9920-3bc03f74765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7a27c3-92f7-47b5-9e64-9355b9ea35ad",
        "cursor": {
          "ref": "3b9b4e02-6133-4677-8b9a-bfc46e5d9dbb",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "69ca4833-7946-4c47-b0be-59dc20b896e8"
        },
        "item": {
          "id": "5c7a27c3-92f7-47b5-9e64-9355b9ea35ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e115fa37-5b49-4df1-9df2-a71d503ef342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1714031-3d63-442f-b0d1-36c6dc8c4b67",
        "cursor": {
          "ref": "1dd66496-c029-40fd-9019-dfc94bdcf65a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "254425d3-70af-44b4-9404-f4b30aad86c7"
        },
        "item": {
          "id": "f1714031-3d63-442f-b0d1-36c6dc8c4b67",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e0292439-49c8-4451-bfd4-591b3f8a5ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb920c82-8ad9-42fa-8dcc-d1a1f2c2f919",
        "cursor": {
          "ref": "0b1cffad-e01b-47a0-8fe1-99244f8b737d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "322cce11-d497-4aeb-9768-6f289473cf97"
        },
        "item": {
          "id": "bb920c82-8ad9-42fa-8dcc-d1a1f2c2f919",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "122833de-8f7c-4178-8829-c48798fd551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c0ab0-7f18-48da-8142-027648d1efbb",
        "cursor": {
          "ref": "82e5fcab-5a8d-4186-9e67-6cd86027c648",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c7ab4ef-8a62-424a-85b5-0ec2cdc25949"
        },
        "item": {
          "id": "635c0ab0-7f18-48da-8142-027648d1efbb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "50183f03-31a9-44e1-915b-94485c8a3160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7421ee5-f6a2-4e5b-b369-0bfd40b26b23",
        "cursor": {
          "ref": "8c474f8c-e2cd-4797-9793-2985139e3954",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1c404791-152b-48f0-9d0a-a25ee368e6b5"
        },
        "item": {
          "id": "a7421ee5-f6a2-4e5b-b369-0bfd40b26b23",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c2739b30-e51c-4bb8-969e-f3e66b48b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2959570-2aeb-4591-9bd7-ecbf63d8cee6",
        "cursor": {
          "ref": "8fb13a8c-82fa-4c56-aa60-6e970d960442",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dbf340a7-cb75-4977-acd4-ed1d46c36a79"
        },
        "item": {
          "id": "c2959570-2aeb-4591-9bd7-ecbf63d8cee6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bd9fb790-2486-46f6-aeae-be592a5eb165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f5ae4-28bd-4c66-ade1-610deea640f5",
        "cursor": {
          "ref": "93da1ed2-b446-4de2-8fbb-3a3b0b24045b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d5a1aa65-664f-4dc7-a153-f1bdeceaccd5"
        },
        "item": {
          "id": "891f5ae4-28bd-4c66-ade1-610deea640f5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a684929-7124-4732-a91e-34ab41dfb37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72afaae4-b711-400f-8483-56452bb08fab",
        "cursor": {
          "ref": "b245f6a9-4e64-45f0-8b1d-aac88ee527bf",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "645589be-306b-4545-bd44-7b301ff53aec"
        },
        "item": {
          "id": "72afaae4-b711-400f-8483-56452bb08fab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ddc58c1e-75bc-42ab-a329-38b5fa4f42b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3b9e0b-8855-47b2-875b-fd6b221fd571",
        "cursor": {
          "ref": "402cc8de-3b59-44b4-8dfe-763ddb1cd472",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "420127b7-8486-4b04-910a-3ed31fa16a7b"
        },
        "item": {
          "id": "5f3b9e0b-8855-47b2-875b-fd6b221fd571",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bfee4f55-cd39-4bbf-9aba-ff8f46855b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd745cd-5d37-4170-9fc8-ed8ec6b71340",
        "cursor": {
          "ref": "9b1b4cab-c8ba-48a5-b382-9d644b3c2e92",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5033d58e-8ab7-4b80-8a41-6b0e264347b2"
        },
        "item": {
          "id": "7dd745cd-5d37-4170-9fc8-ed8ec6b71340",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9ac717e7-9b69-42a3-aa03-830b6420fd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2159d1-9333-408d-8318-5ad3f137c6eb",
        "cursor": {
          "ref": "64e85202-ab44-4521-a4c9-1d40ff7df63a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "870576f8-8db7-4f8b-8411-c9fa631c009b"
        },
        "item": {
          "id": "8d2159d1-9333-408d-8318-5ad3f137c6eb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0b5962d0-4763-4797-9a88-db4bdcf2662b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79b3fc-2a12-405f-b8bf-47cce5632ca3",
        "cursor": {
          "ref": "cf276419-d01e-4712-a873-69da858fe59a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d1413841-45b5-4600-acee-4d88d14b2886"
        },
        "item": {
          "id": "bf79b3fc-2a12-405f-b8bf-47cce5632ca3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4f9f0382-24f0-4342-a62d-d0ad3056c87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8f2732-058c-404b-a60b-d2afa8bb8c58",
        "cursor": {
          "ref": "2a79e236-53b5-47a9-aa1f-a04aded2a79c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fb7d961e-fc8a-4bec-9bf8-a0447742c379"
        },
        "item": {
          "id": "0c8f2732-058c-404b-a60b-d2afa8bb8c58",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f1180f76-c070-4930-bda1-61cfbe29ab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1370b1e0-b55c-4caa-a4fe-8aa835cf01bf",
        "cursor": {
          "ref": "e52bfec2-db1e-436e-beaf-27ce5df6bb95",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b68e7b6a-1cab-4ede-9e31-907194ca528f"
        },
        "item": {
          "id": "1370b1e0-b55c-4caa-a4fe-8aa835cf01bf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db6156e0-4730-449a-a19c-f46d947b768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2ebbba-cfb4-458c-a152-671f12fc16ff",
        "cursor": {
          "ref": "47e96960-4151-48f6-9baa-4598b66cabe3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fc5eb25a-25bd-4289-988b-7ad5f25f5ee6"
        },
        "item": {
          "id": "9a2ebbba-cfb4-458c-a152-671f12fc16ff",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9b23372a-4598-47ef-8727-64db45f96330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11676d4-c034-4883-980e-1feff33e873e",
        "cursor": {
          "ref": "da2725a1-f0fa-48d6-81f8-cb7a1a95387f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61f498c7-a3f6-4149-b741-ba7ed3695a55"
        },
        "item": {
          "id": "b11676d4-c034-4883-980e-1feff33e873e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d24f3cb-2251-499c-8f6c-17d3e6eea0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a694dd-389e-40be-a46b-fd71d2315c1e",
        "cursor": {
          "ref": "b83f4c09-cdf3-4229-9125-612dd5a33296",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e81d2b7e-7139-4192-bb8e-5826f626fb6a"
        },
        "item": {
          "id": "28a694dd-389e-40be-a46b-fd71d2315c1e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dff7b4cf-6d27-4f3d-959d-58786fceff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612645dd-dcd4-4874-b98e-729e20e2108d",
        "cursor": {
          "ref": "329aaf26-1e17-47ee-8215-a27c83841f70",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb7fe2c6-f3b8-45b0-bd53-0c3377fa5994"
        },
        "item": {
          "id": "612645dd-dcd4-4874-b98e-729e20e2108d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b1a7d86b-27ed-4c0c-bbc4-46816f0ab155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216b2e5-5ce3-4028-9ff4-2fbae75490e4",
        "cursor": {
          "ref": "9454bde3-9692-4637-b84f-4725e1ef6fdb",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aec3f54f-1f64-4158-ad4e-f006340981c0"
        },
        "item": {
          "id": "c216b2e5-5ce3-4028-9ff4-2fbae75490e4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51b4ff32-4c71-420c-8b08-5434b4019527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e950f6e-a788-4943-bd76-138cbc869262",
        "cursor": {
          "ref": "510d3d58-9d1d-4aca-8b81-4d7752692a51",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f831e091-a913-4ea2-af3d-46cab5b58df0"
        },
        "item": {
          "id": "2e950f6e-a788-4943-bd76-138cbc869262",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "60741bb0-5665-4a56-8717-b973fa1b0a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a46d6a-8139-46e4-b763-4837fdb9902d",
        "cursor": {
          "ref": "6d25884e-5d47-41b6-903b-9c47dec89a56",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5091e6ad-2bfd-4926-8796-59bcf368c219"
        },
        "item": {
          "id": "b6a46d6a-8139-46e4-b763-4837fdb9902d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a40f6f37-b76b-4e75-9877-1a38c70d347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faead22-2e58-4ca8-9b24-2ab4824aee1a",
        "cursor": {
          "ref": "3ce1fc44-cfbf-4622-98fd-34120b4a8b56",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6a909b5e-6c98-4116-9967-5d0128d787b7"
        },
        "item": {
          "id": "9faead22-2e58-4ca8-9b24-2ab4824aee1a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4bff60e8-6859-4996-bb49-48ea1e5bc1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7406c0a7-c150-4ba4-9c8c-d0c90726fa73",
        "cursor": {
          "ref": "f6053886-2105-41ff-96c7-3c11cc907eef",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "01601c53-525e-4b87-b600-0cdc54d7dd6f"
        },
        "item": {
          "id": "7406c0a7-c150-4ba4-9c8c-d0c90726fa73",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b53d46fa-7e29-4c76-86cc-1b7c611fe6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8b9e9f-5b44-4561-8008-a1a7eae8e289",
        "cursor": {
          "ref": "d3f188cc-7341-41c3-8645-7247ccef7252",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b00787bb-aa61-4dbd-aa78-a2e96b6f2847"
        },
        "item": {
          "id": "ab8b9e9f-5b44-4561-8008-a1a7eae8e289",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b404286d-6194-4bf2-9809-19a7425dba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2541f-d71a-4bc1-b8f5-8b7a686b5117",
        "cursor": {
          "ref": "9ac5b00f-b820-46d9-94c2-f2849d58214d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0ad3d653-92ac-48ac-a1a7-1e7785e411bd"
        },
        "item": {
          "id": "98a2541f-d71a-4bc1-b8f5-8b7a686b5117",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d7bf146-a6b5-4c9f-ac5f-664be849a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43bcee4-48e8-4e7c-b0cb-60eb1c4ecf06",
        "cursor": {
          "ref": "3091c114-a557-436b-8fda-3510d87c8dbb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "153e44f0-1730-4bb1-aab2-c94f87b0e5de"
        },
        "item": {
          "id": "f43bcee4-48e8-4e7c-b0cb-60eb1c4ecf06",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5fd33fa4-38ff-4f31-b927-a4b408188884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f23ffc0-a20e-4024-92fd-a43ca73bb6a4",
        "cursor": {
          "ref": "3b2d6603-8fdb-4444-afd1-09b636bf3782",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4fec34f8-e0de-4613-800c-018d161c8927"
        },
        "item": {
          "id": "4f23ffc0-a20e-4024-92fd-a43ca73bb6a4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ec4d2bc-9bcc-4dbd-ae46-ff578e806fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efcca2e-8f46-41ef-a3f1-91a56ee25031",
        "cursor": {
          "ref": "615197ed-6470-4821-832a-73a1aaebc005",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eac2eec5-640d-4fb7-84c8-8c1dadba1a38"
        },
        "item": {
          "id": "7efcca2e-8f46-41ef-a3f1-91a56ee25031",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ddbd621d-067f-4bc1-aeb1-686cb828314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20701fad-443f-44d7-9cc2-ec6d27e2d6f1",
        "cursor": {
          "ref": "280927f1-f7a4-470f-8faa-09d68ab26306",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cec84c1e-c4c2-45d3-aa5c-9c4a4c853f11"
        },
        "item": {
          "id": "20701fad-443f-44d7-9cc2-ec6d27e2d6f1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2e0df7d6-9b0d-4dfc-8db9-65f6682c36b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7285fa5b-3448-44d5-ad88-1bedf4c02c29",
        "cursor": {
          "ref": "5251a4b7-657c-4a29-abf4-d859de3d9056",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "432c8b2b-a006-42f5-9a02-eee2c76bf2e2"
        },
        "item": {
          "id": "7285fa5b-3448-44d5-ad88-1bedf4c02c29",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ec526d5b-2779-4110-b475-4a496d11f10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298676ab-af8c-4519-8234-c603375612af",
        "cursor": {
          "ref": "09f5b9c8-a243-4101-9534-0bd92943639b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d7c13462-835c-4acc-aa9a-981f2d89b3b1"
        },
        "item": {
          "id": "298676ab-af8c-4519-8234-c603375612af",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "49653c58-05a1-47e0-98a9-102f6670b554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcf2f04-1614-44d9-a8ea-c74c4a0929f4",
        "cursor": {
          "ref": "25d92b53-fb6d-4fc2-9112-bb24cef1287a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "49a1e2f3-78bf-458b-87af-ddddb047b72e"
        },
        "item": {
          "id": "7dcf2f04-1614-44d9-a8ea-c74c4a0929f4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3743ae3e-aab5-4851-8ee6-271512319eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55233e84-34a6-43f1-85f1-e6de885a28f0",
        "cursor": {
          "ref": "d0c41dd5-3918-466c-87eb-e6ca6dbd0845",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed3f19b0-025b-4b5f-aa90-234e307a641b"
        },
        "item": {
          "id": "55233e84-34a6-43f1-85f1-e6de885a28f0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a1c1993a-c141-41f9-9551-341be65ba5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318f643c-cc42-4bbc-a0ee-1df57adcb789",
        "cursor": {
          "ref": "babd5c4e-9739-47b7-a0a8-b1c732fa4021",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0951cbef-d978-42f7-b1aa-19130f836a70"
        },
        "item": {
          "id": "318f643c-cc42-4bbc-a0ee-1df57adcb789",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9c9c9c7c-7459-47f0-8b91-1f8fbc5d3a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8272546-1b4b-40a9-bf54-3458d86784c1",
        "cursor": {
          "ref": "92e3c069-a67c-4c79-b28c-f595d696f61a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c1e9fb7e-23b0-436f-9dc7-bfb444ff5d95"
        },
        "item": {
          "id": "b8272546-1b4b-40a9-bf54-3458d86784c1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "027fb2cf-b2e7-4fe7-9fa5-c2595a1692b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d667cf-a10a-4269-9538-44460f3465ec",
        "cursor": {
          "ref": "2e89acd8-0853-4b5a-8a66-1348dd6f346a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2c171ec8-e47e-464e-8c66-3b137afb3c9a"
        },
        "item": {
          "id": "d0d667cf-a10a-4269-9538-44460f3465ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "22dde177-ff29-4ff3-a6e9-33b0a7cc64ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c2773e-8dcc-4826-aabb-8fe44b3ecb34",
        "cursor": {
          "ref": "b68eb601-dabd-4715-922a-c57767e6781d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d69d93b8-2ce2-48c2-bb79-f746881526eb"
        },
        "item": {
          "id": "53c2773e-8dcc-4826-aabb-8fe44b3ecb34",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4198a377-331c-4af8-a04a-2495f51274f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e60a97-685e-4677-b4e3-f4e4b35ab37e",
        "cursor": {
          "ref": "3dcd3639-b0b3-46a0-901a-e703139e64fd",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8bcc48f6-e8d7-4d5c-804b-afa2bbe3c8ff"
        },
        "item": {
          "id": "59e60a97-685e-4677-b4e3-f4e4b35ab37e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "073c5d5d-eeed-4824-87c6-504e5ca5a01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc5771-a648-4f1b-bfae-9d9259e9606f",
        "cursor": {
          "ref": "120c9097-017b-4c23-b97b-0a00713828dc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "91007389-0f22-44ea-a8cf-a603e041c4cb"
        },
        "item": {
          "id": "17dc5771-a648-4f1b-bfae-9d9259e9606f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8f2474e6-092b-4e3a-a8e1-2245aededc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc286cfc-2cb4-4fb6-af1a-4516f4238824",
        "cursor": {
          "ref": "be310872-2d7b-4b12-9883-2d720c2bbcbd",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bec2bb55-22c7-4e87-837b-f9d867e1eb13"
        },
        "item": {
          "id": "fc286cfc-2cb4-4fb6-af1a-4516f4238824",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f44bd461-caa2-4f22-8ffb-4727813ee068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a425388-1df0-4b02-bbcb-753c101b65bb",
        "cursor": {
          "ref": "22e9005d-ee29-46c1-9bd6-0ec3177a3cb8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e42771dc-46d3-464d-a3e9-eccd21362f4d"
        },
        "item": {
          "id": "6a425388-1df0-4b02-bbcb-753c101b65bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "86dbabec-1033-48ff-9241-0e16343eeab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9513b7-f990-4755-8ea1-00fa9f7e00a6",
        "cursor": {
          "ref": "c1547789-ddcc-474f-8b72-70d3325867c8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d2098b93-6f0c-4404-8a3c-718264396db6"
        },
        "item": {
          "id": "ed9513b7-f990-4755-8ea1-00fa9f7e00a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a4023aee-361d-4537-b467-382317944520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d027dda3-dbee-42a0-971c-6f1141f91b5b",
        "cursor": {
          "ref": "f5d253ef-4ff0-4ac8-94dd-45b9268db7c6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3a810ed4-0dc3-4b3f-92e3-2ae24f7edf30"
        },
        "item": {
          "id": "d027dda3-dbee-42a0-971c-6f1141f91b5b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b8f47c74-44bc-4502-b5ba-88c59fa2c666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4341d7f2-89a6-4bb7-a8f7-4de0b30f3ada",
        "cursor": {
          "ref": "c50265ab-6db3-4dfd-85ce-5c721533d0ab",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c017974f-c58a-483b-b419-e10e94480a5c"
        },
        "item": {
          "id": "4341d7f2-89a6-4bb7-a8f7-4de0b30f3ada",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c6906b1e-54b6-4139-a15f-26abab471750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb0d3f-d922-4353-9265-85a73446d2ab",
        "cursor": {
          "ref": "66b863d1-4280-4e6c-9f17-d2f9810b202d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a86a607a-3bd2-40a8-ae91-ab97a2a08c5a"
        },
        "item": {
          "id": "5ceb0d3f-d922-4353-9265-85a73446d2ab",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5a34dfc9-4f5d-488e-babe-966a2b3e247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb05404e-1bc1-4185-ad5f-00ccb88d0572",
        "cursor": {
          "ref": "33533d2f-7029-4be3-b6cb-6be1e8203959",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8bf6b8ef-8a0a-43bb-bcba-5d9d3b357a41"
        },
        "item": {
          "id": "eb05404e-1bc1-4185-ad5f-00ccb88d0572",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1c209cfc-472d-40e8-964b-8129e5dd4df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b458a0-1076-4a72-a49f-ca349df41618",
        "cursor": {
          "ref": "26f9aec0-d860-43c8-8877-6c4e8d4a2e3a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8acea4b4-ac52-4aa0-ad5e-66109d3be1b4"
        },
        "item": {
          "id": "34b458a0-1076-4a72-a49f-ca349df41618",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7c931b4a-fa36-4b4f-9c16-a5d5ae3e259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c801e-3aed-46c2-9b95-af1854a4749c",
        "cursor": {
          "ref": "3f080668-0a1d-4229-9a93-5220aad72b37",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dc9e6158-bbf7-4af2-9c70-e0e0d0087bed"
        },
        "item": {
          "id": "b73c801e-3aed-46c2-9b95-af1854a4749c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bf741ee8-370e-4965-b035-56fb553915ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2331cea8-0a8e-45d2-a324-799d8cbc12e6",
        "cursor": {
          "ref": "015e95a0-463b-49dc-938a-6eb35d9bb250",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d18b4134-16f7-4e65-8f16-147e0a5efb46"
        },
        "item": {
          "id": "2331cea8-0a8e-45d2-a324-799d8cbc12e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "052b8593-56e4-47f3-b3c8-05c77bd15f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d502f2d-4467-448c-9c7a-7251b28ff02e",
        "cursor": {
          "ref": "1c3a8391-8d68-4ed8-a00f-d589346d38bd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e0615e02-63cd-481c-80a1-235b2593d4d8"
        },
        "item": {
          "id": "8d502f2d-4467-448c-9c7a-7251b28ff02e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1be19533-679d-48e0-bb93-47716dd4930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30bbd77-cb7a-4d72-8af8-781369b045a1",
        "cursor": {
          "ref": "748fb9a9-d323-486c-93ac-f12ab7455c82",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7feccd70-275c-4fa7-9536-83befda9dd5d"
        },
        "item": {
          "id": "d30bbd77-cb7a-4d72-8af8-781369b045a1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e99e3ebe-a081-4720-bc8e-21cf8f6ce729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a7d79-8b4e-4324-abc7-d457fb481350",
        "cursor": {
          "ref": "d5cf30bc-1e39-4a92-99a2-59bbd6031310",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f3eccf36-2ada-4f53-baaf-15f0b412f7de"
        },
        "item": {
          "id": "779a7d79-8b4e-4324-abc7-d457fb481350",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1e4e3d86-ac76-4fcb-807c-9e4402fb253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9776d5-b163-433a-87a0-97e6f276cd02",
        "cursor": {
          "ref": "43630bdb-b8af-42a0-88dc-7d3c28d78b69",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f2376e63-9a62-4422-bc55-4420cef91161"
        },
        "item": {
          "id": "be9776d5-b163-433a-87a0-97e6f276cd02",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "789ffc99-2b1d-4e87-b288-46f96fa227fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7993cb06-4519-465e-8a43-5be7e5f7f178",
        "cursor": {
          "ref": "d1f2f61d-f259-4cb4-bdc6-4f834822f45c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ac596a68-9bc6-41ec-8538-66e9621c5ae3"
        },
        "item": {
          "id": "7993cb06-4519-465e-8a43-5be7e5f7f178",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3335f3b6-7c37-4b1f-b82e-42a7d5be935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e6555e-a168-4fe1-a6f8-54fb75d3b97b",
        "cursor": {
          "ref": "030da09b-8d5e-41c2-bc45-df9e14e56cf0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d3ef4626-220f-4cb8-8e3d-97f05ca6c104"
        },
        "item": {
          "id": "f4e6555e-a168-4fe1-a6f8-54fb75d3b97b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "451481e4-4e9f-4eb0-b326-f8af19d9f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfdbec4-796b-4252-a2ee-2f69a9b16590",
        "cursor": {
          "ref": "4eab96f4-541e-4dd9-9b1b-5705ceb44358",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "db0b78c2-d681-44ea-86e1-4bfe41ad768a"
        },
        "item": {
          "id": "bbfdbec4-796b-4252-a2ee-2f69a9b16590",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "40daa41e-724b-4761-b318-308ccd9eb0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce25c94d-e671-4d4b-92cf-b33bb1b53d3a",
        "cursor": {
          "ref": "877c17e4-b98d-4af1-9a1c-fb13742aaee5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4df85d5c-8f75-4331-a661-73b4ffefe447"
        },
        "item": {
          "id": "ce25c94d-e671-4d4b-92cf-b33bb1b53d3a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "27669b8c-5f62-47f4-8aaa-c6052c57feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e039c8de-c968-461b-b985-4194e1fa48c6",
        "cursor": {
          "ref": "242bec3d-4b84-4ca7-9775-d1a5c778f64b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8ca5d7e9-9adf-4704-982b-2a959104f269"
        },
        "item": {
          "id": "e039c8de-c968-461b-b985-4194e1fa48c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a1b906b7-e69a-46e3-8138-455baf0d1c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5f324e-f739-458c-ae45-2d7566c6c40b",
        "cursor": {
          "ref": "729186f9-30ab-4ad7-9f28-b0ed709f546b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b6c3d055-af85-47bd-9a51-cf37562e240d"
        },
        "item": {
          "id": "3d5f324e-f739-458c-ae45-2d7566c6c40b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a123539f-e42b-40ed-a068-f6f83d055d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d9023-043c-4f70-91d5-15c92ab18192",
        "cursor": {
          "ref": "f77378b5-fae6-454a-8b18-638bdf2a655d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7193e77b-9a22-45ec-8648-1fb338fc899e"
        },
        "item": {
          "id": "541d9023-043c-4f70-91d5-15c92ab18192",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ec06ee5d-d25f-4536-9ebd-a4fbf7d7b363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a3b8b-44cb-4b59-85b5-acdfb7f99adb",
        "cursor": {
          "ref": "0b81e8d7-ead9-46bd-98ba-b3ee6fcf0f03",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "969df9d1-61e9-489d-9b62-2a0636edcd70"
        },
        "item": {
          "id": "249a3b8b-44cb-4b59-85b5-acdfb7f99adb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0bc1468-3501-42a0-9c75-8e6f19fffe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4076df-8177-449a-bf28-80dbc0dcabb4",
        "cursor": {
          "ref": "6f814cf2-c938-49c5-898a-62aab5c2c043",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e4d5c38a-ace9-44c8-8366-63f6488be9f9"
        },
        "item": {
          "id": "eb4076df-8177-449a-bf28-80dbc0dcabb4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "102f63d2-76fb-49d3-b678-50e670c8e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a4a6c-7e01-47ce-a0f5-af7484bef359",
        "cursor": {
          "ref": "c2d5d4fb-5c74-4edc-8302-2289574b1c45",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "428a7671-3ce0-46e9-98cd-ceede32ead6d"
        },
        "item": {
          "id": "890a4a6c-7e01-47ce-a0f5-af7484bef359",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c432a45-db89-4aed-9214-bcbaf8c79d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e9ec3-0274-4662-a2e1-6308d47f99e7",
        "cursor": {
          "ref": "ed4aa7c2-1d6e-40a9-8307-710b4ee082ae",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "24d1fb3f-6096-4574-8ce4-63b47822245c"
        },
        "item": {
          "id": "0e5e9ec3-0274-4662-a2e1-6308d47f99e7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eadb2d19-2e49-433c-baa1-8f541f668b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3559203-cb77-490f-90a5-535fadc400b9",
        "cursor": {
          "ref": "da6eb940-448c-4064-91f8-7512280fe8e1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "64b6f0b9-1535-4759-8085-9c7948b68e03"
        },
        "item": {
          "id": "a3559203-cb77-490f-90a5-535fadc400b9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "da077a01-42da-4945-b9d1-40e611cab9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a80295d-6b1c-4813-9eef-a6da92d524fc",
        "cursor": {
          "ref": "7ab6bed6-e1fe-4763-b52f-bb64717b3d10",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0a12162b-c0b6-433a-bb9f-03d8d3218f80"
        },
        "item": {
          "id": "7a80295d-6b1c-4813-9eef-a6da92d524fc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "55f1e436-c993-4d03-9115-c30a71eda53b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45054c75-de20-4edf-b438-3df61789a588",
        "cursor": {
          "ref": "c2f5da93-c480-4590-9dc2-7c11dbacf9ac",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "85c49152-7027-4a8a-b350-d8c564f561a3"
        },
        "item": {
          "id": "45054c75-de20-4edf-b438-3df61789a588",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5a51d2b7-4276-42d9-95bf-acda7c3f29fc",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f473fbfd-8a4d-4c03-b636-9c28a36b97c6",
        "cursor": {
          "ref": "be858408-db8e-4be6-983a-daaa15ef19ce",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ad5bd9df-e1e5-4c78-a36c-4e65fe83016e"
        },
        "item": {
          "id": "f473fbfd-8a4d-4c03-b636-9c28a36b97c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "60d5fff0-c61e-414d-89f4-0590327f87ab",
          "status": "OK",
          "code": 200,
          "responseTime": 1439,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b335f-b56e-41e8-8da8-ee5c8a2184ef",
        "cursor": {
          "ref": "a6a9517f-3c8a-4ccc-8de7-5b56deeb5398",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "800c672b-8b88-483b-ae5d-726c7d540f44"
        },
        "item": {
          "id": "383b335f-b56e-41e8-8da8-ee5c8a2184ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c28de3fc-6339-41ae-954c-a1a2ab49bace",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f90749-3910-4574-9e95-3f1b635ea08a",
        "cursor": {
          "ref": "70298487-f97a-416c-bcd2-1499e00d2dd0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f558712f-9178-4913-9e19-efcd5f3d474f"
        },
        "item": {
          "id": "f4f90749-3910-4574-9e95-3f1b635ea08a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cef86e8-395c-4d6c-bca7-6123392d5b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f90749-3910-4574-9e95-3f1b635ea08a",
        "cursor": {
          "ref": "70298487-f97a-416c-bcd2-1499e00d2dd0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f558712f-9178-4913-9e19-efcd5f3d474f"
        },
        "item": {
          "id": "f4f90749-3910-4574-9e95-3f1b635ea08a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cef86e8-395c-4d6c-bca7-6123392d5b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87732b3-6013-4f30-81a2-1eeed4251140",
        "cursor": {
          "ref": "01c8b16e-2c0d-4628-b8ec-81329988d819",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2c8be62f-ca2b-411b-a300-7b54356dfe5f"
        },
        "item": {
          "id": "f87732b3-6013-4f30-81a2-1eeed4251140",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "adb9c618-1b70-4012-b24f-e8a3ec71710e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f7bd34-7f07-44d1-817f-94d7717f036e",
        "cursor": {
          "ref": "14a133c0-b923-45c4-ac1a-c3695c123fb1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cb172cd0-4ea4-46a4-8eab-69278b16d5cd"
        },
        "item": {
          "id": "90f7bd34-7f07-44d1-817f-94d7717f036e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f69cb3d0-cecb-4fb9-8701-67d51a2dd03f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}