{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e3db6f74-d97d-4820-9709-690bedd5ac1a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "28c90e0e-a7a1-4dcf-aa3c-5a1039b3f770",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dc43d59-741f-422b-8844-692b7595b74b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ee5bfd1-6452-48fd-b731-6ac0c9e6c186"
                }
              }
            ]
          },
          {
            "id": "54593915-54d2-4279-9a57-952f8d8da1a3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "344c98a2-e7c9-42f7-a732-f515df23cf80",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78d10440-f5a0-46a0-9700-cda4f5f91699"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8fed2114-e0e9-44d1-8724-88b0ea458bd8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fc3cb283-13e6-4644-8113-04b853d87f1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bbf9e05-ca04-42d1-a49c-cc0bb4c1c18e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46b0796a-73db-4e8d-b80e-25a858dc2268",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "603c45d2-db1d-48dd-8031-6b2fe44c0cdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3c875e8-168e-46ac-ab56-0a1b9b6d58f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58602f65-1fc1-431e-a1bc-12a2f7851ed1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec7923cb-08ab-4ca2-9d1d-331b3bd96bee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9973ce09-fdb6-4ba5-a32d-20a24f31e40a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99d07418-7ba4-4344-9291-55590a4ef5b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f7001e22-a5dc-413e-ace9-825110eabb0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "343a46c3-ac76-44aa-adde-a13bc3a90601",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbb184cb-55bd-4bee-8fa7-eb39f086c289"
            }
          }
        ]
      },
      {
        "id": "306944ea-648e-4948-b505-f83d038fe08c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "acaa8e57-3419-411e-8846-6fd0fa3c3e7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3cb59be-c546-4ace-bc63-e76597c41bb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37aa6526-902c-4ab3-a599-a58e67a82295",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ac0e5a-0fc4-43a3-8a69-689362ba119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72445363-8d98-451a-b85b-394539b33d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5924c6e-9a22-46fc-a651-fc0bcd8cd9d0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248307d5-3192-45b5-a486-d9b8ddb4f087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca1fc3b0-e9ca-4fc7-adca-e19c41c5ef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd12b9c-92d5-4860-b28e-162fb85aba08",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f2f5df-b55d-4df6-aca5-9ebb36961a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12948baa-e7f7-4671-90aa-558ddbdd4584"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38574163-6120-4beb-b648-c444549a1543",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa86e843-9d9f-4532-8071-6410fa9030d3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb2227d-9acc-46b6-b1b3-fb8a672183c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca9444d-bd9a-4b3c-a557-67ab840f7ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e801718-f5e1-45ca-b5c4-7104eff14726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e47981-1b89-4373-b8f9-11ebdf1c8da2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86c29a3b-394f-4506-9043-4c9e1d336865",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adb919b5-3a30-4a50-b717-9dfca9cb0e46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "660ebf7b-0485-4c24-b0ff-c866b81017d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b93a5408-7074-4091-87a5-d3f009921b34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6f1c9f7-8d64-4354-b00c-a05b25943afa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9b344ce4-641e-4c68-b634-7fe43e1ac326"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dcbff6d-4012-4c4a-b203-adeaf1767854",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebe1f692-cf3e-4d6b-9105-49baff7ea0e5"
            }
          }
        ]
      },
      {
        "id": "3b4be992-ea07-4b41-98d1-702464d88d70",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c640a7ca-7a2b-4e3c-a44d-f2ef3995df02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bdbd4b2-1409-4820-be19-cf8537431ce5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "34c072bc-919d-4a78-8cff-97e9784d339d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29386345-c124-4c84-89e3-c27a91550fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62cae70-7a86-4da4-ae85-e9bd3302e46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee2b67-62e4-4897-a053-91eb96f4af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39601f2b-8061-4a54-9392-50c5d6aa6e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a114f04a-4652-40c9-93c9-865428c6837c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe1368-12bb-4826-bbb8-374c3c75b95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ff0511-4474-4a6c-9017-5166c74a72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e87b963-f13f-438d-8126-52e659d09e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de830ad8-0c54-49ea-9196-cc0bf135f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabfeae6-2576-4e01-9ea8-71f5ec3c6ef0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb56dcf-6c15-4f0e-a776-55be5f929281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc11ebb-2a59-4cb3-a848-65c63301332d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05db79-7042-4d5f-8c0b-374af4770a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad389810-4edd-40b8-9fc3-ca63d332fb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb0f69-625d-49d1-8570-c23234e072f0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050d7da5-15d3-4039-a0c4-57a607c35a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d198fa-6f61-4a22-adb0-e633d93f328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce6079-4256-4044-8fdc-cd1542f73ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae0b410-f210-4878-84e3-cb4228d591ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc7ddf-53a0-4e0a-992f-f6742fc2c509",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05132785-2802-4690-ace3-b882f5691cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ffd1b1-0fd3-41bc-ae1f-7d877d5e6c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a600e1-54e7-4a40-94e6-e449f7ec1889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efae7c46-401b-44ab-9f2c-3bd8f2e44ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f620e5-13eb-4cf1-839a-15e7a5fc9bd3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a138cc89-a42f-4a64-96d1-83c57d94249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d6388d-0a1e-4089-bfc2-7ac298060d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d115cca8-ad03-422e-94bc-fc4f945d333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f6ff702-2dae-444b-b865-b848579e09d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2097a5-f253-4204-bbb9-0d7a46dc9372",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dfb435-8b62-4c9c-a286-cdc411f3f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3c6d7b-bcd1-41f5-a08b-27d6aed1f094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69c4816-a20c-4a5b-929e-d01938e8b343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5399d1b-5c76-495f-8b67-5fcb743a060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05341b4-baaf-4e76-829a-429de66bb0ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae83d63-438f-4500-aa99-9ace6b523fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83aacae8-d220-4027-b491-b3a4feff0af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeede01-af4d-4757-9a1a-f684474c31bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3581db17-15d2-4be9-8d1a-a4311177694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5d0a4c-02c6-4297-bab6-7290c2c93097",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df44ed8-d261-4670-b647-a8e7486ae10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f8ddae-8b4a-4f7f-9e5b-6305ababba3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2460b3-cbc2-461f-a646-753762600793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f144a694-86c4-4e3c-9c26-e305e6ccbd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67bf824-c168-4186-9a16-f6b9b008a586",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94b9f15-2c5d-44bd-8d5b-8286a97c134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2ec13f-1350-46ab-8181-098768d6b267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a126c2e4-6066-4b68-96ec-ec4422920f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c658b706-75c9-49bb-8b2b-1012c8660fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434c3f3e-4fa2-4842-b7ee-05c32b3ac53c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c457a-676e-4d8a-9fd7-407742bf0d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b50a5a-a6cd-4e16-9391-9ef345096143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c07196-b8e9-4aa2-9a6a-40060ad8785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "769cab0e-bcb5-4b34-a69f-c03751fe94a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8035269-7523-4000-ba14-4c42dafe3fbe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cdb41f-2ad5-4878-b13e-7ffae5f2701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b3ec8b-8608-4a0b-a340-3350b370cb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4cc53a-56d7-42ff-a2e9-32a0779c6fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b00b950c-8d54-4853-b400-555a5e8dcd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f02e247-67a5-4fcb-9549-c5fae091df77",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0481b5-2048-4859-939e-1b7098136d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037e88f3-9400-4208-9ecb-765f5dd10b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12403d6f-b406-48a3-878b-2526340a60a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46aebd62-7c16-4fae-b9f7-559e58a8dd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9332fa-069c-4807-bbdd-7c25f93fcc58",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace8613c-7655-402a-a775-bd29a4d62c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2901f7d-e3bf-4e6b-8487-ae0dd70e8a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2f9ba-bebf-46e8-bdd8-79160f4182ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75d8de8b-af0d-4e60-ada9-0c7d699799bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d3b82c-163f-4212-82d9-a7ac19608ff0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc290066-9a7a-4c85-9327-c2d9266c2e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd82d024-a8e0-42e2-b6cd-6de18fa70175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57949f44-6515-4b72-b954-b34b0178e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eed346b-6bb2-4de5-a2fc-601887383bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eae9998-a531-4492-ad45-822d0292871c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a5c4cc-fbe2-4351-a146-00c9e32b465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e141c63d-6887-428c-8ac8-0ab634eeb5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeae44b-3c69-4b1f-a2cf-58e0a8a2e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7371bdb-aca4-4153-baeb-ee1e05f76372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97f928-f7a4-4e7a-901e-7b4e8d0f33e6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7e3fe-a2a5-4698-88b5-02c206a9d4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00bfeca-da47-4c32-9801-79f36d5f4ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca47278-5d52-4960-b960-82bd85c183ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03a07949-6f46-4dcc-8bbc-1f3a6314f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf6ad7a-3835-43f4-9734-255d6c0098fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7ee371-6814-4005-8fbf-525f6f574d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd2dca7-2e97-4a05-b4f7-84d0a7d47701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d555456-23a3-40f8-b27c-97f1bba660a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c98d72-439c-4d14-83b1-58833b80fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30d5112-c0bd-4a53-b735-1a826f3b477d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22333de2-cac8-4ca9-954f-5279a24eb95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e3f73-082f-4298-bbb9-a63d2c5fb13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243393e8-bbd1-4d28-8639-ecd6123b9f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e26eef8-2c16-4f40-aaaa-3115a27c321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee713fe-7ba7-4017-9e3e-da0bf8e191e5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64414bd-656e-4c1a-a057-a3a201767e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04be8cdb-1534-4cd8-8587-acf3ec1fadd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0469c-8258-419f-b464-a36605d14372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91693a42-ba3b-45a9-94a5-4940d9fc5652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9073cf-11e1-4a65-911a-2d58a1884d1c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6490c46-231c-4434-be57-dd05f0eb5600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ad6d97-ce0b-48dc-9419-7567e9ee8b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c3a44e-8f14-496b-a2a1-1bd9761fb1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10313246-14e5-4ac4-b044-4306a4883066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb34779-3f9e-43d5-9e6a-2e2fc40308bb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a2a76-21c9-4e04-b78c-356c82a8529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f839a36e-70f3-4393-aef9-2b9b1d0cc5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e65023e-3ec1-4bdb-afaf-db6a754e3c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1499e2-d601-4c7e-8c13-a65e0023607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3859cf98-4bf7-4c2b-b89d-d9ffe2fa7524",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3118660-ca66-4efc-87d5-873b8c05a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617205ff-b7b2-4aa8-94fd-fe48428fc686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a8f21b-44d4-488f-ab48-838ca6db4a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63fabc2a-4ca0-45b1-b399-aed9a663bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fc69dc-5862-43df-8c5b-dff86528a3ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb4d631-b4ff-447c-a97e-ea305b84fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effd431c-4d1d-4d11-92a4-ee00d8322337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2884a00a-5ecb-47e3-961d-7933ea6cea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5125ae45-263f-4036-a439-8f461a3cde20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c501ef-c5f5-4fa1-9467-58d456053cd5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0ba21-ee3b-4545-b29d-13b3bc22f465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412848cf-1f89-4f74-a5a6-d20c5ee5f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56d8e6b-8068-4556-96d3-4b3b6a008eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbf7219-0e08-4c47-8e74-b6ddb54063e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17451ab1-abbf-4186-b142-50c92f1161eb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f7446-fa1b-441a-b768-28325551e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629b188d-dbee-42cf-af2b-aecae051b12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f30c9b-ead9-4236-a933-264b1a4006ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7627c1a7-09b4-406d-9d89-4bb4e919d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759e9ef0-0de0-4bed-8bc9-ac9b639368d8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f73a32e-0ccc-42a1-b5ac-151d51eacba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f83c94b-1779-4183-9876-fb2058e2c19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be9eee6-47d8-4508-90fd-4fbcfb466d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "739ba1ba-df48-4f42-9eeb-dea996b21baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ce1e1-59bc-4fb4-8f1f-d6250b5d5e06",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d54b0-e65f-4cff-b97d-7761558be70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4ac9ab-f742-4307-9eda-161fbdbffcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5483640d-75c5-47da-b53c-19d4397aa6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e134f96-c8f1-4674-b766-06722f70c8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a60813-28e4-4ee5-9888-b77ff2e82ff7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf47557-b577-463c-81fc-60b4c96f5166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46211c4-c38a-42a5-828d-422118cc1d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b982882f-f95f-4174-a5d0-8aa31d57885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecc0cc2-181f-44c9-b64e-3ad4fce2e020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304f3a28-70b8-497c-8ec2-dcfe6c8c0741",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89037238-c1d4-48ee-8a42-05164569a428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd2656f-5aaf-4ab0-aced-104b8281eb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd101114-b949-4955-8729-fad2a4c71e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce9287c-9500-4f83-9c92-726a1928d76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcbe9b1-7f27-4169-be59-3d3cda4cd167",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb9ceca-faf2-4b4e-b5de-c4dcdaa22e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2c3780-eb94-44ea-921f-1f174a334713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829ae5b5-a10a-4ca3-a03e-c31db598ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe70db97-f147-4ea2-869c-dbdf03ed7647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53761bd6-ad59-4a76-9568-1617049696eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba6e6c-717a-46d9-b327-4f84a5ad437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1ae77d-77f5-492a-9630-22c1254530da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663e925f-fc9b-43af-bbf5-d9ba608af6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "132ec9e9-0493-4645-9ede-92374f320ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f618918-1636-42a0-9b26-222fa84569c4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdb5eb6-c111-4dfb-82e4-6df54b4bbfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f722cf8-1532-4bd5-b5ee-b0ebc2424f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3adc20-0f6a-428a-9852-0831f3f906b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "505b3b7d-5335-4c83-8067-7a58763d5c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e52721-b8c2-460e-9142-d4b887c96e1d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a23fbe-4b49-415a-a1a2-d5f41ada90c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e80d9b-c2b6-4bb9-820b-13a43c21eb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ef329-3824-4635-bd0e-bebb449f1801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f20d79-f767-49d5-9596-548f10e958bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25461325-3755-48ad-9cb3-0cbe8842800a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e955bbb-6a9b-4303-8e42-deeb99682ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6129ec90-5844-49cc-8122-ec1c14d92683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64850936-ff94-4aba-946b-2c1fa3c0568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "624368db-b83a-4389-b17d-7818d8d9e23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88400304-d139-4231-88fb-5e38da0befdf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319fc7da-9ae1-4675-bfd3-2837d53126d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3f644c1-4e97-4ea9-ac68-68f534f7a7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b246ed-9aaf-4d3a-88b3-35a22ca284b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18730d9c-19c2-4a56-a96c-5e8f39df815d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3903a0-cb20-4e0d-ba28-f90df29f36d5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f59e2-5463-4883-a826-a41934fef50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8a9365-44aa-41fa-bd04-42ff4bcda1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc740134-bf8e-4585-bb1a-36fa43c48380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "226ba77c-3571-4f32-b2eb-245a8cb2c051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c50b3a4-de04-4e9e-9c72-a031adbdd21f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc743f64-e673-4ff0-b448-8ea5ab320705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e41430d-cb41-4eeb-b256-e834d7de8fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3601f6-243e-4276-b2fc-537b152b6008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f68455-038f-4f1e-9de9-8fc3aa64558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4b59eb-f0e5-43c2-b195-c8605aa9c848",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fbceb1-b09f-439b-a47a-0b4bf3f2b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa9c5d8-d8af-4ccb-848e-be6dacf9844c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5a7105-aa30-4f08-b60c-ee0320281648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db47a49-2fc4-4cce-b4bb-39d9640d308f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81d7784-55c3-4bb2-a251-5e48cb6c6935",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94355691-dac6-4f9d-9eee-1875b9674719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cc6a43-f6ef-47a6-823d-c3d4f25028a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff831ad1-dbe3-4d89-9bba-c99cdeb02066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88b21a87-9050-49b6-b0a2-43f096ab19cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763d0c55-700d-48af-a655-45fba12f7dc1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95da0b-8a2f-4220-b14b-0e9a30cb08c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bbd53d-a10b-4a79-945f-3555bd297d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5324bca1-3cf6-49f3-b15d-5ea5adbb46e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce9725b-cc24-4349-8f6b-86007c56e080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ad031a-37bd-47fe-844c-b7e2cc40326e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e518c2f-746a-478b-a41e-f7a02e6f8ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7743b861-ce39-4fa6-a233-1cb6b3e0b5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7af010b-bca9-446d-8c39-8986345963ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "317f87d6-f335-4aae-bafb-8a56a5202bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adf4a23-4fec-4053-a578-3c122c8c281b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e8d616-7c43-4d33-830e-e726401c5fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcd7330-63c3-4833-8963-204d8a4c23da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d147c3-e40f-4361-8dba-ca55cfc8ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd28b9c-24d3-407e-b523-b7b644034e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617e0584-652d-404f-99c3-27ab74558f37",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316addc3-81bf-41b4-ad4d-76e024078efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6858a7fc-94b4-405c-9bb6-b045d4977554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196d0424-8c2d-4ed7-b9d0-a2ec93df3811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe4fc65-5b7d-4d73-ba8d-061bd24d8765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7888002d-7445-466a-8fc6-da3e682e72bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0795bf21-8076-45ad-a299-6ccc41967e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c74bf5-64b4-4a8c-8262-c1c9b9dff1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01b81f0-5251-4915-83e1-43815bba5f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69056322-dd3c-49c2-b12c-ec7b9737bbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1a4321-f6ca-4b03-9b45-96f5ae7f8235",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba1715d-7263-476b-b262-3e72112f4635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e17aa1-7e06-4d19-88a2-d1468d01cefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68f7f15-f304-4bd5-8585-a8ad854fb21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ea6110-abff-40d1-ae86-46848f04a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ae9137-2c0f-48be-9dbb-c8a43d0176c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d03b9f-6521-4b26-8899-4d0d32fc9e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6fba6a-b36e-444b-a79c-d21279c6ca91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661fe92e-ea15-4488-8455-7b9bd6a39037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f49c7ff-7b5d-4472-8c69-fddf0dd5e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2793dd9f-3cc3-47c7-b47d-37734dcabce4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cce72c8-fc32-4722-b669-30b8c396fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b6f422-af8f-4ced-a9c6-9612941af4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698fc77e-f356-427d-ab1a-02eefcfea415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df95ac92-b9fe-4bc0-9a04-a6133d017dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9019b642-4559-47b9-a5b0-79292b8409ad",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb9e224-a306-48e5-aa23-eac9e2bfc87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be9407b-d1f6-48dc-90b4-a3727eb31147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10c71b8-340f-4a59-a7c1-34f5ef8f3955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb17aa55-7c8d-4efc-ac6e-397fd5541ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d723f59e-7d48-4661-b042-f399cf8b3b48",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1279f470-1851-4394-889b-d606211929cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec74934d-418b-4842-9910-7341f751c590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bccdd5-3120-40d2-9c59-aee7a3677e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb20938-eac9-4042-8c56-ed94f97dcf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8007ae-3508-4630-b05c-fb27e5e37722",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a256c7-9e31-4783-8b62-c75249b3bde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c387f5-b8fa-44fd-bdba-59e1165ca61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa1644-78dc-4bc9-a346-6ab6e6d3096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c6f4a3-69eb-4e9f-80a3-f4f7a133d03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08118a3-1482-4f37-9194-7d89fca43d11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424db5a3-384d-48a4-a1da-2b3a4f70efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a7294-81bf-45d4-bd8c-6e69ece3e330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91edeed9-1568-4d2f-993d-94531bc283fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9eee5c9-0848-493d-ba8d-8fd451716dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60439ccd-0ad2-4913-a896-7446c8ff6233",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf72382-5068-4ef3-9802-8e48a4c8b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff22433c-8f14-4624-b1af-934e00d3270c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c62a42-fa3d-406f-a339-eb999c44e2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b2a839-8fec-48f0-8266-dee45e82d076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe658dd-f179-467f-a2ca-c6e3afd9d428",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baa13aa-7e75-472e-8550-9bf9f25c57b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b599bb-e616-4eec-a3f6-521f7f47e5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb883ddd-4357-4cf2-959d-cb07e2a3a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "069cfa40-4891-47ba-a31e-28bb19cec6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ac8ce4-27ec-45dc-b313-59a66412498c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fe8e67-ab83-4fae-80c3-1c78c4d6c83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be9b6ae-5918-48bc-8eb9-c6d0b4021484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84772a8-6026-406c-9c37-ef26706b4449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1c7520-5059-48f8-8e6f-f8efaecddf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e68274-834a-4a58-9a13-2c1890302a1d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d82dc0-6d1b-40eb-a524-e3eec8b29265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3384785-5590-402a-8f77-108ccb859367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd41273-2143-46a0-9d36-a2a469aa6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f49c70b9-69b2-43a7-9fa4-d5068da66a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514178bf-6d77-41d5-9405-444d790f6e0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c715649-899a-4884-9405-8a5dc680a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200c75b8-5576-44af-af4d-7e7a3c704f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61315b1d-5354-4313-938d-94b823143bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28bf9ad-d358-4959-86db-710cd5448cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26d2543-ba62-4d90-b909-aca83716fc04",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a08895-5c38-4787-b086-f59d258dedfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5db0bf7-46aa-4efa-a04f-e98944b5da9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ab46b3-a094-481b-a4f2-71c0a64dfbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dd47ab-00f5-490a-9ef1-f3c15237045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db25eff-6bf0-4c4f-a293-f6d951172e3b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419858bb-9356-4bbe-94a6-d82cb3d1a8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ff78d3-384d-4307-b3b7-b4a190925dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d27b97-8260-44e8-8a13-551564d18dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0625a3d-8532-44d8-a49a-e943f3276710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e44a4-067a-4310-a82c-74fd620d6dfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b7f712-3a12-4ada-8b7f-db036ac62d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448b2285-c4aa-4f14-9ef6-680c80475626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff96186-1316-41a5-b4ad-0b8da5c61e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e2a9df-7add-4e8e-b18d-a5f033ba48d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95c9e99-a05f-4a70-b5ea-685c8d1213ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f263c94-f3ed-4dd1-9d57-13ceb60a4243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cc0354-b8fd-468e-8f46-93ff7681b3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e30b1fe-a2af-494f-bea6-36aabb7ad7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c02dc185-21fc-4a1a-8067-8e543b93fcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b90b8c-46e5-45eb-b86e-97368039e17a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a0bfd8-0391-451e-b1d2-64c3da84871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cbe3d3-f620-4817-974b-8d82eb92d900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af966320-9384-4492-a767-1c55db5f9ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "915315dc-264a-484f-96d4-2c00e684c9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78672f9-ee6a-409a-b0a3-9ce526f6e966",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60da63d-74d5-45b1-8cda-bc406c82cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0e54ff-04c7-4bf0-9d13-d5fdf44e1a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f63c6ca-b0f0-47d0-8a32-ccd58b8e3b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b13c34-7373-4aed-b40f-8cac724e97e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0846edbc-6ada-457a-85d6-315d9fe20ece",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f72417-f2b9-4d71-815c-e8ea62df199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7470741c-c081-4a25-9222-0e8e1c4ed0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76f94ef-4046-42cd-a7c8-bf10db5f1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4cd8b8-45fe-4b2a-b2d3-b5bd43ce9e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca1b5a0-de7c-4880-8ad6-5b917679fae2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e64d9f-6740-4089-b7b0-f9d957d02a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd12f373-68dd-4c51-83e7-09640bbb6032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d696e5-0bf9-4cb5-82ca-a60361421d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf94dfc7-4851-4924-9168-daebb3c20a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4987b-5fb2-4c9d-90d5-78c451b6224f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ea891-cd86-495d-93b9-66492ef06cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fbf2c7-0f18-462a-9503-6be72002429d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1f737-91fc-4d4e-aceb-60bd42427e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39edbf41-b196-42fb-bb1a-9d6943587c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb983d6a-bd64-4b6d-a109-8330e420d2f6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c94e83-975b-4633-b6a0-b31bd46211c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc110ec-4e71-497b-a197-258e3cc92d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9187624f-6138-4f10-89f1-e8bffc08092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3747084f-72be-4a82-91c6-a8409fe1f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11516bb0-c989-45be-b259-54919c17f116",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca65c44b-0852-41a4-b3de-19428f72ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9a6218-1dd0-4d3b-b432-67441c89f7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e732fe2-f0d1-49f4-b0db-1e80f7a2cdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd2ae7b-9f1e-43b9-bbc8-7dc0fd8a7fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb1385a-142a-4f7d-9a7e-27fc0ccd69c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c467343-ea28-45a1-99af-a14c88df2f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7254c772-7338-4856-b9e8-ca01136a0347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a463f84-c62f-49c3-89c2-0f5078e7434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6705d493-4107-4e28-939a-c0bfb7421087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25766653-eec1-478d-b7b6-628758e69b3e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41203482-8d3c-4860-abeb-42d3a4dd17c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98cac9f-d6e4-4a13-8136-6a3f7f72e69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e70db2-7c41-41e3-a23e-a97d795395df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6838e220-8161-48f9-b5d2-158af225ab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00792f30-4d36-444e-af4b-38c413bc9fbc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f84ccd-e836-4b1e-a5ff-9e040c3d66e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718d15fd-465c-4309-b578-8ba15576e08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5968213a-478c-49ff-a1b8-a24744b807fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2331973b-aca2-4f62-a650-ef5101ab85b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff61305-d29f-4239-af58-8512d2e6faed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd0602-4742-4d08-93c3-ba3a0ed44e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7cfc56-964b-4359-9cfa-5ceb88517e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe9e151-725f-4794-a519-72dd911eda72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92332f27-8de8-4432-a70e-7fd1b7902c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe0b730-ef2f-45a0-92ed-d90db0ec72c9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0956c5-6a23-4a39-b1d0-8ed27418f482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2490c91-314e-4a81-bc99-1414f1edd0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a24a0-ed5d-426e-a900-2ee175ef47d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd92df0-c245-4994-8c15-6990e29115bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5c98d1-9756-4214-85af-9b12016a2610",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c602088f-83f5-4f67-a540-d35edd9344e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b8722f-ed41-4054-949e-f31d666409ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7897b821-b691-4b21-8104-03be23ce349d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48206408-1b8f-41ff-91f7-78e8728b591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6610b1d-fe0a-407a-93ad-bfe5f55d8b80",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6a41b3-75b4-4fef-9fce-3b401a61eb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e88663-3a5f-4b65-8172-e8df65f2e190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f6cb6f-d115-4226-a7e7-e555cfb5524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7110e435-4076-4182-a707-bdfde449ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429882dd-c61b-4307-a30a-3074a8f7bd18",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2667378-f777-4122-885f-f3e8360b5b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e55bef1-d6f2-4570-bede-475da15cba0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90042a38-a8e6-4d7a-af2c-0b225493a9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e971ae-3b42-4501-acc7-e0695d4eb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51255ac-fdf4-4504-b79f-416cd6dbb567",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c169e4-aec5-4951-9b77-7c5f759e9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34c8e70-9767-4808-b71e-f5427766158d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e9efb-b951-4130-852d-db3ad9c867e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8940c7bd-49a4-4b2b-9527-9b4c1206f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e752b-f327-4b7e-9742-1a8764f5e79e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b672895-2b60-48bb-82e8-897d15d4d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e16db-eea5-4903-9d57-246bd4f757d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a4a6f6-d631-4eff-ac19-e4c6c48c9a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5afbd1a1-d941-4447-b54e-9928e7432aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2458b275-2b28-4977-8010-b6ab0ca1425d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f28256-33ec-4693-bb77-b62da4341e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c803cf42-dcdb-4540-b586-93ba0b411dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acf3fe4-4bd5-4552-bb60-58cb7123e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d708c5df-3910-4e2c-a129-3e4a6c31400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e90490-619a-4914-a3a9-272980d8232e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cc03a2-157d-4e35-b9b7-549b8822a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f774f799-3dc9-43db-900d-1db41dcc33c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0998202f-e233-459f-bfc9-3ffdd527916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4eec7e9b-e763-4535-be54-de1bfa3c810f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93359f18-2872-430b-a4ab-cc58741e6e1b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5880ddee-fd6c-48e2-ae4c-06770cdc084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fecf65-2619-4668-b3ef-02b61d4d8351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e166f820-c256-4e0f-a5a4-86f195b5fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f6efff-16ad-45f4-adee-3a563603eb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55bb3e4-3548-4148-83f6-83ecea36bc02",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684ea8ad-4c10-4997-96ad-85a5d862a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3927d4a-4650-40de-a9d4-463630660169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f279effc-c10d-4ab8-b636-b71034f6805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b10d82a-b475-482e-a5b3-f7f24cd5b138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3311eca-a021-4ef9-90fc-ae37a7bb9a14",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358fae97-a029-4930-802e-2bfb35ccd3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95aaa19f-b9ba-40ed-805c-93e42632d1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23e03f-1dd7-4a77-a14a-ce679a4af88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d12b242-1733-472a-9e43-4510eb1a8f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de272799-bb7e-42f0-b49d-37dcb592f390",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785125f4-03d8-499e-8ec6-cf3d6c943ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b548b133-f55d-4f9e-a2ba-618532150eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2ff70-bc14-432e-8a2e-25c51e54d9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60288aae-28db-401b-96c2-caa0bc30bd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d694201f-bd85-4773-bbf1-b58237d6caf0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c966528a-a55f-4c87-970f-66251bd2dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6747769e-d1a5-43ea-af74-9bd535f3bd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb280f0-557f-484a-a156-be59fb1a56fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57175edb-1984-4f38-a8a2-e29f83efbcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbaca10-1afa-4b21-9f8b-68eb261a874a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677500fa-9e82-4936-aca8-9dfa86ce0cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c0854d-4152-47d1-89b1-08d8b64a6fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e381b-b533-4fe1-ada2-9b5345785698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8ce6ca-8b77-4721-b72e-0552686af395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf2203-712c-46a5-a651-67d509a4c547",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef20d68d-db2d-4524-b408-b3cc09e67bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec1b70b-4486-4a16-a1bd-14fa2fda57b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78627d27-68ca-45a5-9f24-b82e0185a5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7153c2-a694-4a43-aa9d-41c7943d142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6828816c-8957-4af4-908d-9fd2f0639f3b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3071fbf2-b2ce-409a-aadd-86f77f2a55db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43daa62d-f60a-4787-b240-22798866aafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f5e52d-49cb-479f-812c-e2c87e476069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6293aa1d-b51f-4a8c-b5af-865c81f657bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361ebb2-04ca-4828-8cac-13d0394cb44e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4979cd-a32e-475c-88b2-5ffb729cb6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cdf83e-4ad5-48f6-b811-f8f503fd17b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada7488a-abaa-4636-9f21-a6c02265bad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fff8f443-706f-4398-a597-71354be2f05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117ef2c7-baff-4f67-8f8a-efb4362543b0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc7e20-2300-49dd-a264-1dbd74b386ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16757bc9-905f-4292-a144-b0a4d43c9ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd7a87b-05ce-498a-86b2-c0c5b9f1a3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "333432e2-2636-4852-93c3-8e79a5402863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c58f10a-d86e-4c2b-adc7-0f75505a740b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5057f55-cb57-45df-abc3-a2b810c41f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f963b05-afa2-4865-b220-b0d9fdfd2a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2ad13-d477-4d85-9fff-14f23365e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0b2c14-d5a5-49e2-a834-0b940b3f3d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d0cf24-1a17-4535-bbd7-48a5ba16e5c3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1809e2-63ba-474b-8794-c0b251a35f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cff69562-aaff-4890-93e5-7ac1089ff101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77620148-8d69-4023-8c41-dab9174f753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "242ef344-909f-41b2-932b-c761e34e8715"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c80a6d2-48f3-403e-becb-e26fc0e836b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c562c09d-6a19-41db-bdbc-8fb8e3597070",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e708e88e-0455-44a6-b0e6-dbde6143a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4837ba3-5615-469b-b7b1-d11386fed1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acb6244-efdc-4bd4-87ab-cf082ef03692",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad88c6c-b53f-47c1-ac0d-96fc2d22fb8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8e07ac9-c5a3-48f9-b5bb-5ea6366bdd40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4872edfb-7445-41dc-8e2c-62f28261040c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d2ca5e-487e-43d7-bfd7-acb05f741766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "869189c5-938b-40e7-b040-da5bbfb00fb2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaa9b6f0-3078-41bd-b51f-512aa7f05835",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f176d77-4e51-49c7-a995-e9b748070494"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03471365-cea4-4603-bf75-a0963ff9df31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "319da250-50fa-4fe8-82f9-ec5857740f0b"
                }
              }
            ]
          },
          {
            "id": "f29c125a-36a4-4057-b380-fa926e361ca1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba5deb52-12f2-49a7-bddc-f404f6a96b9b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "44e681f1-c5f1-4cc9-ae4a-f5fbcdf29e4d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fb0844-b7cb-4016-9f72-f45360cf6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6180a6d5-98c2-422e-9ad9-7ef9b0777fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e406e7b-0990-49f3-9901-1648c2b659c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6b7922-a5e0-46eb-adf9-807eb496ae2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70b4bb2a-6d72-4afa-b239-1ade345c66c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90abdd5e-711a-44a8-9fc2-8c2263df99e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91627e55-9235-4be1-b4c0-8dc178faf18a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69331a47-7ce2-47a6-af2a-4e5f694e9ff1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfd31daa-0bf4-4c83-9fe8-d9d216b925f3"
                    }
                  }
                ]
              },
              {
                "id": "c292c3e8-bf77-4146-bbf4-53ceab57cf20",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e1f4055-cfd6-4175-902b-7a147cb47d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e90b1b3-14ad-445b-bdb3-aa0438f78617"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4282514d-c8e4-4e54-ae9b-822a12ed3c57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f69bcf4b-0aec-4496-b962-0b8d647da955"
                    }
                  }
                ]
              },
              {
                "id": "229df24f-5f41-40a8-98c0-fe675c95703a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b4dbb3-1ff1-4690-93ef-4b0c6d38edf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38e7c585-507c-441f-9458-fb75e0131d23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0d9cca-8d6a-44c9-b73b-ca8925622d1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5062efa0-b13f-45b0-a8b9-327316d676dc"
                    }
                  }
                ]
              },
              {
                "id": "8095bc55-b0ec-4fd0-9810-07f2dc77eb64",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "383b4bfa-d1f6-4cc3-aeb6-40f63864cf6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97dcf1da-3a67-4154-8782-d33ef24d3445"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2319a0c-f102-46b6-8a46-b6d604b40842",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "345bebe0-3879-46d0-b3ae-a5d9a4a59d19"
                    }
                  }
                ]
              },
              {
                "id": "f02bb6ef-ee6a-4690-92c7-34606010be32",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8819cc53-1ef8-42e3-8324-135e83628616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "272ccb49-d49a-44e2-bb9d-cef8c68384f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bf24e06-7ff9-48fe-9c03-4182aee771cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d0925580-927a-47e9-8712-849d241424a4"
                    }
                  }
                ]
              },
              {
                "id": "9bb0a321-53fc-4a7d-83ae-8f781617c732",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f67fd2f6-5c84-423b-891c-3dfbabc669de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b4760b0-5373-44b1-a847-e85c9b3ca9cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "506eb612-a278-4090-8d67-8af4930210bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca124b34-d83e-4675-a101-f02d2da34877"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fe3493d-4565-467d-b2ba-3f8122b9ee7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edd1f0b4-2a9d-4763-96f3-36bac7376c38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5dd0e793-dcce-4ae3-a9bf-b5b42ec2cbcf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e3cde10-ff9a-4618-a5cf-756c5f7533d2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "884b8ba5-0836-4a98-a540-661bbafec510",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9fc62bf-9944-4338-b7a4-7bcd98313789"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55acfe65-3738-48c6-b120-5517aa3cfedb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87821a36-9488-45bd-b465-72f9bbed1c25"
            }
          }
        ]
      },
      {
        "id": "b3f371c6-9d99-4ac6-a6b5-61fa842a53f7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fe57b517-f56c-472f-b74a-4570d272084a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ccabc6a-2d7b-4d96-ad8f-98d3be05d428",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "338924fc-2db8-40b6-82aa-12ed3be3623d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc2898c-7578-40e1-95fe-2b623e07be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5253f9d5-c878-4963-b609-cd33b9be90d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ee6568-da22-4cf6-9cd2-d1a6da61e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d874def-fe68-4da8-9d9f-a8e05976ba21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d6eb7d-dd43-4140-9a4b-b5ea587018a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64999a72-5fc0-4f5a-81cb-33c9146f5a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a69000d-1517-466d-9e87-5ba894db9349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c1c443-016a-4bdf-abf3-264d1820570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96533180-afc2-4b05-a44b-8da51f6a5d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc565d8-a259-40ef-ad7c-9926e6d454ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d698fb0-932e-4ce5-af64-533b26901cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7038b6-4b9a-4502-adff-8c286c0b26d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75335bc-1cc9-43a6-992d-f7d1fc0e6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efe6d01-391b-4856-8ffc-0f0b6375147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7efe4d5-584b-4730-b40c-0fbaaa0d93fb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e7f13c-1594-4322-9678-cd7be98b6417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fbc5e4-e9e6-4b3f-a564-6e8c1212c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1217ec3c-1ad3-4cb8-85ab-5ded38b47d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb595138-494b-4a13-a0d7-217a2bdd089d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c98957e-7e2a-4420-bf75-86037811a8af",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547dd756-3f83-4777-9def-07c81f4a90b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a13f805-3510-46be-806e-ad869367e0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbcf294-19da-41b3-83af-8c11eca4e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ea2617-e92e-4917-baef-a7d6e6a90d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595eb4bf-9429-46b7-95db-7d067a0a9ff1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc796c23-c2a4-43ae-95c3-e0f90690a16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11969648-9bf0-4761-86da-1c236f7d9e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad01b020-37a4-445c-a564-566b812f52be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e355909-2225-4aa2-b735-fb55216e8a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691ef14d-4e41-437c-8e2a-754c362eec74",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd33550e-9c97-4ad6-835a-5708ec33f518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206ccb47-9a8d-499f-b50b-679ebb2d9a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b742bb9-7c70-467f-b9ec-bc313e38fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "babf32ad-fcbc-491e-9926-fb95cddb44a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49013bf5-ba76-4525-9e59-340fed096d25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e266c837-d929-4a8d-8b49-5327b575a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cfd24c-0c0e-4642-82c8-e2894f1bb80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d1a015-3fee-4090-ab8b-018d1ad4072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e07387-35a4-480a-9023-34c4d547b603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499b7fce-53c7-4e06-be98-659b1d11b091",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8fd605-8bca-4a82-8d23-6715af13472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67be6135-d1f4-4076-9127-511efb922c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285ee909-3589-4aac-8b33-d17e8cbcdb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "513b7fbb-62d0-4541-9b0b-d42253f937b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec365ed-3a74-4048-8067-8577c69ba337",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddc6175-8fc3-4ffe-9327-5528d06d268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e9e185-9b6f-4fb3-8f01-531f58a96356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2beed42-0d72-45fe-8e3f-404fa8f7fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1016a7-c897-4f89-9404-b0ce76624a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3566470a-e232-4c31-b28f-bf5a337c6435",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf09ff88-9da5-4dfb-9e90-bf9ee40951e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f4f6c4-53dc-4ea8-a083-aa16b8f7daf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f43d133-f44a-4749-aa55-2e8e5a7a3e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "56e6dee5-75fc-49a4-9ffe-84d6df76dd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cfd8c9-a7df-43f9-951c-8e5b7e05db34",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647dd15-d2ae-46fa-bd87-19fcf79c280f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18abcf15-cd60-4ee7-bc7b-101de678eff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c87b2c-080f-4b24-be8a-6b9b1b369f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52048233-28c7-4f4d-ad37-23a903fbb190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f85c02e-9a36-4b15-a4a4-ecd3fa776de4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508858c3-f6a8-45dc-acea-34a886571444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a3ffae-682e-4629-ad70-2d05774d9c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699f20e-a5ca-4ff1-b23f-bda171b10151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb5577b-adbf-4ab2-b681-ca915303e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b271a26d-20ed-443b-a300-2b3a12eaa298",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d406ece9-dbbc-4313-af7b-5386aea67aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee62aab9-e31a-4326-8bff-874348a5782b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796b911c-381f-4cb7-a578-4b84b2c9b43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5260f2b-951a-412c-8828-670acce6219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af3bbc3-1b51-441b-b0ea-baf86b645bd6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871638f7-94b8-4800-96c2-516eed13bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9ca0f0-a536-4f3b-8dde-1e05b0c06805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7599c629-e98e-4ddb-8b5c-e03599b5cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cae7da-d529-4a33-970e-46ab537741f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7fd1b6-89e6-4678-85a1-a6cb3c4a210f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0d9a6-b47b-4ebe-8cd4-6a446f93b454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db101312-0074-4c96-8b81-2c4eff5589b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb8bc16-82e9-4134-95e4-ccbdad978959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bb29d8-5618-40fa-916e-9f2c9199d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538a4e1b-dff5-438b-9947-fc93520c43b9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab10829-b12f-4010-bc82-fc73469217dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fce5f3-c477-4ddd-add1-7d3a4df14218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813afd73-0dce-481c-bd3f-a73e07da1dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96a21ad-e57b-4016-a8a3-3b485f6d9fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f2371f-da19-4080-a5ac-aaca98772951",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b46169-b7af-4c88-a258-3d44c0fe641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d545323-c378-4e19-bf17-3ff71b579f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a9fb03-d1a7-4c80-8a96-128362f81454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa239df-7e67-40f1-b7fc-eac694a2e354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2ad706-7293-4f32-8e1d-9c1df7538f66",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f951be27-f715-4cdd-895c-be30f8f98311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58be198a-8eae-41e8-9431-949bddde0679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6521392-06fb-4716-9f79-85dd46ec985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c3ad8d-888b-4620-bce4-194bf9ea3f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1817c0-26dd-428a-ab91-e2df6bce10ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d34e4f1-79e5-4184-90cf-b132db40244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e5e680-1398-472e-b3ac-d28f6fb20103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741dd932-8840-47d5-84cf-7e7d63c88174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce6165b-2880-4263-aab9-ac78f9b68028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8134a53d-ba79-4e9b-9ffd-e9ae88e9e338",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4bb64b-5040-4728-9590-2839c7bb1259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b34e2f-f308-4894-8921-a1f08f6cd948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e104ef-cd21-47ba-a590-ae7e0820422d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07773b87-2eda-4849-8b21-9ec8e06fa2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19361d6e-04d8-4611-aa8d-47bdd508da5e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a475cd19-2d24-4233-9662-4965d3459d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391a072c-6fce-434d-b35a-b9ff5a96dca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d711ef-4680-443d-851e-de1ea9a73b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e68690d-e43a-4609-919b-435241d42e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afaca40-f96a-4426-a256-a17b6f2b86be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d7ebf7-039a-4bd7-bfec-17f3e76c5b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38aca98a-7401-4ac7-86f6-63d2331ee49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd2a5a-ac7f-4a4a-8b91-969005c42961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dddc455-b4e0-4c2e-900d-76d04228149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e59419-5c39-4ac4-acf6-52f9a6c22102",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b766a372-c44d-4e65-865f-afa0b57eb7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d3ad76-baf8-4d1b-a95f-4f9c30a8fd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73756c09-aff2-4afe-8775-097ffad74a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c6aa46-2814-4963-834d-e583d16895db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8ea757-d62f-46e0-afe0-d0deefa9f7f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ba89b-4541-43f6-b9f9-b33e1e5ddbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe03849-7794-4d27-a87a-f0ee975de197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4865ffe6-cda7-498a-8bf7-7a16fea80ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfc10a4-437d-4f3f-8913-9a4943f540f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e787e40c-e756-45ac-8f84-b6f32cb34b6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d28c6c-1668-4089-8cd6-7d45b37f02c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c554142d-83d0-4b0e-ab91-5965f2ee946f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1945ea0f-63ab-4a98-8c3a-c57999b84c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5eeea4c-6cf3-4c24-8a11-61064e62c0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8465c6-7f28-404d-8539-eb9914ddf488",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc92dc6-57dc-408d-aa68-f801027eae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bed2e8d-dd55-4f74-a921-299f52f6d425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e0fb7a-527a-49f0-90a7-6515f55d6b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080733da-e4c2-4c93-9d19-cb0a8d8d9c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034cd18b-dc99-4b87-a257-baa21e60bc78",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d5c561-7014-4c5a-97ec-94cc163eb593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12012607-7818-4e31-9c14-d88055b9f6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7f68b7-4528-474f-b39c-3941151275c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2636ec07-f8c8-4bca-8708-d364fe283e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0646f39-c245-409c-8393-33b1f3949c55",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9c5292-bcfe-4cae-bd71-a4df1e5f6384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4cc53d-9e56-4245-bf40-2892212e2d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a8de23-8b0b-442c-9427-f19f52a045d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c2a1e1-44d4-4c31-bb28-a2d2fee850e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc859588-8b00-4c44-a944-8847e8cebfde",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17db69eb-da4a-412c-8db8-6f8f88553da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc16a4a1-18e1-4af9-b107-ede61672381d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa7ac2a-bfdf-4fb3-88c1-cefe5ab80044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8271cc4a-d6d0-4ab8-9f0f-6bc73a9b95c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c918739-5fb3-45bf-aea4-8e57bac86bb8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec69c30-7b1a-477e-ac62-7265e5ab43c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4629065-da40-4898-b24a-f5a8b4c7b826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8805eee-9ab5-43ed-b884-373af260a40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f1de3e-ceeb-41fe-adeb-c580b063799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e94ee1-6d53-4cc3-aa6e-091a0c5d8d99",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14322fc3-5e0d-43cf-a54a-a661fa96762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04203c4-176d-4389-8dbb-718af95b9012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b93f7c-3c5b-4767-afa2-e00b8e746355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "086b366e-afd8-4a7f-b972-effffe2e7454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24a2b5d-ed5f-42bc-b38d-ff20464aad63",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9361404b-9b5e-42a0-92e1-79d0f42b89da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289ddeaa-f81d-44ed-9910-ebba87922c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d20738d-9acf-421e-991c-bf642b865f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3fcc89-d34f-4af7-a76f-b90164f401cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02df9160-1e6a-4eb7-9bca-2e6d93dfd572",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a41c35c-1085-467b-bedc-df497631714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c557a8-7b87-4c57-9b07-949ece76e760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee22b89-883c-4556-9832-2c46a6f75e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6186d024-e7e8-4929-bc3b-4eae2eede082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2bb04-6e86-41c5-b7af-7ddc0a77d9dd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae0febe-cbe3-46b1-8d43-1763dd2a2532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285dd882-8601-45fa-9339-bc321611bd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fa64ea-f8d3-4365-a36e-9c732ac2f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6f175a-af6e-4de1-887f-c0299279b41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4fb3d1-f5b3-448d-ad5b-8b21af6f9897",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88646f-2741-49a8-82ee-a58c6a416ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be24e83-ee7d-4e53-ba09-b645b85784a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67a7f4-dbe4-4353-ac45-240aa7f5784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6673a053-d95b-4857-b0dd-d5312a043f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61536829-af36-42a4-bc17-ae37ef0d744a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9051379f-f452-4ad0-be13-62711f715402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff421ac-5859-4709-a734-3f59d10c8d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8375485-f508-4aa4-93d7-3efa37d525b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df7e3f3-f334-4bbf-b7b5-7792d8ccfd43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23aa3bbd-ef0c-4afe-9cad-f757eba62d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7305601c-0690-40d2-9d48-83beba5044b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a7984e-f172-408e-9051-237f2408e137",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f94f5d-9781-4f02-9575-08a9d051ef90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c807f-a742-439a-b55a-527a2b49c824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "564f1aad-252f-4937-9a40-7987a4671f57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d9ecfd-b8ce-4c7d-8f5e-39c0272a972e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3edab8ef-5e65-469a-a21c-c9f4f3193a4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e7abf63-18e0-49f5-8c65-81b2f7ea12e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d81022-ee49-48ea-964f-d6493bda2c38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44b0a102-009d-4581-a64b-7bedfcc53672",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3459283-90ed-4e23-8827-1448b20007f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb7e29e7-55ca-4956-ab59-6014542cb17c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "173606b0-b379-4196-9ba8-8d6bb470d7d7"
            }
          }
        ]
      },
      {
        "id": "52cc8d20-795b-439b-ab5c-2aab14deedcf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "819fa622-adfe-4b6a-ad3f-ae0cf206cf1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab854e5a-6b5e-4f5d-aa2e-d3749c8b0c01",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5fde0778-c10a-462d-9e09-62584ed2749c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5070bdd-32ce-4c1a-999b-df7b2dccf6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3d2337-4859-435c-9bf9-7d8bd4d17931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952fbe84-5e1d-4c51-9b97-98c139dff92b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58713a3-152a-41dc-8437-896963da6637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf4fd87-48d9-4784-8814-35a9c1e70971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c851d65-3825-4c2d-aff0-e97c845243da",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca9bf3-eb78-4fbe-bd81-0022e0c33b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0709ad4-8703-42e8-89a3-89472cf951d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf589f-625c-4a0e-aaa0-f4e11b92164b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fee6cc-41d3-4a4e-95a9-2e861bac8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c63d284-f6e8-4c4d-bde7-0d150d08bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0681d32-81a7-44bb-b282-95551f3eccc9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32380fba-9011-4248-8b2f-5d6fd031b9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f849b68b-2930-488b-9378-e1908f465d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57684492-98ba-440d-8689-a552e363dab5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83ada1-aefe-4393-8471-7663ae70d58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f054fa2-fd18-42f1-a658-9c6bdcaae17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bcb969-8900-4364-aa50-7d7ba6d7be39",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb467b0-a013-432f-8a41-9e3d9b8029f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152fcff6-c51a-40d9-9958-97a7df548e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb3190f-6f7c-4161-8dc2-e88e5c88953f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58291c9-b72a-4503-b75d-55b6f7ff95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007bc074-83ab-4fbb-a358-2168fdd737f9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9b8def-555a-4657-b510-6d5330b32166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bd6cd7-3286-4c87-b410-9c86d2dc4579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a1be39-8a0a-4c4a-848d-3d1268ae4b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419789ea-b851-4984-80af-83aff59aa8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85d2d66-1e17-4bf1-99f0-48367ef948ee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2afe4c-a641-4009-ae47-fa80ff1f19b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e65f75-6dce-483e-ac89-af71ad3fc097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab62b0f-555c-4f2a-af32-fc21ea20b189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54230d85-3383-450a-97b6-9d5c04c0a05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b8ff0f-4286-4344-9641-aa1308fe9d34",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b8ca83-68ea-4b1b-b77b-930264c8407f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b835ca6-90b1-40a7-ac98-a355e8a27885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23514fa4-bbe1-423a-bd8f-119457802da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be924065-8440-4ab4-bbb3-c1c247db65d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec31f43f-75da-41c2-bdee-652eec6f1caf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5fb561-cf73-4502-9f44-2a827bcecac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de4f551-c610-48e8-9adf-e84930ffa41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f30bc2d-fa88-4755-8cf4-1974f9077e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6628b7-9466-4aca-9885-19708cf468a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07e5767-9803-457b-b941-cb98a724a1e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2a5f1-5931-42b1-99e7-bb8d29ab858c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc92fa2-87af-4e03-aa40-a6f1138c1944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c860045b-e34f-43d2-bce9-edf44e1fce5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828ae86f-6293-4bf2-a37c-a6ec917b8cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff5114f-2453-4146-8408-118ab161d472",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c45023-ac68-4a7d-926c-e565558916d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb3506e-e227-45e6-bfb5-b50f520adc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bda981-c94e-41c9-85a1-2fed757ed082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a0c828-75ea-452d-895b-8534ec5be97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1adee0a-5d78-484a-aeed-7ded095b5831",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cf24f7-101c-4271-bb9c-55f46e8f2968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24d77a1-7a81-46ff-aa1f-2927820cffaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ea85f2-c8c2-4740-a81f-cf9d3ca42dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbc68eb-4e4d-4c27-89c2-14fcd6e54a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2548cb58-d322-4537-948d-e66a12d6ff72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1420e18-e973-4bf9-a216-7a6eac0079ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e43e44a-65a5-4851-8239-7d78b35032f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805dbd5d-2ad8-49f4-a45b-145e0cc71a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e843b0-e1d7-4d57-8a8f-ee38cd246dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71184903-dc29-42a6-9e7c-7b18b4732ac5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3578f6-58b5-495c-9aee-4497c9b15836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f09e7e-f1db-4238-a1b1-48767d01def5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e869247-aa05-4b6e-b609-fe4a6322dff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1661b70-5b4e-45e0-a22b-a1f568ab8784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b273ba-7a62-4785-9331-20c2966be5a2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d158edc5-16a8-4032-a7c7-38f57c4dabea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d07d44d-a8ae-4f81-88fc-54125a580cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc7d5ad-3ca1-40b8-8ac6-2a9fb05a2595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6b6524-9596-43a2-814a-74633f02596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eed67c-f1dc-43d5-8146-2912a99d22eb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dbf7db-298b-4c34-9f9b-c735df9be143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b01c75b-8d62-4663-91c9-28a962d5d81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f6589e-6b9f-4ddc-b7f2-e6bcd9dd4690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6331e0f-fae3-4121-a49e-028a475d99ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a7867-6d29-4ba8-a766-778023e9b16a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cab79bf-3104-4f46-b34d-834b94c97794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a652ac99-cc33-4670-ae3c-3a2b9c984005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43949cc-fa22-436e-81ac-d31a72b487d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7607dc8-42c0-41bf-b182-226fe18f575a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c13afb4-30a4-42c0-b93d-7198ee2c8463",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42c7416-6003-40c7-985c-8792f619435a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf496346-19be-47f1-9379-c370572390a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa912288-ab66-49d8-99a1-890958f5e25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d2b01a-dfce-4b0f-8ea1-d17256d8ea82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1436121-f291-41e2-9382-497d7762c3b3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66bba48-cc72-4ebd-82bd-901e6485bd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a96849-3aca-4947-8b49-84329fdf74cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3d6c9f-055d-4ab2-8c57-9594e8da6e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38189da-3a43-453a-aa77-9356b1c9105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7084bfda-6266-4bfc-83d3-a920122fa7f4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099c41d8-3a5c-48ab-93d1-49bc43d00424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebcffe8-330a-43db-b15e-991b54769791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db772e00-b4ec-4bef-8c82-80e31f2341ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0134f40c-8a8c-4fa7-b027-6fd31d2093de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99843ba2-71d1-4d41-a229-4c3940012fef",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67dbef6-fe2b-492d-97d2-de6128d01f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd4d792-9ec5-4a9f-bcd5-a1eda32ffaa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3044a0-5f7f-47d8-84d2-971dcefffb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51c9b4a-4067-4285-9e02-35d9d5133dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4ff552-0807-4e67-a9a1-d2e743af9349",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740fd70b-973c-40b9-9302-dc66e029b017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36717e69-4f12-4e80-9683-c21e282bbee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f56a38-3b48-4fc3-b093-6058effc5e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a3966c-ed37-4f46-9a29-69d2128847fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ebcbb0-6e49-4f80-aed8-4d116be9a9a6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1e043-c34a-42f4-9088-044b26e39dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74091804-6f02-4451-a6c2-83063b89b85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b4c46-fdb1-435b-903e-45262d06ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335ae271-b9fb-4e65-929c-79a107ff7de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6084b286-b8c7-4407-b7cb-ac3550f38433",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc16355-1ed1-4902-aa1a-8b4d96cfb30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802d3be7-e311-44a5-913e-d1fd7cb98fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a6ba9-b7ae-42dc-acba-fd0819f89f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528728ec-c3d1-43a6-851a-5a1d9ebc06ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10cac2b-5b61-48b2-be85-1b7ac9c22be9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc969687-a39a-4963-805e-2b5023909b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117aa851-3be2-4d45-984c-acf305f037da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfac169-bc3c-43fb-9ad6-b937f468ec47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78215388-a78e-453d-9d3e-a6e90eb6c766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb57d07-d348-4eda-a3d8-5af8894da2c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4996fd44-2a19-4a03-87ef-f4cb81a444a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8aeb2f-267d-4415-a732-329577c9a6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9a2439-9c2f-4371-b81d-1c86e1a1348b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6a60a7-a7b2-4323-b970-608da88b71e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f93ae-a6f0-4ac3-9f02-e140cd834e5f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246d2fc4-fd68-4554-89ab-a86ce56b09fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debdc620-7bf7-4b29-8277-8925a7ec91b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492c98d5-de45-46a2-92aa-c2b0912a1aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f2283f-407f-4c82-9064-6113c6ba7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74711b-b21f-4895-852e-1b8f833bcf0e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e1848-8755-41f2-87fc-769e78d4225c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9b9d69-123c-4a33-8f7c-ab4c57327537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179eee46-ef10-4e75-9f87-af6a7ad5870f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ddb2df-caaa-474c-a849-7bd184da9aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a772b48-6e87-47ed-bd79-a0f1f61624e3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee6ed08-0fbc-45bc-a1f1-df505df20a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5335632-2e7a-432e-b3f4-a8510fdd8f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c04caf-4b38-44ae-ad6e-1be94c61e03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d78ae8-1d4a-4849-aa67-8db7ce24b9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd9285e-0c02-4f6d-993a-f33e9445733c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6a6e2e-8f3a-4184-b942-803dadb5d9d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc7aaa2-126c-43ff-8d9d-1744a65150e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffe78d2-85fb-4b83-ad56-cceddf44ea60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93b2501-fdc3-4638-8dce-f29352a9f22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351076fe-7528-4186-ba6c-0b6908109e10",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3390114-4c7b-4934-ac01-ac72ec510db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ff9d1e-076b-439d-930c-59818576965c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12803668-375e-49e4-b1a1-bfb4d6fba59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0f3a7c-51a6-4dbc-a2a0-db13be53d98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c82bf8a-8833-4e09-88c5-b11235320663",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d88cf91-edb2-47d4-b84b-6e7e3804f58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43095fc3-7604-43e6-a65b-12539a9126c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd0c39b-68fb-4c05-acee-ba1872487fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b06a1f0-dbc7-43fd-835e-80ff41c3e050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc7095a-c111-4a2a-b9ba-e68da035a4a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd136b9-d75e-4629-b323-aaf86f900af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfed9ac-c15f-40b7-9366-fd1186039773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ef8980-28a4-4ca0-b418-c97e81733cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59d8ba2-bc5d-4021-9835-2da0eb9c05a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a8e425-ee82-4105-b6cb-6bcc59d93fb0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ea531-48b5-4803-b720-4fedfac1c646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d32142-daaf-4006-8006-3ee91e894a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2173ba-1226-47df-ae55-2ef1be26bb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2ee7c1-974c-46af-8770-1622d7f8d35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1a8be2-9b6f-4db5-a56a-4104ac69a94d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f2eed1-d34e-4dac-9bcd-d21eaaf195ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1dec4e-c6f5-41fa-b67f-9e93f3567bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4f5e9d-e6ac-4e63-8285-dcd0d16eaf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e4b3ac-5524-4ae4-b979-6ae92876c52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa68b063-253c-4e0e-93cc-27056720d03c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe3ed8b-56d7-488d-bc0c-40ad7c00c168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4646f6b0-cd88-4acd-9e4b-05c8845b3c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7837ae49-5e6c-4f44-b649-39ea2195be42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6084e341-154a-4268-ab53-ef93f8afdd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c68987-2256-4dd6-919b-37efe1101449",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdd4be6-72e4-412f-a0ed-fad9d6067ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0180665-beca-49c7-92fe-1b8e9bad8bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38320c05-1eb3-4992-9d52-c5fe3e08dbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8939bc-5c65-43dd-aab3-9b2923378aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e20b13-6a09-4f10-ab72-cde939ed5884",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de5caf7-920f-418f-a694-b71a899c1d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd33a44-0ac9-4528-a5f5-425b38679f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0e3c7a-1a5a-4a4b-b253-0589b9247935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea736e1d-ca13-48e7-ac17-a34332e0ce34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505bc5b9-addd-4b6d-ae83-38060f9206a7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de12ad-5d82-4478-888a-5d0be592deda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10718f22-14dc-4407-b562-e5b455e5d6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5458e23-0e57-4fe0-b00b-fde8a7765b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0a959f-a1bf-4823-80d3-d8ccf0702a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2028bb88-e5dd-4c1a-8ace-15a24caa8ff9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d27485-4630-4415-9e1c-6ebf6906d592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6127adb9-6014-4213-a52a-8c75cf3b2763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7297f58-38ef-4e22-8863-560a5cd8e05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a270765a-1ac2-4d59-affe-327fad65dad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b0a7eb-0d84-4def-b853-10666bb5e22e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1aab72-e478-4a6e-a744-700aca8f5ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6895d88d-bbed-4478-bff2-241494b9d454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad417570-9d59-4654-ad77-b2dd749bc83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163c27c8-f460-49dc-9851-94599e24f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51368352-9867-4270-bf6f-07cb2fa6283d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6bb83f-77a6-4eb3-bc77-c68610971a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdccb312-411a-4431-87d9-4f34782ffd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafba2a8-9d59-48b0-a9cf-a6cf24e1b7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bf5069-8013-45fe-93c8-52d3c69c49b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06ffcde-626b-45fb-9326-80e0eb0ba71d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88bdda7-18e6-4767-982b-fc12133990a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3883fd0d-33c2-4f62-bdec-c342fe62302e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0389a6c7-ef41-449b-9170-512942613c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb37eabe-4ca6-4c77-8345-d43c9f768bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6ce595-458e-4998-a923-3861b5ee099c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91329dc2-cbd8-42df-a1bc-ca9b6e073736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7682f19d-1055-42e6-a1d0-e20a6fb24f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2fc405-5df9-4444-ae73-734f01120e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58573a1-cc72-4d3e-a3fe-e5e19d92cb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae829ed-d7a9-4252-9150-021f03a8b17c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d252e655-a0fc-43e3-a6e6-cf5f9aced387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bf4da2-045e-42d6-8635-54bb4f8a3020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57244cca-5075-4de7-98c2-0826792f2b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e12194-9b6c-474a-ab49-6ebe94f175fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f4912-3764-4724-879d-a4ba505041c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4266bf99-bc0c-4af7-b59a-233691ba4870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c00274c-3774-44a9-9e22-520a0c3e6da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d42f2-3285-4512-8f9d-3e6a8b45725f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d89a0d-12f1-4114-a67f-dd967dcacdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d97170-0866-4e19-815a-9b3de1cc1c09",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616cb01a-bb1d-4314-b0b5-9981d53850a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941da878-72c5-49a0-97b9-6b863453271b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0409bf4a-a40e-4707-b205-66a6dc67779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baba2c18-300b-43ab-8ac5-8ad1173d618a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68262cb4-21cb-43f1-9ceb-76003b29a5f6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05291ec-edd4-4bdf-a0c6-7ee667abae00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356b2d7e-2a98-40b0-a190-693108a7a43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0c5d9e-8489-4173-9fd3-a6e83f4f54c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02735708-f9db-4b79-9b68-81d7dac6cd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8851bb8b-2f40-495c-9ebe-18d4b547e486",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd0002f-e190-4b78-8828-107a2956d535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcbfd52-7361-421b-ab12-5f710ea592fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bfa6df-727a-424f-9abd-6f50d7ae8290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457a9b0c-8b67-4b60-8ab1-f18d20057357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec20b5f9-9c1d-49be-b4fa-d37d3ee2458e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057c1fad-1099-4114-b0dd-efe760d6e91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5428e2b-43cd-462a-be44-367989c8b176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d12a2c5-2d06-49ee-9b9f-cae692f46dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea265d-67ec-4f30-a81a-9a0ee94a2e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a97cf-9981-4808-9956-16407c11dde9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34590d3-b333-4fe4-a599-17693d0a1d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43586430-2068-43a5-9efd-136fddb1b330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0aa701-0af0-40a3-b078-78d241f68bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784ce582-0467-4c8e-85f9-c4566c9eb285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c396d51-0f70-4305-98d5-ebefe8c1cb9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017e6c71-f2be-419b-9b63-3536976629ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5467fc23-dc25-485b-bf7a-a99eceb03975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cbc2c8-ebc3-4d49-aed6-c2565168c509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46557dc-77f3-422e-be0d-fde59ef69d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ade116-115a-40f0-b501-5ab30ebc1ec3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a59a21-5552-445e-8ea3-43d240025bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cfad9f-6409-4d32-bf70-18e4dd234b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ffec06-123d-4028-82fb-7c9381f39373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba6a7e0-dbc7-4829-b969-94b1d7d3ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fc5590-57bb-4329-a687-fa6547fc98c3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7619d532-58a1-47ed-bc3e-6878b2b8c4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dbe6f5-f02c-4b7d-b47f-b78db729cd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cde7faa-8b74-40f5-a697-8d08d6fc1a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2c56d6-f44a-47d9-8e60-09253221b940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22d4490-c3db-43ce-bac2-09fffadedeb9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5859a75-92b5-408f-a964-63a2ae1cbb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78280706-393d-4001-91c7-e27f79f7ada3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de490f1-29d9-481e-9987-20dd8fc60b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e682942d-130c-418d-986f-f468cee450b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a849479-3967-4258-a1f8-e683855f9153",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e52591-ca67-43c6-9bd4-1e6d4e22a4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ff6773-215e-46fb-b9bd-32313ff86284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee724e-84f0-4fdc-9feb-4cef52d97dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f910b19-658e-434d-a5ef-65f5625a3187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855325b-4a71-49cc-8d65-d2b99d8c6709",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8f7bac-4e64-4b3c-ba5a-c3e40ba689d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b16595-05cd-4681-8cc0-34b6538d6707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67b9365-47b8-46ba-94ce-cbe505c4b7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c5839d-b3a8-428a-bfc7-c94345c9d4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887a21b9-4ab8-4aa2-aa93-7de54aadcd9a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cad0ba-91cc-456c-b280-b04698d5c98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbc5838-a1d2-41b8-b2b6-04d774f610d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ab999d-fdc8-40f8-afae-a1e6f8b9eaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3d6d46-ee86-4f34-bc46-d99f4b7a5880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc07086-5880-473e-a5d4-49de88d6e926",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ec3761-f362-4282-9458-5466b74d3c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b327b72-41d1-45a3-a549-1be2a28f5875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e58cf1e-c367-4c32-9ab1-fe6a71e106f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4decdf94-5032-422d-8ce8-db62c2dc871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044a973b-42da-464f-ab71-6132f05d29e2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e72e9f-0bce-4893-bb87-66f25f901ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f47e6e-7408-4c43-bcbb-cc1db1519433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40870c17-9fb7-42c7-8e5b-594fd0c07568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b31a87e-871c-4b7c-aee2-6177e73b30b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad021ec5-9b49-4749-940c-00c9de9f36f4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c52fc9-560f-44f2-9d8d-6a13ebd33b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a02cda-1622-4ec3-997a-b2810bfc8e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef59edc0-9b95-40d3-9a79-3e94a67001e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc9ff18-3db6-4d87-85ed-c1b81dddac1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b2c562-d061-47a1-88c0-bc07311d03f4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02ecd21-e32c-40e9-876c-7d828c0a1fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3c0273-9333-43fe-9a96-64c6b680b020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07055c79-9e08-4918-a0ce-10c74f373af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbd437b-e2f2-41e1-ab9d-55d33800b1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e635efd7-942c-4edd-baef-04cf590bc614",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c384dda-b658-4372-9367-8b5ff3aeaa83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eda45b5-5685-4631-8aeb-96f9c50cab41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ceb00-0e4f-47a7-b17a-c1f5f99a2824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025e79b5-6b6b-4f90-96d3-038156874ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf9d1ef-ca97-4fce-b6e2-50e6a1785ecb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a837a5-c013-4648-b045-6fe0823d2ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8507fe92-2f6d-491e-a474-48f50869959d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14b262c-0f38-4992-b920-d603a9a55fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6eb36b1-8cae-4d75-bcf3-11f64eeb3c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e773b05c-8b7d-4692-92be-078177c53c48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36492e25-bee4-42f4-9829-350696028e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6153f063-eb0a-47e1-938e-016a00d37a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a45631-4cce-4ea9-a136-c730e532eb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b545f12-6cfb-4d0d-8d68-6cb7d977bb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b9c3b4-fd14-4bb6-9030-6ca95894266c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0aa6e63-f3d2-4636-a95d-9d39b1280021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329e91f6-41c9-4d15-bd51-a7e2e10bc416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c123434-dc46-4fae-af80-448f0a89e72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cc181e-a26d-4e13-ac0b-d84d31bdf576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2605630b-1a8b-4764-b407-433d98d2327d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d7394-6efd-47d6-83d9-fc6bf92670b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b4c49d-948f-49ab-ae1c-ff3d2478df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd03e6-91d0-4695-8668-9c208a0326f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564e25c0-7189-4d1f-853d-080014f4e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10238559-b99d-44df-9d1f-a3f156d5b212",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b11792-19f8-4d51-8238-35b10e953bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b373f46b-a9a8-4efd-83a7-9163c5072276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fef035-13d5-4493-854b-5d6d9ccbd343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740889b5-3097-4233-8e1a-e465594034a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806646a0-2c52-43bf-ab03-79628b39886c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806a20f0-c95a-49d9-9de0-e5e90e492080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fcad8e-b724-479e-8956-02c1466a587e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8ad576-7506-4cbd-8e67-c042059637aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa06dffc-1c91-4015-9612-0ed5849c5bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0154e3-b3f6-4db0-a999-d27be6ee1479",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e4986-c9e4-4b77-b042-4337493bb1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a61b332-198e-42f7-a823-4297641b6e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5c5d7-c77b-4661-bb43-46cedae6ae1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5ebc44-ff86-41bf-9578-76135fc05849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0652cc16-75bc-4fd6-8302-2717447b5608",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de16010-31c0-45e5-be44-94766de3cfed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e26c6b22-51ed-48cf-9f24-20bdb975b092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2376df8c-44f1-4876-b778-cc8f4e145c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb469b60-bfa3-4b06-ac28-bfa991987956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5273de97-c01d-4018-b843-5feb3ed39a42",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea52a217-cd8b-4603-9935-f3d1427c4331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c1fab7-d904-432d-a1b5-3298cbe166a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e66860-92dc-4dfb-9126-3a7720f6839d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60328478-d86a-4059-83fd-82dfa87ffd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd5f7ea-51d0-4882-92b9-498eb6cc151b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7c0216-1595-43fe-8d97-5bc3f21dec71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f89418-33a1-49ec-be19-9cea5b60a934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0198a5-60a6-47fe-af33-905807566ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fa8008-b9da-4e45-9e15-676883fbf49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d681084a-f9d4-4784-944e-5e4aaff37195",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be7a699-ae19-4004-ba88-0c533675b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61df9fda-15b9-49f5-b393-347a55d53751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9714596-8a17-4e60-80f4-60d5e3039ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543bd27c-1821-4fc8-91f6-c2f0eeb04fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b63328-7166-46a5-8b66-bfaad1603624",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790349ad-e295-431e-9ba4-7c40ef703935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c809d0f-aba5-4ec8-977f-e00b794c1fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acc3025-2f2f-4baa-aaa4-cd4fba8d8b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1d9115-69fd-4409-974a-7e7cc396da3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee3472b-ded1-46bd-82c9-c6d9b152943d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ff4001-a1f5-4493-94d6-41bc9a5b3720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bcea000-9981-4323-ae07-b8c4fd7f0c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831f02d9-a933-4f71-b4a1-018c5d1e0f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e29d75a-dd93-46ae-a8da-73566429205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128294a2-7612-450a-bb65-93a5a1374372",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75e1ca-0de9-4cd3-9d9f-803f87a8bfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c7533e-23ce-4790-bc5e-1b183a0e46b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295b438-1955-456d-974e-d05c7c129526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf17ad9-2c75-4436-9c3b-faf0b733ef50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c7e87d-8c7e-4eb1-890a-b0d91a0d3dc0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f54dd79-e6ba-472d-bf60-efffb20f4958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62a6dc1-bc3d-417f-8b6e-5ec76ffecc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de993ffa-e922-466d-9e40-68a27618c1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6e8969-a75a-448d-9636-64d20819535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6295873e-c6e0-4553-9496-c6942a9793f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df08156-cc77-442f-9be4-e490f980e22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de42079d-f947-4a4f-b2fb-6bff31ed4638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a8ce69-abf3-4d2b-88dd-a317da79493a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ee3b45-fcc8-491b-8f2f-90530d51f45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae44a42-c088-4a5c-9260-080f78e3e697",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33472f3-32f2-4a32-9ffb-15ce4259db5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7961211-3127-47a4-9524-0fe62ab46f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe7ba3f-3031-462f-b7e8-eeeefd21a06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dc96ea-ed99-49b0-93a3-3ccb615c6ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6625b8-5615-4478-9baf-14c92853886d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d305e779-d2b5-48bc-9808-03685ba776e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4c38fd-3d44-4210-96dc-8d3ce5e3c8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92b261f-00ba-4ff4-8dc9-09f4850cefb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6409f7-64f7-4415-a7b7-8e97543c4ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66b452f-1f8c-4c34-9e6e-6483ad4cd58a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72ee226-1b06-4154-bf6b-272e9f3dc110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7edaef-7806-4770-8879-0d0362536a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92241824-6f5f-408e-9727-4b31868c4ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921544e1-9d11-40a2-852c-4ce985c0e347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74310904-f59e-48c3-9943-cf140e6b5765",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470f6da6-a3fa-45ef-a4d2-b85d2ceed3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8d7eac-225f-4849-838a-f295be62f147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6d9afe-cee3-42e0-8caa-cd6c286b38fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d70585c-a101-4b2f-80d6-6c3d77470f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82211e1a-eae3-45c3-967b-2bbf5bb47e93",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41b6a8-c54c-4be3-8f52-6a36bf866f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6102b560-bafa-4204-8e70-49f6bef8cabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284e1ea-35a7-4b63-adf4-2e2dcee62afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82870415-9ab2-438c-b31d-7dac937a8a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad68f81-5702-4ce6-93ca-1854d2117c76",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b272f817-0739-46d5-8e54-cc3f9613ac56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040b42f1-1803-49f0-bbc4-d56079048e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1068e35-321e-4eae-9c2d-df09ceee00db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357a0efa-fffd-4a9d-8ebf-f3930b479dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1942392-726f-4a09-a787-d9e0be09b018",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b262c-6d9a-4b68-9ced-9c7186872051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50907e69-8374-4669-85f0-9f76d818f32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf1b960-9492-4606-a561-7638c3bd1eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d97e1c-281c-4a5a-a204-71a800f7e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128e7c33-9104-4b14-8eba-e711a5f7d71e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ef3f6e-c9ee-416a-8ca9-7db4deca2a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9396176b-a4d8-4735-986b-fd0b7b6c13da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeddc052-f042-4d47-892c-00feba01102a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e35264-8dd3-4589-8a1e-7ab75243511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32cb6a0-99aa-44fa-9fa3-6ba637c23e76",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07483c7-a0bd-4351-b295-a711a1f6dd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23eec20-c6a6-43b6-b053-95aeb2a32e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e267e3c-ebee-40e5-b941-a35e74bdfaf1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f9ba40-0696-4ddc-872e-50b9f816841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3938904a-9cab-47a4-9901-6324126439e2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2443625f-c83a-4471-a44d-38cadfe66193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44da0077-cdd3-458f-8813-9d3d96d9fc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86746631-75ad-4b0d-8b5a-3612196dcc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493f9c86-857e-4c8d-bd93-9975087a679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059428c-7f36-4c4b-bfaf-7096a257bf79",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f24b8cd-4f30-49b2-8f59-33384b6d4cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a0f613-2561-49b2-966a-3a528a5f895e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ec33ce-d20e-4997-a368-19a178bde240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e24a10-d811-4762-9cee-f9bbcde2e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bfdb73-b14f-4acd-9b03-7fe20a8a3286",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032ec34e-ca7a-4f61-ae5a-44dca6d74fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52cfa07-3835-4a84-80d2-df767e73b31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35064cb0-671b-4b30-a8a6-b3903801f86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879fc04b-0f06-4458-ace7-b6e67319b955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81281816-a8c3-4e25-9660-287767477bba",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea257873-ea5e-44be-bd59-4f22a21d6eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8074677-744b-4a16-a79d-c56a3ade0609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bd9200-e173-48b7-9161-41bf22a973e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75083091-ce97-4f70-a66c-6add2e4b7aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3eccda-574d-4d51-bc0f-d3be8f69cfbb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679999da-f50c-4c6e-9975-b9636b1757e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1613376b-c046-46b7-9faa-f8d5169fdb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b31104-0afc-4095-8eb5-558f794dfcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfbfc46-2fcc-4a5b-bfa3-23c20126ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02a26a9-0dc2-47ad-b8cf-7dcdc2fca438",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4ce8ca-eebe-4d81-ab51-97795cb6d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c15e5d4-29db-4a53-9779-098606f4d69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2bb47e-0ee7-4a59-84f7-32672deb499c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775466f2-a8fc-4d45-8286-0ae5424a74b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fac016b-7393-4245-8316-517438dd36bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d5296c-d07b-4e17-94e1-aed0e726a24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a461ac7-5543-4e35-91db-610808f5be6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac39594-f924-4d6d-a9a5-49b2da7a419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674651c1-4102-4fde-aecd-cd8f2de786de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044a743d-a266-4bc5-90d5-bd2dff6a7f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a7720af-8ecc-449b-9139-6db3be7f7488"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbe6ab81-b77b-4f83-81fd-ef23271d8088",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "394e2b6a-e7d0-4425-b626-9fec26fb9fd0"
                    }
                  }
                ]
              },
              {
                "id": "be6705ce-5439-4592-aa29-8fc5abd379f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "479f3919-3a28-4de5-9e71-c906fab56612",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d900da4d-4a42-4489-a321-f12dcd07201f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "233296d9-6906-433e-805a-fc4f359d9d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909b13f-236f-4fd2-bdf7-42b53ac08369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3297e087-e8f1-49dd-a27f-06e683965288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04295d73-08d3-400b-a5ee-390d33d528ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be4e35cb-8a46-4b0a-ad7c-5218acf5e50c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d80c5a5-f620-4e14-bbf6-99efe5c1f382",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "449b901a-d356-47c3-b875-c535342ee0d7"
                    }
                  }
                ]
              },
              {
                "id": "5639d7a8-6eaf-4e90-a5c5-a226ca3e485b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a0b8e8cb-acc9-48c0-802c-a26caa9fd34f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4471da-b191-4805-8d4d-1c33a8b16120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a65998e8-7f33-4f2e-bd60-d6ea926f49de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf594a37-a260-49b3-a313-fb4e1624e82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1803682-d739-4bc0-bfd4-886b2d645ed9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "650a6537-5c43-4008-86b7-c448371da10a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58e73c35-b37a-42ce-abdb-801785dcda2f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94fe2616-554a-454c-bb50-f9a16975039d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "283fbaf9-f851-44bc-b5af-ba3dc0f7620b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11c1493c-6082-4aa7-81ae-3887d8749f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f41d4c0-b21d-45e5-916f-93768aa9a76b"
                    }
                  }
                ]
              },
              {
                "id": "3eea62e0-bfe1-4fd4-84b0-26be18cae47f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf9ebbfd-ef62-4ea8-8fd6-3b70d24ea9bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e808546-753a-4a10-80cc-59ff224bfee3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e8468be-c79b-40e0-937e-f34ae7a31d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "379b46c6-65e0-4a8c-b78a-72ff6f01fd93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46d2d655-313f-4c26-b284-41acbdf1483e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cb1d71bb-115e-41e7-8967-2c02ff20747f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e11ebc15-1981-4eab-8c8c-1b1dec0569dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53119cb0-42c7-447a-a632-1025fd3293bb"
            }
          }
        ]
      },
      {
        "id": "85e0fd34-154f-48a6-a897-5a42df5139f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ca749bf7-630f-47a3-a389-5dbbf17dbf83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33b9de86-d000-49d7-9b0a-2b240714d9fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e18ecd8b-15d9-42b5-9f93-04afc7db4510",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512d54bc-1cd1-4c22-95e1-f4de8360824c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db90a47e-c63a-45e7-a202-fd72b4ec0dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8209811-2d98-41fa-b1a5-3ab616607f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4239042b-1532-4dd2-a0ae-d2694c065704"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "757b2bf0-25ca-4127-bdd9-9c813899764a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3aca264-5ac0-45a4-a4a1-18ed6f9e3a6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa691e4d-2221-4e6a-b41f-7ed97929db55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2135ca6b-25bc-443a-8801-b8d638ee65cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "967e1827-6333-4345-beb2-7f991a81776d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c53d3e23-43fe-4c2d-8a63-351390a87d6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db040afc-02af-41fe-a3e2-6dcce20f758c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "759a1cc5-b278-4943-9554-7e8079c0b3a5"
            }
          }
        ]
      },
      {
        "id": "2034ae5c-4802-4ce9-8e3f-7682c5c3165e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8c6ba6a-04ed-4c67-b8b5-46c31947e708",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbead52a-a0f8-4dea-ae2c-a9067691e3b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64781200-7e4d-4ead-9b84-e90db0784bf1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b1dde-732c-4daf-8c81-7f6911575305",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0df2ebfe-1d9e-4b4b-ad04-76c87c37bef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895aa6ff-89cf-4aba-98ab-7a5300bb9926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83ffc4fe-832e-418b-ba17-14d1c45d5203"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b708e68-7de7-4be6-b4d5-52d68102bf75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34ce4f4f-4616-42b7-a03d-977ec93385ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c37e46-092b-440e-a36a-224087be4baf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a66ce2f-99be-4973-99fe-bda759919d98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2267f7d-5040-4557-bba5-39fd0a4b8ac8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03421cfc-2378-455a-9a31-357181647c2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c547db22-648d-4d5a-bf65-39626dbcfaba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c8bf01e-8285-4c99-8331-21e2080654e1"
            }
          }
        ]
      },
      {
        "id": "6736e223-a9fc-4de0-8cd6-81658b0a9ede",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1aa1a752-9185-4605-a64a-2bf7bc612180",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ae31f97-84d5-412a-91dc-7e2ea6677054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "549651ed-f0c5-4b10-91a3-27fccb12d1ac",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0739f430-cfaf-4b33-9c1d-1941407be5db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6bbee16-7643-4fb8-b306-db24e6506064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd944a0-e647-4817-9aa9-7afa809656ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18b15276-3b4a-439a-90a7-76b3660e2cb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94d993d5-d325-4eb7-9cd3-ad0eac380183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef58c09-94b8-4f9d-aad3-7f103215313b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9c554c6-c375-41a0-8261-aa4ddd7d169a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75fc5afb-cbdb-4882-bc51-1d89084f1d52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a104e61-dc9e-44a1-a082-dc18d0148aee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f700adf7-f22b-45e9-97d8-4bac4c474726"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "916b7842-7a90-4337-ba32-3ae728b52304",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24cf5047-cdf5-45a4-b5d0-2fec98487595"
            }
          }
        ]
      },
      {
        "id": "0c19110a-f036-4a0d-ae4e-5333784c9fcd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c009a0a0-5c93-4e2a-900e-356e19ffced4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd407eee-a833-4261-9975-def9e28dcaab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d8ecf444-af22-42a3-beba-f7221d50fc82",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8d7e443-9087-4b0c-9179-e47354e64124",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa4b9af2-3b22-47b4-b8fe-3b9cb1a1adb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 25.853174603174605,
      "responseMin": 7,
      "responseMax": 292,
      "responseSd": 21.351142813575702,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721781648052,
      "completed": 1721781663204
    },
    "executions": [
      {
        "id": "28c90e0e-a7a1-4dcf-aa3c-5a1039b3f770",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fdab0f74-058a-43b2-abdf-4a88bcb2e8c0",
          "httpRequestId": "bcbefad7-cb96-403f-8ae7-a2b59cd03b89"
        },
        "item": {
          "id": "28c90e0e-a7a1-4dcf-aa3c-5a1039b3f770",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "df9af38b-7d0d-44e7-8be5-874d613bed10",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "54593915-54d2-4279-9a57-952f8d8da1a3",
        "cursor": {
          "ref": "f2f4f0fa-1926-4dd3-b459-45dd2ba0a1c1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d4c4cac-1bbd-48e6-ac30-9249fc301bdb"
        },
        "item": {
          "id": "54593915-54d2-4279-9a57-952f8d8da1a3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e26543a5-f43a-4fe3-a4da-c3ccfe8abd67",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "5bbf9e05-ca04-42d1-a49c-cc0bb4c1c18e",
        "cursor": {
          "ref": "0ec40d1c-fdf5-4363-a618-be7d358296b5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5dcc6aa9-4830-42ee-be92-f2ed67daefff"
        },
        "item": {
          "id": "5bbf9e05-ca04-42d1-a49c-cc0bb4c1c18e",
          "name": "did_json"
        },
        "response": {
          "id": "8d5324da-00b5-40ff-9820-0eef5df8c24f",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa6526-902c-4ab3-a599-a58e67a82295",
        "cursor": {
          "ref": "cfd4ad02-e008-4ba6-bcf2-2cc0d22d5301",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6237a5a8-6310-4f33-957c-570544c8d220"
        },
        "item": {
          "id": "37aa6526-902c-4ab3-a599-a58e67a82295",
          "name": "did:invalid"
        },
        "response": {
          "id": "3475fed7-cb8d-46c6-ade6-eeffde0c2daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa6526-902c-4ab3-a599-a58e67a82295",
        "cursor": {
          "ref": "cfd4ad02-e008-4ba6-bcf2-2cc0d22d5301",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6237a5a8-6310-4f33-957c-570544c8d220"
        },
        "item": {
          "id": "37aa6526-902c-4ab3-a599-a58e67a82295",
          "name": "did:invalid"
        },
        "response": {
          "id": "3475fed7-cb8d-46c6-ade6-eeffde0c2daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5924c6e-9a22-46fc-a651-fc0bcd8cd9d0",
        "cursor": {
          "ref": "74f3ddbc-9515-4f82-994d-3271c86d77e2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c59e4ae7-5a5a-4300-8819-eb38077b7a25"
        },
        "item": {
          "id": "e5924c6e-9a22-46fc-a651-fc0bcd8cd9d0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "553ce5b2-93fb-4313-be72-46d6e56864c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd12b9c-92d5-4860-b28e-162fb85aba08",
        "cursor": {
          "ref": "f3d79c94-9e86-46ef-8cd0-64da75b5c497",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8762ca7b-8c37-4250-85c1-fef2f7c60313"
        },
        "item": {
          "id": "acd12b9c-92d5-4860-b28e-162fb85aba08",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ce83e54-5ac2-4189-91f4-10d35c9da022",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa86e843-9d9f-4532-8071-6410fa9030d3",
        "cursor": {
          "ref": "a00c6a0e-286b-4863-94d2-ef60776d5b1c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5a2973dc-436e-400f-8da7-23c4f24911a5"
        },
        "item": {
          "id": "aa86e843-9d9f-4532-8071-6410fa9030d3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "57ec3395-8e3f-475f-9829-7ddda67d19ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb919b5-3a30-4a50-b717-9dfca9cb0e46",
        "cursor": {
          "ref": "1d8e4985-4ecd-4c1c-9937-783b08d9e3c2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9d6785b-c4ce-461d-a05d-9d1dd8edf03d"
        },
        "item": {
          "id": "adb919b5-3a30-4a50-b717-9dfca9cb0e46",
          "name": "identifiers"
        },
        "response": {
          "id": "24d0d292-f6a2-427a-8b64-34e8d302625e",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c072bc-919d-4a78-8cff-97e9784d339d",
        "cursor": {
          "ref": "4a46e8da-177a-4de4-9c16-2c7f21ac2267",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7db50f50-ecd3-4ad7-8f80-8a44e47c0f82"
        },
        "item": {
          "id": "34c072bc-919d-4a78-8cff-97e9784d339d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d65e35ba-d194-4b99-aa25-92785d31ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a114f04a-4652-40c9-93c9-865428c6837c",
        "cursor": {
          "ref": "bfd907a0-496c-42d5-8da4-73caf21d74a4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aad8c444-d72c-480c-be92-6c1d91a91847"
        },
        "item": {
          "id": "a114f04a-4652-40c9-93c9-865428c6837c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c17bcec0-8775-4499-b279-1d2be5a5c379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabfeae6-2576-4e01-9ea8-71f5ec3c6ef0",
        "cursor": {
          "ref": "404cce75-2131-415e-919b-d153197cacc4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "392df92c-1cad-4629-a47c-33220abc9757"
        },
        "item": {
          "id": "aabfeae6-2576-4e01-9ea8-71f5ec3c6ef0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2ba6aaca-9428-4976-82dc-22f3637ff1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb0f69-625d-49d1-8570-c23234e072f0",
        "cursor": {
          "ref": "9c4c68d1-34e1-45e2-8bf8-f83e349f7569",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "793eaff2-055e-4143-b2ce-d1f4f649f90b"
        },
        "item": {
          "id": "2dbb0f69-625d-49d1-8570-c23234e072f0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aa4c9e6e-5cb8-4e5b-b273-dba9474e9c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc7ddf-53a0-4e0a-992f-f6742fc2c509",
        "cursor": {
          "ref": "6ccf2d43-45b2-42e5-bce3-012549617b98",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9af9c21-8052-4999-b5f1-654e115ada72"
        },
        "item": {
          "id": "58cc7ddf-53a0-4e0a-992f-f6742fc2c509",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c9464846-3094-4e3a-9fb8-ffb932bf79d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f620e5-13eb-4cf1-839a-15e7a5fc9bd3",
        "cursor": {
          "ref": "a24c7d21-66f5-46e4-9288-3031e86ce35d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "596755b2-75bd-46e4-9a2c-2a4c95f7eab2"
        },
        "item": {
          "id": "a1f620e5-13eb-4cf1-839a-15e7a5fc9bd3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d626e61b-53e5-44c0-a262-5065dc3b67e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2097a5-f253-4204-bbb9-0d7a46dc9372",
        "cursor": {
          "ref": "73194a5c-21f1-4817-85e9-edb4f5254205",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ac96171a-6bd4-4915-b017-6003f66d5372"
        },
        "item": {
          "id": "0c2097a5-f253-4204-bbb9-0d7a46dc9372",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a9041f71-e8b4-41eb-8184-baa4125cff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05341b4-baaf-4e76-829a-429de66bb0ef",
        "cursor": {
          "ref": "9348dddf-3c0b-4533-9f49-8cf5cc6de9e0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d6152e3-3fe2-436d-8abd-504180cf085c"
        },
        "item": {
          "id": "a05341b4-baaf-4e76-829a-429de66bb0ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "db6cd2f6-a417-4bdc-b5c5-8a7cb8284933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5d0a4c-02c6-4297-bab6-7290c2c93097",
        "cursor": {
          "ref": "119e716f-636c-4e4c-9735-457be6d6cd80",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea165474-252f-434e-85f5-ebf312629b10"
        },
        "item": {
          "id": "fb5d0a4c-02c6-4297-bab6-7290c2c93097",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "20335667-8639-4180-a39e-f83fd5b6de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67bf824-c168-4186-9a16-f6b9b008a586",
        "cursor": {
          "ref": "7ecd97c0-c068-4a38-96da-3ac5c0b05a5e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e998845-a772-46e6-8398-88a6df0ccf2e"
        },
        "item": {
          "id": "e67bf824-c168-4186-9a16-f6b9b008a586",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0344375d-496e-4613-83b4-48f591ac71c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c3f3e-4fa2-4842-b7ee-05c32b3ac53c",
        "cursor": {
          "ref": "cb7c5373-9aae-4a40-866f-0059334aca4d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7967215-0b80-4e12-91b3-4d0ebbbc04d7"
        },
        "item": {
          "id": "434c3f3e-4fa2-4842-b7ee-05c32b3ac53c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c58e621a-e073-486f-a95a-579f54a382e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8035269-7523-4000-ba14-4c42dafe3fbe",
        "cursor": {
          "ref": "9b442999-3c8a-41e8-b2f6-b0580d819e6d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "73184295-d191-476a-a2a3-e05a9077f293"
        },
        "item": {
          "id": "e8035269-7523-4000-ba14-4c42dafe3fbe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cd339a0e-a19e-468e-a633-cc6ab5f14a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f02e247-67a5-4fcb-9549-c5fae091df77",
        "cursor": {
          "ref": "c2b08dc9-d9a5-48d3-b64e-4f5075c6a449",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "334321d9-7109-4fa3-8c82-4b6ab7e2f909"
        },
        "item": {
          "id": "2f02e247-67a5-4fcb-9549-c5fae091df77",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd427ec5-5a6a-4291-85fa-d99043ae8316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9332fa-069c-4807-bbdd-7c25f93fcc58",
        "cursor": {
          "ref": "8ef72026-2279-4c47-9b88-d5fe25119143",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cea7bc97-deb8-4ced-a214-e8d9c8e6552b"
        },
        "item": {
          "id": "9a9332fa-069c-4807-bbdd-7c25f93fcc58",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a31e802a-e139-4d5f-87cd-8c2cf27810e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3b82c-163f-4212-82d9-a7ac19608ff0",
        "cursor": {
          "ref": "48be7363-5d84-4390-bfe0-1c450b6094ec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9e6242b5-1a54-455a-8f99-9392d0f47d6b"
        },
        "item": {
          "id": "12d3b82c-163f-4212-82d9-a7ac19608ff0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c603366-f0b5-4c34-99bc-c764795a7f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eae9998-a531-4492-ad45-822d0292871c",
        "cursor": {
          "ref": "97723153-e5d6-494d-b985-3fcd050f848a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c045f78-4df2-4c4f-8ce8-9f5b366e2248"
        },
        "item": {
          "id": "3eae9998-a531-4492-ad45-822d0292871c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff3c6778-1696-49fe-a764-dbcaaf560b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97f928-f7a4-4e7a-901e-7b4e8d0f33e6",
        "cursor": {
          "ref": "af7e3cc1-d4a1-4f0c-aeeb-50c425d5e7ac",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f3287e8-5fa3-402b-9745-8fc76d5d60e5"
        },
        "item": {
          "id": "3c97f928-f7a4-4e7a-901e-7b4e8d0f33e6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d7d7a99-9097-4981-8b46-b5f747745667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf6ad7a-3835-43f4-9734-255d6c0098fe",
        "cursor": {
          "ref": "91c7b742-00f5-4120-a8d4-0b129076772f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f8dc877-9ab2-4a73-a806-e35831babe5d"
        },
        "item": {
          "id": "9cf6ad7a-3835-43f4-9734-255d6c0098fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "86695986-25df-4d79-93a7-7f5bb2e6102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30d5112-c0bd-4a53-b735-1a826f3b477d",
        "cursor": {
          "ref": "de0c1a50-0383-4f21-930b-e4541417ce65",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f0969780-312d-4853-b511-8f9f3f812aac"
        },
        "item": {
          "id": "f30d5112-c0bd-4a53-b735-1a826f3b477d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8b7b15ad-f6ba-4587-bcbf-cb8c95771e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee713fe-7ba7-4017-9e3e-da0bf8e191e5",
        "cursor": {
          "ref": "f682cdd3-e04f-4a33-87ee-0512f597a047",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8ba7bd62-ef79-4d08-b4b1-4da4f4091219"
        },
        "item": {
          "id": "1ee713fe-7ba7-4017-9e3e-da0bf8e191e5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b67c3ff0-5f6b-4125-9219-accb22077c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9073cf-11e1-4a65-911a-2d58a1884d1c",
        "cursor": {
          "ref": "9105c50a-4965-4763-b842-895c42701ac9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ccff7e74-fe67-4220-a457-ac93cbf534e3"
        },
        "item": {
          "id": "3d9073cf-11e1-4a65-911a-2d58a1884d1c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "028a0723-6b99-4c21-aa03-1fdd7e797698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb34779-3f9e-43d5-9e6a-2e2fc40308bb",
        "cursor": {
          "ref": "09a5051b-6192-4fb4-b06c-8ec54026948e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "57e0e2b4-7579-443e-9b9a-f10c13ddf90d"
        },
        "item": {
          "id": "8fb34779-3f9e-43d5-9e6a-2e2fc40308bb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "210e530b-6036-48e9-b458-02a845228a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859cf98-4bf7-4c2b-b89d-d9ffe2fa7524",
        "cursor": {
          "ref": "3081f4f2-83c9-4e3b-b01a-929677ed86e2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "44189cf4-0385-48d9-8c31-efb622380fab"
        },
        "item": {
          "id": "3859cf98-4bf7-4c2b-b89d-d9ffe2fa7524",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7729e3c9-ce43-4126-9231-297ac7fbdf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fc69dc-5862-43df-8c5b-dff86528a3ea",
        "cursor": {
          "ref": "f67f0996-e6f0-4453-a86a-6fbf064d08a3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dab4e35e-821a-4348-9bc8-cced361ccaea"
        },
        "item": {
          "id": "81fc69dc-5862-43df-8c5b-dff86528a3ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1edf7957-04c7-4372-b840-2d90ea1b9bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c501ef-c5f5-4fa1-9467-58d456053cd5",
        "cursor": {
          "ref": "3b4d95af-2c58-4c9a-a960-4164f7fcd445",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "82fe294e-c651-481b-98c9-ea007a338ec4"
        },
        "item": {
          "id": "b3c501ef-c5f5-4fa1-9467-58d456053cd5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e4f3dfb1-30f3-4eec-af6f-c5a719589464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17451ab1-abbf-4186-b142-50c92f1161eb",
        "cursor": {
          "ref": "0b0da708-70e6-4bf9-9fc0-35485af78da3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c446213e-8ca5-4211-b3a5-557be5f0ce3a"
        },
        "item": {
          "id": "17451ab1-abbf-4186-b142-50c92f1161eb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b528cec8-85fa-4441-9722-25750fd57745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e9ef0-0de0-4bed-8bc9-ac9b639368d8",
        "cursor": {
          "ref": "53427c72-9496-4b43-b108-b9d8590b3542",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b89f99a-5c29-4903-856c-a6b6c62bb11d"
        },
        "item": {
          "id": "759e9ef0-0de0-4bed-8bc9-ac9b639368d8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c98ec270-630c-4495-836a-72317a8cf6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ce1e1-59bc-4fb4-8f1f-d6250b5d5e06",
        "cursor": {
          "ref": "4bae0665-ca52-498f-8d2d-a8199336627f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "63625180-71ce-445b-81a7-a402043de1f2"
        },
        "item": {
          "id": "6d1ce1e1-59bc-4fb4-8f1f-d6250b5d5e06",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "66edd4a7-ca55-4932-baca-0e9b9ca51b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a60813-28e4-4ee5-9888-b77ff2e82ff7",
        "cursor": {
          "ref": "dc25a7f2-2d51-4be7-9468-95a4495b4665",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74648239-6538-487f-b1a2-d1ec275f86f5"
        },
        "item": {
          "id": "c2a60813-28e4-4ee5-9888-b77ff2e82ff7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2a40b8ea-d053-482f-966c-47d46ea57560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304f3a28-70b8-497c-8ec2-dcfe6c8c0741",
        "cursor": {
          "ref": "8cdb04ef-b650-4cf5-ae74-3e9d50620671",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f147e465-3a98-4056-bdcc-b2149c6d3d84"
        },
        "item": {
          "id": "304f3a28-70b8-497c-8ec2-dcfe6c8c0741",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3e10d27e-b8d2-45ae-865e-3bb50c005d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcbe9b1-7f27-4169-be59-3d3cda4cd167",
        "cursor": {
          "ref": "337afb50-f9de-4195-bcfc-3996d9e02263",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dae33e75-bf6a-4a98-a522-0fd17bc8cc0e"
        },
        "item": {
          "id": "0dcbe9b1-7f27-4169-be59-3d3cda4cd167",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d9705c1a-ffa0-43a0-9f85-9d91e57f64f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53761bd6-ad59-4a76-9568-1617049696eb",
        "cursor": {
          "ref": "e4818b27-2bc1-4cba-8e9d-0583d0ffd4a6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d700b8c0-7b92-434f-8069-860b19b79dc8"
        },
        "item": {
          "id": "53761bd6-ad59-4a76-9568-1617049696eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "893d6819-5c35-4971-a76a-062fe238a8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f618918-1636-42a0-9b26-222fa84569c4",
        "cursor": {
          "ref": "64258ecc-8857-446f-b617-ee28befdadf8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3f5b782-282b-42c7-9fd9-9a99dc479d95"
        },
        "item": {
          "id": "5f618918-1636-42a0-9b26-222fa84569c4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "28fb505b-e354-4758-8f7e-2e2737f0176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e52721-b8c2-460e-9142-d4b887c96e1d",
        "cursor": {
          "ref": "26b94b9f-f9e8-4087-b7d2-5e002ef27ea6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "625814c6-3a60-4f03-a770-7fc161327838"
        },
        "item": {
          "id": "e6e52721-b8c2-460e-9142-d4b887c96e1d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6cd38c01-6a52-42ac-a182-92585c45832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25461325-3755-48ad-9cb3-0cbe8842800a",
        "cursor": {
          "ref": "3f099ec0-e038-4ba4-87bb-bf6f125ec533",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7042a145-b53d-435a-94bc-8bde730667fa"
        },
        "item": {
          "id": "25461325-3755-48ad-9cb3-0cbe8842800a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8fb427cf-0920-41f0-9387-131dde1cfb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88400304-d139-4231-88fb-5e38da0befdf",
        "cursor": {
          "ref": "dcf0e794-ce00-47f4-844b-995b870f54fe",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0936c4be-0a3a-477d-a30b-8b178d7fc951"
        },
        "item": {
          "id": "88400304-d139-4231-88fb-5e38da0befdf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24afa412-a81b-4116-9dec-f87c492d33e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3903a0-cb20-4e0d-ba28-f90df29f36d5",
        "cursor": {
          "ref": "c36c6296-de6c-47de-99fd-5317314d2560",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5f7deea0-f67c-4abd-81c8-97f8f3b11a0b"
        },
        "item": {
          "id": "6b3903a0-cb20-4e0d-ba28-f90df29f36d5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31d4798b-b0ee-4345-8dd9-a62515b73467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c50b3a4-de04-4e9e-9c72-a031adbdd21f",
        "cursor": {
          "ref": "4143c2f4-d085-47fa-8d90-492ff3dc7b89",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "457d709d-7b71-4a39-a56a-17deb45323f3"
        },
        "item": {
          "id": "4c50b3a4-de04-4e9e-9c72-a031adbdd21f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0c9230e5-f9f9-4d56-b9b4-23da840fc6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4b59eb-f0e5-43c2-b195-c8605aa9c848",
        "cursor": {
          "ref": "7d10d905-9f57-49b8-b792-659e22df9e86",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b2e48f66-c3ee-433c-9365-5e88657e9342"
        },
        "item": {
          "id": "4b4b59eb-f0e5-43c2-b195-c8605aa9c848",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "788da5c2-4204-434d-9b3d-d838e84942ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81d7784-55c3-4bb2-a251-5e48cb6c6935",
        "cursor": {
          "ref": "a8f01847-6db9-4bd0-b320-ad6e498caca5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "86cedc9b-69f9-46e6-b79d-1c963520d8eb"
        },
        "item": {
          "id": "b81d7784-55c3-4bb2-a251-5e48cb6c6935",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "09aec89f-5d88-4fc9-ad70-bfdce8184ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763d0c55-700d-48af-a655-45fba12f7dc1",
        "cursor": {
          "ref": "9211c454-0dc4-4f98-9a87-4f0617c0fba1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d8dc4b27-66fa-4b1e-9c6a-02145fe7769b"
        },
        "item": {
          "id": "763d0c55-700d-48af-a655-45fba12f7dc1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5881d9cd-1a40-4754-bb9e-066a6fe82b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ad031a-37bd-47fe-844c-b7e2cc40326e",
        "cursor": {
          "ref": "362f1f21-fcbc-457a-8a1b-0f9877576d93",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "52bd4915-e804-4d2c-a744-e9e2487eef3c"
        },
        "item": {
          "id": "37ad031a-37bd-47fe-844c-b7e2cc40326e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1972e2c2-1c16-49d1-af08-1a077ab1bd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adf4a23-4fec-4053-a578-3c122c8c281b",
        "cursor": {
          "ref": "1cec63b6-1e8e-45ea-9779-3840ccf768af",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9231f7ec-7b97-4ca6-909d-1152d6c33db3"
        },
        "item": {
          "id": "6adf4a23-4fec-4053-a578-3c122c8c281b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8a9a3be5-fcba-464c-91d9-58d1c94f73e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617e0584-652d-404f-99c3-27ab74558f37",
        "cursor": {
          "ref": "8655de3e-9f62-4d17-aae2-c2d0e6f9857b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "30e7d49c-8fb0-47e1-a609-57c57020ad79"
        },
        "item": {
          "id": "617e0584-652d-404f-99c3-27ab74558f37",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5af425fd-e6ff-4bb9-87d8-927e50d92594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7888002d-7445-466a-8fc6-da3e682e72bb",
        "cursor": {
          "ref": "29a9f27b-1076-4257-9c5d-e5a3fd3d1ac5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c240a54b-c20c-4443-94fa-45967d6fb35f"
        },
        "item": {
          "id": "7888002d-7445-466a-8fc6-da3e682e72bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5dc52c60-a432-4af8-99bc-edd666268c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1a4321-f6ca-4b03-9b45-96f5ae7f8235",
        "cursor": {
          "ref": "1197ec0a-c803-407e-9406-47f6b182fa1e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72d0b46f-f622-4277-858c-33dd00b0fea1"
        },
        "item": {
          "id": "0b1a4321-f6ca-4b03-9b45-96f5ae7f8235",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5cfba090-dc7f-45ae-8c37-0c6a69346ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ae9137-2c0f-48be-9dbb-c8a43d0176c9",
        "cursor": {
          "ref": "93129aec-b98d-44ba-9177-cd8233fdbc6c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8ffcf4c-6767-4293-a318-b29d7e14f4d7"
        },
        "item": {
          "id": "56ae9137-2c0f-48be-9dbb-c8a43d0176c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8c1183ab-d0e4-4a86-9bcf-c094639b92bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2793dd9f-3cc3-47c7-b47d-37734dcabce4",
        "cursor": {
          "ref": "c0b6a806-5b79-4798-b9f9-5cb4dbaee131",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "64394551-3580-4d6a-a221-911d57ab8357"
        },
        "item": {
          "id": "2793dd9f-3cc3-47c7-b47d-37734dcabce4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c283f5e6-81be-4aae-89b0-fa54d8babaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9019b642-4559-47b9-a5b0-79292b8409ad",
        "cursor": {
          "ref": "10031ccc-2ab8-4a6b-b924-91e36efb50f4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cccf51f2-ba49-478a-93cd-23034b519ed3"
        },
        "item": {
          "id": "9019b642-4559-47b9-a5b0-79292b8409ad",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d9e827a3-a442-4b4b-a80f-a6512c674626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d723f59e-7d48-4661-b042-f399cf8b3b48",
        "cursor": {
          "ref": "5f749ade-e38f-4bdc-b856-83f3bec90ed5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87323607-1258-48a8-8c7f-a095c6a4807b"
        },
        "item": {
          "id": "d723f59e-7d48-4661-b042-f399cf8b3b48",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "507e75c9-1f0a-4b5e-925c-4b827eec8201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8007ae-3508-4630-b05c-fb27e5e37722",
        "cursor": {
          "ref": "a7a6fb79-1500-4c3e-935b-5843515cba36",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "42847347-3691-44f7-bd65-cdeac3a730ae"
        },
        "item": {
          "id": "5b8007ae-3508-4630-b05c-fb27e5e37722",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b499b303-8dec-429a-b18b-071f7da68bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08118a3-1482-4f37-9194-7d89fca43d11",
        "cursor": {
          "ref": "dbd46058-2560-4600-baa3-135fadd4724c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d9c0e4ad-70ab-42ea-a51f-8efc75059359"
        },
        "item": {
          "id": "f08118a3-1482-4f37-9194-7d89fca43d11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a90e2cf-a6bc-46e7-a309-6243c973d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60439ccd-0ad2-4913-a896-7446c8ff6233",
        "cursor": {
          "ref": "fbf01413-0959-48bb-84be-8646bf6e7d75",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe64bd97-8442-4f16-820d-50157f621b89"
        },
        "item": {
          "id": "60439ccd-0ad2-4913-a896-7446c8ff6233",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9d46f4cb-7a73-4ac0-8fdf-97412dae2450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe658dd-f179-467f-a2ca-c6e3afd9d428",
        "cursor": {
          "ref": "d85a8ad1-bd14-4679-9730-1f936854ee58",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "774fbf69-396c-4599-b69a-4377a633863d"
        },
        "item": {
          "id": "bbe658dd-f179-467f-a2ca-c6e3afd9d428",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66bbe991-86f6-4e63-bad9-f3c735b55afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ac8ce4-27ec-45dc-b313-59a66412498c",
        "cursor": {
          "ref": "472bcb85-a0bc-43c7-a42b-b6dab6dda077",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "eb309145-97bb-4c24-a9e7-02d499eb44b6"
        },
        "item": {
          "id": "24ac8ce4-27ec-45dc-b313-59a66412498c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d71ce3a-7632-48e9-b188-5a873546ce00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e68274-834a-4a58-9a13-2c1890302a1d",
        "cursor": {
          "ref": "fc081c9b-57c5-433f-a177-8a08420bbfae",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "533f7517-90bd-488e-aa21-58e91514fb33"
        },
        "item": {
          "id": "e6e68274-834a-4a58-9a13-2c1890302a1d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "58f5ee41-c1bc-49e1-a52e-cdbf8221aa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514178bf-6d77-41d5-9405-444d790f6e0b",
        "cursor": {
          "ref": "5a4c4455-476d-4225-b9b9-80e9b01d757f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8e930b47-d0bd-4ba0-9a02-455efcc3accf"
        },
        "item": {
          "id": "514178bf-6d77-41d5-9405-444d790f6e0b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1bcd97b7-3bd0-4e8f-9ea8-58d40a49b4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26d2543-ba62-4d90-b909-aca83716fc04",
        "cursor": {
          "ref": "ed675e45-8282-49d0-8aa2-838ed30bf3e5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "96423e12-772f-433b-a761-3f9021fc1a17"
        },
        "item": {
          "id": "d26d2543-ba62-4d90-b909-aca83716fc04",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a69cd99c-c585-47a8-816b-dcc48f784bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db25eff-6bf0-4c4f-a293-f6d951172e3b",
        "cursor": {
          "ref": "d7dbaeeb-e892-4af5-9cdf-96633b6e6303",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ced508af-54df-4b8c-90eb-2488f2c21aaa"
        },
        "item": {
          "id": "7db25eff-6bf0-4c4f-a293-f6d951172e3b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3a47590e-1867-474d-936a-7ec565db3bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e44a4-067a-4310-a82c-74fd620d6dfe",
        "cursor": {
          "ref": "f7000a5e-9e35-48f4-a6f8-086ecb144713",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "409c914f-1fd5-44cd-a4f5-d6478d6ee3fb"
        },
        "item": {
          "id": "085e44a4-067a-4310-a82c-74fd620d6dfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e3a1a33d-1814-4877-af5c-94ce0e7e766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95c9e99-a05f-4a70-b5ea-685c8d1213ab",
        "cursor": {
          "ref": "374c16dc-4a91-4a7d-9b3e-0432e6e37ae0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "013c772e-a783-4ef5-abdd-7ec3527ed8d9"
        },
        "item": {
          "id": "a95c9e99-a05f-4a70-b5ea-685c8d1213ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9ff3254-6abc-4f38-be01-393000b87c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b90b8c-46e5-45eb-b86e-97368039e17a",
        "cursor": {
          "ref": "9a7d9790-e62e-4785-8488-c2ee420bbba9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5dc382a7-62ea-45b9-bd5b-4ddcc0807ee1"
        },
        "item": {
          "id": "61b90b8c-46e5-45eb-b86e-97368039e17a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bf7cf946-0c09-4d68-a742-95e21b64ad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78672f9-ee6a-409a-b0a3-9ce526f6e966",
        "cursor": {
          "ref": "7f3fa5f6-61ec-4972-805e-d7b464962277",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "94a20549-627f-4132-bfcb-7254bd41eb9e"
        },
        "item": {
          "id": "e78672f9-ee6a-409a-b0a3-9ce526f6e966",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d498726f-d142-4883-bd0b-7c8636451296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0846edbc-6ada-457a-85d6-315d9fe20ece",
        "cursor": {
          "ref": "8e7e8753-5381-4236-94b4-7e48f1db61cf",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "918c7137-0bdc-46ff-9a42-9742f6fa8605"
        },
        "item": {
          "id": "0846edbc-6ada-457a-85d6-315d9fe20ece",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4f81e47c-e20a-42a8-b721-aad8b94c4f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca1b5a0-de7c-4880-8ad6-5b917679fae2",
        "cursor": {
          "ref": "e384953d-ab62-4ac7-99bf-1c919b6e302c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "99b2a6f7-7d39-4494-bb6e-d08bad1bcaa1"
        },
        "item": {
          "id": "1ca1b5a0-de7c-4880-8ad6-5b917679fae2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "90c9bb75-121d-49ab-9d06-ccb340cbf751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4987b-5fb2-4c9d-90d5-78c451b6224f",
        "cursor": {
          "ref": "5df4c1be-1657-4e1d-b52d-36d7e87929a6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8e8f4dd9-be1f-4fb3-9997-b62367a31c1b"
        },
        "item": {
          "id": "31e4987b-5fb2-4c9d-90d5-78c451b6224f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7dbc147f-c874-4b2c-9af9-23d4b3d4e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb983d6a-bd64-4b6d-a109-8330e420d2f6",
        "cursor": {
          "ref": "c8cc3336-9bcf-48c7-8dc9-04af56aa0d0c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "60b29719-1f51-4d91-b159-b8d4152c91bb"
        },
        "item": {
          "id": "eb983d6a-bd64-4b6d-a109-8330e420d2f6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a701405a-2611-46f4-a38c-00458c048a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11516bb0-c989-45be-b259-54919c17f116",
        "cursor": {
          "ref": "22aace28-eeca-488d-913d-141c8ded5c24",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "84c20504-c18d-4e88-80ea-2acd00faed2a"
        },
        "item": {
          "id": "11516bb0-c989-45be-b259-54919c17f116",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "85a5b6d9-c73b-4340-8b75-a9bd776ff1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb1385a-142a-4f7d-9a7e-27fc0ccd69c4",
        "cursor": {
          "ref": "11ad33fd-c06e-40d8-a00f-8244a457d6df",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5e81ed2c-41a4-448a-979f-3597e25a0aec"
        },
        "item": {
          "id": "9cb1385a-142a-4f7d-9a7e-27fc0ccd69c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "22c78fb1-2929-4636-bde9-aaec8fc37e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25766653-eec1-478d-b7b6-628758e69b3e",
        "cursor": {
          "ref": "ed22fe92-a92e-45c9-92ac-7ca0ff498ce0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "17d246a8-f167-4494-b0f1-ad0a55dddac8"
        },
        "item": {
          "id": "25766653-eec1-478d-b7b6-628758e69b3e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cd67486b-842c-4d80-bb8c-8ccbfb23f042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00792f30-4d36-444e-af4b-38c413bc9fbc",
        "cursor": {
          "ref": "f865ed0b-f9f8-45c8-a8de-8373bed2a508",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0149caf2-0249-42ae-92e8-cb67ad56f4a0"
        },
        "item": {
          "id": "00792f30-4d36-444e-af4b-38c413bc9fbc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fd9e0b7f-c93f-4c57-8fea-9f0d9d9041ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff61305-d29f-4239-af58-8512d2e6faed",
        "cursor": {
          "ref": "845bc298-7c19-4aa9-9557-93b131b7e879",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aa401ebc-beff-42ef-a0e0-f3ec70244d30"
        },
        "item": {
          "id": "fff61305-d29f-4239-af58-8512d2e6faed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88d8e06d-4dbe-4cab-bc11-448c370f353b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe0b730-ef2f-45a0-92ed-d90db0ec72c9",
        "cursor": {
          "ref": "110a3195-7a97-46b7-9100-6e6cdf2d6641",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "808c195b-fd91-463a-ae45-8f336101d781"
        },
        "item": {
          "id": "9fe0b730-ef2f-45a0-92ed-d90db0ec72c9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3847b0b7-8fa5-4d2e-98a8-5629feb41740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5c98d1-9756-4214-85af-9b12016a2610",
        "cursor": {
          "ref": "9c983b66-eec4-4c50-a42b-a6d0546a5791",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a89c66da-bdde-470c-b14a-56671b96e8e4"
        },
        "item": {
          "id": "bb5c98d1-9756-4214-85af-9b12016a2610",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "92d2bd8b-f6a3-409e-9998-c4652e03f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6610b1d-fe0a-407a-93ad-bfe5f55d8b80",
        "cursor": {
          "ref": "c965f0dc-2fb7-4e29-a5b3-10b7cabf8112",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "980c3cc7-a8a2-4462-82aa-671764c29f24"
        },
        "item": {
          "id": "a6610b1d-fe0a-407a-93ad-bfe5f55d8b80",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3f9ea5b0-dda4-4c94-b651-ced852e662b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429882dd-c61b-4307-a30a-3074a8f7bd18",
        "cursor": {
          "ref": "efcc65fe-487e-423b-ab7e-4bc30c698ab0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ead3b5ec-d82a-4e82-8cca-3637759d3aee"
        },
        "item": {
          "id": "429882dd-c61b-4307-a30a-3074a8f7bd18",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6972f361-243b-4bae-acdf-864c319c591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51255ac-fdf4-4504-b79f-416cd6dbb567",
        "cursor": {
          "ref": "414758c7-9331-459c-86a2-aa0edfca4349",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1f54fea2-7992-4c8a-9136-3c0d2d1d486b"
        },
        "item": {
          "id": "a51255ac-fdf4-4504-b79f-416cd6dbb567",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b91f614c-872d-4b73-937e-552b23ffafbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e752b-f327-4b7e-9742-1a8764f5e79e",
        "cursor": {
          "ref": "6a92837c-f069-484a-bd94-a994513154c6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "38cfd3ed-2539-4f9f-a727-8692f3cc7169"
        },
        "item": {
          "id": "6f5e752b-f327-4b7e-9742-1a8764f5e79e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5aac616b-8221-41d7-ba1c-c52f2c478034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2458b275-2b28-4977-8010-b6ab0ca1425d",
        "cursor": {
          "ref": "1e5d95f7-93d3-44c1-af1a-427e6abd7b31",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "13c35373-7eba-4633-ad2a-a5bceb187c3e"
        },
        "item": {
          "id": "2458b275-2b28-4977-8010-b6ab0ca1425d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a0caf031-8f99-4161-84f7-5639a3096453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e90490-619a-4914-a3a9-272980d8232e",
        "cursor": {
          "ref": "ec5ab6a9-6de1-4ef0-8bc8-ef913a9c3feb",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "796cf394-5ba6-48aa-b853-123cb49e13f9"
        },
        "item": {
          "id": "b6e90490-619a-4914-a3a9-272980d8232e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "83f87317-ad61-4a6c-8870-d95d818f887d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93359f18-2872-430b-a4ab-cc58741e6e1b",
        "cursor": {
          "ref": "0be88e82-468a-4388-baec-08627ed20935",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "82f08907-5c44-4cb4-83cc-b8079fbe5465"
        },
        "item": {
          "id": "93359f18-2872-430b-a4ab-cc58741e6e1b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5658ec31-3605-4f0e-a101-1bcc1acb71bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55bb3e4-3548-4148-83f6-83ecea36bc02",
        "cursor": {
          "ref": "126385c9-78e0-42d0-97e1-e99add54da90",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ee17bc0b-2fc5-46ca-b62f-c479efb96c61"
        },
        "item": {
          "id": "c55bb3e4-3548-4148-83f6-83ecea36bc02",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "095a8225-a4d6-44cb-8316-be76e5ad6979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3311eca-a021-4ef9-90fc-ae37a7bb9a14",
        "cursor": {
          "ref": "50402df9-eece-4e05-9759-f61cf46380fa",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "53ff4d30-ffb5-4b05-a660-0087423fce94"
        },
        "item": {
          "id": "c3311eca-a021-4ef9-90fc-ae37a7bb9a14",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "31d3a3ba-9c92-4255-ab06-bdbc5fce1481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de272799-bb7e-42f0-b49d-37dcb592f390",
        "cursor": {
          "ref": "43c9539f-7ae1-40a4-a7ce-612ae17704b0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7bcc1006-2f7c-49f4-bbe6-ca1a78815f9d"
        },
        "item": {
          "id": "de272799-bb7e-42f0-b49d-37dcb592f390",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1d2d27a7-9b00-48b0-8132-20abdc8021a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d694201f-bd85-4773-bbf1-b58237d6caf0",
        "cursor": {
          "ref": "ad6423e7-3cb4-4354-941d-4a035520f5d0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "75feab72-f93f-4cc5-8db9-ae471fcab92f"
        },
        "item": {
          "id": "d694201f-bd85-4773-bbf1-b58237d6caf0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "246a66eb-2ed4-46c2-8799-cd8f998196b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbaca10-1afa-4b21-9f8b-68eb261a874a",
        "cursor": {
          "ref": "f3343b69-c4f2-4148-8284-c207c5491cbc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ea0a75d-4046-4678-bfed-00bf137f49bc"
        },
        "item": {
          "id": "3bbaca10-1afa-4b21-9f8b-68eb261a874a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8a1cca39-bbed-419c-9e6c-8a05d7da2120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf2203-712c-46a5-a651-67d509a4c547",
        "cursor": {
          "ref": "b3b1f08d-004a-40cd-b58d-a932b4ab2c3f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9ef0bb93-3a9b-49f3-9951-78e0756a56d2"
        },
        "item": {
          "id": "baaf2203-712c-46a5-a651-67d509a4c547",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "acf4f5f8-af79-4f06-8d14-b9af4f3acc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6828816c-8957-4af4-908d-9fd2f0639f3b",
        "cursor": {
          "ref": "9f2cd98b-a9f4-487e-8bc6-b7f20431e9db",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "22ebe426-500b-4aee-a6e1-31046157446d"
        },
        "item": {
          "id": "6828816c-8957-4af4-908d-9fd2f0639f3b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bf0370c9-70bb-4643-809a-bd4a96812222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361ebb2-04ca-4828-8cac-13d0394cb44e",
        "cursor": {
          "ref": "fcd33a03-7a47-4a29-a632-25cc6b271938",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "66406991-5255-4ad0-9909-2a2032986376"
        },
        "item": {
          "id": "0361ebb2-04ca-4828-8cac-13d0394cb44e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6d07d03a-a25f-4552-9a0e-f5b5feb24d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117ef2c7-baff-4f67-8f8a-efb4362543b0",
        "cursor": {
          "ref": "407640cb-bc14-4dd0-bd73-3bfe712633a2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94701e04-6b8a-482b-a83d-992d2e14ee69"
        },
        "item": {
          "id": "117ef2c7-baff-4f67-8f8a-efb4362543b0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7d0a798a-f476-4349-8a96-2874aad7ed09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c58f10a-d86e-4c2b-adc7-0f75505a740b",
        "cursor": {
          "ref": "51aba892-a11d-407c-bf57-99a057bf0818",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "edff0554-a4be-4afe-af87-d523919a0e56"
        },
        "item": {
          "id": "8c58f10a-d86e-4c2b-adc7-0f75505a740b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "30c6e73a-df63-48e1-b93d-129c14721e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d0cf24-1a17-4535-bbd7-48a5ba16e5c3",
        "cursor": {
          "ref": "05b80282-0469-4a12-b5aa-7713981c5344",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c55da455-b8d2-408c-9634-6f165079e9c7"
        },
        "item": {
          "id": "c9d0cf24-1a17-4535-bbd7-48a5ba16e5c3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6dc0c008-289e-4994-9fc3-768b03538eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c562c09d-6a19-41db-bdbc-8fb8e3597070",
        "cursor": {
          "ref": "088b6e08-c7e2-4a34-a784-2742dbb699ea",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8d5176be-1118-4b5a-ad02-4d00b715879e"
        },
        "item": {
          "id": "c562c09d-6a19-41db-bdbc-8fb8e3597070",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "635b44d4-f711-44b4-bf8b-d775ce1781d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e681f1-c5f1-4cc9-ae4a-f5fbcdf29e4d",
        "cursor": {
          "ref": "7a9ffbac-6edf-47e9-8cca-c753e3e1885f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d978d58f-8529-4511-a438-8c5008ca0214"
        },
        "item": {
          "id": "44e681f1-c5f1-4cc9-ae4a-f5fbcdf29e4d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "598f5d89-c9a3-4d54-8da0-f3acc502bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "70b4bb2a-6d72-4afa-b239-1ade345c66c8",
        "cursor": {
          "ref": "4ac97d3e-5460-4406-bc8f-10bf9e06a65a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1d10e37c-365b-4113-be42-004e8fb4101f"
        },
        "item": {
          "id": "70b4bb2a-6d72-4afa-b239-1ade345c66c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e4ccb0d7-661f-41e2-87f9-dd6df747bef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c292c3e8-bf77-4146-bbf4-53ceab57cf20",
        "cursor": {
          "ref": "11378b1d-f75b-41f2-8969-c8ed60fc3ae8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "983f90ef-904b-4fa8-8593-87969958088d"
        },
        "item": {
          "id": "c292c3e8-bf77-4146-bbf4-53ceab57cf20",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "19c622f6-300a-427f-984b-9449c6efffca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "229df24f-5f41-40a8-98c0-fe675c95703a",
        "cursor": {
          "ref": "002c0a0d-1033-4c0d-9d2a-1d55238bb56e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "300ef2cf-1c0c-4397-80ad-182d4cf945ba"
        },
        "item": {
          "id": "229df24f-5f41-40a8-98c0-fe675c95703a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b799e582-fd49-4ce7-9e6d-a29841009078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8095bc55-b0ec-4fd0-9810-07f2dc77eb64",
        "cursor": {
          "ref": "dafa6530-eb68-4124-9322-310c709b8153",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b58713a3-100b-48fb-98ab-234c2f9e6c5c"
        },
        "item": {
          "id": "8095bc55-b0ec-4fd0-9810-07f2dc77eb64",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e7c52006-19b4-4af8-8a9a-1dd996dbfd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f02bb6ef-ee6a-4690-92c7-34606010be32",
        "cursor": {
          "ref": "208d1d86-0cf2-4ba1-a952-fe6d11d38bbd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cffd1e8c-a86f-4279-a5a8-b391619ba6c1"
        },
        "item": {
          "id": "f02bb6ef-ee6a-4690-92c7-34606010be32",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aebc01fe-7c15-4bda-9a07-a4b9509fe624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9bb0a321-53fc-4a7d-83ae-8f781617c732",
        "cursor": {
          "ref": "cc7b4f92-5c0c-42ac-b7ff-df08c7ed5e7b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "585a0734-17b9-4dea-8bb2-344ffc00718d"
        },
        "item": {
          "id": "9bb0a321-53fc-4a7d-83ae-8f781617c732",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d725a5db-1dfb-4da9-b0f2-2f204e390f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "338924fc-2db8-40b6-82aa-12ed3be3623d",
        "cursor": {
          "ref": "5c672910-0341-418a-9fc9-122733d0f538",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "891a2c74-07a5-476c-acc1-b0ba54b6e90d"
        },
        "item": {
          "id": "338924fc-2db8-40b6-82aa-12ed3be3623d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb33f440-dfda-4a5a-a423-7e7c848dded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d6eb7d-dd43-4140-9a4b-b5ea587018a7",
        "cursor": {
          "ref": "2c0c95e1-bb32-4749-95ea-0353775d0a78",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2e037ce5-3f84-41ba-b1fa-8e3b0905783e"
        },
        "item": {
          "id": "a5d6eb7d-dd43-4140-9a4b-b5ea587018a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9cbefb1c-f415-4ca7-8bc9-6577410f9fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc565d8-a259-40ef-ad7c-9926e6d454ba",
        "cursor": {
          "ref": "978edebb-43be-4b4f-b153-6aa2b5cbb4ee",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "52c21c33-b0a4-454c-a7cb-1d46cd8e5595"
        },
        "item": {
          "id": "1dc565d8-a259-40ef-ad7c-9926e6d454ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f5290b16-9786-4faa-9941-597df5341a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7efe4d5-584b-4730-b40c-0fbaaa0d93fb",
        "cursor": {
          "ref": "ade2a3b5-e9e3-4d35-86f0-205e920e82a4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2be8e236-5f55-41d1-93d7-de87713ed660"
        },
        "item": {
          "id": "e7efe4d5-584b-4730-b40c-0fbaaa0d93fb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "519b3dc5-ed99-4804-a05e-90ad91b12f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c98957e-7e2a-4420-bf75-86037811a8af",
        "cursor": {
          "ref": "38219bc1-c8af-45f1-b774-b94ba0619880",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d65b78a9-6414-4618-9fac-75dddd1ad9a4"
        },
        "item": {
          "id": "2c98957e-7e2a-4420-bf75-86037811a8af",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72eac07c-663f-46eb-92f2-fc14d70bf959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595eb4bf-9429-46b7-95db-7d067a0a9ff1",
        "cursor": {
          "ref": "923ac952-cd5d-4691-8cfd-4a285c0f34b1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e043bbc-87ad-42cf-a0b4-06100e433f65"
        },
        "item": {
          "id": "595eb4bf-9429-46b7-95db-7d067a0a9ff1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66672a51-7e25-4c69-ad81-7eafb84c8113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691ef14d-4e41-437c-8e2a-754c362eec74",
        "cursor": {
          "ref": "e5dbb7a8-d859-4f93-b472-20f712fb3b68",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "be4e29ee-3b55-4cfb-b5ef-7a9a9e3449fc"
        },
        "item": {
          "id": "691ef14d-4e41-437c-8e2a-754c362eec74",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "32ec3ae9-deb1-4b1f-83d9-8e0f38b29077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49013bf5-ba76-4525-9e59-340fed096d25",
        "cursor": {
          "ref": "325e486c-9b5c-4cd3-b5c3-5f0df2a7769e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "146389ad-de92-466f-8d1d-3f5949c2b5f4"
        },
        "item": {
          "id": "49013bf5-ba76-4525-9e59-340fed096d25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ec15c57e-bb06-4184-9b6e-debcfefad4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499b7fce-53c7-4e06-be98-659b1d11b091",
        "cursor": {
          "ref": "f718b2c8-9d70-4c6a-b8dc-160151615789",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4e28bdc0-4e4c-4557-8a28-c3605d136291"
        },
        "item": {
          "id": "499b7fce-53c7-4e06-be98-659b1d11b091",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f23aa2cf-d2ad-415e-b4a3-597b9db0e71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec365ed-3a74-4048-8067-8577c69ba337",
        "cursor": {
          "ref": "b8093e60-5632-4a03-a6ea-b49a1d898044",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5cd3008a-091c-4009-9efe-1deeeb66aff5"
        },
        "item": {
          "id": "dec365ed-3a74-4048-8067-8577c69ba337",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d75013a-f158-439f-8f7d-75766320c88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3566470a-e232-4c31-b28f-bf5a337c6435",
        "cursor": {
          "ref": "23a505d7-eb43-4a73-b527-90d894765f2d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "330a8819-8aea-40e9-911e-eeccfa678cc2"
        },
        "item": {
          "id": "3566470a-e232-4c31-b28f-bf5a337c6435",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f90a5a26-6fc9-4309-aa52-7daf714c891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cfd8c9-a7df-43f9-951c-8e5b7e05db34",
        "cursor": {
          "ref": "9a967992-2f83-4ff3-9d90-391688077693",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6fed928-a63a-4b66-9739-2d818ffd1e9e"
        },
        "item": {
          "id": "d4cfd8c9-a7df-43f9-951c-8e5b7e05db34",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2f407727-9cbf-4ac3-8e56-8963e9568138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f85c02e-9a36-4b15-a4a4-ecd3fa776de4",
        "cursor": {
          "ref": "97d4baff-d90e-4599-a21e-bd89d1c4f0db",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e62041e-d25c-429d-aadf-a85b3d74aa98"
        },
        "item": {
          "id": "4f85c02e-9a36-4b15-a4a4-ecd3fa776de4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d70e59a3-f4c1-4ad4-b9f3-320f00fdaf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b271a26d-20ed-443b-a300-2b3a12eaa298",
        "cursor": {
          "ref": "cea8c706-692c-4feb-92dd-9ff06eb3e5b3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b09ce478-2aad-45ce-8b08-570610f59983"
        },
        "item": {
          "id": "b271a26d-20ed-443b-a300-2b3a12eaa298",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02a420f2-0799-421a-8d84-833d25915c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af3bbc3-1b51-441b-b0ea-baf86b645bd6",
        "cursor": {
          "ref": "d5c28db1-5aef-4c27-aec2-2bbb403c8ea1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1d961075-1be2-4d13-8a73-0e0e7527b89d"
        },
        "item": {
          "id": "5af3bbc3-1b51-441b-b0ea-baf86b645bd6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62bf9c69-3fe7-49ed-b395-6c5ba8bf501a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7fd1b6-89e6-4678-85a1-a6cb3c4a210f",
        "cursor": {
          "ref": "1fc274e9-a208-445c-b690-d8b715c7ee9a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "221dc13c-f904-4f47-9b09-1d2c7706870d"
        },
        "item": {
          "id": "5b7fd1b6-89e6-4678-85a1-a6cb3c4a210f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8725a45-701f-40db-905d-a05dccdc14c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538a4e1b-dff5-438b-9947-fc93520c43b9",
        "cursor": {
          "ref": "c92036d6-893e-4d85-999b-a8d169414215",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "da6f9e5f-0291-4c67-9c8b-eb6d08143280"
        },
        "item": {
          "id": "538a4e1b-dff5-438b-9947-fc93520c43b9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ff9737f9-b000-4ac2-bc24-b9f12aafad0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2371f-da19-4080-a5ac-aaca98772951",
        "cursor": {
          "ref": "7b83a008-eee4-41a1-8d23-9fce178abb06",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "519ccd01-c2ef-4df9-bf24-3d6113ce3f5e"
        },
        "item": {
          "id": "88f2371f-da19-4080-a5ac-aaca98772951",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92e9a816-2911-4cfe-987a-df22a4106cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ad706-7293-4f32-8e1d-9c1df7538f66",
        "cursor": {
          "ref": "7fe51835-7efe-42c5-b0e9-6995d0c1ef3e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "27bd2d4f-182b-480c-9bf8-6e2419df185d"
        },
        "item": {
          "id": "8e2ad706-7293-4f32-8e1d-9c1df7538f66",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7490d113-d94c-4c89-a483-d12a7954cfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1817c0-26dd-428a-ab91-e2df6bce10ba",
        "cursor": {
          "ref": "3433f7c1-776b-4591-a863-c88da21db16a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0bbf7683-54f1-42ab-b25e-254f43c35603"
        },
        "item": {
          "id": "ec1817c0-26dd-428a-ab91-e2df6bce10ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5037c2ee-fae5-4b27-9fb9-df5b1c13a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8134a53d-ba79-4e9b-9ffd-e9ae88e9e338",
        "cursor": {
          "ref": "e50d4bd9-2c70-4308-b6d2-04dca1eb8719",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7e5f1a48-dc18-43c9-b38b-35e32a3a61bb"
        },
        "item": {
          "id": "8134a53d-ba79-4e9b-9ffd-e9ae88e9e338",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "38494e30-135e-4e7b-ba2d-b8e7963098b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19361d6e-04d8-4611-aa8d-47bdd508da5e",
        "cursor": {
          "ref": "55c0c8aa-7be2-405f-a27a-bdce5090b609",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f15e3eb2-b63d-411c-a155-fcf362f63fa5"
        },
        "item": {
          "id": "19361d6e-04d8-4611-aa8d-47bdd508da5e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0063d170-0983-4829-b5d4-2cbd065f5e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afaca40-f96a-4426-a256-a17b6f2b86be",
        "cursor": {
          "ref": "5b10d782-7ce6-439d-954e-9cc63b551253",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40f4cba6-917b-4e6e-b988-fa9daa18efea"
        },
        "item": {
          "id": "7afaca40-f96a-4426-a256-a17b6f2b86be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2d994ff-ed3d-4d35-8a43-bcfb9808bb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e59419-5c39-4ac4-acf6-52f9a6c22102",
        "cursor": {
          "ref": "6cc3f20a-a387-4b8d-a8bd-4038de6ba890",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2bbbda20-0596-4cc5-b77c-679ee0ce646a"
        },
        "item": {
          "id": "71e59419-5c39-4ac4-acf6-52f9a6c22102",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "33734ceb-e386-4d0c-b86c-749761f4e5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8ea757-d62f-46e0-afe0-d0deefa9f7f8",
        "cursor": {
          "ref": "bc55ae3e-2585-4f5e-8bf2-fd6290f41a3b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "096d238c-19cd-4d41-92fe-dc7e218b375d"
        },
        "item": {
          "id": "6e8ea757-d62f-46e0-afe0-d0deefa9f7f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8390e685-c6b0-469b-9d1b-27e226528463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e787e40c-e756-45ac-8f84-b6f32cb34b6c",
        "cursor": {
          "ref": "81b5b209-52d9-4690-8c0b-5bd63a48f039",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7e9c8e0c-0094-473e-be04-68e8570407ed"
        },
        "item": {
          "id": "e787e40c-e756-45ac-8f84-b6f32cb34b6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b01e24e0-524a-4f36-a6dc-a9c3844cf58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8465c6-7f28-404d-8539-eb9914ddf488",
        "cursor": {
          "ref": "c768112b-e5b5-4b83-b6c0-1545684fba5b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "55c570db-4093-4bbe-bbbe-7eb66c325173"
        },
        "item": {
          "id": "6d8465c6-7f28-404d-8539-eb9914ddf488",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b9da1b5-7f11-4966-883f-8f3bfe569319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034cd18b-dc99-4b87-a257-baa21e60bc78",
        "cursor": {
          "ref": "27326aa3-4223-487b-a222-c917b80c7669",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d42ddb98-93cb-4c68-9111-b6c696da7a71"
        },
        "item": {
          "id": "034cd18b-dc99-4b87-a257-baa21e60bc78",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d929bc42-3478-40cf-92c6-80c805121c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0646f39-c245-409c-8393-33b1f3949c55",
        "cursor": {
          "ref": "ad7484e0-f5a8-43b1-ae62-53408dcb770e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "abdb5f41-5713-4d90-ad82-71e7eb8c5cd5"
        },
        "item": {
          "id": "d0646f39-c245-409c-8393-33b1f3949c55",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10a7de10-e958-4c69-9a90-b1346723dee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc859588-8b00-4c44-a944-8847e8cebfde",
        "cursor": {
          "ref": "bba0b691-63fe-4fb7-a978-ed13f31c5173",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a3d21192-175b-44f7-b227-de8f1b38b26c"
        },
        "item": {
          "id": "dc859588-8b00-4c44-a944-8847e8cebfde",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47d00499-ead4-44e8-93cf-a98473a65f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c918739-5fb3-45bf-aea4-8e57bac86bb8",
        "cursor": {
          "ref": "ced941e2-a0b4-4d0b-b3b8-2bc3a3e5eb2c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eb5941d4-b065-4d5d-b7b1-c8311ad8e524"
        },
        "item": {
          "id": "8c918739-5fb3-45bf-aea4-8e57bac86bb8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4442a827-2830-4323-b4e2-cba23300f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e94ee1-6d53-4cc3-aa6e-091a0c5d8d99",
        "cursor": {
          "ref": "8a75188f-16de-4166-bde8-80b3a391d691",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aef9beea-1467-4456-9a11-5cb6864f7c40"
        },
        "item": {
          "id": "04e94ee1-6d53-4cc3-aa6e-091a0c5d8d99",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b9c87b4f-93d5-41c1-abd3-18f286d70ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24a2b5d-ed5f-42bc-b38d-ff20464aad63",
        "cursor": {
          "ref": "1e2f6542-defb-41e0-85cb-1381af9696f6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f5150192-cfcb-488a-ae27-51b8b5d2cc0f"
        },
        "item": {
          "id": "b24a2b5d-ed5f-42bc-b38d-ff20464aad63",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5845a87f-d025-493b-99a4-f36d038c639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02df9160-1e6a-4eb7-9bca-2e6d93dfd572",
        "cursor": {
          "ref": "5629e96b-52d5-4a35-a691-251a24335e4e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f647eb53-25ee-4c2b-b5f3-1169df33d783"
        },
        "item": {
          "id": "02df9160-1e6a-4eb7-9bca-2e6d93dfd572",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "87f14524-3ac3-4607-bd01-03570f7457a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2bb04-6e86-41c5-b7af-7ddc0a77d9dd",
        "cursor": {
          "ref": "df7de328-2299-468f-a5dc-f6a712a82def",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1115aafa-a618-47ba-9c7b-966791c7d9df"
        },
        "item": {
          "id": "68a2bb04-6e86-41c5-b7af-7ddc0a77d9dd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "48826336-9c24-4cf8-af09-b2d2660147c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4fb3d1-f5b3-448d-ad5b-8b21af6f9897",
        "cursor": {
          "ref": "f4d510af-11b2-4b27-95d0-52439b460cfa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7d58c0ca-3f89-4f26-a254-8c6c9cfdbb7a"
        },
        "item": {
          "id": "3a4fb3d1-f5b3-448d-ad5b-8b21af6f9897",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "84c2cd95-03f3-4fb4-ba6c-0db31988a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61536829-af36-42a4-bc17-ae37ef0d744a",
        "cursor": {
          "ref": "62de74fd-5b8b-49db-a2cc-cafdc24a02c2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9b01f4bf-b010-40cb-922e-48eaa540a90d"
        },
        "item": {
          "id": "61536829-af36-42a4-bc17-ae37ef0d744a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8e4aee29-1e80-4d67-8ed7-0b25efed6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7305601c-0690-40d2-9d48-83beba5044b1",
        "cursor": {
          "ref": "bf09a328-1146-401f-91a7-04b343bf352c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9756de75-8378-4246-8e1e-eacc9b72cc87"
        },
        "item": {
          "id": "7305601c-0690-40d2-9d48-83beba5044b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "923ea24c-cb26-4f21-bad4-8a6e7c64810d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde0778-c10a-462d-9e09-62584ed2749c",
        "cursor": {
          "ref": "319078f8-879a-470f-8ebb-1d9b55235890",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d144eab-ee14-4546-813b-3296258892cc"
        },
        "item": {
          "id": "5fde0778-c10a-462d-9e09-62584ed2749c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "181d37ea-70b1-442c-ae5e-3e1d9904df65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952fbe84-5e1d-4c51-9b97-98c139dff92b",
        "cursor": {
          "ref": "32a108fd-5cde-4b98-ba8c-a5f68cf97337",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "233b1d46-7508-4ad5-b77c-535aa8518e88"
        },
        "item": {
          "id": "952fbe84-5e1d-4c51-9b97-98c139dff92b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "de25764a-4c19-48e5-bef4-29e9f7f812a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c851d65-3825-4c2d-aff0-e97c845243da",
        "cursor": {
          "ref": "58d8b5aa-7ebe-4613-b54f-6f3df1e45086",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1c8eabf5-53fd-4498-b904-d30eff8d536e"
        },
        "item": {
          "id": "6c851d65-3825-4c2d-aff0-e97c845243da",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fc18e8e4-e091-485d-acd0-904ebd64e882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf589f-625c-4a0e-aaa0-f4e11b92164b",
        "cursor": {
          "ref": "af8287b3-6d17-4dad-98ff-1a6b172bfc84",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b08a98f4-85b6-4167-a91e-bb5ace49530d"
        },
        "item": {
          "id": "e8cf589f-625c-4a0e-aaa0-f4e11b92164b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "359b5051-80f4-4686-9b18-a30851fef7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0681d32-81a7-44bb-b282-95551f3eccc9",
        "cursor": {
          "ref": "e9a6eb31-ead2-420e-b3ca-7bd8e07fd76b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "24322a7a-51d7-4000-8e3f-153d1ff6793c"
        },
        "item": {
          "id": "e0681d32-81a7-44bb-b282-95551f3eccc9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3692fe9d-b3b8-430c-b144-cfdf6fc358b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57684492-98ba-440d-8689-a552e363dab5",
        "cursor": {
          "ref": "a1192a38-4e31-4058-b5a5-b2ff485de338",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c57357d3-6d9c-4188-b004-9adb151a7061"
        },
        "item": {
          "id": "57684492-98ba-440d-8689-a552e363dab5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "50c7dcbd-0bff-4fc7-960d-d4b8a5080bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bcb969-8900-4364-aa50-7d7ba6d7be39",
        "cursor": {
          "ref": "2d78fd46-e493-46d9-9ba6-25fc5aba5749",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4413a2a8-34c2-4b1a-a8f3-e98084c50f1f"
        },
        "item": {
          "id": "09bcb969-8900-4364-aa50-7d7ba6d7be39",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aa9529b3-75a8-4366-8716-0f970424f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007bc074-83ab-4fbb-a358-2168fdd737f9",
        "cursor": {
          "ref": "d8e6af6a-ca63-493b-a903-208cb3869fb4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "40320824-18a8-49c8-a68b-741a59f88ed9"
        },
        "item": {
          "id": "007bc074-83ab-4fbb-a358-2168fdd737f9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fb163ee4-4444-49ce-a90e-c236c7b2e6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d2d66-1e17-4bf1-99f0-48367ef948ee",
        "cursor": {
          "ref": "68080c02-a820-4dde-9b86-3137c6b3a284",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75f767ce-9739-4a81-a906-cfa09efe749a"
        },
        "item": {
          "id": "a85d2d66-1e17-4bf1-99f0-48367ef948ee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8d718dc5-2b25-4113-9d42-4aee87bb45b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b8ff0f-4286-4344-9641-aa1308fe9d34",
        "cursor": {
          "ref": "5d96c871-63eb-40e9-b1dd-9c2d03d89eb0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f0f953b4-3457-4209-8d06-a24565174ca6"
        },
        "item": {
          "id": "c6b8ff0f-4286-4344-9641-aa1308fe9d34",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dd60e198-d7b4-4833-bbf5-cb7d603fcc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec31f43f-75da-41c2-bdee-652eec6f1caf",
        "cursor": {
          "ref": "732db095-38e5-406f-a3a6-99c842c5ce32",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a534f9f0-89b5-4460-9818-097657b39a43"
        },
        "item": {
          "id": "ec31f43f-75da-41c2-bdee-652eec6f1caf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6882cd49-46c6-4763-9862-9fe2e96553d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07e5767-9803-457b-b941-cb98a724a1e3",
        "cursor": {
          "ref": "bb4889d8-f4e5-41e0-97d3-7ea55eaaca3c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a2022814-b8e4-4d9b-8d03-73e5af60030b"
        },
        "item": {
          "id": "c07e5767-9803-457b-b941-cb98a724a1e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ba72ab6-d7c9-4c84-bf76-b3e14b6f9f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5114f-2453-4146-8408-118ab161d472",
        "cursor": {
          "ref": "c26f1bc0-77ac-4e40-bcb3-d5a998911a5d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6753f178-4bd4-4a51-b246-8df4d3205acf"
        },
        "item": {
          "id": "7ff5114f-2453-4146-8408-118ab161d472",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4622773a-37cd-451f-902c-b4a423e6e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1adee0a-5d78-484a-aeed-7ded095b5831",
        "cursor": {
          "ref": "b9d020b4-a43a-4e18-bca2-cf3bb41c522e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "de7ce1bc-8a27-443b-a9a5-3ed037a3dedf"
        },
        "item": {
          "id": "f1adee0a-5d78-484a-aeed-7ded095b5831",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "41d3a952-4333-4afe-b7fe-0ac2a50bdc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2548cb58-d322-4537-948d-e66a12d6ff72",
        "cursor": {
          "ref": "96f9f16d-c750-4e21-9482-fb9daaf55ca0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eefb7039-1307-49e6-b931-c2c8b13dee48"
        },
        "item": {
          "id": "2548cb58-d322-4537-948d-e66a12d6ff72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1ebc9cb7-659b-457a-92ef-f52a95b1eb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71184903-dc29-42a6-9e7c-7b18b4732ac5",
        "cursor": {
          "ref": "a12d6fdf-7ec5-4a24-b696-a2c208fda524",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "583f3590-4d27-43d5-93ef-61a04f70eef6"
        },
        "item": {
          "id": "71184903-dc29-42a6-9e7c-7b18b4732ac5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d7bfe15-30e7-4801-8d88-bf54251c800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b273ba-7a62-4785-9331-20c2966be5a2",
        "cursor": {
          "ref": "706ab1c6-d4e3-44d8-afd6-33138195b234",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "139620a0-347e-4620-890e-f2144ea785e6"
        },
        "item": {
          "id": "09b273ba-7a62-4785-9331-20c2966be5a2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6a1668d7-dec9-43fd-b8ff-9f5a681ceb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eed67c-f1dc-43d5-8146-2912a99d22eb",
        "cursor": {
          "ref": "bc2b6574-9485-4541-85b6-80be2b81d4f4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "07198bfd-4ab4-4dea-a95a-883b232b9570"
        },
        "item": {
          "id": "52eed67c-f1dc-43d5-8146-2912a99d22eb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "06880290-28e9-4fec-8f1f-743838b7b340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a7867-6d29-4ba8-a766-778023e9b16a",
        "cursor": {
          "ref": "09015f4c-078f-4952-a01a-27262bd196fd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "37c7566c-a1a3-4d2b-80b0-417ad94c4857"
        },
        "item": {
          "id": "f53a7867-6d29-4ba8-a766-778023e9b16a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cbbf3fea-25b8-40bd-9ca5-aca5061d1e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c13afb4-30a4-42c0-b93d-7198ee2c8463",
        "cursor": {
          "ref": "f4981833-bdcb-4133-ae67-1f840db95ee7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "01f3bfc1-0074-40fc-beea-b0d0f1d0472f"
        },
        "item": {
          "id": "8c13afb4-30a4-42c0-b93d-7198ee2c8463",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f7134365-8e21-4084-ad01-e4af2f2d91fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1436121-f291-41e2-9382-497d7762c3b3",
        "cursor": {
          "ref": "c42a748a-be42-4ad2-b7d7-2ff26d606199",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b7b03e47-2efa-487b-8930-7417dad1278a"
        },
        "item": {
          "id": "a1436121-f291-41e2-9382-497d7762c3b3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "044cf37c-ee98-4cae-ba1f-d84e09966b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7084bfda-6266-4bfc-83d3-a920122fa7f4",
        "cursor": {
          "ref": "fc2b4bae-003b-4265-875b-5d7b89399390",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d77927b8-db89-4a14-979e-79a651b0e15f"
        },
        "item": {
          "id": "7084bfda-6266-4bfc-83d3-a920122fa7f4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd3d8ae6-5c43-45cb-baac-b03f17ea7f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99843ba2-71d1-4d41-a229-4c3940012fef",
        "cursor": {
          "ref": "2cbf595c-407a-40bf-a14b-baea576d1191",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "22fb2672-b5c9-480e-b486-a7b3a8a5a2b0"
        },
        "item": {
          "id": "99843ba2-71d1-4d41-a229-4c3940012fef",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e79abab1-44db-4900-8d8b-7ef6b3f18494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4ff552-0807-4e67-a9a1-d2e743af9349",
        "cursor": {
          "ref": "50dd9ca3-26bb-483b-9386-346be1917cd7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a10b8def-d160-470e-bdce-dd66ed118d16"
        },
        "item": {
          "id": "5a4ff552-0807-4e67-a9a1-d2e743af9349",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef9880f0-9731-4e47-ac63-abe924e61af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ebcbb0-6e49-4f80-aed8-4d116be9a9a6",
        "cursor": {
          "ref": "c87a0b4c-71fa-4cc2-97eb-b62af4414fce",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "34a5b186-ec42-4f14-8e21-125d29c54812"
        },
        "item": {
          "id": "39ebcbb0-6e49-4f80-aed8-4d116be9a9a6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "81c8068d-c6b8-487e-9f46-25678cf761de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6084b286-b8c7-4407-b7cb-ac3550f38433",
        "cursor": {
          "ref": "d97d1d41-7cb7-4f91-a03d-c05ad34383b4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "124eb1b4-0e2b-4c98-8af5-9651c0ce9bb0"
        },
        "item": {
          "id": "6084b286-b8c7-4407-b7cb-ac3550f38433",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3cad7706-6789-42fd-b3ee-82ad13af1d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10cac2b-5b61-48b2-be85-1b7ac9c22be9",
        "cursor": {
          "ref": "483032b6-43af-4880-bfb8-b1f248853209",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f6bcc766-fbc3-4704-949c-e4251b7c48a8"
        },
        "item": {
          "id": "b10cac2b-5b61-48b2-be85-1b7ac9c22be9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f7950e9-e761-475a-b0fd-5188631cf8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb57d07-d348-4eda-a3d8-5af8894da2c5",
        "cursor": {
          "ref": "53dd579b-e101-434d-908d-f5983dddc76b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a6b5c65b-8241-487f-b31f-725f07b638e8"
        },
        "item": {
          "id": "0bb57d07-d348-4eda-a3d8-5af8894da2c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a5e541dc-d32d-4a60-aca2-38c9e732aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f93ae-a6f0-4ac3-9f02-e140cd834e5f",
        "cursor": {
          "ref": "93b89b39-6a95-4341-aec5-94463bc66e5b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2723c1f1-2067-451c-b367-6968880d87c8"
        },
        "item": {
          "id": "1b2f93ae-a6f0-4ac3-9f02-e140cd834e5f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4941bc10-051e-444b-8558-a6d5f62a2ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74711b-b21f-4895-852e-1b8f833bcf0e",
        "cursor": {
          "ref": "788e20ee-19a8-4772-a816-086524b48379",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "24b505b8-a64d-48d5-853e-a18afdc665a8"
        },
        "item": {
          "id": "6b74711b-b21f-4895-852e-1b8f833bcf0e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f97d5ac7-2c82-487e-88a3-88a3472e9d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a772b48-6e87-47ed-bd79-a0f1f61624e3",
        "cursor": {
          "ref": "d82adb02-c73a-41b3-a180-0b8212d5cd2b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85a740ef-0ab5-4b25-a982-08fd99bf5674"
        },
        "item": {
          "id": "9a772b48-6e87-47ed-bd79-a0f1f61624e3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "49a3bd9a-cd1f-48b8-85c7-6a9c4dd87b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9285e-0c02-4f6d-993a-f33e9445733c",
        "cursor": {
          "ref": "9345ab91-4f80-4ae9-bf0d-b0aa6fb4dcc0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2abe98b2-0c42-4b3c-b7af-9a7260e3ce46"
        },
        "item": {
          "id": "2fd9285e-0c02-4f6d-993a-f33e9445733c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "704063ae-1f8e-4837-81e1-1ba663b35b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351076fe-7528-4186-ba6c-0b6908109e10",
        "cursor": {
          "ref": "128e28fc-4f62-4301-8f3d-e2f1f8d01578",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc8d3c61-1ee8-4bba-836b-e4f9530b9a9c"
        },
        "item": {
          "id": "351076fe-7528-4186-ba6c-0b6908109e10",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1ffbf821-3bc8-44e9-9692-b90dce08fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c82bf8a-8833-4e09-88c5-b11235320663",
        "cursor": {
          "ref": "754ca0df-5610-4ea4-838a-825700a7e6ff",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "08f7fc09-471a-40bf-a0b7-485eb31e5668"
        },
        "item": {
          "id": "9c82bf8a-8833-4e09-88c5-b11235320663",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5a01a3a4-056b-41db-b8f5-67f7bc87b64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc7095a-c111-4a2a-b9ba-e68da035a4a3",
        "cursor": {
          "ref": "6c614155-ffde-4546-b62d-f5558cd4c15e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cf48b78b-4b5c-4512-b9bc-c2a1dca7629d"
        },
        "item": {
          "id": "8cc7095a-c111-4a2a-b9ba-e68da035a4a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e74389e2-286d-4a33-a04b-476837cf9a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a8e425-ee82-4105-b6cb-6bcc59d93fb0",
        "cursor": {
          "ref": "9644aaf8-4957-4301-868b-2445f24f4e4f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c577cf2-13bd-4560-bfdc-808f9aade54b"
        },
        "item": {
          "id": "f3a8e425-ee82-4105-b6cb-6bcc59d93fb0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37719c3c-10c4-4fd6-b958-0a64f4962e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a8be2-9b6f-4db5-a56a-4104ac69a94d",
        "cursor": {
          "ref": "3731cce9-6f96-468f-aa8a-23f31a2fa189",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e0968342-838b-4ba5-a53a-535653a2df74"
        },
        "item": {
          "id": "0c1a8be2-9b6f-4db5-a56a-4104ac69a94d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ecb0a569-7c01-4eef-ba84-bcb59e179390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa68b063-253c-4e0e-93cc-27056720d03c",
        "cursor": {
          "ref": "77091799-4d3d-4e12-8b50-54029aa23bd7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "286d6847-f17e-4648-a5e0-c724fc0a1e2b"
        },
        "item": {
          "id": "aa68b063-253c-4e0e-93cc-27056720d03c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2113b804-e4b5-4711-89d4-3e2ce95f74c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c68987-2256-4dd6-919b-37efe1101449",
        "cursor": {
          "ref": "4ea9db64-df26-4e3f-a473-0192d17c8c07",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54a4799d-33e3-4c5f-a2ee-fc170d928066"
        },
        "item": {
          "id": "48c68987-2256-4dd6-919b-37efe1101449",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5a76419-53ff-40ee-91b2-1df9a9676c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e20b13-6a09-4f10-ab72-cde939ed5884",
        "cursor": {
          "ref": "27027955-44fb-4c2e-b064-a4a4ac429ce0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5aacb9c0-2a63-417c-95bf-060f10232f80"
        },
        "item": {
          "id": "55e20b13-6a09-4f10-ab72-cde939ed5884",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7b824654-b815-46d2-9c33-796ca6beeb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505bc5b9-addd-4b6d-ae83-38060f9206a7",
        "cursor": {
          "ref": "fab658ca-abac-41ba-9eda-e175bb443984",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a2d72b9-4036-466b-9f0d-031d694ad329"
        },
        "item": {
          "id": "505bc5b9-addd-4b6d-ae83-38060f9206a7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "285533c3-3e46-4b57-9cf5-77547cba565c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2028bb88-e5dd-4c1a-8ace-15a24caa8ff9",
        "cursor": {
          "ref": "652e013f-bd10-4007-ba16-635c91af8f71",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "601140c8-105c-4da9-8d7e-3ec5ba0eeb42"
        },
        "item": {
          "id": "2028bb88-e5dd-4c1a-8ace-15a24caa8ff9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0aa79a42-fbf4-4c9a-8e82-51ffd8827bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b0a7eb-0d84-4def-b853-10666bb5e22e",
        "cursor": {
          "ref": "8e20e820-a163-412f-8788-62f2a904a838",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "989ad9bd-13d0-42ac-97c4-7d4032589afb"
        },
        "item": {
          "id": "f9b0a7eb-0d84-4def-b853-10666bb5e22e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "23496092-7fac-4d29-920c-52fa488f0307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51368352-9867-4270-bf6f-07cb2fa6283d",
        "cursor": {
          "ref": "0311c2dd-8f99-4d10-a37d-ce54854ad7bc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1babf4ba-f6e1-41c4-a0f0-f33b95e62992"
        },
        "item": {
          "id": "51368352-9867-4270-bf6f-07cb2fa6283d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3dc18139-e8a5-4cf5-b48a-39d70a919e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06ffcde-626b-45fb-9326-80e0eb0ba71d",
        "cursor": {
          "ref": "8cd5d343-b00e-4850-b523-9ec7606182ac",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5b62561d-f032-407b-95f1-9ae1efb1dcf6"
        },
        "item": {
          "id": "e06ffcde-626b-45fb-9326-80e0eb0ba71d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e9927ba3-2a17-4823-adf8-d0b42f6526fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6ce595-458e-4998-a923-3861b5ee099c",
        "cursor": {
          "ref": "28710f24-b88e-44d1-809b-dbaaa010d55f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a62fd470-5177-4751-b0eb-6089a019a2a4"
        },
        "item": {
          "id": "8b6ce595-458e-4998-a923-3861b5ee099c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f6b7d66c-4608-42a4-90b7-faa519c71b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae829ed-d7a9-4252-9150-021f03a8b17c",
        "cursor": {
          "ref": "df9c9c81-38b3-4d03-81e9-4db38de00a15",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c0f18703-6530-4581-860e-22624c2210e8"
        },
        "item": {
          "id": "bae829ed-d7a9-4252-9150-021f03a8b17c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cd53af10-08ca-4788-b7a5-ac6fcd17e12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f4912-3764-4724-879d-a4ba505041c4",
        "cursor": {
          "ref": "3cdb95d5-56ac-4ce9-86c9-ce476c96aefc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5149207f-c7ee-4b39-a7b0-681c39e00dd7"
        },
        "item": {
          "id": "4a5f4912-3764-4724-879d-a4ba505041c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d51edf5d-cbe0-427e-9780-d0fe9c6d93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d97170-0866-4e19-815a-9b3de1cc1c09",
        "cursor": {
          "ref": "3da58690-2c47-48c1-a3a1-1ee9e08fc6da",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b748ab0d-667b-4100-869b-dfc8bdd692b7"
        },
        "item": {
          "id": "43d97170-0866-4e19-815a-9b3de1cc1c09",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "456fbb40-3140-48bc-9dd5-bfae83822e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68262cb4-21cb-43f1-9ceb-76003b29a5f6",
        "cursor": {
          "ref": "d599407c-e1d9-44e2-a0ab-4fb7fbe76393",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dadcb8a8-3e97-4e90-ba16-3b193d6480b9"
        },
        "item": {
          "id": "68262cb4-21cb-43f1-9ceb-76003b29a5f6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bc01fdcd-2ab1-4e32-a08d-fc6cc6dc2ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8851bb8b-2f40-495c-9ebe-18d4b547e486",
        "cursor": {
          "ref": "1176dcbc-ae8e-4fa9-8e46-6c20c2a7a59d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ee43fc7c-5954-423c-8260-9ce03037e9ea"
        },
        "item": {
          "id": "8851bb8b-2f40-495c-9ebe-18d4b547e486",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a22c51d9-0fc1-4026-869f-b30f569c353d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec20b5f9-9c1d-49be-b4fa-d37d3ee2458e",
        "cursor": {
          "ref": "c577c451-b43d-4d17-81b6-314e124c7bfb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fbc9ac47-62c9-4997-a72b-d72e9e97c97f"
        },
        "item": {
          "id": "ec20b5f9-9c1d-49be-b4fa-d37d3ee2458e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5d486a39-8517-41b7-9b89-faf64e4173c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a97cf-9981-4808-9956-16407c11dde9",
        "cursor": {
          "ref": "94fa7956-6b6e-4f2a-872f-6f72c39f3db3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b50077a9-e499-4d82-b4ad-046054d8f648"
        },
        "item": {
          "id": "b82a97cf-9981-4808-9956-16407c11dde9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "84f8d8c0-942f-4423-9a84-883d8c0dc355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c396d51-0f70-4305-98d5-ebefe8c1cb9e",
        "cursor": {
          "ref": "e03beb6a-a77d-480a-98a2-3198184bbc8b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07ac0dc6-b423-4e32-b8da-dc6956a6d332"
        },
        "item": {
          "id": "7c396d51-0f70-4305-98d5-ebefe8c1cb9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "22f35371-97ba-44af-834f-abd194ed2a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ade116-115a-40f0-b501-5ab30ebc1ec3",
        "cursor": {
          "ref": "9a254311-56e2-4068-9f50-425e3de8872a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bdced67c-5ecf-4466-a1ce-5c0da5cd28d2"
        },
        "item": {
          "id": "04ade116-115a-40f0-b501-5ab30ebc1ec3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "51a4096f-4b05-4a3b-9f99-6aedea833f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fc5590-57bb-4329-a687-fa6547fc98c3",
        "cursor": {
          "ref": "c5925af5-a674-41d7-b9a2-83a655eae45d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "773edd27-e06c-49f1-bfc6-ebb556137176"
        },
        "item": {
          "id": "d2fc5590-57bb-4329-a687-fa6547fc98c3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "505cf862-0329-4109-88bb-fad587f1add0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22d4490-c3db-43ce-bac2-09fffadedeb9",
        "cursor": {
          "ref": "5cde4ddb-c942-4247-93e2-53d058f8e0e5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b22bd5b3-b3f8-4ee0-a006-a1742ddf9379"
        },
        "item": {
          "id": "e22d4490-c3db-43ce-bac2-09fffadedeb9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dbd426aa-48ec-4164-8f6f-d400266d4714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a849479-3967-4258-a1f8-e683855f9153",
        "cursor": {
          "ref": "21274802-7f13-4536-a3a6-c0a7569b2ada",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7270aa04-284a-4f01-85a0-959e9d172ace"
        },
        "item": {
          "id": "6a849479-3967-4258-a1f8-e683855f9153",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fb80c0dd-08c6-42a9-ba00-43d3103c2438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855325b-4a71-49cc-8d65-d2b99d8c6709",
        "cursor": {
          "ref": "1697dc2e-d0f1-4580-8887-461b5d3ca22f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc14db99-2d26-4d25-a2d4-71ce7dbca532"
        },
        "item": {
          "id": "e855325b-4a71-49cc-8d65-d2b99d8c6709",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "407ecd6f-45f5-4f68-ad36-62fd025832d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887a21b9-4ab8-4aa2-aa93-7de54aadcd9a",
        "cursor": {
          "ref": "9f5204e6-a212-4545-9276-6cb6554b68f3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5565d781-ad96-4f75-a95e-7e46e6f53dde"
        },
        "item": {
          "id": "887a21b9-4ab8-4aa2-aa93-7de54aadcd9a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9fa54f21-7ed4-43f0-92d1-2a81bca7f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc07086-5880-473e-a5d4-49de88d6e926",
        "cursor": {
          "ref": "eebb653e-9fd8-456e-a175-d3e0f0a8db62",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "63f2c33d-2901-4fa5-860e-0b742475bb09"
        },
        "item": {
          "id": "ffc07086-5880-473e-a5d4-49de88d6e926",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "585e0894-a1b9-46ef-ae35-9656173d217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044a973b-42da-464f-ab71-6132f05d29e2",
        "cursor": {
          "ref": "53bec48a-07fb-401f-ad05-a0b786640f04",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a227ee2f-80a6-445f-a66e-0c8e360bd323"
        },
        "item": {
          "id": "044a973b-42da-464f-ab71-6132f05d29e2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "433b7589-c109-480a-afff-958b5d343dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad021ec5-9b49-4749-940c-00c9de9f36f4",
        "cursor": {
          "ref": "fb003ec3-f10d-4df3-9150-3016b7beb7ef",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aa07f6c9-b4b9-482f-9d80-9c370a81be56"
        },
        "item": {
          "id": "ad021ec5-9b49-4749-940c-00c9de9f36f4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4360c6e4-06cc-4155-b9c5-b361e4d575bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b2c562-d061-47a1-88c0-bc07311d03f4",
        "cursor": {
          "ref": "37c641ad-fb72-4338-92df-26990efa4888",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e4e1e81-44c0-4c07-90ac-677deb24938d"
        },
        "item": {
          "id": "b4b2c562-d061-47a1-88c0-bc07311d03f4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5d9beac5-f80d-436e-90ce-1ef161c95543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e635efd7-942c-4edd-baef-04cf590bc614",
        "cursor": {
          "ref": "750e0505-3cc8-4fe2-b888-c2b048c2c847",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eb5d3b50-52cb-4ac7-8856-d89a6119a690"
        },
        "item": {
          "id": "e635efd7-942c-4edd-baef-04cf590bc614",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b42be51a-13e6-48e9-8d35-a97a6556fed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf9d1ef-ca97-4fce-b6e2-50e6a1785ecb",
        "cursor": {
          "ref": "a332731c-e96c-4af6-98b7-857d93ca869c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0f102c2a-479b-4fff-bfd4-5b1b4fecad86"
        },
        "item": {
          "id": "ccf9d1ef-ca97-4fce-b6e2-50e6a1785ecb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1c010e5-d267-45af-bd5e-c33adf7c4dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e773b05c-8b7d-4692-92be-078177c53c48",
        "cursor": {
          "ref": "4339d41b-da66-4e47-800f-6655194d78fc",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38a53922-f778-4006-b431-f8e220e0068f"
        },
        "item": {
          "id": "e773b05c-8b7d-4692-92be-078177c53c48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "35856c9e-08e4-45b1-a7f4-bb74fe27d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b9c3b4-fd14-4bb6-9030-6ca95894266c",
        "cursor": {
          "ref": "78d08cc1-0ffc-4b61-9b4a-73dbd162368b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5ff3c027-e7c6-4c22-8c58-0113b09ba933"
        },
        "item": {
          "id": "e5b9c3b4-fd14-4bb6-9030-6ca95894266c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3658536c-0ce4-49d0-a9fb-3018f3aab731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2605630b-1a8b-4764-b407-433d98d2327d",
        "cursor": {
          "ref": "1bcd82e2-4d4e-4525-a36c-1d89370b72e1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ccaaf377-df5d-4d11-bbc2-7195f9adb465"
        },
        "item": {
          "id": "2605630b-1a8b-4764-b407-433d98d2327d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1f7b92f6-980e-4ecc-bcf8-d0ebecfa5777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10238559-b99d-44df-9d1f-a3f156d5b212",
        "cursor": {
          "ref": "8b428045-864e-4bf9-9efe-0c8ee6215a5f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9940444b-5ec7-47b8-b815-c6ac55e8b766"
        },
        "item": {
          "id": "10238559-b99d-44df-9d1f-a3f156d5b212",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "20b542b5-36d0-4db8-815f-2b3390e98dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806646a0-2c52-43bf-ab03-79628b39886c",
        "cursor": {
          "ref": "e14e6299-591d-4be5-842e-ccdd66805f14",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "278a08a2-c099-4293-9034-db98a7a00eac"
        },
        "item": {
          "id": "806646a0-2c52-43bf-ab03-79628b39886c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee4bfcbb-94be-4048-85a2-64590a475ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0154e3-b3f6-4db0-a999-d27be6ee1479",
        "cursor": {
          "ref": "03799ae3-41fd-4a6d-af23-0ce4886a3944",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9e96c26-36c9-47cf-86fa-1ab0e204ffb4"
        },
        "item": {
          "id": "1c0154e3-b3f6-4db0-a999-d27be6ee1479",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "825012bd-1194-4133-9ead-68f449f3c80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0652cc16-75bc-4fd6-8302-2717447b5608",
        "cursor": {
          "ref": "6d2dfd17-d168-4991-9862-23c2a2fb62db",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1e519b93-459e-4195-a90e-81c5de951d23"
        },
        "item": {
          "id": "0652cc16-75bc-4fd6-8302-2717447b5608",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ffd63816-6069-4aef-a23b-25fa944e9c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273de97-c01d-4018-b843-5feb3ed39a42",
        "cursor": {
          "ref": "c085da64-4c58-432b-850b-1cb0645c7af4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "928b7eca-bc3f-46a3-bdce-6796054ae5e2"
        },
        "item": {
          "id": "5273de97-c01d-4018-b843-5feb3ed39a42",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f6f80db7-6301-4a73-96e7-daa74b3522f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd5f7ea-51d0-4882-92b9-498eb6cc151b",
        "cursor": {
          "ref": "0f95a3de-aa9d-4701-9c38-4d27e6d32df0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e6b1a76c-20c0-4a03-8002-5a69892d1261"
        },
        "item": {
          "id": "1bd5f7ea-51d0-4882-92b9-498eb6cc151b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "25974c2f-a8d8-45db-aebb-effc2a3b2214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d681084a-f9d4-4784-944e-5e4aaff37195",
        "cursor": {
          "ref": "263ea04d-ba62-48c2-adec-20e4b0197f3f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4cbeab3e-e481-488a-935c-c39cdb618b9c"
        },
        "item": {
          "id": "d681084a-f9d4-4784-944e-5e4aaff37195",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9885695d-c7b1-48d7-b098-51d566e2a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b63328-7166-46a5-8b66-bfaad1603624",
        "cursor": {
          "ref": "4e770537-6001-426e-afe9-dd75fa7d60be",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "557faa7a-a276-4f3a-8363-432c9e88d722"
        },
        "item": {
          "id": "31b63328-7166-46a5-8b66-bfaad1603624",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "409244c4-77b8-45df-8e59-acadf06fbf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee3472b-ded1-46bd-82c9-c6d9b152943d",
        "cursor": {
          "ref": "96221349-54ae-489d-8937-cef0d17907e5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "036412d6-17c3-4645-ab4f-2794471b5466"
        },
        "item": {
          "id": "aee3472b-ded1-46bd-82c9-c6d9b152943d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d48b8c2b-8780-4c7a-8c99-d55930028d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128294a2-7612-450a-bb65-93a5a1374372",
        "cursor": {
          "ref": "7b3f6c91-8b02-497e-a43c-b5cbef4e4aa4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "45bda0a7-b2ab-42f0-8644-13d493b95502"
        },
        "item": {
          "id": "128294a2-7612-450a-bb65-93a5a1374372",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd52f3cb-02f5-4df7-9217-5bc844f4abe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c7e87d-8c7e-4eb1-890a-b0d91a0d3dc0",
        "cursor": {
          "ref": "29395451-3f4a-445e-a3c9-4b07e6b4a786",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cadac683-2f19-4ac9-b9f0-4919639c2c6d"
        },
        "item": {
          "id": "c9c7e87d-8c7e-4eb1-890a-b0d91a0d3dc0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "669a67e9-ab88-4538-9353-8e4ae9654f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6295873e-c6e0-4553-9496-c6942a9793f3",
        "cursor": {
          "ref": "c9fc7906-78c2-4d06-aefe-ba463c5dc31d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "caa8ce57-057a-4416-aef1-38ba365d69cf"
        },
        "item": {
          "id": "6295873e-c6e0-4553-9496-c6942a9793f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9e77fc9a-ad1d-46cc-a4d7-1dd9bff858b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae44a42-c088-4a5c-9260-080f78e3e697",
        "cursor": {
          "ref": "b7bf792b-2e41-42a8-87d7-e79dfc03b907",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ad8dcd6-e2b7-4155-a7c8-e32c873bafd6"
        },
        "item": {
          "id": "aae44a42-c088-4a5c-9260-080f78e3e697",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "64f4d91d-f7ad-4636-abcb-734d9af4c3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6625b8-5615-4478-9baf-14c92853886d",
        "cursor": {
          "ref": "60f13e99-cdcc-474b-a948-73c7f1e12b14",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "baee08c5-e51e-4920-9f8d-259e19fab8a1"
        },
        "item": {
          "id": "3b6625b8-5615-4478-9baf-14c92853886d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2db915b-1a8d-4c53-b197-3bc1a335ca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66b452f-1f8c-4c34-9e6e-6483ad4cd58a",
        "cursor": {
          "ref": "b178b06a-fe7a-4d56-8d6d-1d9fc5408ed8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "88f14173-01b8-46a4-a580-aa9bbaf386da"
        },
        "item": {
          "id": "a66b452f-1f8c-4c34-9e6e-6483ad4cd58a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1c7650fc-f0d2-42dc-a881-f21199ae8ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74310904-f59e-48c3-9943-cf140e6b5765",
        "cursor": {
          "ref": "cfce27c7-39c8-48fb-a706-2c8b9fe20974",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b3c8f84-4802-4240-a109-c77ab14fba15"
        },
        "item": {
          "id": "74310904-f59e-48c3-9943-cf140e6b5765",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f0cf826-defb-4183-87f5-acd595ac59ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82211e1a-eae3-45c3-967b-2bbf5bb47e93",
        "cursor": {
          "ref": "16a60f0f-aa4a-4dcd-b15d-ae83f48a3e18",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ce3b6a9a-70e1-4364-b0e9-797c2e22731e"
        },
        "item": {
          "id": "82211e1a-eae3-45c3-967b-2bbf5bb47e93",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ab35fd81-22a1-4c86-bc1a-4a3bde84bca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad68f81-5702-4ce6-93ca-1854d2117c76",
        "cursor": {
          "ref": "1f4e964c-e75e-48bc-9bac-0311bc924b5b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "754f87e0-3e9d-4a92-bced-865d186ef308"
        },
        "item": {
          "id": "4ad68f81-5702-4ce6-93ca-1854d2117c76",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f2708659-4d41-4eae-bc3c-9b016aeb9e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1942392-726f-4a09-a787-d9e0be09b018",
        "cursor": {
          "ref": "403ec793-5342-4240-8bd5-51cf9871bec0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0533490c-9582-48eb-82a9-9890fa1180d1"
        },
        "item": {
          "id": "e1942392-726f-4a09-a787-d9e0be09b018",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f25919f2-d0ce-40aa-8c14-2570a4b8d39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128e7c33-9104-4b14-8eba-e711a5f7d71e",
        "cursor": {
          "ref": "1b64f44e-888a-4125-bd87-65c4ca3051c9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b1a42e5-5d43-41ba-95dd-7a716f5d151f"
        },
        "item": {
          "id": "128e7c33-9104-4b14-8eba-e711a5f7d71e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "575e0627-aec9-480f-95b5-de1c37836f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32cb6a0-99aa-44fa-9fa3-6ba637c23e76",
        "cursor": {
          "ref": "d02cabdb-12a2-405d-bd66-76f6f5933113",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aaa84c74-2976-404b-813c-35b1b770f41a"
        },
        "item": {
          "id": "f32cb6a0-99aa-44fa-9fa3-6ba637c23e76",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a2dddd4d-ca5c-41f9-9151-301487c038f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3938904a-9cab-47a4-9901-6324126439e2",
        "cursor": {
          "ref": "507247aa-57f3-493f-b336-22bde2ebdea4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "158ada17-1bc9-4bc3-b734-9449236a00cb"
        },
        "item": {
          "id": "3938904a-9cab-47a4-9901-6324126439e2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2d596efc-ec49-4ae5-bb29-d5cffdb2995a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059428c-7f36-4c4b-bfaf-7096a257bf79",
        "cursor": {
          "ref": "50be0557-167a-46b2-ae54-b261e7012eff",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "94d868a9-0125-4b9a-b641-2b3f612440a1"
        },
        "item": {
          "id": "3059428c-7f36-4c4b-bfaf-7096a257bf79",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f2e2444-9409-4756-92d9-8bdb4c4976d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bfdb73-b14f-4acd-9b03-7fe20a8a3286",
        "cursor": {
          "ref": "ecfb5073-0cc9-424c-b6f0-be99cfb07f2c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "29d8fd5d-36ae-453e-98b4-8b2d4c592a02"
        },
        "item": {
          "id": "c8bfdb73-b14f-4acd-9b03-7fe20a8a3286",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f0f395dd-ac37-4448-809b-d2a969b5fffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81281816-a8c3-4e25-9660-287767477bba",
        "cursor": {
          "ref": "f3ce3845-093b-41de-9722-43e246e4c4a8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7ca14734-d33d-4dc7-9e8e-cba7f6864542"
        },
        "item": {
          "id": "81281816-a8c3-4e25-9660-287767477bba",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "78b92722-1ab6-473f-b660-877b8d5d8701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3eccda-574d-4d51-bc0f-d3be8f69cfbb",
        "cursor": {
          "ref": "5fda9542-8055-4dd6-892e-8f242d4ef112",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "33fee7da-9a95-4163-9ea4-bacffa87fe71"
        },
        "item": {
          "id": "1d3eccda-574d-4d51-bc0f-d3be8f69cfbb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c71b663d-18e0-40c9-a624-2d4eb5d8f49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02a26a9-0dc2-47ad-b8cf-7dcdc2fca438",
        "cursor": {
          "ref": "28ef1437-be0c-4317-9cac-6f3e8b7abc51",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a36411a3-f514-4651-ba3a-3418ae4d873c"
        },
        "item": {
          "id": "b02a26a9-0dc2-47ad-b8cf-7dcdc2fca438",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "06a85759-3b85-4865-a2ba-e4b6048d0ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fac016b-7393-4245-8316-517438dd36bf",
        "cursor": {
          "ref": "8662836b-8b74-4e89-a1db-6b1a22aa5891",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05d05f6b-26a9-4859-a02f-e4e4ed8d1b03"
        },
        "item": {
          "id": "1fac016b-7393-4245-8316-517438dd36bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e1b586ed-ff0b-402f-90bf-b3ec4b882f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479f3919-3a28-4de5-9e71-c906fab56612",
        "cursor": {
          "ref": "e71197b9-ac63-4318-a5e5-b27c321e7b62",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "58e40877-ba59-4db1-95ca-4d86f1a376ac"
        },
        "item": {
          "id": "479f3919-3a28-4de5-9e71-c906fab56612",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "06509337-4fb7-454b-bc96-0e830e1d6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b8e8cb-acc9-48c0-802c-a26caa9fd34f",
        "cursor": {
          "ref": "8f9f78cc-baa8-457f-a23c-6ba03d5e6be2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3cc3b00a-9e73-43b3-94c4-3b52d09738df"
        },
        "item": {
          "id": "a0b8e8cb-acc9-48c0-802c-a26caa9fd34f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a12097b9-222f-40b2-afd7-982492b7082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "58e73c35-b37a-42ce-abdb-801785dcda2f",
        "cursor": {
          "ref": "8703f5e2-65dc-4ca6-b354-b6dffa4f2d9c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4700455d-00c3-4c9a-9db7-b560a73fc1ac"
        },
        "item": {
          "id": "58e73c35-b37a-42ce-abdb-801785dcda2f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f95132a-a81c-4f5c-b968-466f946296cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "3eea62e0-bfe1-4fd4-84b0-26be18cae47f",
        "cursor": {
          "ref": "d6f7b4cd-deef-4b36-9e3b-6ff8886db532",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bd897f73-fb05-49c6-9087-b1643673794e"
        },
        "item": {
          "id": "3eea62e0-bfe1-4fd4-84b0-26be18cae47f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e7511a10-f135-4311-8347-fc23d71060f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e18ecd8b-15d9-42b5-9f93-04afc7db4510",
        "cursor": {
          "ref": "5e6028c4-4bb8-44fe-9347-8fad262bd797",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e6e373c-8825-44f6-87be-ce99933469bf"
        },
        "item": {
          "id": "e18ecd8b-15d9-42b5-9f93-04afc7db4510",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8c134aed-b007-4ace-9cef-241482184f82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ecd8b-15d9-42b5-9f93-04afc7db4510",
        "cursor": {
          "ref": "5e6028c4-4bb8-44fe-9347-8fad262bd797",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e6e373c-8825-44f6-87be-ce99933469bf"
        },
        "item": {
          "id": "e18ecd8b-15d9-42b5-9f93-04afc7db4510",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8c134aed-b007-4ace-9cef-241482184f82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64781200-7e4d-4ead-9b84-e90db0784bf1",
        "cursor": {
          "ref": "f4c4de2c-3c9e-4673-aefd-b1e949ff58ec",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c0323946-a9e7-4b13-88de-f2c790d13669"
        },
        "item": {
          "id": "64781200-7e4d-4ead-9b84-e90db0784bf1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b34b72ac-694c-484c-b48d-0515749e1fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549651ed-f0c5-4b10-91a3-27fccb12d1ac",
        "cursor": {
          "ref": "4e264feb-8f58-4643-9056-4bff4e43ce31",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7271ba93-a680-4c10-9e98-6495a38c2eba"
        },
        "item": {
          "id": "549651ed-f0c5-4b10-91a3-27fccb12d1ac",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6c7aba8c-5a29-4049-bf54-67d3bb83159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}