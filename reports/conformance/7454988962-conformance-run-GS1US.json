{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "191524a9-fda6-4808-835c-148984f0cda9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0edf9658-abca-40e7-a3bc-f9c38fe78e1a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a1f2618-8af3-42ad-b300-e2c2ef19bd5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ba4a3ae-b609-437a-815e-83406bec6001"
                }
              }
            ]
          },
          {
            "id": "9e604128-3132-470d-952c-9489d22c169e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f88d823c-3a42-4b10-9395-d9e6e055662c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07047424-cb5a-4a3a-b85d-72a02ac89bcc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1332fe4-55fc-4797-a11c-c8b0514efb29",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "459f7b12-39ef-4adf-99aa-2791fa552ecb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ba9f947-0205-49b9-9bb0-987df7218877",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f54e95a-fca8-4258-9180-8ca7504742a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6684b39-e304-4423-bfce-744593ece68b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "285a3d47-97e8-443a-94f8-f38fd431e210",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0924908a-f0ff-4a79-8fda-ca0f283b6617"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ec6ff60-b16d-498d-9003-0163145d1eac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "980d72d4-36cd-4b7c-b385-79040594192e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f90eab36-7270-4c3b-ad3b-7b464906e9de",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "411ea3e7-59e6-4bcb-ae3a-4149f2e40311"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00601fc7-89c2-44a7-8312-6f3568acf903",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d15e983c-4b7d-44b8-a67b-623b14e06100"
            }
          }
        ]
      },
      {
        "id": "ff775ce5-b43c-4f57-ac1d-9754f4730bec",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "496408a6-cf69-4b40-9550-50f6ce8fe3de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b2b1536-d365-451f-b512-db4c6137971f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96731453-ed81-472d-ab8a-15829a01b178",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4151a99-20a8-4676-b264-a680c5caf0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e212e7a-b3ec-4cc8-bffc-a96b558ad340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4def30-d330-47d3-b3ed-b6d138293c18",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb4530-c89f-4fed-818b-6d84b631e8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ac10c8d-47f6-4a21-b480-ac1c2e289990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177adfa6-e095-427d-bb97-8f6f1ef130da",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df939f6f-bea3-4dd2-87b6-b00ac7caf2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8306c435-bc88-469e-8f44-f4260e038553"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7870dfc1-3283-488b-8b36-385ab60a9b96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a1a510d-b18e-4540-a99d-e8bb98957320",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84da12c-ba04-4aba-9344-3d6015cc1abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f0a1057-e126-4787-a830-a653ecafc7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50162e95-ff33-483b-b4c8-bdef363e0ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0b45ac-cd64-4ed3-b660-0aa078961fbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a03071a-3ba1-447a-8204-f39bded7b716",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7656d541-e771-45fc-8990-a1a9c05df9e2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1617e5a6-a3eb-4ec2-ad92-c1ce3205fd65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c4d811a6-05a3-4278-a53d-67b51a5c4696"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d9b4e6b-3571-4d12-a053-cf3ccfd2fad6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4719dc07-5788-425f-9d7a-7ca5c637d4d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25ee09c9-1106-4b8f-ab8f-40d6ece8dde7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84c666e5-b484-4c96-836e-552e153aad1b"
            }
          }
        ]
      },
      {
        "id": "eb2eb478-ecaf-41a9-a0f3-1d5e5c6eb8ed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "137fd75c-2916-4f6e-86d4-63c6ee18f5ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2549be5d-2c15-4f17-a7b4-b993bf444e50",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "63a70f25-6243-45a3-86b9-367741ae54b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926cca01-fd3a-4ee9-9b9d-bef8074f6811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a0f6e4-08a2-4260-904d-d6a52c226ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e81065b-9c41-4280-a530-76faa0b10d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c75bf0d-d9c5-41df-90c6-690077c00b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290bcec7-df8f-4fdc-a936-c2dc3fc86c26",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31615425-c46b-4952-99b1-82eed4231e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d09b63-5e14-4f2b-9b79-4deed02fe124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f467650-c531-4e5d-b7d5-f3c86ea9f326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6657d761-9321-404a-981b-23e6c2459005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827cf01f-04ea-4fa9-99d2-dd1eb81c71e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba02f4-2302-4527-9e5e-f711b3ceb049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1ca2a0-2144-4afa-9228-a78c00a5ce4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f2ae5-ad5b-413f-9a8b-e1eaeca8c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab75408d-5841-4d3e-a8e9-8a2597325794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c392fcab-db54-41a1-8844-0053f875ac27",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890062f2-7e9e-438c-a996-b6746e6727aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de27a7d-7ed1-4f1f-a925-398813211fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3588bb1d-b6ab-4e1b-8c9a-445d3c24dfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c465e06a-ca72-4ace-b8cf-587c0424a8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8139932-9a0f-40c0-9927-dbaf979b7208",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55dc55a-768a-472b-87b2-bfa21b4a54b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81961ad8-07cd-4078-a9e5-ba33a6009f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9bab9e-508e-4d71-98ac-8191b752bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff16d58-f0fb-4029-8415-386ae89f7be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53697f71-faf1-4b77-af20-139ca6582f08",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe752c16-44e7-45bc-a70d-06b53b132e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8d2d8f-d629-4e8f-ac4c-6a16f2a674a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4db996-e915-4b9a-80f2-8c4958751acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d64018-3b5b-4f35-8347-85bf5d3460a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd68c73-2e96-44c7-8e2c-730e2abc98bb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c501dc03-5a22-4e71-aeea-313f6732c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d1b3d7-91e1-488c-b62a-a52fce4e92d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9423e7-bb14-45c2-9be2-a5cad46b523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcf6e0c2-154f-4e48-89ac-5e37df9c40cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34081ce2-b79d-4c9a-aaee-5b1687cd4be5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3470edeb-35c1-4b8e-9420-87200c4c1662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab33de9-7928-4abe-9c6c-a89dd94ebce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933a4879-0d9d-4d35-b7da-c4bc2e0bd164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1fe5d2f-d435-43ae-a574-a6d8ff57cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b79dd1-90d0-435f-9c6c-de2eb475d59c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45876ccc-8f09-4e6f-a10c-70dd9e7ac4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f63926f-2da5-4437-8222-6580e4321015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a799778-300b-48c1-9069-215cc8700dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "491d994b-be4b-422b-8696-cea78c84f281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7656f171-9456-4cfe-ad27-60fe6d2eee4f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ef266-8111-4892-8737-4dbe4ad55095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b730a8c9-5ab4-4a7d-9209-68fde89ed595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103fab14-ae22-4d59-8e68-86c42d16669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "312cdb98-043c-4c83-a27b-4020741a28d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a84c3f-8e67-4b70-afd2-6baa11206ba8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b647f7e-4d27-44c6-990d-4c3d99090fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab5473c-0d5c-4d53-857e-d56bf343447a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4d3a9-fbec-4114-9c3b-ba9f502d8277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4ed2579-3cb7-428b-b0a7-2146c0308228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1aae94-282c-4a3b-8cca-5d7763d58fea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bfa43b-a94b-4cc6-9063-ee00b20ae8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ae7f80-7d53-4523-8d76-d7295e26f849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11916317-af4a-4f66-947f-23f9ba419814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74a473d7-135e-4e2c-9a1b-cba8678f43a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ab0c1-e560-4b98-b2a4-6b3e65035929",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ea8c6-06a5-42b3-8b0f-73903abc6c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d0a91b-41c3-4e79-90e8-b9251f8d3f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c177fc-0b15-4626-b458-bea96b40b5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "189c2882-a39a-4869-913e-6ce49131c82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0618ed08-8db9-4190-bec3-cf827685dbb9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56148b5b-0a3e-4469-a894-b3ad2824d614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31e885b-eea3-474d-a9dd-53820cad5038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a098813-d876-4e3f-80f0-a0ac587dba7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2264c9f3-9456-4be8-aeec-17e7ba5bd886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b14aa-c2ed-48c8-b69d-a15237e28d26",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45feeae9-a9c4-40ec-af3e-41a113cb25ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a9890b-60fc-4752-ab34-6ea30e293a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469f202a-9396-4aa0-aec7-491523f83c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339bf13e-df9f-473c-9e90-6671b964983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5899b98d-aeaa-4800-a756-7689b42c2416",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2295f82-cc5b-4c7c-ad95-2b24abf3985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c39f62-c7d4-4274-8134-de17fa941eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a1299-20d4-4a42-878d-1af082705732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5d5166b-ad00-4f23-bc14-f4d19a6c8f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4331fa9b-4205-43c2-a8c2-c2dac04af4c5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972890ab-c331-4fbc-b194-cc90ecf46427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c455d242-058f-4837-bd04-97311fe8255b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7faec0-28f1-418d-95f2-3cedf8700546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eafd4b02-4897-47e5-817e-9ea339e66801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f50917-c894-4079-a5b7-57250f7f547f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f17c64-c03f-49a5-9aca-4e7d970bb954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc58b6d9-1f5c-477a-9188-8b3c2289316f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413fcd54-e556-442b-bf1a-e4e76bcff557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5316833d-9cda-4976-8477-7474982239a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62897b3e-c39b-4b70-a5d2-0a4ede5a59ff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a557af7-a32b-4e48-af64-ef91d4e2aa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec86cae-83b4-4d39-bcbd-dfde72ade37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a013ca1-7f9f-47be-a5e9-31d11ab88783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf849d1-bbb0-4927-851e-57c6a9796668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82e8ee5-359e-47d6-8a8e-69dfbfd92fed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494375ba-d764-4f3d-bfd4-8c1a77b31ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab32e4c-40c4-4fbe-8e89-d4469c6d6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed8a6e-3f07-44f1-9abd-8aee048622de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d65fc8a5-f20f-46e8-890d-c3786dbab818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b692c4d-6490-49fe-b2d5-db130c5f31e0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2a3dc-a358-4350-a0d3-3c2b779d9b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3782af8-e4bb-4f3a-b23a-1de295219621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044491c6-82e1-4f07-9f42-63c50581ebbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39cf0efa-534b-4341-a398-4e3d22d6f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14bc408-210c-4281-9e64-af4926a8c033",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fc1320-e185-4c96-bf77-b0b3a82166f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a69e795-c77d-41af-a87d-8aa57e21e7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96417023-6b8c-4b67-b3fc-bc210174f04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "912d69ab-eb4b-42f9-a2d2-14e0086fdbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea9622b-e7e2-42c4-9d80-bed58210c6a7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2064940-a2e7-415f-8197-2a8027047372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4db501a-9c9d-4145-8fae-11c28f7e32a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7266507-6669-4941-bed0-4f4950936278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5db84cc7-64d5-4609-8938-ad5b6924fafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee4120d-88ff-4cbd-bc6b-8ddfff56dd7d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a2621-48c2-4496-9a38-930fe8944011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95349453-d7b3-4182-befe-cffd142ea5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2968c9-d6b0-4a52-827f-f4d0c44c2fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f18658-d326-401e-8930-5cfefc52afcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9d4ed8-6efc-448d-9e64-eca56fce9346",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee259b7a-09e0-4867-867a-52da6ef1afb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6f5a16-353a-4c55-8838-c276be1b4796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a50353-ee94-44cd-80d9-31b32c79fd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "026149d0-3d27-44f1-84e2-3ca258b6459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eab6ed9-fd02-477d-8c4c-0af3410ce26c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32996d9-8515-4859-b38b-c2968e38db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f277468f-e672-4fbd-912b-15608e6c8c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9dc555-c6da-4529-b784-a42c42192341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6124bda9-df32-4411-a8cc-fe33221ab9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce398cb1-3fee-4395-a67e-a2e696eece05",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1516d49d-37cd-4ca2-adba-599fb5f4771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a4071-b3d4-4301-9760-406acc99d10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939d98da-6383-4e9f-8318-cae26e29f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f877c341-a003-4181-9139-c1165c588e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0bc18d-3a5c-48dc-8df7-b0d241cf8a3c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a5e7c3-5e51-4738-ace8-26a5900e275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1eff03-d909-4a43-bc63-f783e5290599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83a3419-dacc-41b5-a4ee-c1392d554a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17a818a-e788-4b9f-a61f-d034d3d889b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be00953-2feb-4358-9058-dba48fd6a776",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd061bd0-1b1c-4292-b046-85307df2a83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4932acf9-e40e-498d-bdc0-e5b71f1fc399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bab865-e574-42d6-9bb5-82946e94bbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "849c83fe-5fb2-4966-bf19-7927668ca44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55c66d-ab55-428e-afb6-d3a068c99288",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22090cf-03fe-42f3-ad37-4e850bac1b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d617517b-4dc5-46bd-84d5-c712e0f51ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168fe467-84be-4b03-9437-40e85f8a220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cabcb45-6dee-4a41-bbb4-03811feca9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b2b74b-7e79-4856-a44f-3575208b9be5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf1c58-6a0a-4b21-8741-53fd8591ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5292c278-0f05-4b6e-a342-250d1027345e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53d39e-b01b-4331-9d8a-fb570246cacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc736f8-b4b0-43b1-b636-99a292028e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef8bdee-cf33-4846-a955-bbf5810a1360",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931873b5-7de4-48f7-b0d6-83919201d221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f3b93b-cb11-46d3-acee-8ae68a0ae7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3065d37-efab-4f76-bd6c-b8b00fb7db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b45aa7c-c26a-47b8-ab87-0cdec8e8f067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b092cb6b-64d0-4851-920c-ff4d5754c1c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce59b011-43b5-46bc-877a-f56918d3dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516dca8c-e6c0-4a04-a66d-2adc2c5bae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c011d5-5b5b-4742-89eb-0e720c37f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a1ccd1-f46b-4fcb-b23f-e81e3cc14183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b91e73-8188-4b82-ae19-5f76547e95bb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8806c7ac-fec4-4cc7-943c-207894c0faa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934bf039-c593-4504-9f5a-abb170c26810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e03b7f-8c2b-47f6-b6c5-341a782c445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b3eb9e-197d-4dcd-b996-6f1b6264f5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fd1f8e-a832-443f-a275-f6ab1a3b67ef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ec2b2d-4be8-4c00-8af5-3a4dd5e57ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58b5bc8-163a-4001-9212-734d055c1e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21fafb0-2f3a-472f-abf7-5f17f3c2fe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "30201ef1-9b85-46dc-bcfb-db81708fa3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a80ba6f-243b-4e67-8f03-afa5d1943730",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acbab9e-4c0f-4bbd-ba9a-74bfe919a6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b766244-da29-42df-9577-a91c88b5815e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac244c74-37b6-4660-b665-53aea70fa9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc47c20-5b18-4133-a800-53a347110401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc7001-d114-48db-96fe-7c9d1af14f3d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efc76a7-94bb-44e0-9ef2-3a5def828fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a96e48-c1b9-4cec-b7da-ed3641418c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94862ae9-de56-454f-8242-643bdb350dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a594655e-eea1-48bd-8e88-eaff68a1611b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939801b-f71d-426f-bc8b-84ae6a5ef301",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6ccdd4-c994-49cb-b123-db2f366c1566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c61e96-1309-41ed-86a0-a561827e8928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c643b19a-5c86-4074-908d-2afbe56759f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d36da1-88bf-4832-a105-ba83e05dd8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2093f04-49ca-495e-804f-959911adc421",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98928985-1276-4a9f-8943-2afdb370d2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e3269a-d67a-4820-aebf-907b67aba1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305f52c5-9278-4523-98a5-4adce4c1ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "943d8383-d024-4889-8001-0405af27b901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22fe7fa-a5cd-4585-b208-598d90ba9535",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98461ee7-5e6e-4796-80ca-cf156b7f6ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725145b3-2508-4803-85f5-419e3db0264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63eb59-e362-4319-887c-35a269e5706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "553e6deb-a6c1-4972-85d5-b18b75d9dab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a956b2-0ac6-4e91-8aa2-6d17b8fbe30b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359b3e2e-faba-4f62-8e2e-f5ec042e1763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51996707-da9e-44f1-9c51-db928608284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c0d00d-94cb-4bee-ae19-e739315ea8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ee7ebc-0c6b-4357-b596-d72733990b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e33e33b-784a-486f-81b3-10f2dc9072d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ce559-ea48-4932-a631-21d5488db54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6853a5e-7e43-4372-9221-8ad4582c579d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74880261-b130-4c2d-b479-596f07b8c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32d30148-d9b3-4212-8e4a-22da655d2943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb42b5-e586-44dd-962d-5ec45d16eca5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bba832-8778-4f12-84a6-3d008ecd1b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83f6a33-99cd-471c-9c09-eeea20b2146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0529f591-96dd-41a5-b6f9-20b73f57f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fdca8d-361a-4480-9518-a8cb32dd646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c5f0f-b5b5-4d68-acdd-1259faf60334",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdd91c3-e812-4a88-904d-2e250e169d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b60763-f33e-40c5-998e-79539849297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4738c0eb-0672-4b40-8771-163c0d4c599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a9f69-cf08-4c0f-a6c0-aba1566315ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7e7c4c-cc7a-420f-b46e-2d9bec5263ef",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e85e77b-3927-42f9-8419-8e5de2e7c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02354e68-e1a5-4791-b30b-74e508a288e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3c46d4-9795-49a0-88fc-a4257d0c5b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba58695-21c9-4bac-a53f-91359e5acd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb67e18-f537-4c37-b91b-7770e6e78518",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2d0021-7749-42c6-9dbb-fe9c2819310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c295a4ad-9757-4402-99f6-dfd53777bbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbc8293-c9fe-4e95-87ec-c8bc4c911d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c51bc3-ff6c-4bb0-ad6c-113bdb3f4e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7611b1-39b2-4e61-8cba-85ae3d7cc5b8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6be180-f7fa-48fb-a906-70ac095898e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e67f4-f682-4635-a4b0-ef8f8cfd0f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f9a853-2a7b-4ed1-a0bb-fd66c16887c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94e356f-6670-495d-9e04-b48e68e39ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a21aaa5-bc33-4390-b43a-662cb83e4f2e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84efc21-1abf-4ce7-97c7-2adb918bd0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1d59ec-6e21-405d-be48-f5dd1e3f024b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485c2e13-f0ab-43b7-a5c7-4940c2bbfb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bbb715-96cb-4b87-bf3a-041e67c5c636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26876d04-df03-4a9f-ae4a-d7862a3013a7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817279c1-e90f-4d6f-9d5b-f2f107cb5dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0865ce-7cb8-45be-a864-4dfc9f53181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4bf68-b9a6-49d7-a676-51c2178f77ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf830296-2776-4a41-abdc-c4af7728b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7150794d-ab91-405b-8321-d58ff4f56ed7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c083b8d-8033-4906-826a-5e2b958f9fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c4f99b-de98-491d-97ef-51c130354b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7cacc7-fc79-4f6b-85d7-a69759474331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18ab78ad-6894-42a4-b04d-78a5ec8a7713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82485ed6-e253-46af-9f71-23d0d7f54dd2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba3e5e0-f5da-4750-b17e-7f8e7fa0b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb290b4-1b8d-4bf4-98b7-9b951435bc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0624df-3c9f-4263-b6f1-b028856f858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3defd77e-356a-43f5-98f8-6901e10ee4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30094f6-68ac-4ffb-ab91-6197d6d602c9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4d2ef1-bccf-4117-b219-fbdc184e8d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb214384-19d7-47e7-b48e-d3458651deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe9abc2-3f50-4b1d-aee5-c62ed3f532eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fead4c4-0f46-4b68-97fd-8eeaa44360ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f915a73-3263-4e57-905f-4d4f5cdb224c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029b7ecb-6036-4477-bb2f-88a986d9208d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7c6505-59fb-45ea-8fdc-bd90b0468ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61679899-824c-43be-a7ea-ee9c35d67877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b1248d-dc47-49f3-a79c-c39af205bd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55612668-522c-4414-9bd8-b7293e61735b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0370fbef-c53e-4090-9c50-602a4b9ca94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbde3a1-0b5a-4ffe-83ec-49c2267731dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16676e0d-80f3-42d2-8c35-c20813d5a317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6651a542-0119-474b-b5c5-e425529d11df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c33454c-fb82-4cc1-a621-5a06db5bf9cf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b6a2ad-d29d-4191-a9d4-9c7a86b22f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1637df-957d-4a3f-ac88-c8b1b9ba83b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc07b76-840c-457a-ba08-c6469ea1a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0aa8829-3658-46f4-a229-b7494c98e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c202135e-e3d1-4937-b364-9a88815b0613",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01099246-6365-41a0-9922-ed23a7735ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e81a74-a70d-44a2-b269-367e4de924f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7b69ec-38d4-43c3-a59f-645ed6c901d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99045a91-3c32-4a9b-96fa-761728a550c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96616b7-0437-4f85-846f-4850894d346f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5271f67-5906-4c39-aee5-7910d3a12ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a793d7-c1a1-4730-8e34-a3c255e00942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2c33c-58fa-4303-82a5-9b9fa9b81f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c70ea6f-a7ad-422e-af7d-210cf0f04ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64881a4d-d33c-47b5-8871-67ec1ade8476",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff68c794-ec00-4327-aed9-eaea74d12e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8846e839-241b-4cd2-a49b-1781d199b63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b85be2-82b7-40cc-8f1c-32e6fdddbe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "252427ac-ab60-4c15-86e7-3abd47e40746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80257c53-49bd-4d31-bcb1-bc749877dd48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dee4da5-079e-4c7d-bf7a-a98b4b2764ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cd98f9-79fe-4e62-a2f7-662e9741df20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b107e062-f96b-496f-baac-f58753bcec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1819f68f-c8bf-4d4e-a308-b99919803953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1fad24-6548-410a-8b75-bcb331dda86f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddd8bf3-fba3-42b1-b89b-2f47ed261c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2977a884-0175-45a5-b41d-74ce65e6ba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236abff5-1d14-42a7-973d-e4cce4b3859a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce27cfb-ab5b-4b3c-ac6f-a45c793deb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87f4b7-bc20-4d57-b6d1-e3e6462f35c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11475d84-d951-4ae1-94fe-87a2134b8f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3206e420-ad38-46dc-8661-88007b70cabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db1d19d-3ba5-4261-9783-62d17f9442a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "606444ed-f888-4016-9833-3e9b8fe01f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fed5714-f3e7-4638-a000-369bbc99d412",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae970f4-5767-4489-a4be-37f5eed0cc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc66051-fd01-4d84-816b-27789296d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358c87f1-4ca9-4882-b3ca-b4e32f1fde51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ef86d8-b8e9-4e19-b58b-142419ced6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f529ed3-eecb-4522-b36f-4ed107cad012",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec2d28-5537-4940-a6b3-7ec8ce8ee2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e6e1b4-674c-4e47-a719-2f7bea53ebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8edf700-377a-4228-ba9b-ebc4470de928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "555f7496-b06e-4540-b208-689f9efca63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff22c7-09dd-4196-8dca-655d7bf1b7fc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aa4ae6-8c0c-48e3-b98f-086be813caee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc94cdfc-ac49-451f-ab25-cab6f3c7678b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cdb1e9-a9ee-4207-8fea-fde2a8e704f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "806b5d6f-9b1f-41d3-8bd7-25864699f425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b7b4e2-b65b-4862-aa93-784341859f49",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c5709-a264-49e1-b929-e4128561f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5782128a-7ccb-4cda-ac6f-297c8ad53d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4e72f7-0897-4cd6-bec1-fd5a08c7c667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0113f7f6-555c-450d-a5c1-34a93aeff4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b3c2c-24a4-407e-b16a-185ca8c4380b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d686c-5942-4347-a016-9a7397e7a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e121921c-6392-4410-95f1-e882a8e20da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56e088f-fdd1-42f7-b379-a95449410b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "647e7972-7c38-4e27-a172-fa2524d63ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9479e6d-e732-4225-99dc-d5644bac6651",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e04ef74-bbb6-4e17-8ce4-9f5e0b4a99fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6508a0-0244-46e9-a542-58cb11565cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49640085-8d40-4d19-a4b4-7b7206d61925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd51a45-5e31-4d30-8894-5d5d61777b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d32e769-e52e-4036-a43b-17c5a61eea13",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbfc1ef-53d3-4fcc-b1bf-2d339d39c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db84f6e-5b36-49be-afe5-05814f127896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c002768-ffdd-4baa-816c-f7f5447845e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e95f231-066f-4696-8cd7-220b26adb875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f719f482-efe5-431e-8a47-baa8e43eef81",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b16c2-f02d-49b2-a535-6398e82945d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e73b23-f4ef-4c09-88ab-6ec09691a5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cbbe8c-7cbb-46fc-9c1e-1e3bd61e935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4dd4c3-4c3f-4881-8e0a-fb931178c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382d75d-18fb-4709-b2b3-ef40bbd1587e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc97562-8814-4ebd-ae8c-a89c54558bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03e1acc-6535-478e-b056-9e240865dbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe7a15f-1ee6-4ca9-8591-4cd272191c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf4f248-438a-4656-8943-baa99214d05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b9813e-0ee2-4b75-ac98-2365a49b7ec6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ce7f8-5084-47c8-8b4a-8b503cfdc0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c176d33-37c2-455d-b641-795987708063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157f05d-4def-48ee-a881-7f6c02cc0fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a3681f-007d-41fc-a7f9-5e79de951d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84187b04-770f-4061-996b-7983c4911b50",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb2e56-3d14-46cc-9781-034e4166ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79363de-eb21-4b57-afa2-685bbaedf211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41151375-52d7-4fb0-850b-f89a6b1166ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "634548c0-716a-4aa1-99f5-1f8e6fcd6f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b76cc5-3d7f-4b88-b6ae-f5cc3542fbd6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea130de-8861-40bc-a275-c6c15ead1cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8e071e-cdcd-49ad-b5d9-88dc910bb378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfcd8d7-59f0-4a22-9839-fedec41f6eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d7a295-2c42-40d8-bfb4-da5f73a2e0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040bb23-821b-4a80-ab11-2945af1c6e8e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6292b411-0462-4823-a161-8ee97830ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0dc3fb-16f3-4466-9425-280972adae26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464d0370-850b-4b99-999c-839a88d314e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "811ba0b9-50fb-47ee-8bd6-ea830519d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771c646b-0e16-4ab5-82a0-184f199b523b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af10fbc-5e64-4dd1-baa2-70cdd3984ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45519f17-9b21-482f-8e4e-3dc7dcfdac51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803e31f0-1117-4cff-83be-9e6c8dd1d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19506fe5-1afe-49f8-ba37-4c50af0347d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9850d8b5-a3e5-4e53-9343-5f7366d11128",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa4e10-2211-4757-89ae-f28c8d86bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21073cb-369c-40a8-af5e-13e7b98cc208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78f05fc-dfdc-4df7-8c97-19afdd20c342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4979227a-e47d-4182-8805-e5a9b5454421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583a4756-923c-454a-9fb9-b4eb666f6877",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32362ab6-4aed-4e80-9479-e7ebc3e4ea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5d16f5-cff2-468b-9d73-e88c17a7b94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ffe795-235f-4c6a-b54e-ff0ac22b1e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac09628-4b91-4296-b474-f42647958262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4702ce7-b470-45bc-9851-341d1c066a42",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cb2e09-4caf-430d-b26e-57f92c8e9fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee53b14c-1b88-47b1-bd96-45bce6f200e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc6d7cb-ef0f-43c8-871d-1b7f02c49b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda70993-29f9-43f8-af41-e403f53b3ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8d11b2-3b7c-4b12-a2b7-34df2f9c8473",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d095686-1cbe-40fa-9508-426609d5d37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f258ce2-f0f0-46b1-b946-19395572d3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1548e9f7-99da-4be1-934a-45145f8de3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda5415a-7761-4970-9d7d-e42767791ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47437f23-3862-403a-aa45-1309e32e209c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea700adf-c056-48d6-942b-d6d2f2c858c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99175f1-116f-4795-b25a-cf955dd371af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7bda5d-3216-435c-82da-c9141f720a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "985a8fb4-6415-483c-943c-96136beb0047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd3fe96-395f-43fb-a332-79caf588fedb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d44f2c-0e35-45d2-a9b7-05cbf1314ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a60f0c5-dba9-43c9-bd6f-55d1bbdd13ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ab9ac3-cb1e-47c1-b4ef-fac93a6b68f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0bf5f9-c0f5-4b90-a6f2-689271e666b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443679cf-a1b4-4870-aaea-c564c75b1865",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb14521-958d-421a-b2e5-abea30624afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43dc032-bd1d-4750-a003-929287f2d881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e492eaa-edfa-47a5-a3aa-d086fb203a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5194e0ea-59c3-4600-89bd-43d57ed8f951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b38a40-e241-4675-a0b8-5f8687524734",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a486a-c820-497a-b5cf-654ba15ff596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c6ea2d-4e4e-4bf2-92cd-349390a9be89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af00627b-2610-4c5f-8127-5be001d1bef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "906be71c-35fc-46b2-8438-889676e2a332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc99feaa-4c68-47e4-b3cb-d51987642d0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4876954b-f978-4cb8-a495-1e5aefb99e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c91645-2d60-4b5e-884f-978aac6780cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c60892-962e-4a57-9334-fdddcb1a92c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b331fbb5-e010-4941-91c4-c124ec7d8cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16625958-7bfb-45f0-a730-e8c168b1d310",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd740da-1aa8-4ccf-b04f-6fb4ba3c6c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99fe25c-835e-473e-b14e-73c7dd6f1985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23721f65-23a1-4d80-a128-7240a6c2fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6664c07-eabd-4b0e-a02e-2f0787ec205c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d4ef49-c320-4edc-a583-128e9d3ce6ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0552d49e-0dd7-4422-af85-759c97dd9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91414114-84aa-4176-870d-15006c284481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69616f4-d8ae-4918-b2de-f8dc355d42ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a2a19c-76a9-44b7-89c8-2fa243a4ebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89643bc3-b713-45ef-8b99-f82445d84b9e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c5c302-5df1-4213-95d0-e0ac4fe3cd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaa4fcd-760b-4b0b-ae8d-30a13f017c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aff8f1-e594-494e-923f-d1f69e360a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce7dac7-4894-4094-a32a-bb49e0ddd02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f6ef6-2cec-4591-896d-416c67ae0d1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d600962-320b-4536-8bbb-016d31019df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b021a26-f827-49d5-abdb-3052e0e587a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952bb753-9012-4bc0-85b5-0f4591e11312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdab0b23-be80-449b-b9cd-2f5bd54e2298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5573cf4f-7b84-44f3-8052-4141a7a4f8b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57850bf5-a665-468b-adf5-0c674adc9eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a4272a-bca1-4ab2-8506-e579ad62b9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6414461b-3dd6-464f-9a61-a8f4d84b986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b88b7e9-747e-433b-8863-adeee6897134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6aaea25-2910-4bd5-85da-40fbf7df83f2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae47bddf-37a5-4ced-90e8-54ed1fd99fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c04e583-2f48-43e8-8279-ebcd0eb9a1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c852c-c13a-4998-a9b4-3928a4e22437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1215d322-eed5-4e83-adf0-90dcb07075e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71b6182-5169-42ca-80d4-cfe7e2d80363",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e76aca-61f3-4697-9fed-17dfb389beac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6548f77c-85c2-4822-9210-e34d3a60b6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a72b66d-3e65-4e14-a8bf-616f29bb1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83fe1e5-eea9-4121-8b6d-e4a4b50f9b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46559460-39d9-453b-af9e-8febea6944f9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e0fe43-d000-4051-8bac-4f478e4fddde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af22286a-f903-4050-8812-744c1c5cb1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1720bb1a-f753-449d-83c0-1d6a2e06fba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec90ec50-aa19-4b96-9008-9f573f5dee2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a02245ff-e48f-44d3-a23e-e6d8c773084a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d206092-5bd3-43f6-8e97-e095a545dbd5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a626ac6-8c70-4146-af00-6e6cbfc55bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0926abf-577f-4c1f-9994-1f5f7d2f5ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e69c96-c1b1-443d-bc45-dc179e549ee7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baca9a1a-30ae-4bae-862f-17f36c195793"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b671428-95d7-45bc-89db-8c54561be541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38e63c32-33b5-4d3f-84bf-72d8d609c6e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a2d4420-7053-4f6e-a89c-ef5b3c308a15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c690c5e-880f-4264-9830-c034c5f64152"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e84d8573-0e3b-4f4b-ae84-fcd853621ad1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b9de570-66e5-490a-8886-6bb5c4a1ef90"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "199526c8-e910-41af-8ba3-e822434a4917",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f7633d9-7448-457b-ad96-68090a526fc2"
                }
              }
            ]
          },
          {
            "id": "49ac79fc-a360-47b1-82b8-433b6e965ea1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f00a6c4a-535e-4de8-a8c8-07b739f392ee",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "71896aa1-302e-4a43-a6fd-1117ef2ce767",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134a69f8-93e0-40c6-bfb5-956f36b9fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a5c0aef-9c35-4306-8f1f-ecd8c8e7f226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f1bb1c-03bf-4836-ac72-41f81681bfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdb7277-a9b5-492a-ad5d-afb945fd6789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b92957b8-f3e9-4978-a4ad-4385d18aa5f6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a419f5b-757f-4de7-8426-b29194fad4cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75e90e07-dc5c-4517-875b-99753e06460f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e726c351-74ab-48cb-bc3e-d32bc71ff5b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "437969ae-a46f-4aaf-bc03-73154adbb518"
                    }
                  }
                ]
              },
              {
                "id": "d6eec462-b8f6-4fbe-bd42-36b8599d79d5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ff65d7-cb5c-4b6e-8122-bf6508cc1dc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f272eff4-5da3-4410-a584-b28b9f55d8aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "560c08d1-8561-462c-83fd-447f0faadb6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b77c9cf-debe-4ebc-8dff-880f78fdddc2"
                    }
                  }
                ]
              },
              {
                "id": "131043b1-18c1-4ab3-8a87-c8f3e277d49c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c400a135-c932-4ec6-a161-822d1a7b856a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b6c19a7-fc0d-499b-a23e-e347142b5b5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08ddc39a-83cc-4bfc-85da-8be03c5c0a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "214cc143-60a7-416f-9c66-1a3896ad19ee"
                    }
                  }
                ]
              },
              {
                "id": "50e9e983-3524-4243-9aa3-b00702e700a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dfd5d07-bdae-4565-a9d6-a23b30ea0267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9efb841f-427a-421f-be0b-74a8e0b626fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0254cd8c-e5d1-4e03-a556-224c6d314727",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "287762bc-9a65-461f-8684-e4e80be7d678"
                    }
                  }
                ]
              },
              {
                "id": "d1a62c11-f766-4a62-a972-a6e3d35edc96",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95f15407-0052-49bd-83b9-4b5456f1d147",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69a61932-6a84-4414-9a41-c8d528a67e26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ae4133f-fd4e-400a-8899-d4096dc81280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b9618f51-c14f-4df1-9386-7c6ca74b8e8a"
                    }
                  }
                ]
              },
              {
                "id": "aa94f419-7f44-4c1a-8089-89989ce3a6e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "039fc053-8a8b-4676-a15d-1feb78a98912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f4b4d9b-df45-4abb-b769-5b6a669c345a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dcd0583-0b6c-40c8-91b0-79ab3b4f4309",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2f80550-ae3d-4c38-879a-be7a3f1659a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4d2017a-0d29-4493-af48-aa104d72f553",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f06d065a-43a0-4141-9129-6ac668449578"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02c5e3e6-6f00-4b46-b367-8f4128ea97e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77e91b38-0937-4219-9f2a-e5cee0ab795f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a945998d-c510-4daf-89ff-185549a54d87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "47b0dc26-4f9d-440c-af18-b46d46ba3297"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f412d70-2ee4-4bcf-912e-f2c8fdc09227",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "725bd6e2-d18b-44b9-a903-81543e1e4cfd"
            }
          }
        ]
      },
      {
        "id": "11265b7c-33fb-47e1-812b-fc4890201cc8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0e4d9de3-b276-4040-b1c5-9b08357f257d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9711109-3e93-41ef-bf9e-56b1b777a9d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ee88ae8-9251-4c4a-9d25-b6ef35cadf37",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082a82a5-5b6c-4c28-b9ae-73c4672beb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f70729-06e9-4696-8cf3-939d9d4d310a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8be1a4-b1e1-4fa3-9477-613d25d5325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9ab60f-2912-40ab-a903-74fcf3ed8fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf849b14-66d4-493d-bd54-80cc0187376d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f286c6-09d8-42fe-aebb-2db2f24697a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da15abb9-8bb0-4b71-8985-313e29515c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362eba68-05a6-4815-a03d-362a6bbdb15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "094178d1-9180-4faf-8c23-27962fff197a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eee621-a22b-4906-a7e0-bc27d56445f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3065d2fd-94a8-425d-9dab-b7209b9fb785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc57cf4-0e90-41f9-970e-c7efd7e15910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf64ee1-5ae5-4250-80e0-54f039947f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b147d47f-6cc1-45ac-8fb1-ab572efe4caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93542d5-89cf-497c-a6d4-68aef19ef7e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b314788a-1fd5-47cc-ae09-f988070b8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2046d85b-fa67-47e2-b535-0923592aaf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62aa067-5568-44c3-a514-2914704e922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14423f19-cd8d-4ab9-afbc-28319c56ef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aefc534-5a75-464f-9dc4-0163700f6b1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dd14ac-afcc-4e7c-bdff-170495b22a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7f751d-4cf1-476f-85b5-a5d3c978a236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2555e336-53cb-4ee2-9b2c-3a3c1506b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14f5ca8-2152-4818-858e-20400687b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd29bc-3206-4842-872d-dee289d555a3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ecbaf2-d7c9-4552-91d0-d087d673cfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f86445e-a487-4527-8924-f0dc59aed65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5cd420-2501-4dab-ac5f-608da44102a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3f974f-cbd0-4504-8e74-ece03ed8b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9a0bfc-61fb-4734-8355-ceeb01ab5df9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08467914-01ed-44c4-8b83-74349e029975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b4eec9-26c1-4967-b032-d0ad2bcac090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0135c542-7797-4064-adf4-84abfca57b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "242321b7-2ebd-4748-94fd-b7c345a29a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7074728c-1871-4970-a8b5-92d34e9122c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f974c733-7776-468d-b98d-0415289c5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4eaa19-681b-4057-b7e1-6ec4d5c9852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c676f7-ec86-4a7a-b848-e2c504e4384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "157b25a5-db1e-4197-ae94-4bcac7337903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454483ba-2141-4a84-ad89-d813e09c312e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a12a20-aef6-46ae-a706-4322eb28f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dea7682-2af5-42e3-b4f8-066c8a29478c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd2a9b-92db-460e-ac05-a13afab61e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37315e8c-09b0-420c-bd24-0dd43570252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bca0336-133b-4819-8b85-5df7362392e5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32697156-2227-40d9-8181-49f8c9edda69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6349033-42c8-4789-be3d-4f45af8ce70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b177310-7f24-43e9-848d-926680763b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb98e2e-0e8a-4f54-a8f0-9bcd9f0ae004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc22847-b442-443b-909e-c9c311e92c0e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded28bbe-81c7-4c0b-a49a-da5da901681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabde60f-96b1-4aad-a1cc-09d644b19938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b2b44-ac22-4496-b2b7-29f19bc591ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab9db95-0195-48ca-b614-dad67e985087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a471fc41-784d-418d-8b01-ede77ce66280",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b9065-e051-449b-b8b9-b90b033b87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca33281-1d7c-4c68-9db2-13038ea1a39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dff260d-7952-433e-bbe2-d76d1bc6e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3817725-4337-4995-9b4a-747da3b4942b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdc9d39-d633-4d23-af72-47e1f6e7f28f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f130aaee-c133-4efe-872c-0794196cc59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24a700d-ca77-4a34-a2a7-ba5b04b22ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53dad34-9973-465f-a3d7-4f59952cb075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2a4605-0d64-4570-8388-a0f6beb05835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3392e6d8-16b0-47ee-8fae-b56248125e0f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d373b937-dc45-485d-bb5d-8219df83ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00c3f77-b3e4-4e64-b632-4df7e152b212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae29187-23dc-483d-9746-f0372b8bff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0250a5c-aa4d-48a7-83b5-9900b675d7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382d9da9-11a5-4b7c-842a-b5cc13d9ed2c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51898891-fd33-44b9-aba9-2c5eac2098e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d008cfb0-a966-4c47-98b9-410377570736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f7933-5d67-490c-9282-f6d8dbdcfcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e076e31-cd0d-4d4e-8f11-178eadbd98a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1a6cbf-328b-4d94-81c5-c2961e89c93f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea5ac7-0a34-4815-afbb-18209c67d22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06fbeb-6ef5-4ceb-b043-5c242978004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab2ca55-cddc-4ef1-ac39-8ac8fbd41b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b54b67d-588f-49c1-a080-db42286bf5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67efa3-9076-413a-a3eb-e40d73b917f8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae83c6-ec18-4d44-bb64-b0ae373eab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51eaa9f-c7ee-4835-95a7-cc0f6cfcd5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73f2cfa-c424-485b-9718-38da794056c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4f2908-3525-4a74-baa6-69ba94ab648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17892ee-5b91-42d2-9e82-569bdee751b0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0b4088-b9bf-4d75-9d72-d0ed8aa95c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356fbb1f-79b7-44cc-8702-7698eea735c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cdc895-49eb-429e-b498-927e062a4634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f70120-1a62-4780-a616-f91d778ec11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d3a10c-dcf1-48b7-9272-89cfddd0c790",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c3626-c2ff-45b0-82c3-94a89a324acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7663c5b5-d499-4c82-8f94-e213668dcc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aec96e-4c55-42b0-99b7-f13ce248500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bda92f-dc77-46a3-8ce0-bfc85d731a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1d564c-0dc8-4b93-b51e-b06b40f60601",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05977055-0936-48a7-9829-bbc1c5d51386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0587ce-aa1c-4e93-8031-91d39e1cc2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d04364-2479-4ca0-9962-914070a8396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10eedadf-fa22-47c9-9e71-ffcf6ceadca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a820edc-d84c-4e21-b95e-08eb4b4646e9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f060f9b-d334-4f05-bfb3-da9828285538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1b387f-1aed-40c6-b6be-f258815b0728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f6b23f-3778-4c93-ac12-d118db2bf392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1375a8-f14f-4f0f-851f-73f2a64f72df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0780b-7a81-462d-a4e5-2fffaa46636b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6dc457-abb0-491e-b87a-de855c2448e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16fcc70-262e-4227-926d-1b88843c20d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf84cd94-0146-46a4-9d20-0830383cb1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58d536b-d1ea-43fa-982f-f2b2992190ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72cfaa2-e5fb-4b90-bdc7-d77656a1f056",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70cc9bd-83e5-42a5-bb01-1be8ed1df2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431cc8c5-dc98-4c0b-ba9b-ba8a174b8e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e394339c-88ab-4dd2-987d-f89cfbb97c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c092464-a37d-48e8-8a46-09585313dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19a2fa1-f02c-4bf4-a452-43ca9050d873",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d8a1de-f5c7-4300-8f8c-f48fc7867558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd88ef6b-81b7-4e64-8c1c-3c4cd94b2128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13103fd0-8b2c-4e82-95ed-2350f41bb42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db745c-3bcd-4b4e-9560-48971c0ecaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae30e161-cac1-48d9-aaec-9ba75b76942c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b546879-99a5-42c5-ac4f-c3c1436c5a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2bfac5-3975-4eaa-a91e-d8f7e40533fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73c512b-8e01-41d7-93ad-93f92b460f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1aa711-7cb7-4359-b2b9-c4ae93357643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34e31da-e4dd-4edc-8ba1-70cca86eb00e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab461c63-973c-442c-bed2-ca037b79c49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f4c48a-e396-4b03-b9a5-de9f7a5beb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3198db1-9e65-4a03-83d9-cf42abbfc589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4978370-7ea2-4879-8256-c0d86dea5027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6404172-77e6-4831-a9dd-38cf02ec87b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd47a2c-c24d-4875-9d4f-b2da288bc6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d1ec24-e3e5-45f5-b954-c1ebc4ffbf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b059248-9fca-43ca-ab00-1d01ca80bde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d82ce2-73ff-4668-84b1-893706147cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e3f63a-4e08-4bf0-be94-c3941c1989a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3b0939-401b-4594-b394-2bc8de00ece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c058ff8d-6b99-4950-938a-1eceef565dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62173dae-a158-4a7f-9066-d3ba9225ffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b852a3b0-dc35-4b8b-a361-1f226efb5c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e060888b-dbde-4d6e-ad3d-dba7b742fa76",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3968cf41-6fec-46ae-bd55-4228ba7217cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95e5f6b-866a-4018-a534-b043135d2baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf3081d-3045-4ce1-a2b4-6088279fb0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6726e29-9759-45af-ad6d-78ea6fa92364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c387555-2e9a-46a8-a97a-d7edc4d9c5e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e8112-ea21-49ec-ab9a-fed515bf5f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9420a7a-0a2d-4870-9d2a-63caeab1bb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b986e-9eb0-45b1-94c0-353cedde5962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c88838f-afdf-424d-b084-ac016aec3184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069bb31a-b3b8-49ae-a2cf-f6adcd3c5da8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e8ba9-b215-4c34-a924-2949631e2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bceb287-f797-4e6d-8802-64910ff484e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267271bf-6b01-4c2b-9436-08ebff7be543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de40dc0f-0d8d-4e77-ab53-348409efe844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6048b4b6-e670-4cfa-bbfd-c0bb3386c27b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c131d39-7914-4570-b0fc-eaee43841860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b53a353-56b4-48bd-86af-1322ce762f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07467e5-2d3b-41ab-999f-4af9fde42334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6145c463-e412-43ee-8974-f064b15ea101"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97961624-76d9-4590-9623-487964d87d72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d24f69e-1cc6-4d6b-b9bc-c2c5e13eff33",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f46ff2c-0820-4fe5-8393-b82b0624ccda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe88044-e9e1-4bc8-bcd6-b5443d0b3d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a276c22-99c6-4094-9019-9b674505e1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ccc7d77-ab35-42fd-8300-7ccb4125b26a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f35a676-3d1f-48fc-b09f-5af899751b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9533e76-ba27-49ae-a137-b85f2e7cde1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aca96ea3-8e1a-40de-bf22-63ee35892c4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00ecf47f-9e52-41b3-90a1-bb05dffd87d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b7b3495-28e0-4ddf-a9f0-dc3bb8630c0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8ef1d90-84e8-437f-a760-33139b4f1602"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc946f7d-c62f-41c1-9bb2-da88bab90e89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d44de0d9-f408-4d6b-8a9d-52962be4e24a"
            }
          }
        ]
      },
      {
        "id": "92609252-f298-4f01-9bdb-28bd3860e519",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f526e0e4-5ca0-404c-ac53-b2582206e8a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a400788-b4c2-4e5e-ad8d-41179bf14579",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7375a764-d873-40e9-80a1-0f95dae306dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdc129e-e8fd-4ef5-8603-cb336544d9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f2777-aa24-48e0-8e43-46205ca534b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be581ff-b55a-42f4-9600-84c096479107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "468b9583-a62a-4117-a108-f27ff301c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae57843-f250-480c-acfb-8da69f147634",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5952ba8d-ed2f-4a20-8efb-0898868bea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a282ff-8b54-4dc8-baee-fa387df1d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72ce5f6-7974-4b51-9136-ab75a5e90344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99749b2-ffff-40fb-bc4a-f115f6cf1bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bceb281-af0b-4967-9f07-ec0b294d03ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2b476b-69b9-4158-946a-9dace40f8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f8a27f-42f9-4741-ba46-96fd0b760b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba76721f-cd41-40f1-a9bf-38ea8556041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e94ef5f1-ea22-49bf-a83e-8e7a454222b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4702b375-5666-433d-9a85-b522744987da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c329be7-3e3b-4b5c-ba3a-a0bce486cbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab42794-8578-4f4a-a999-165759137018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dc372a-2904-47fe-8a93-a1b658eac589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23ccde0-b878-4aa1-bb7a-2c7aac516863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25e4d21-afc7-4be8-b4d4-ebb5a51e6a09",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386625b2-e3f1-44ac-aff6-cf06fdd21efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f746ed-b50b-40a0-adc8-a693336f9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6cde8b-5289-414d-b6d1-68a1faa6f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f851e5-aea5-46aa-8f5b-098e1cf1d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c14ad3-d9a1-48d4-b9ba-1a5d5fd320c8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe50f99-77e0-4b4b-81f5-e0da8873ef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71f45e9-80df-49e5-9b9d-0eb8389f8c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648c7558-11eb-4230-9328-d648702cd92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee8ad6d-f5e0-46cf-a145-3d0bf0195c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0079a5c-7dd6-474f-aadb-2479ea6bdb81",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce831c36-a3d0-455e-8db3-be42b58d4ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fbd293-6b4d-47cd-9af0-19a172a52564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9df39ee-ba07-4ca2-8e84-3db805664694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7644d8ed-6f98-4877-ad4f-1294400a6091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e02e2-8e03-4c79-b627-7dc12985c735",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04b495-c082-4f5d-9a91-c809ed44c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19227b78-7958-4903-8845-5f37f65e0ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de781d4-24d8-496a-95d2-fc6203ef0c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6735b2-9e94-4653-b857-949e228234e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c0f995-e372-4451-9ae1-7147e27a30cc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17995fa-009c-4f34-b0d9-8e8f4259a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9254a21-06b7-4904-9370-370270a849ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47948125-12aa-4ffb-9c0e-a5f513fd247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0795579c-ff8d-43a6-a786-3acb89a68ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef93e27-cebc-4a50-936b-a39bb209c1e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fbecfd-6c01-41fa-8ab9-be12e8b93aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78dff8c7-bc22-4151-8a65-9bb581fef358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6059c2-19cc-4cf5-b7d0-b2e031eacbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85293af3-0a32-4207-b65d-ab848530cd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d8f192-3df1-46ca-8f6a-a587f795835d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec05810-bd77-4bef-a17e-592fd0a369f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c8e21f-8d74-47b1-a42d-be56f5451e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba29f61a-13ee-4f4f-bd56-c32a1722668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5128fa11-be30-4fa7-82b1-2ca2ad3b1cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f42a25c-db58-4ca4-b74c-865b5dd14340",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac3460c-0dc5-422a-ac82-be17456339a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a75229-6e9b-468b-84cf-8366e2dd5032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8843576b-8c4a-4ccf-a571-94c6cd6020c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9417d08a-d57b-4a85-b8c4-7aa092dd064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f024c-8109-4603-ba51-1c27ef1eb0f4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc354c-3e19-453d-a22c-6504eb276324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7e6c2c-6fc5-4799-8aeb-d9f5a2cba2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8558a881-8809-4a51-894b-56e8082173ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f938fba8-e35b-43a0-97af-86ab55a551a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fb968e-20e0-418d-985a-6fb616df16d3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c058088-8473-42b4-8bd7-61e524a8cae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d537af-63f8-4d23-a260-90d3f8d838ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72762db4-4925-4a87-b3ff-0be3c7da4e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "986685e6-2eea-4d1a-bcf3-04cdc8a8c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83637a38-3150-4c3c-bd8a-dd010051533c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b228f5-ad75-4e77-a436-88785bc2411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c3edf1-ffc0-4736-a083-3dd5c6bf19ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d21751-88ff-4630-bd0d-1de41ab8a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a5350d-2179-42f6-87cc-2ff9becf5891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db13a401-2828-415b-85c9-622ef3d243cd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5de19b-f434-4f29-9b61-a46562cf8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cf75fa-eb8a-4bba-add3-db1981dd9317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03e1db8-156e-42ac-8e0c-0e490d7876c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff861eb-8cd0-4c06-ad64-c0e9d7859eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eccbc53-b4c8-466e-845f-c1b207a1c1e9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0686e8b0-64fe-4c0d-aa64-9f560a49f273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b292706-df99-472b-827f-be33cc29de95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b328aa-248d-4ec9-960c-d8303bce949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a005234c-c51a-421e-9696-f0b32875fc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21ffee-981b-408d-9b07-bff955f27af2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523fbb11-1a69-48de-8d2d-775bb1d22b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa44296e-6e9e-4a54-be95-8eafe401c7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c81fe85-dd0a-4014-b054-1dd9abcffc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e292a7d-5fab-4d8b-98ed-5183e9862798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d12fb6-31d3-48fa-a300-4b0055c05305",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf67b69-4dfb-49da-b0a2-e839b432bc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46754cf5-e268-4adf-89e1-12ac61dc7efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781586b1-1bd1-4a4b-b640-2adb45ea7ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f122ef6b-4979-4ad9-9429-eaa7e913eba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdea737b-700e-4a29-b513-52891eabbdfa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eaabee-3353-4cfd-9c77-7eeb7bdcf979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9fc615-eb66-4415-a44a-f67aebd74c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0465342f-93ad-4dc5-8f72-8ab9383b6389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f2e780-3713-4556-8472-4e7c3fa7b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f87c29-dd7b-4caa-82a4-9d555e7214dc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09878dd3-95f4-40a2-a84d-a5b2ade41745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88253111-d39d-4138-8265-33f951bc1888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a092dd-7e19-49ce-b2f8-de7159a1940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc174253-32a5-4399-bcd2-86c662b45d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5dee1a-8774-44a6-989f-aa78922422c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6744fc2-a81f-4f91-abc2-4943eda7d400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467aef2b-d56f-410d-8c4d-077e614df5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fa32ad-d8ee-48b2-96fe-bbf4d2fcf60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c824e568-8106-49ba-a184-a00cfa039fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcd0db9-3d75-47c8-977d-f95d70314fe8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb0fe5-3649-4404-aaab-9a8aa036eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871697ea-5b42-4927-891c-1a661c7dde97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b287131a-2c23-4cc8-b4a3-3ad060b96710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8424276a-ff49-43ed-970e-fa9d3de66d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20efb40-02f2-49f7-b641-e89fbba62e78",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b482635-67c0-45e6-932b-eeec09cb1050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f659ff00-cb4c-441a-b785-9ef87d4a83d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b74a0f-eddb-4d4b-bd64-9b39039ae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8f6cb8-fecb-4d4d-9a36-efd6f3486f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88062532-eb57-419a-8e50-e9a699b754aa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531cae56-022b-40a6-8732-9376d9561711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4159af1e-8e3d-4a1d-aedd-bd872e2dcfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7946b7e5-60f9-4d61-a6a2-127f31c974fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6aae46-808e-4dd8-a654-3259490094b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff82c7d-5547-401f-b95d-7c97a3530f13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d0773-a0bf-4efb-a5d8-cd03801cf2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e6b3c5-922d-4215-afcd-89a8915a3f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a0dd7-8c5a-4053-99ce-a2d340649dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcabd69d-c33b-4ab4-970d-6444ac119168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec15f26c-71b7-4b6c-a8d9-74466df32e7b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26053622-d74f-4f2e-bdbf-c4ee9f2e2d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb920bc-d6ef-428b-9341-c63c54beb262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1f0483-be60-4e92-8323-5578f022baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e07102-3b92-4596-bb79-9bd2ec01b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d310512c-623c-4768-a911-e3b6ef0cd6fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3704141-c137-486b-9cfe-f3ca84521cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633a6bb5-ad20-4f0f-9a43-8121c2d04d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1272cb9b-ca28-459b-b914-e5a6b178acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32b7f79-6c7a-4c71-a972-37e0a1adb7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d8b51-2702-46ae-afd4-bd8f31031e87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3592283-046f-4d7b-87c7-4a010c36ec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649a923f-8f67-4442-b571-261a6b49244c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a1d53-8d8f-415d-b025-36b00642e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d6831f-ea84-435f-9412-65ee29bb125a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce4bd6b-e1b7-4711-a2cd-b4e15098f53f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb88b51-e71b-42e7-8d9a-cfec475aa626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2de9a97-3d69-4fc6-b0a5-d531a4e51257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9616367-64cf-4d9a-bf8c-3ab9b9b6f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fce4d3c-6a68-4a7f-8893-7548dd4dc17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0487f724-379a-4d0e-9ad6-7d3dcd28026e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabb1090-b135-4a28-9811-d57f17b36c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4cf0a8-6767-42c8-93e0-dd6cf1a3eeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a9d03e-deaa-4044-813f-8bca9f0bbb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7583be43-28a3-4dd0-a325-8daa3071a88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e176aa7-adb8-4c88-8e25-75250455f17d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91baaea5-e9e4-4793-a5b4-2e17ba9d3474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfa4a11-df89-4b56-805c-cdb5fa688020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4dead1-a0c8-4df7-bdf3-d0e9ccc70f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b68f6d-2a73-4ead-a898-3f2b6ca245fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4968a74e-adec-49b4-bb67-fdd332ed02dd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6463b1-77ca-4663-af86-6d69519b828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1606a6fd-fdf9-4b9a-9786-95cec7096e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d595e60-6732-414e-b908-b8b0e0ee36ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015a7551-7a37-4a26-8cb3-3e32ed7bca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f78ad-bfa7-4cd4-830a-6966ddbf4658",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0cab2d-dc26-4f5a-ade7-68d403d2dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b50119-7282-49e9-bc74-99e9a92378d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6020dd5a-b1e5-46b5-bbb4-7972d3b4ac76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "165c76a5-f3de-4947-a964-794789318765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bacd4cb-3248-4c74-84d3-93e78a353101",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b34065-da2c-4969-b229-966c5c4f77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3bb60f-62d7-47ad-9a45-df87084d3d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1571f85-6c71-4b29-8329-ca6e7368e3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5125ac44-f8c4-4c8c-95ac-9de98f6a004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41767d9b-2702-4769-9b20-9b71b708669a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0edf44-ce1e-4e62-b5ef-5123131c4e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec493141-5aec-43ca-b7bf-1b28544b093d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffbe826-03ec-402c-8bc2-49b0438fc931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83151671-c827-45ba-bf04-54825c9dbf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b8485a-7c18-4a4b-90d6-d6dd6e324940",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22af8899-cac7-4df2-86bd-19f065957309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e778fb-53cc-42c3-ba57-6c7bd2abf165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a4a5b-8445-4f1d-a0a9-9bc6566cc73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd68422-3539-4fd4-9fdf-43ca98e7272d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc0a65cb-da09-49f9-a723-3965ded913eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3c40185-d475-449e-ab22-831843f20546",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526d6753-3b97-4646-8e41-830a775b1ef7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abf5c6a6-f3d4-4975-82b2-f4bbf9558fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97b19fd-26a9-4805-8cae-2a78841d8569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "259800be-1460-450c-aa61-17f0439af3ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6546d5a-83c5-4b70-9aaa-69d7af06ef6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "614c2df4-442f-45d0-a293-d41b094d2be3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6c9b2e-7fe8-41ce-a038-bf8ea63a8bec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35016040-8963-447e-8a7c-14019c601d94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70b1bfde-cfce-489b-aff1-0e0c5006c828",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82894fe1-dab2-4718-93d2-33ded1c80424"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "831cd13c-40b6-47a5-a2d3-83d4908db0a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfb29f19-d59a-4a99-a973-4946f0949334"
            }
          }
        ]
      },
      {
        "id": "e87057bf-aef8-41de-b199-71cd2032bd22",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8495cb9c-8417-42de-b7fd-c03e606cb93b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d6d552a-59d6-49bc-ab35-a6bfe6dff013",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4586d592-56c7-48d9-aad2-6f1a09e3592c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ef7c6e-c28f-480e-a7e8-62a16863a14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b5102e-b071-4caa-ab5b-4725164f9263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58db77a0-da2f-4c94-b408-15ac99278863",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea42ab-2b70-4dca-a580-13cd1c10b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9d631f-777f-4114-afba-3cfda06b3d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70e9f76-c0a4-4d6d-a338-00c54326476b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8916575-2823-4740-9df6-25bf3b9011fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf02f83c-d16e-4326-bded-0b126a49096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89ed448-f1d0-4151-86b4-091ac5dda140",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9532728b-7c96-4b6c-b9d4-f9832e0d0552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4565f63-2285-47fc-b396-c3c371e99676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64427c7-ba60-4d74-a89f-1c02256b0a1e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fefeaf-a368-42f1-a72d-394aa1467f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a814d9-66fe-482e-b667-384f01e36b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d2efbf-0233-47fb-bc97-80e67696fa34",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f955f2-acac-46bd-b9f0-74ac543c493a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18a25dd-abfe-4a92-8686-8507038adf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78522bce-9254-409e-8893-c89848b33b7c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c048cc8-7ccc-41b2-a0dd-e56529abf749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf9ec56-4386-49ac-8572-48d1c5265db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219805ff-2154-4799-af4e-c6a04c9b0acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad071ec-7c77-411f-b63c-140cc30e82b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adfab3d-8656-4acf-8e83-febcedb53436",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1b5e9-2e9a-457f-9854-0ba0ccd1c3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378c9a47-cc35-4866-bbd0-7e118ce7b936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1623da65-1945-4161-aee2-431fa8cdeb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7f457c-9647-440c-a4ef-03970b4e9ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76d98d4-c08f-41c5-8f00-c704b7a4b544",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f922a1-a1b7-495b-9bb1-301670f6b430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60f8e10-6750-459f-87f6-528ee8681e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc755e-2038-4273-ac8b-4c7f50d70a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103fa7a8-deeb-4cc0-ad8c-fd940833566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6836f6-e14d-4b13-beba-7660fe771610",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3b1f5f-e955-43f4-bc7d-962a6fdf816b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d584123-8564-4586-a9f2-39c4678e0da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b02684-5832-4beb-b6c7-107b93233412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0311986-a99d-4ae4-b3c8-7de44f00dc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94cf78-d0c3-48a6-aea5-69c9426573d5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600d7406-067e-4c8c-b6a5-67d35889656a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccd1b80-10cb-4267-b84f-ed3d3aa041d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd762429-7320-4c5c-8856-9d2cf3fe87d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cb971f-8ad7-4fd5-bcb8-746af6ed22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1664f4fe-12e1-42ff-bc6d-ce48c9234f93",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc57fe3-2193-497c-aaec-d5f037300f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f97f67-15a9-4bfe-9a4e-0e8238a9d1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6967926a-fa7f-45a9-aa56-4a211bba0de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88da748-9dd8-4574-8237-9424f2f3ba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91844152-f1f6-44d4-bb93-f74c7b540556",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71068d13-ce04-4577-b706-d35a46ea84e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2e6e7f-5c6c-4709-9b46-d808d1abfcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984687a7-dbff-4eab-bdc4-de4b5c01c4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0802053-c3c3-44ef-ada8-def05e77b6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98486ce-176c-47e4-ac65-9fca8e5e746f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a758c14-d5ca-4c4d-b370-274b46a6a44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b76e4a-991d-4811-b217-a7dd59fabd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09103e1f-0d8e-43c6-bc55-202d6abcb074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545254b4-e46a-48e4-afcd-50ee743f78b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e015270-900b-404e-bf5e-be80737e5c45",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffe5337-156f-4945-8b34-0a2ed13182ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6799167-5fb5-417d-a760-33f81744616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9afa42c-15eb-404c-aa03-fa91b4f8b82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cd2f1a-0c0d-4e13-902b-844796ae3106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60eac5-29bf-4c94-8e15-9688f80df3e0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9872c03b-17c2-4b36-97ff-778a708dc6a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fafaebf3-8c67-4ad2-add0-a3d474f1f21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbddb01-7a30-4216-9227-468a6c357305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97398f48-c0e4-4163-b2f7-1485d789681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99063489-7358-4778-94c8-10750ec0f197",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f94f4e-e34a-464e-814a-b37fe39872d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59150572-79b3-451f-9f9e-6e3206546a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9f91b-7f10-4cce-bafe-ce65afafdd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d8cdcc-8688-4f7f-a211-6365dda5b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83c3f7-4465-4459-aad3-e5dcdb9593cf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d18460-ef15-44fb-9a9a-5d8db3c25bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c051157-e719-458c-9b23-80a11effed3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dc9c7d-4b62-4900-bcad-1d5f66e3b42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371bbe3f-f234-4926-9cb0-9db95d3006fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4fcd4-d274-4cad-a6f0-5b82bedf6f8b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2e4232-4e89-428e-80ae-afb9f9c01b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a92bfcc-82b2-4e04-bc36-418e11d82676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef53b35-b339-4a65-a13d-378286743a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31ff56d-ca5c-493b-8d38-5a6dd97a09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0688b484-f837-4d1d-a07e-91693892a253",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ca2377-956a-4bcf-9571-70ba8c01cc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeacf10-9e97-4911-9522-1e0386275852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cf1707-6d91-4b4e-aee1-72c9a4bb73a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0700bf-1e93-4738-9f0d-a00b03eccd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b9119-dbd9-4e91-946c-f72b4f947469",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3842d846-073c-45ca-b526-3d6c695d4f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05216b6-2f20-449c-9bff-81826b96ee09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4b3d00-8f61-4f45-84f7-b7fd18a20bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca03b6a8-f7df-4663-be16-1155c8e5c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b231b8-e683-4fb4-8fb9-aacab7cee1e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022a14dd-fdca-447a-8c73-88ad19696f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1a0494-1430-4adc-8f6f-c5ef9284e4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6176a393-d0db-428a-8e4d-8a156a73d8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec86d222-9809-4dc2-ab0a-64c16e94c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741594a-3dd5-4ad4-a59f-16a95153ae27",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06209047-70c8-4b47-a909-23668678c30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4955174-96fe-41c9-a939-22801c0fc716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf046a8-2720-4972-81bb-1514a7c17c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877993d8-ba07-49d3-bf3b-bb8ca403ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56919ac-dc73-432d-ae87-7de315af97f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81bcd2d-628c-489c-995f-e154ab52563a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe176cb-2224-4105-bc55-d74e4db6dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd8293-d124-40b4-bfd3-654268b5fb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9076e7-c6de-49ce-bc56-3c8d533ef9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6381a81-2db0-4bdf-86a4-328e5917dbef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a591e5-d391-43e2-a7db-da645f677fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04c601e-c9c6-4375-a412-50c75eee8f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20190ab4-9a91-4181-82eb-11d13fe9e671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2517a029-644c-473c-9313-7d15d431eb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e18b33-b87b-448c-9e9a-e7a0d53d0986",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b2a5c-bf76-4ddb-a938-ff4113dec647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56a4935-4e18-4075-bb8c-d5a5633bce0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666c8cc1-063f-4fb3-8f51-eeae6929f250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5775ee75-2227-4fd3-b1ec-fbf3b4d23042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5fca4e-6c5d-40fd-8e43-8745914c9164",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78c49c8-ce90-4cee-99e1-dda6bb56530b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7d182f-417e-4410-924a-3ab38e2a5452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21e63da-3723-459d-907c-fd2880ca6f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834c6d87-ecc6-4cfd-9cc9-c7fe5fd62c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f51c7c-ada6-4492-9a30-208d6dd0e6cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b50fb8-24ff-42bb-8c67-2bed79fa61b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7099dde-3fff-417a-b3f1-346c04703445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a091f967-6f6c-4300-814b-a4fd37b8ac37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf1f864-efd0-4635-9e56-205701767568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7c30cd-e8ed-47a0-a263-a8f138b264c5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837f4710-f194-495d-b83b-797a61cb6246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7743e71-8e1f-4227-b2dd-88614a9a16aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc98bb2b-996c-401a-b2fd-a6056f3800d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ca34ff-421c-4d6b-b990-0e5440746382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069ef151-86d5-4b19-abfb-7ad01b4d2799",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00764a0-52c5-450b-8a21-12fe997fd2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7a74ff-1c17-42f6-a298-31cb184b39ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dfb385-2943-41f9-a698-9d0fd611bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e4bf5e-3cbb-4673-892b-a19e664106f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f356748-15de-49c1-83d4-e40ef63e3d6b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eea7cc-99bf-473f-a6eb-49aecc72e997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37d162a-347d-4717-8678-c007370c5cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fa2061-9578-4789-9f0f-82eb816667f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be96dd8-0337-48c8-9ed3-2b0bd1439794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a4610b-38da-4b45-be73-c3a4b72bf47e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8454885-1b46-41f7-b131-1b5a07c24340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e696fe67-5e05-451f-9beb-89f9ef7cfe82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fec9e21-18f7-44dd-a29f-a9f620574602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f7e822-4f52-4762-943e-11be9632802a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e928a1d-7b26-4218-b97b-14a85a0e9f78",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc9ed7-fe14-496a-b8b8-4db75bf06674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76c95df-591f-4267-8ea8-0c553dac6b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdc90a8-605a-47c9-b3e4-63f280d4c276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe89029b-7170-47b0-b98b-1aba17b74efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9449a647-2e6f-4ded-a756-3554970d14a8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4beb41d-cc52-4f56-836c-07e409f07d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd235b3f-6826-4f03-9e83-aed733d95eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ea23b-83a2-4615-b383-a08b3f82c026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0b7e78-26eb-486f-838a-7356fa893783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2e7a48-b34e-496e-86e2-7bc6438ac71e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b38cb6-d30b-471e-9475-bf72da70e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a99a6b-4f33-46a3-87b0-c575975d30ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b9baaf-4946-4d80-83bf-36d7ff9cf399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20db91b8-25ef-46e0-9d75-6fda5f8df976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859ce886-f4b2-4029-8a4c-27c45e8ca450",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc8904-f0de-4d51-8057-a39fccedcb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ba0ec2-7514-4f6e-b125-92c91d17f693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8bafa1-b09a-490f-86fa-9a3438b5208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7575da2b-6d8b-49f2-a8c3-c38894748c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09e148-8521-49ad-9086-b0c94c861fb8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa1bdff-66f6-4aa9-b58c-69e69898805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3da441-6091-4848-83b7-2fca6d2cbb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33387e97-df26-49d9-9836-fc475dc5538e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a34a3a-f447-4660-ab03-8229c07f4f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad18ac-5c2a-4603-97d4-20155a3b313c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54bc2b2-3da1-4fd8-b8b7-5a0ff4d7de07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b52e4b-8207-45e5-8491-a3ad568b7f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2418891a-7141-45f4-8957-6ae355c80830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677fa684-594e-4ee9-932a-44e72fdbb9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439d0afa-1902-4d81-92f4-414a37289197",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd4ccf-26fc-4b56-9608-d998f011a785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4856379d-ff3f-4b25-9da8-c919bd9dd319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e900ad34-623d-42dd-b19b-da57b5bd75b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88723b65-b645-4938-8885-e708abf4cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5e06cd-de6d-4221-9b9d-296281de37a0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926f75b-7f97-4605-84f8-36936d556200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76f90b0-9d9b-4131-bfc6-a59ce323c3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6262df-4231-4969-995b-ec3c6a45c52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c866173-d38c-45bd-bb5b-844bff54afff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e3b153-99ea-476e-9ea2-cf77c2380dbc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c420080-b38a-4666-9b00-0bb9094cb9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190e9225-41a5-485f-8f12-dcf9f6e20390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf4feeb-1cba-497a-ae35-9a87fec4880a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9e7e49-2753-4451-a88d-302d54ffcd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d96f40e-9d41-445e-abc7-e2e8df7a162d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65604ee-8542-4799-90c5-b81e910e65a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208f5f36-5994-4693-a426-b72e0b1b5662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a7d9d-19cb-47dc-aa5c-11780c9ad327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fd5dca-bd8e-4514-863c-3b8d600a0120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1aa3ea-36df-4175-bd20-d0c41afa8385",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd59371a-52f6-482c-ad7f-57ace58f5a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed2d522-955c-47e6-898a-1227d3c4cded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce41ee21-2148-4406-843b-b3ddeb58a08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8653d6d0-6935-4b9d-8b01-4cf27735b02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cb8998-4a64-427f-aa2e-d6968ba0080e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e77520-d6fd-483d-aa77-9bc6b4b5966c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab14cd5-1510-45f8-bbd6-105326b7f50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788049e2-f4b2-4410-b942-204f8516982e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2bae84-9bab-44cc-abba-4effe5e220b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd6832d-8495-46a9-a088-c3dd69f918d5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84752f51-0e31-4f2f-8a21-ed07d2c0ec12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eb4d1d-009b-45fe-b08b-41b386bfa196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2599f-0f9e-4c13-83d2-be63c9e39c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16ebeeb-180c-4734-a092-f49e8c38b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc7371c-063a-4bce-bd84-db459d4d5d47",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d6d5c-f8ea-4d6f-a526-420378888d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cb7902-64dc-4313-9dd9-dc3c8177e4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e284d3ff-cbca-41e3-9ed9-3e3d881eac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d6dc1d-8bee-4ea2-be73-2c23f391cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b551af9-686c-4219-8d93-b55856301f2d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36126233-6125-4b81-bc2d-e755d6877a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ae630f-90e4-4e2d-869f-dfe3829d5faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbcdbea-80a0-4ba0-9bd6-6e882aeb32fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf20d68-3083-4b48-9299-b44d0fa1f2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08580652-ae26-4f1a-95e4-3e5e8a287a7b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8df0f-ada9-469d-8be3-4719ead44bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f914416-0c5c-4791-b9dc-08988f8aafb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359dfc75-15e7-4dc2-958d-7b339f6c1696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d0a38f-0293-4484-b1fb-30d6591b28bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2186da4c-3b36-4ebb-8dff-e3f83fa37910",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2723a9b6-abe7-47e4-a745-42d6ae0f2b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffe9ea8-29fb-465e-97f9-a9e495b3363d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a460ea9-ae07-456b-a094-d0787c97cf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30a46e7-a28a-42ac-9f79-e05b200ceb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c346fd22-4d57-4388-b78a-175322e2854f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c94da5-d8c6-4de5-bbb1-7ef71bbf0726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72eb6b4-3dfb-47aa-b395-f081c202e8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d284a2-785f-4093-b034-2e84e3a3c0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e63ff6f-a0e6-4309-afdb-7a5aed33780c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0ed58e-ba3a-4222-8716-3f4ea74bee33",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0291dd0d-d143-4090-b3f9-4a06b638d993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681bf11a-32d3-49a9-a5a2-63fbb93b3aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcc05ba-b860-457f-96bc-c0191e003bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830c9af0-1d7f-42c2-9062-d164dd308df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9fc9c2-c937-49a6-b897-cb7b08e1e016",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c820b3db-5165-4230-a86f-83be1713efa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193e8fb3-3eab-4551-8451-7d518414b1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e2384f-458e-47f6-aeca-9c8c57388151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4757cd-45af-4851-a071-80eca5dcc73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5489def7-0bce-4629-b9dc-cb62d61e73cb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e363a7fd-f160-4bc2-8718-3faba45d353f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c19d37-7c28-43ff-a954-4f58b97ed892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450a9a45-d714-4d22-bbac-5c9bb3410f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bf7f28-ab76-4059-96fe-30417893ced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b54af5d-f943-4b1a-a94b-3a94e5a53cd6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f6ad3a-a639-41b3-bd4a-5ee31f0fa701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaf05b1-290a-4548-8c4d-6e3e015f790c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bc7b88-ec34-437d-a9ca-669090c4c080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3e0ccf-b4c0-4db9-9ea5-a27b138b48b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bbe53b-4af4-4599-ab01-7767e387811b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0c15b0-a3f1-45e6-bcde-d0b3b4e11242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3184161-5477-40cd-909c-6723526b065c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42baf54d-1361-4af0-8e46-047c606179ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e78c11b-f971-42c0-87e0-948d9126679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7912f79-4faf-4f31-a908-a556119bea00",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df59400a-07e5-4f9b-9702-8b7bbb0680f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b6c128-3a9d-4e88-8a5c-4b448da75ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f335ca79-ffe2-4824-8fa6-d8f6b964d54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbc6e2f-efa5-48c9-b883-38fe11ceab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f186ecc-7286-4b4a-8d69-687a36e3883c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a3fc35-7f7c-4568-8a91-7477bb181624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260f76c-971a-498c-8773-11e76c93dc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c159fbc-143b-44c9-84a2-eec37446bd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cda69da-5c61-49b9-98ff-e64f0157c992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a014c3f1-66e2-4dd4-9f4b-4252a7b0cab0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fffbfc-7d0b-42a9-960e-5959223de7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69966f3-3423-417a-8483-1826a3bd7503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad129c-ec40-42b6-94f5-e09b833fcc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e83e43b-0e2d-462e-9f7a-f3c64f01993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff4bc56-d011-4e60-afa5-4f159e22d4dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd81a02-8cfe-4ff1-99f8-d2515d0126e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505e8159-10d7-4bb7-b798-11cc89930a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc185bd9-f8c5-4c44-a024-a10fbd59aed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8262ec9-d31e-430d-9bba-ca6a37bdef23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f13047-3096-4eba-9b1d-642f4f09d7e6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35275ad-5d53-414b-9d28-324c711b0683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6b7969-dc50-42e4-92a8-033eeb795d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdf6d43-78eb-43b8-b916-36ebc15745d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a346aa54-bd32-4378-a360-3a495f271ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022fc5d0-8c72-4e19-a234-5f3fc72285b5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fca9ab-363b-4d52-8bda-3088158215a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950ba7ff-ab4e-4988-97c3-f2ba4a52d7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d7855-6ec2-4289-9dd2-61de01dd4245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8716ea-18fb-4f33-bb16-ebc49c3c49ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f338001f-0166-4f82-870c-87f25cdf5438",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad3a16b-86f3-45db-9be4-bbc4eb04fc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a380755a-f17f-4316-b533-8c200fe4d1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536a95b5-dbb0-4e5c-b91a-9f29d0c68f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058672cb-44d3-4cfc-a936-cb5a369a95da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f32cb-0a89-404a-949d-beec33d65784",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ea0fdf-51e8-4076-8e1a-4788835b8658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5501c371-9172-4b5f-ab6e-58214be97fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30e347e-dc80-4651-8e95-ba9b159ce4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4694d4-241b-46b6-bb86-7b9a7ef1e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2aee7-a86b-4e78-a9c6-7827b02f963a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c40c53-13a0-4a21-9e2b-b63d1c359702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48a81fc-9761-42c0-afb2-d47e5c1fe0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6de87-9485-42d3-be7d-fb4b826afeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9bdfbb-225e-4da9-bd09-990694cb8f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1dfc24-9d7e-4501-bda1-cfd9bd6c907f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4d434-047e-4025-8021-d9d2e63229e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375b169a-a275-4ae6-be1c-c6de483125d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d7105e-9771-4100-8dbd-acfe00384a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0cf65a-6f9f-4344-a0d7-f76c5c98b65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2876b2-f65f-4fce-a8f4-edfb33aba3c7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f238f466-7c70-4305-8be4-e4ac581920da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e5a812-9746-44fe-9430-845858cdfa3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50007a1c-1b9d-4d3c-a869-1249a6180628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45b76c6-d747-4753-8357-0646c8db1d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859877f3-7918-413e-89bc-bb97124313e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9237391-84a3-489f-810f-737377da2407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4d239f-df58-4189-aff3-7e801e53b9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334f011-db4f-440a-9328-236e6eeee7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d24b20-a7bd-4507-9c5d-9530ec2064d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9e1741-c464-4439-a085-16918a26247a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe08df6f-c9cc-453a-8dea-5aa3eaa88984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adda6589-92ff-4b08-81d1-0d770bf00e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd328ad-3e4b-44b3-8434-5657bc18aa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fdda36-2bb0-4961-a6fa-12f03d0ab9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f064b2f-8819-461c-ad25-e973a7602387",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997b9f9-039b-480f-8735-a82edece1c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0490ad10-2b4c-4c00-a6bb-9cf012aa1af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f7cf20-bf52-4fdd-9c99-b78c70755ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d23fe5-724f-4033-bbcf-f94238d8635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fffbaf-bd58-4352-8b38-ab2e133b8b1b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d0e31f-61a0-45e5-993d-e19397a475e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1071d940-419b-4f3c-828c-80dbd7e49da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3849d2b-04df-463f-a6d1-6aa19f84db6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b322ae-9310-4858-bdce-b3f34a3612a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b9dce8-da01-4c5e-b717-e4df7c714ec8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3349f1be-3ad3-40c1-937e-c45c5ab469ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdc9692-8fdd-43ae-b41f-899b70072527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e267c7f5-e11e-4eea-91b7-b46220534887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017b910d-cc8d-49fb-9331-1b77a952344a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a6c8d-1d19-4cc2-8dd6-f4adcd270a33",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dac2e2d-337e-41df-acd9-46ff5bdc15c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada5182f-ecc6-4f99-b9a3-c145638f2842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2973a435-d55e-4429-83db-307b4613a822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240ab3f6-74a1-45bf-8b09-ad443ab5afbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b6cf83-cc89-44ea-942e-e410d2e8954d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9238b4-3a99-4388-b077-56510b3a3d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1f6413-a684-4066-bc56-d59c659c35cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1008f3-95d7-4b28-aa09-8d43addcdd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb65d86-7898-4886-9e0d-c927252c1dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a1713-deca-4819-9c2b-fb8f6f6bbeaa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462c37c-98ee-4409-a3a9-a68922a62149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5584b0d1-bad7-4541-b3ea-f1374b95f185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c996883-ce15-42ae-9892-21666c06a2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0e19f4-885e-4cf2-a0c6-5e16f4b4881b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7057a0b3-8a2e-41d9-8f15-dd14c6333246",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f7fcea-7ddd-4815-8e7b-4688c00209fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c637f7c3-4309-4f73-bee0-d35691c0a9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840837f3-8a88-49db-8196-f33f85615c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152d30df-40f1-4491-b607-a3d3567f7ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e2c993-2bb5-43fc-b6a9-8ee0d126ac72",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e399dc-dedd-4dc4-ae25-9fc8ae9836d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c810132a-31ea-4094-b003-d39c8e290133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224701e-0836-4bea-9a71-61887c52d666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc56311-a9d1-4fba-b668-6274f9688a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc2a058-b473-434a-ad5e-11bcc7711d05",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfece8de-33f1-42c2-9cef-45386952d12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5231dce0-136f-426e-8d1e-2b3c07cce5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1544dd-55be-4dd2-bebe-0b3446a3e1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b24c14-66ac-4df7-ba76-7a6a74bb50fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f95f02-b03f-40e0-9c4c-6fbf22adc20a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1267a3fc-0ccc-4215-b7a0-21ec6b68de68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc231c0-808f-45bf-8125-60cf7b75be99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cc5421-9503-4e3d-9ae2-8ef3eecfe6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ff5e93-2c59-4a82-ab81-8c2d7382c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6016d4bc-2742-43c5-80ad-dba74bcb926c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2bd2b3-c211-40b5-a51f-4b264ec2ad77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6026f1-23ff-4bf9-aa63-1ebf1b42bb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccbb01d-7c0b-479d-8404-cd05eff05a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aff7c7e-abc6-4c3b-bc53-7b5f89d10bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5d7f0f-f73f-4be3-b616-cbc5e8946fb6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b7b679-35be-44ee-bf24-0e6db4d40542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b2be8d-9323-4c47-b633-17774b100a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4b053a-905a-4830-96d6-05124cf20750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5655ec-d214-4da4-b7e5-c8da911cc22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16246797-53ff-4682-bc76-2afb6aeeb0cd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3139149f-3b28-43c9-a2fd-58519297c4ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012d6711-935d-4eaa-bc4f-9663c2ccb421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28db3dea-6e6c-4146-9157-d32b92cfc1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf179a6-7545-40f9-947d-13c29628a9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91e4e3d-3f37-4d9c-aa97-8fae686626ad",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff16569-b66e-4be4-8678-4e27c2aaf387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857d3d81-8317-4094-877f-3831ad1b0497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd74261-340d-45d4-a67e-3f5bf053b660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaf0fcd-6c65-4200-a37f-c0a6a9df369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9851bdd-2313-4de0-9411-4245471968bc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11de372-7a37-41bc-8070-b8ddfa3c05ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99c14dc-4247-4e1d-81a6-da049dc531df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c50fb8c-dc92-4141-ac80-5c46ce83899f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bb34c2-506b-4111-90f0-f4ea6a9e71cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6883ed1-1eaf-409b-bda9-9f929c3e6c95",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd05e2b-8807-4397-91ac-7eac0a6764a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9753e1a-3c30-4d5e-9d86-e7584de4842f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d36eb82-3541-400b-b3df-9b61a532e6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c59057-e0e7-4325-a8ea-c3be62fa0a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749e95dd-11c1-4243-a6f8-5868808c86b3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f4c136-3960-4a32-850d-51acb5957147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ea9909-0324-45d6-85f7-89153f41df95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163241ea-35ee-4cb8-ae4d-00ab601c9dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e1007e-2589-4832-8aa5-7745859de547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d754989-2db2-455c-b270-2ec9a3c8010f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff0e99-5f7e-4e31-9bd4-d8c8058e8539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ce7a74-af9c-4907-a60b-e47ab8244c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661df161-c048-4e3c-b260-9c2f0ee96049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caa8dd8-3ed7-4bc5-8f2f-46fc51ae4766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcd9408-8d23-416c-b0fd-dba1c906865c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8930d9c-bdc4-4f16-b06f-8553999cefd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84faf128-e4a1-4d39-bffd-12b462548930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c15f1c6-4d01-452c-bd9b-436491959e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38498b7b-0539-45bd-993f-bbd0ce2b62e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ee4f01-9893-4ab5-9a50-cb98769450f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dbd12d-4faa-45a8-8d2b-c20e37c76eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f6571d-c79c-4d8d-902b-f338424b8ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d842d9-7a31-455f-90c7-c1574e732c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d927f59c-c1d1-4cd6-94e4-9a2c408e3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c43a82-3d75-41de-b5cc-4222e3f01645",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f1135e-0a11-4491-86b1-26d0a95156e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0671c8c-f2a2-43d3-a1f6-1be13ca6ac04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc174f7-a9bd-401c-b517-7f2c23a8b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbf6302-1f08-460c-b62a-1bf9228bf6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d745661c-489e-4b8c-947e-a7e75d20e0e9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757bd7c5-ded6-4255-b98c-7e3d8db8d2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3e1f08-ef32-4891-8032-25a6e51cbea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbaf941-4b98-40da-82e9-12c3948bf32e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce21f6b0-b3a5-42a8-96e2-c7fa467ba487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a83576-475b-4c5b-90cf-d5f0aa8ce025",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa50a35-b6c1-4e14-8dc4-550e563ffa3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e5e5eb-de5d-434b-b7e5-2c370b42cb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a21970-08e8-4866-9091-ef509716a8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fefbda-6bf9-48c6-9a51-3170041091c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35e6280-14f9-4df8-ae90-9f2c5d6de0a9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a51b4b-487b-4ae1-93e1-3c56b095492c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64dfacf1-7b8b-41f2-ac73-f23da2de75ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3458a2bd-9ac2-4765-bc6d-acfe616281bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07f2955-7e42-4239-8c54-8673f881b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5228a456-30e9-408d-835c-68026adfebf7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489c42a-351d-491c-beb5-0e346c50bc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d84022-d167-4f4d-82bd-07c4f8bfdb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda718f7-f84b-44f1-bc72-dc506e2a4774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5353f00a-e2b5-475b-949c-e0c94f4216c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37a8ad-3d2b-4c53-8788-0b95443711fe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44157f4d-d9d7-4613-89a0-c966652ee9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c1e7ec-511c-454c-8136-e5d0f7520419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ea4e39-9fcb-4298-858f-6b15079a12b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad97d454-cc7e-4cba-87a8-80c588535b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98caf2c1-cb23-4943-b098-a3fa286d3df2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9994b5f9-fa41-4ff8-905e-9cfbaae4f68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf070b0-a493-4660-89c4-0516f1146af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c300f22a-5a5f-49d5-abcf-e9d1fc1a1b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b451b-c62e-472d-8186-98a22350f38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac969a13-d1ed-45a9-a63c-a7504ab54671",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1dc8c4-c394-40a8-9c89-0b2529905350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f18ebb-d0d0-445c-a701-74199f69c0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699886c8-fa05-4039-9acf-975d726a7b36",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b495960-5a08-4da7-a39d-a817c836d79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb98ba-8016-4dc6-83de-39ec89fa4c41",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e9845-02c5-474b-907d-1553e805b2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2385ddb8-27f8-45f1-8ef5-21c50a450808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b72c829-4d65-41e8-90ca-a35bf109f3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a80a54-a3b7-4fe4-a64c-cbf3e207ae97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62423fac-83e1-4553-a491-ac1e6e3b30f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c629bbd-d157-45df-b8c4-0086e9795059"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b698f56-539c-4a5b-a0fd-3eec46956f5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6afa77c-7d61-4de3-bda9-4e1db90c996a"
                    }
                  }
                ]
              },
              {
                "id": "7fd135b4-866d-421e-a914-f6973dfffcca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38cd0dc9-bc08-458f-b22c-4af2390ea4ba",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e0aaa9-b154-453b-b957-f5a18378a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4dfb4b02-acf5-4c94-9b49-6d0eb58e1568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705312b7-7461-4307-8705-cddcffc3e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5804b07c-66fb-4225-a7d5-0b2241c5c99f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "580ba453-1c59-4cc0-b239-43761daff111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256fc278-f77d-4c0e-bfd5-c8179b9218b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a0fb7c-550c-4463-8562-1a8183a40b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbe8afc0-16b8-4959-98cb-19a88cf2f81a"
                    }
                  }
                ]
              },
              {
                "id": "d50eab9b-20c9-404d-8f47-c3de1bb2a3f5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3a58f125-11f5-4f98-a5f7-4bf86912aa31",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c458ed-db4d-4e35-9bb0-3e73d46c4d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef7da371-9047-4d87-9592-b23a99f6c510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa239a6-bee0-413b-83db-c61a26b11d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51927e5-ec2a-4f5a-8795-c13b732ac508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0015474a-8de8-4364-a717-837fcd7b9e1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14b439ba-19a4-42c2-989d-960502b4da8c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd682173-ee39-4bd6-8597-f59dd7122ba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4a6a1a0-5c09-4c54-8755-1e2e0e715b6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2be30836-9f57-459d-8ea6-bfc6e9c628bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cc591cc-84a9-4bc8-b066-7fc462226610"
                    }
                  }
                ]
              },
              {
                "id": "937aedd5-5ed4-4a48-8349-7e956ced3c09",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a29b2845-b446-4d65-a2ff-84b0940d8763",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06b36492-2e69-4142-8371-8c4e74a59988"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2793e55-aae0-4208-89da-2f4141ad81a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3f56528-7de1-402d-b026-9eea35dee406"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45bb2360-1f40-4e31-8536-ff9e60c85299",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "093c7c59-395a-42cb-87a9-6c54a145bae7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7716f228-03b2-4b9f-9a3c-eee459136dfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ad03bb2-1bf0-46e0-aaf1-276aaebaec18"
            }
          }
        ]
      },
      {
        "id": "f05714f4-eb09-4e25-a2f8-2986f8a409df",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7edea0f1-3d6f-4653-9770-06d9fa961959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33f7ae99-ef69-4c50-bdd4-12b6b034b451",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e4512bd-be59-4169-a05e-71f9bad4c7ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b35f8-6e66-4cf6-8891-43bd0e718e67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a755124-5dd4-43a0-b379-c18416c2b436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8ddda5-04fd-4b6c-8a28-4607c5a920ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09287711-cf2f-4879-a6a8-e3124c99591e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6520ba69-fb8f-4470-b04a-8da6c8f705c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d668362-c3a7-4f3d-89c5-40afb657c859"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36da5c38-8152-4bf2-8a9b-dd2685eb2727",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b949cf2-e0cb-4aae-be0f-a710ab1ba6fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1ead972-60de-46ab-a198-4470cea140af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e177b2a6-f1f1-4a24-b848-a7d1819a334a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61033c4-b8af-4bd1-9c45-da412cd362d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bc3bd09-8329-44a1-b7cc-7d1dd14a8e12"
            }
          }
        ]
      },
      {
        "id": "47769830-31e2-4139-b68c-1a0cc0f27430",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e64fd683-931c-4fda-b160-2d5695e49eb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80d3205c-4a3a-40cb-9958-7c3715b80760",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e254f13-01d1-4c95-9f6a-73fb918fc5f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524c40e1-903f-4326-9eae-828cd84f5467",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e2a7e00-d31e-463e-a7ba-7bf20681eebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4df1926-40f6-4dc6-8cfd-eec746df34be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ac6588-040d-4fd1-ac16-15ddd545b72c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a73831e4-aefe-4153-bd3d-3bff5938c0a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3105a4f1-5827-45da-9754-745ec20de215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7abcbc7-4189-4c9c-9bb6-b366940d6273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60cff19c-a54f-492f-b4a5-3ece000f8db4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d08b7d2c-cf60-4e51-9c4e-f8777a1256ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43ba23a6-a290-46c2-8071-c9dda24d6ee9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "179b5255-6c5e-4715-8f6a-0786619927f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0e08d8d-e387-4596-ad3d-c7c1a71ce2a2"
            }
          }
        ]
      },
      {
        "id": "1baec8e4-a557-409a-b2b5-d9c1f2ccdd31",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "14017544-f964-4b7c-a27e-ee523aa1bfa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "026df44a-9c7f-40f7-bc6d-6d73991bee71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a02397a6-1667-4334-b7ea-ab14837ab2dd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f2f955-9088-48bf-95b0-2f3c9f7dc5e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a11959-3212-48be-83c6-44def1f8fe39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd47b6-ccda-4d43-955b-a056d0e7c70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "065f598e-e0ae-4bb5-80ef-988cb0f3d2df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eacbe132-94e5-4c62-9844-0a934048f0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cafe3bbc-4b9e-4913-a490-0d04701b8803"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be4c94a7-42ad-47dd-aaf1-c0097171921e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47b8bb29-0722-4447-9fda-ee4b848ebdcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c7585a8-e972-4007-a555-bf687f4d7a3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65c04b42-86ef-4e9e-987f-8c800cb76db0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a93b3549-68ac-4fb0-bae8-6f7ffc9a0304",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e1366b8-7dd2-43c4-8bb2-f4211b44b18b"
            }
          }
        ]
      },
      {
        "id": "de31c802-09f9-451c-86da-5deac21cad8c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea0bb338-5e15-4e35-8365-8652242a2695",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20c7bf6e-c184-4a50-8575-d488a51b3efc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b4f80bda-851e-41cf-95ef-855e55457c9b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca1851b7-f6ad-4a14-a38d-b810c6e24a2e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "204c4fcb-5c2d-4033-9f63-10031ed1da6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.31929824561406,
      "responseMin": 3,
      "responseMax": 10450,
      "responseSd": 858.9043406978933,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704760602388,
      "completed": 1704760643707
    },
    "executions": [
      {
        "id": "0edf9658-abca-40e7-a3bc-f9c38fe78e1a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4262f064-97e5-414f-a304-02e4c45a9e38",
          "httpRequestId": "acd77633-4eb9-448d-b607-fb865e5dce5b"
        },
        "item": {
          "id": "0edf9658-abca-40e7-a3bc-f9c38fe78e1a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "436a2ef2-5562-463a-b658-ac635bb76b98",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "9e604128-3132-470d-952c-9489d22c169e",
        "cursor": {
          "ref": "8dbbaa35-261f-483c-b13f-2ce0e7327ac1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f0a82923-1a94-4095-bc26-d9d23080c648"
        },
        "item": {
          "id": "9e604128-3132-470d-952c-9489d22c169e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8ad980ca-ba00-4606-b378-c15b903746f7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "6ba9f947-0205-49b9-9bb0-987df7218877",
        "cursor": {
          "ref": "571da7f2-58b6-4307-88b2-c0600ea3f9e7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb4bde77-a65b-4a1a-8448-a6fa5d60632e"
        },
        "item": {
          "id": "6ba9f947-0205-49b9-9bb0-987df7218877",
          "name": "did_json"
        },
        "response": {
          "id": "8d7c2702-f32c-4c14-a05b-6811820b19fb",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96731453-ed81-472d-ab8a-15829a01b178",
        "cursor": {
          "ref": "00c7190a-c1d0-44a3-a42a-7dc219131095",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "61f72286-8eea-4830-922f-20d5d05c0e27"
        },
        "item": {
          "id": "96731453-ed81-472d-ab8a-15829a01b178",
          "name": "did:invalid"
        },
        "response": {
          "id": "476a20f8-a634-4b06-aaa2-44659bfe4429",
          "status": "Not Found",
          "code": 404,
          "responseTime": 913,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96731453-ed81-472d-ab8a-15829a01b178",
        "cursor": {
          "ref": "00c7190a-c1d0-44a3-a42a-7dc219131095",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "61f72286-8eea-4830-922f-20d5d05c0e27"
        },
        "item": {
          "id": "96731453-ed81-472d-ab8a-15829a01b178",
          "name": "did:invalid"
        },
        "response": {
          "id": "476a20f8-a634-4b06-aaa2-44659bfe4429",
          "status": "Not Found",
          "code": 404,
          "responseTime": 913,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4def30-d330-47d3-b3ed-b6d138293c18",
        "cursor": {
          "ref": "be5d6e4f-679d-472e-8e98-e74c93a90076",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "904cf18c-2ad0-4314-9e58-cef9a83c6017"
        },
        "item": {
          "id": "0e4def30-d330-47d3-b3ed-b6d138293c18",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a303e64-5574-4dea-a3e9-d52311bd40d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177adfa6-e095-427d-bb97-8f6f1ef130da",
        "cursor": {
          "ref": "c6420201-c5da-4149-a7f7-d31741429d1f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5bef2234-8ba2-45ab-95ba-6547cd0a0f6c"
        },
        "item": {
          "id": "177adfa6-e095-427d-bb97-8f6f1ef130da",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c9062a9c-78b0-4b8e-9dca-c2cdbcc85540",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1a510d-b18e-4540-a99d-e8bb98957320",
        "cursor": {
          "ref": "653c8f33-3dfb-48e8-a901-ab9029de38da",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "98e8d71e-c255-4857-b6bb-9ba22619515e"
        },
        "item": {
          "id": "0a1a510d-b18e-4540-a99d-e8bb98957320",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df33cbb3-6bf1-4773-919b-1cb0082bfad6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7656d541-e771-45fc-8990-a1a9c05df9e2",
        "cursor": {
          "ref": "708c089e-f6eb-4f1b-90e8-2271ddc039ff",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ea7717fa-b586-408a-8047-d9ef2b66a0c7"
        },
        "item": {
          "id": "7656d541-e771-45fc-8990-a1a9c05df9e2",
          "name": "identifiers"
        },
        "response": {
          "id": "2f881641-808d-483c-8a93-09bca20040b8",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a70f25-6243-45a3-86b9-367741ae54b8",
        "cursor": {
          "ref": "57973050-f56e-4142-81bf-360de819162f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eb8f49f2-2971-4162-9784-a660a9f2fa6f"
        },
        "item": {
          "id": "63a70f25-6243-45a3-86b9-367741ae54b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "da357216-f33b-4917-8b6f-a933156d7a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290bcec7-df8f-4fdc-a936-c2dc3fc86c26",
        "cursor": {
          "ref": "91af6e10-7ad6-4a35-9b7a-0340a8bcafe3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50f546b7-c34c-466e-ae29-9328b9a0905e"
        },
        "item": {
          "id": "290bcec7-df8f-4fdc-a936-c2dc3fc86c26",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4112069-5a18-40d7-91b0-96363cf0bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827cf01f-04ea-4fa9-99d2-dd1eb81c71e8",
        "cursor": {
          "ref": "949776ed-fa35-48ef-a9da-2f623c6fa748",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f5b327fe-ce1b-43ec-8437-d0c8b515d923"
        },
        "item": {
          "id": "827cf01f-04ea-4fa9-99d2-dd1eb81c71e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "45723a72-5bf1-4377-aec5-3ab837c0f17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c392fcab-db54-41a1-8844-0053f875ac27",
        "cursor": {
          "ref": "2e6d3e6c-4ead-467c-8206-be4cbd0f2d16",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2164d201-b777-4567-b0e1-0924e3bb45b0"
        },
        "item": {
          "id": "c392fcab-db54-41a1-8844-0053f875ac27",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7400ba88-1998-44a4-b488-e569bec1717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8139932-9a0f-40c0-9927-dbaf979b7208",
        "cursor": {
          "ref": "8d2697ec-9332-49c1-ae7e-75a5cd16136b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e59fcfd7-c0fb-40cd-9f11-e7c26425a24b"
        },
        "item": {
          "id": "e8139932-9a0f-40c0-9927-dbaf979b7208",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cd74e46-6149-4b6a-b76c-faea56f62108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53697f71-faf1-4b77-af20-139ca6582f08",
        "cursor": {
          "ref": "fe13eaed-eaf4-4f13-b4e0-a2231eebf136",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3a3278b-3f5e-4689-9b3e-74a3a7229618"
        },
        "item": {
          "id": "53697f71-faf1-4b77-af20-139ca6582f08",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f7f137a6-bd14-4082-b2da-631fe2983eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd68c73-2e96-44c7-8e2c-730e2abc98bb",
        "cursor": {
          "ref": "967b913f-7763-4d80-a8cc-a05a4cfb6f1a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6f8e1e05-e8fc-49d0-b133-d08d738c1c11"
        },
        "item": {
          "id": "6fd68c73-2e96-44c7-8e2c-730e2abc98bb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "66dda0a1-de1e-456e-b9a8-2feb22cacb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34081ce2-b79d-4c9a-aaee-5b1687cd4be5",
        "cursor": {
          "ref": "3a6e57ed-39bc-489e-ba02-767dca45ef14",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7890fe05-bcbf-42e4-9405-3a475f46201f"
        },
        "item": {
          "id": "34081ce2-b79d-4c9a-aaee-5b1687cd4be5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1a6e5328-dedd-43df-ae3b-f37081264f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b79dd1-90d0-435f-9c6c-de2eb475d59c",
        "cursor": {
          "ref": "4d7aed00-6c9e-495f-a049-5b0160afea4c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "17749105-72a2-4bc6-a651-2e68b0f6ecef"
        },
        "item": {
          "id": "b3b79dd1-90d0-435f-9c6c-de2eb475d59c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "91976137-e8dc-4b62-8e4a-97de1cb27f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7656f171-9456-4cfe-ad27-60fe6d2eee4f",
        "cursor": {
          "ref": "34519584-72d5-4454-8172-c3052c0da01f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "086346f8-9268-4593-87dc-a5380587c4dc"
        },
        "item": {
          "id": "7656f171-9456-4cfe-ad27-60fe6d2eee4f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a902d6ee-805c-4fff-b5dc-4fe51a0356b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a84c3f-8e67-4b70-afd2-6baa11206ba8",
        "cursor": {
          "ref": "b47cdf7d-6ec4-4834-aa74-ff397fb009ca",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b2989eb-d6a3-4b3e-9559-315d3f676f40"
        },
        "item": {
          "id": "e2a84c3f-8e67-4b70-afd2-6baa11206ba8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "46b8afbc-ad16-4b43-b115-43a916852839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1aae94-282c-4a3b-8cca-5d7763d58fea",
        "cursor": {
          "ref": "dc12ab7e-c342-4507-9e47-b8d9753b9063",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b7ea45c4-743e-4922-ac5d-883a3152e830"
        },
        "item": {
          "id": "bb1aae94-282c-4a3b-8cca-5d7763d58fea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f3e80f1-741e-497f-9836-5147d951c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ab0c1-e560-4b98-b2a4-6b3e65035929",
        "cursor": {
          "ref": "d304e094-6bb6-4b78-9849-eb432a5f7ccf",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c8fcc4e9-13ce-40df-912c-1250ad6601bb"
        },
        "item": {
          "id": "665ab0c1-e560-4b98-b2a4-6b3e65035929",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7b7a913d-3226-4c01-8cbf-8d7137ad1a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0618ed08-8db9-4190-bec3-cf827685dbb9",
        "cursor": {
          "ref": "9b41dce3-b01a-4824-8673-e96e914967fa",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3bcaf1e4-5ec9-44f8-b83e-ade2b99d4503"
        },
        "item": {
          "id": "0618ed08-8db9-4190-bec3-cf827685dbb9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "09d5264b-23fd-4048-9927-1f9922e82898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b14aa-c2ed-48c8-b69d-a15237e28d26",
        "cursor": {
          "ref": "c4f2a7d0-d014-4fc5-b82a-ed017982e721",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "59ba8ced-ddaf-4946-a1fc-6be3704075af"
        },
        "item": {
          "id": "1f6b14aa-c2ed-48c8-b69d-a15237e28d26",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a4a61a4f-e530-4dee-a1e9-1b69d2bbe8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5899b98d-aeaa-4800-a756-7689b42c2416",
        "cursor": {
          "ref": "aeaa50c0-b8c3-4263-80ac-5129ddddcde4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dbce6715-1b09-4851-8f45-2c74061e5e43"
        },
        "item": {
          "id": "5899b98d-aeaa-4800-a756-7689b42c2416",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "012b445c-a24b-4c91-9d76-5810f4c12ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4331fa9b-4205-43c2-a8c2-c2dac04af4c5",
        "cursor": {
          "ref": "4d532efb-b805-4b24-8d03-7c62f113e79d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c53a73b4-1c6a-4584-8205-aaf73b3cec70"
        },
        "item": {
          "id": "4331fa9b-4205-43c2-a8c2-c2dac04af4c5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "18275399-85f7-4b91-a025-d6642399e667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f50917-c894-4079-a5b7-57250f7f547f",
        "cursor": {
          "ref": "4fabfebe-c6cb-4ac1-8fd7-6ffbcab5051b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c928beb-04d6-42a6-8ef1-d476fd3cee12"
        },
        "item": {
          "id": "19f50917-c894-4079-a5b7-57250f7f547f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63261924-cba6-4418-a548-3db483308890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62897b3e-c39b-4b70-a5d2-0a4ede5a59ff",
        "cursor": {
          "ref": "a504c369-43b6-4047-a22e-d1930ad3230a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a8f59521-2e20-4c9b-aa6c-e1e74620c36d"
        },
        "item": {
          "id": "62897b3e-c39b-4b70-a5d2-0a4ede5a59ff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b450d864-309f-421a-b4b9-f9563ed2aa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82e8ee5-359e-47d6-8a8e-69dfbfd92fed",
        "cursor": {
          "ref": "fc1c3430-65d8-4847-abcb-0d184061df75",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "382c430d-1691-49e6-afdf-aae1a0391324"
        },
        "item": {
          "id": "e82e8ee5-359e-47d6-8a8e-69dfbfd92fed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a049e678-63b9-4633-a3b8-c89737b60d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b692c4d-6490-49fe-b2d5-db130c5f31e0",
        "cursor": {
          "ref": "8ea0d7a8-aedd-414c-b894-4f1143c5d71a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad50a996-432f-4e73-88e7-87ec2fcd98f5"
        },
        "item": {
          "id": "9b692c4d-6490-49fe-b2d5-db130c5f31e0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d4562eb4-78a0-41f8-a4ed-3363fba607d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14bc408-210c-4281-9e64-af4926a8c033",
        "cursor": {
          "ref": "020641d1-31e7-444a-8843-e7acccb0f057",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "beae1dda-9c42-4041-9900-5a891abc704a"
        },
        "item": {
          "id": "c14bc408-210c-4281-9e64-af4926a8c033",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "753d37b7-5e36-483a-80a2-95cbc30df118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea9622b-e7e2-42c4-9d80-bed58210c6a7",
        "cursor": {
          "ref": "8d748e99-b355-4d98-918f-1590576d34b7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8a5d12f3-c8a7-4a46-ab58-b3007d9bbd84"
        },
        "item": {
          "id": "8ea9622b-e7e2-42c4-9d80-bed58210c6a7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "15409750-7582-46e3-a5c2-fcd2b5d7c417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee4120d-88ff-4cbd-bc6b-8ddfff56dd7d",
        "cursor": {
          "ref": "bbb821db-a54d-492c-98b9-d95bb878c22a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e00bb3e7-cd6a-4cc8-8300-d23ffba0bed1"
        },
        "item": {
          "id": "1ee4120d-88ff-4cbd-bc6b-8ddfff56dd7d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d2acfeaf-8ccd-4c6d-85be-86e6054ab223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9d4ed8-6efc-448d-9e64-eca56fce9346",
        "cursor": {
          "ref": "6a7c06b7-17d6-4b2b-97eb-1df1386bdc09",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "57adec97-7e8d-4d96-84d4-6360282a0852"
        },
        "item": {
          "id": "dd9d4ed8-6efc-448d-9e64-eca56fce9346",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "69e24d98-7a06-45b2-92d7-21653f105e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eab6ed9-fd02-477d-8c4c-0af3410ce26c",
        "cursor": {
          "ref": "82fb55ae-eb9b-4d2c-9674-143667bf1960",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4dcad910-6f30-485a-bd06-f6412150a7ad"
        },
        "item": {
          "id": "9eab6ed9-fd02-477d-8c4c-0af3410ce26c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b4abb3b3-4d66-48be-9f6b-11d4346dac93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce398cb1-3fee-4395-a67e-a2e696eece05",
        "cursor": {
          "ref": "ae33fe55-21dc-4782-a114-06e86a5b45c4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2ba5460d-2794-445e-a723-2236f4ed8978"
        },
        "item": {
          "id": "ce398cb1-3fee-4395-a67e-a2e696eece05",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "25f8e291-c545-490e-9e18-89d904a3291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0bc18d-3a5c-48dc-8df7-b0d241cf8a3c",
        "cursor": {
          "ref": "dfa8f341-e6a0-4241-baa8-6c02eb5befb7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7bee145d-de4d-46d9-af28-5115abc4caaf"
        },
        "item": {
          "id": "1e0bc18d-3a5c-48dc-8df7-b0d241cf8a3c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0fceb27-85d5-41a4-a053-f7a26afad0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be00953-2feb-4358-9058-dba48fd6a776",
        "cursor": {
          "ref": "d99c48d2-f67c-47e2-bb22-efcfe6861ae9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fe35b96d-6641-4e1c-bed1-b9d28b9a7e1c"
        },
        "item": {
          "id": "8be00953-2feb-4358-9058-dba48fd6a776",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "229ec868-f567-444d-ad5e-b59c71dbb7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55c66d-ab55-428e-afb6-d3a068c99288",
        "cursor": {
          "ref": "603d91b5-c832-432e-9545-a4720c449ab6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3e66c040-e4c0-4749-a024-49e65726c42b"
        },
        "item": {
          "id": "bd55c66d-ab55-428e-afb6-d3a068c99288",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6ef4ce73-30c4-4156-9108-997abfc0e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b2b74b-7e79-4856-a44f-3575208b9be5",
        "cursor": {
          "ref": "beb1484c-98a4-4bd0-a633-2a59177dccd3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "25b96765-c804-4b52-91fd-d0a217031264"
        },
        "item": {
          "id": "b9b2b74b-7e79-4856-a44f-3575208b9be5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "88dbc4ee-87d3-4e3e-9314-bca8ba8b74fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef8bdee-cf33-4846-a955-bbf5810a1360",
        "cursor": {
          "ref": "f3aaabb2-87fa-4e9f-b2b8-79bff700f3db",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "567ff741-f14a-434d-9384-f5bae1b40da7"
        },
        "item": {
          "id": "4ef8bdee-cf33-4846-a955-bbf5810a1360",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e2cc61a0-0c42-451a-bcd4-2e575f8264e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b092cb6b-64d0-4851-920c-ff4d5754c1c8",
        "cursor": {
          "ref": "d954f688-6815-4a08-b174-8f012cf000e8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "27422c3c-37f0-424f-b757-7d2e06c541a3"
        },
        "item": {
          "id": "b092cb6b-64d0-4851-920c-ff4d5754c1c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9e3a4ff-bc28-460a-93a1-760b96f10c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b91e73-8188-4b82-ae19-5f76547e95bb",
        "cursor": {
          "ref": "daf53513-8eb2-4ff8-aefb-ebb0d5627d82",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fcb8dbb8-39bd-4479-9fee-f442aec93fed"
        },
        "item": {
          "id": "42b91e73-8188-4b82-ae19-5f76547e95bb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0237d09d-b70a-41a3-815e-c03068de6b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fd1f8e-a832-443f-a275-f6ab1a3b67ef",
        "cursor": {
          "ref": "091fc475-e8a7-4fac-852b-337e09e247f7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "567563b8-9ef1-4149-b67a-719b58390cec"
        },
        "item": {
          "id": "c0fd1f8e-a832-443f-a275-f6ab1a3b67ef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "df4f4208-05e1-4ece-b42c-8ddeab30787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a80ba6f-243b-4e67-8f03-afa5d1943730",
        "cursor": {
          "ref": "a3fb10b9-9df4-465d-b417-b6f21ccaf1f8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c6703dfa-5639-4853-b3a8-b5eb169a45da"
        },
        "item": {
          "id": "4a80ba6f-243b-4e67-8f03-afa5d1943730",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "369f1e87-2a15-47e6-b779-ab1c7d1f9fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc7001-d114-48db-96fe-7c9d1af14f3d",
        "cursor": {
          "ref": "e507693b-eebd-46b0-93ce-73c62ecd76c6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bfb39226-07b8-4598-b416-9caa091b036f"
        },
        "item": {
          "id": "94cc7001-d114-48db-96fe-7c9d1af14f3d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "58792eb5-72dd-46db-8410-e4993b7d2424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939801b-f71d-426f-bc8b-84ae6a5ef301",
        "cursor": {
          "ref": "bd6f74a1-a86f-4f58-a637-95dac2d5f872",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "90860b2d-7792-4df0-81f2-d88826aa8ac7"
        },
        "item": {
          "id": "d939801b-f71d-426f-bc8b-84ae6a5ef301",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "523abdb6-1bb1-4a91-9857-1505371f1814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2093f04-49ca-495e-804f-959911adc421",
        "cursor": {
          "ref": "0ac686a9-df91-4724-a01d-b7a67fd4ae76",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "913bbf6c-93a1-4a66-b69d-d85999d68260"
        },
        "item": {
          "id": "f2093f04-49ca-495e-804f-959911adc421",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c4e6ccb9-a5ce-4d43-b535-941a183d204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22fe7fa-a5cd-4585-b208-598d90ba9535",
        "cursor": {
          "ref": "45fbd468-f276-494e-9492-fbdfcf85d3ad",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f8631b96-53e0-4be5-99c8-fcddc49d4aed"
        },
        "item": {
          "id": "e22fe7fa-a5cd-4585-b208-598d90ba9535",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "39509a71-b283-4b06-a210-cc3a4bacb653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a956b2-0ac6-4e91-8aa2-6d17b8fbe30b",
        "cursor": {
          "ref": "2471660c-22a8-4d00-8973-d6e92a46174d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a96e5432-fd4a-45cd-b60e-d49f318bc17d"
        },
        "item": {
          "id": "b5a956b2-0ac6-4e91-8aa2-6d17b8fbe30b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a638e9e6-dcd1-4ec0-9c7d-961d04b0eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e33e33b-784a-486f-81b3-10f2dc9072d3",
        "cursor": {
          "ref": "5f5bc9ab-7c17-4e6e-894d-0c1fa86252f6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3a679d27-3696-4d6f-a403-d5d8991f13cb"
        },
        "item": {
          "id": "5e33e33b-784a-486f-81b3-10f2dc9072d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ec95cc8a-6f6e-43a1-99bd-0accd3239d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb42b5-e586-44dd-962d-5ec45d16eca5",
        "cursor": {
          "ref": "fb7f19f9-8c7d-43cf-912e-a18a0cba5696",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f223844a-999d-4169-8a97-fe01bd16798e"
        },
        "item": {
          "id": "1bcb42b5-e586-44dd-962d-5ec45d16eca5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2f1b268-729d-45f4-a947-d4812083562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c5f0f-b5b5-4d68-acdd-1259faf60334",
        "cursor": {
          "ref": "ab193fb2-bd26-490d-9058-8924967af68b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dfd2c44d-d2c4-4c30-a565-1eefe5fa9217"
        },
        "item": {
          "id": "867c5f0f-b5b5-4d68-acdd-1259faf60334",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "489fde8b-64d1-4f90-a625-fa20a8f8ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7e7c4c-cc7a-420f-b46e-2d9bec5263ef",
        "cursor": {
          "ref": "b915ac32-18de-456e-a826-53e18788a08a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4b0984fe-f7d0-4c3c-9e30-9015619702a7"
        },
        "item": {
          "id": "4a7e7c4c-cc7a-420f-b46e-2d9bec5263ef",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e446db3e-92c0-4c88-b188-b859156994b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb67e18-f537-4c37-b91b-7770e6e78518",
        "cursor": {
          "ref": "3fb4799f-490f-4c87-8445-ed7d260d3269",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c7cb7cc8-bb44-4fcc-af4b-9658791e7f45"
        },
        "item": {
          "id": "ceb67e18-f537-4c37-b91b-7770e6e78518",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9c9941fb-7290-4b95-8123-4592d7b54bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7611b1-39b2-4e61-8cba-85ae3d7cc5b8",
        "cursor": {
          "ref": "9f3a3ead-bf87-4d0a-a7b6-be06ae531e46",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ae3b957c-494a-4974-8118-5e3f599003e4"
        },
        "item": {
          "id": "ea7611b1-39b2-4e61-8cba-85ae3d7cc5b8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5f154e20-29b9-4020-85ea-fcd02b58e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a21aaa5-bc33-4390-b43a-662cb83e4f2e",
        "cursor": {
          "ref": "187dbc13-4d7c-40ae-a926-e0e5e27b7ee3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d8a652ec-80b9-4f30-b149-156fb58770c5"
        },
        "item": {
          "id": "1a21aaa5-bc33-4390-b43a-662cb83e4f2e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "376bc23a-e514-45ca-975c-b53060ecbafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26876d04-df03-4a9f-ae4a-d7862a3013a7",
        "cursor": {
          "ref": "0d4d2004-5128-4aca-a9ec-7e379888e17e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5eb8002e-081f-4427-90fd-614bdedc5c8a"
        },
        "item": {
          "id": "26876d04-df03-4a9f-ae4a-d7862a3013a7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "984a0726-4cd4-46f1-ac51-32f62813acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7150794d-ab91-405b-8321-d58ff4f56ed7",
        "cursor": {
          "ref": "f24fef40-8551-49a6-90f4-837efbbebcd6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f0df8467-ebb9-4ce6-9b55-6db1fb32dca3"
        },
        "item": {
          "id": "7150794d-ab91-405b-8321-d58ff4f56ed7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39ba8cbd-aa04-4ad3-a68e-5562a0dc3a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82485ed6-e253-46af-9f71-23d0d7f54dd2",
        "cursor": {
          "ref": "9adf966e-88f4-4776-a27d-109dbdb539d4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5d82d8e3-e82d-4f89-9fae-ea002f598a3d"
        },
        "item": {
          "id": "82485ed6-e253-46af-9f71-23d0d7f54dd2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "387588a9-f988-4651-bc22-9176954ffe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30094f6-68ac-4ffb-ab91-6197d6d602c9",
        "cursor": {
          "ref": "3915e9b8-e46f-4364-96e6-946032a509c7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d8b4a5ed-2366-4f35-8155-686889142ed2"
        },
        "item": {
          "id": "b30094f6-68ac-4ffb-ab91-6197d6d602c9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5b5efa70-f652-4871-bbde-2b77f5ab66f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f915a73-3263-4e57-905f-4d4f5cdb224c",
        "cursor": {
          "ref": "3e87a569-897c-43ae-8786-2b68633b8f1e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3d2556d9-a599-4576-a4bd-e7f834e445f3"
        },
        "item": {
          "id": "0f915a73-3263-4e57-905f-4d4f5cdb224c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4af93980-c860-4ea0-bb7a-89124c9d9565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55612668-522c-4414-9bd8-b7293e61735b",
        "cursor": {
          "ref": "ede95b5c-c0e2-4c2f-a2a3-80e89fbce1e0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "afc3a13d-c5c9-4a65-8458-37f8fdc24cea"
        },
        "item": {
          "id": "55612668-522c-4414-9bd8-b7293e61735b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "842af9d7-7eb4-4cb8-b419-3d4bbcc1a6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c33454c-fb82-4cc1-a621-5a06db5bf9cf",
        "cursor": {
          "ref": "b7330f2b-b01d-44ef-b1cd-560ff99e505c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0f84058d-86c4-4b22-ab09-469c23d8f241"
        },
        "item": {
          "id": "1c33454c-fb82-4cc1-a621-5a06db5bf9cf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7437c16a-de53-48db-9293-819d275310c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c202135e-e3d1-4937-b364-9a88815b0613",
        "cursor": {
          "ref": "8cac9c1b-6ca3-4a64-aedd-c2fb31fe28de",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "60417cfd-8ebf-4b42-b81e-a3f02a24a41f"
        },
        "item": {
          "id": "c202135e-e3d1-4937-b364-9a88815b0613",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8599459d-0fd9-486c-bc67-9596cbf2f6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96616b7-0437-4f85-846f-4850894d346f",
        "cursor": {
          "ref": "08df7b29-a60e-4276-8419-b436e0fbcbd7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "89830d15-1587-4960-a4f7-0368a5aaa7a4"
        },
        "item": {
          "id": "d96616b7-0437-4f85-846f-4850894d346f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f893f590-442b-49e7-aca5-979a5e844650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64881a4d-d33c-47b5-8871-67ec1ade8476",
        "cursor": {
          "ref": "07062de1-b8c2-411e-b2ba-22bb3ef5808c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6df44f3e-e8f0-4e00-90ec-2e0415559033"
        },
        "item": {
          "id": "64881a4d-d33c-47b5-8871-67ec1ade8476",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "20ec65c9-34b9-4e0f-acea-b14d83c4dd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80257c53-49bd-4d31-bcb1-bc749877dd48",
        "cursor": {
          "ref": "ea47f5d3-74c1-4d88-9db2-63b5695e05fd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5997e5cd-d374-4564-9e8c-646bc73348ce"
        },
        "item": {
          "id": "80257c53-49bd-4d31-bcb1-bc749877dd48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7bb9e9c6-5407-4511-8ca5-4ccd8e86e6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1fad24-6548-410a-8b75-bcb331dda86f",
        "cursor": {
          "ref": "6fccb1ea-4a0e-4b2d-8226-693f13447b1c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4b70c0b1-0bff-4754-ada4-fa488ceecd2f"
        },
        "item": {
          "id": "7b1fad24-6548-410a-8b75-bcb331dda86f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "805c4389-88b6-4029-b319-90481ad0bd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87f4b7-bc20-4d57-b6d1-e3e6462f35c2",
        "cursor": {
          "ref": "3e159326-4ea9-436a-bbe8-5e14d3d3cd27",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f51550f5-8e7f-4605-bec6-682d846644aa"
        },
        "item": {
          "id": "cf87f4b7-bc20-4d57-b6d1-e3e6462f35c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ae7e53f7-1429-4350-9b41-ba3e8b23d1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fed5714-f3e7-4638-a000-369bbc99d412",
        "cursor": {
          "ref": "1d38ecad-8187-4073-88ea-9d862ef9087b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "00eab8a2-cfb2-4853-83cc-0e504aed80aa"
        },
        "item": {
          "id": "9fed5714-f3e7-4638-a000-369bbc99d412",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce8816d9-547a-472c-a0fd-139657040768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f529ed3-eecb-4522-b36f-4ed107cad012",
        "cursor": {
          "ref": "598a24fd-0e76-491a-96ba-4899dd8b5724",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04f2f805-f3a8-4e0f-b68b-f469cf2ffa64"
        },
        "item": {
          "id": "3f529ed3-eecb-4522-b36f-4ed107cad012",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "19e0eba9-2281-4f37-9b4b-e7a22015c033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff22c7-09dd-4196-8dca-655d7bf1b7fc",
        "cursor": {
          "ref": "a672acbf-d851-4752-82a0-26f4b18b5382",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "602dd9e0-fccd-4fd2-91d9-59945b9a5501"
        },
        "item": {
          "id": "37ff22c7-09dd-4196-8dca-655d7bf1b7fc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3fc2f781-4833-49dd-89f8-819225118e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b7b4e2-b65b-4862-aa93-784341859f49",
        "cursor": {
          "ref": "3a9326b9-b6a4-41e2-992a-2afc3ceb5430",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d7b745fa-acdf-4973-a915-71e8566c774e"
        },
        "item": {
          "id": "f1b7b4e2-b65b-4862-aa93-784341859f49",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9f30fd2c-2ecd-4faf-9def-2df6a7d6cc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b3c2c-24a4-407e-b16a-185ca8c4380b",
        "cursor": {
          "ref": "a0c62390-3172-4642-9615-2a9fce470445",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9caa7f0-ac5a-4eb1-a5e4-16617c681e13"
        },
        "item": {
          "id": "e52b3c2c-24a4-407e-b16a-185ca8c4380b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f13a2f3d-2dc6-4d73-a9a3-6d3913e29a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9479e6d-e732-4225-99dc-d5644bac6651",
        "cursor": {
          "ref": "524c99f6-5241-4dc3-9a4d-809cd6a4fed4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7c5e4423-df53-48c6-bce5-a7b6ecdb8fe8"
        },
        "item": {
          "id": "e9479e6d-e732-4225-99dc-d5644bac6651",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f69e312a-ecdd-4bf8-b3da-8d1f2bf96515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d32e769-e52e-4036-a43b-17c5a61eea13",
        "cursor": {
          "ref": "b227c289-1f0f-46bd-928d-4d0a0122161b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6ec5dc13-157f-45c0-9c25-4f0ff170dcb3"
        },
        "item": {
          "id": "3d32e769-e52e-4036-a43b-17c5a61eea13",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d689c899-770e-4a0e-920c-24a28c51851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f719f482-efe5-431e-8a47-baa8e43eef81",
        "cursor": {
          "ref": "0f770473-1b06-4b4f-a9e8-75f2b5c6cb7e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "303f0d60-f47a-4346-82f3-f6042614a671"
        },
        "item": {
          "id": "f719f482-efe5-431e-8a47-baa8e43eef81",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f7a73c21-df6c-458a-b1e2-c08a06b39e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382d75d-18fb-4709-b2b3-ef40bbd1587e",
        "cursor": {
          "ref": "7ba8435c-27f2-4fed-8dd3-6d2289e6f44b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "41dfaf83-67f0-422a-a604-06af895916d8"
        },
        "item": {
          "id": "c382d75d-18fb-4709-b2b3-ef40bbd1587e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "888701f1-7b8e-486c-8d68-4c6fe2519ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b9813e-0ee2-4b75-ac98-2365a49b7ec6",
        "cursor": {
          "ref": "e78edb40-ad3e-4d86-a37d-b57ca5646d50",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf28662f-3954-4cff-a1fa-7d0bbadd2018"
        },
        "item": {
          "id": "97b9813e-0ee2-4b75-ac98-2365a49b7ec6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a2f6c0e1-5946-4533-92dd-4d0b6bc18207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84187b04-770f-4061-996b-7983c4911b50",
        "cursor": {
          "ref": "37f11ac2-d260-4303-b20e-ac8b2556b2ea",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cdfcafa4-be39-4f8a-acbd-475da9f68eb2"
        },
        "item": {
          "id": "84187b04-770f-4061-996b-7983c4911b50",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7c6cc819-2cc9-4502-963d-0eff3f63b3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b76cc5-3d7f-4b88-b6ae-f5cc3542fbd6",
        "cursor": {
          "ref": "5f5a1faf-427e-4be1-8e88-59b34b38c923",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a71bba6a-b2a2-4f51-b820-c0e0f3235ba3"
        },
        "item": {
          "id": "76b76cc5-3d7f-4b88-b6ae-f5cc3542fbd6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aea06c61-e904-49ec-aaa5-00b1f9b71ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040bb23-821b-4a80-ab11-2945af1c6e8e",
        "cursor": {
          "ref": "eb53d12c-7ea0-4e03-81bd-7bbd593b66af",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "86ff8249-1a2f-4296-bdae-7ddd78c9f00a"
        },
        "item": {
          "id": "3040bb23-821b-4a80-ab11-2945af1c6e8e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dcd44507-88ea-4a89-acb5-f52b41cb6907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771c646b-0e16-4ab5-82a0-184f199b523b",
        "cursor": {
          "ref": "31ce663a-3643-48c1-b8f5-ada047e111a8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2727823d-80df-491e-8760-60d25268eab4"
        },
        "item": {
          "id": "771c646b-0e16-4ab5-82a0-184f199b523b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "074291de-2ad5-4774-85d0-4208d89af62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9850d8b5-a3e5-4e53-9343-5f7366d11128",
        "cursor": {
          "ref": "0e611ef7-cf4c-4c20-8f15-3bcd2592b98d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a4ed99e3-9f5e-4880-a8d6-226615a3336a"
        },
        "item": {
          "id": "9850d8b5-a3e5-4e53-9343-5f7366d11128",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c9742f0-1f19-42ba-8273-5ef839435666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583a4756-923c-454a-9fb9-b4eb666f6877",
        "cursor": {
          "ref": "b6b703b6-78aa-48d5-8348-8fd4ef0d172d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ee1b1273-3d05-411e-8255-eb069dd2b424"
        },
        "item": {
          "id": "583a4756-923c-454a-9fb9-b4eb666f6877",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e915021e-69c0-4413-9be7-33af1bf051be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4702ce7-b470-45bc-9851-341d1c066a42",
        "cursor": {
          "ref": "26e0fa21-048e-4509-9019-69cfed52fd5d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "65b25af0-d821-4942-aaba-6f6268d7da6f"
        },
        "item": {
          "id": "c4702ce7-b470-45bc-9851-341d1c066a42",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0537057a-5405-43bd-9a8c-af50e3e896be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8d11b2-3b7c-4b12-a2b7-34df2f9c8473",
        "cursor": {
          "ref": "e848a44b-fdee-4e53-8c3c-68803d5bc512",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c8940dd8-9255-4f71-ab95-31e3f8246aeb"
        },
        "item": {
          "id": "0a8d11b2-3b7c-4b12-a2b7-34df2f9c8473",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3496109-649a-4285-bfd4-d326b5865b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47437f23-3862-403a-aa45-1309e32e209c",
        "cursor": {
          "ref": "4b0a797d-0102-4793-ae94-5d4e73d07255",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "87125c53-d68b-4051-b095-0d1c195eaa07"
        },
        "item": {
          "id": "47437f23-3862-403a-aa45-1309e32e209c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "058bc4dc-ce3a-4f0f-855e-0f13d518a10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd3fe96-395f-43fb-a332-79caf588fedb",
        "cursor": {
          "ref": "20046258-aa6c-4713-8007-d748bbc7fb8d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab74c1ef-9e37-4235-8b9e-45d0d5bde69a"
        },
        "item": {
          "id": "ffd3fe96-395f-43fb-a332-79caf588fedb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5ee41f22-1f22-433b-94bd-424d4ab72eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443679cf-a1b4-4870-aaea-c564c75b1865",
        "cursor": {
          "ref": "51a3728a-b675-4d17-97f7-12c51c1f7ad8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7518bbd4-d10d-49fa-befa-49beb8e2d219"
        },
        "item": {
          "id": "443679cf-a1b4-4870-aaea-c564c75b1865",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "11153e36-277c-4a33-ab2c-a4991def408e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b38a40-e241-4675-a0b8-5f8687524734",
        "cursor": {
          "ref": "dc663d6a-944b-4c62-b326-fca452d18186",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "efe36c6a-3534-44ed-bcb3-fe3f406691dd"
        },
        "item": {
          "id": "39b38a40-e241-4675-a0b8-5f8687524734",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "00536733-44a1-494f-91cf-402b7a8eea89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc99feaa-4c68-47e4-b3cb-d51987642d0f",
        "cursor": {
          "ref": "c70fead1-d15e-48e0-82a3-b0acf1ad333a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a9ba0ec7-3847-4e12-aaf7-8a66498df0c4"
        },
        "item": {
          "id": "bc99feaa-4c68-47e4-b3cb-d51987642d0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "07f5d76f-a453-4cd8-a0e9-e9dabf62d77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16625958-7bfb-45f0-a730-e8c168b1d310",
        "cursor": {
          "ref": "94ed7d74-04c7-4f50-8c8f-0a90b6b481da",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0e54281e-61b0-432d-b45b-198d019cdbb9"
        },
        "item": {
          "id": "16625958-7bfb-45f0-a730-e8c168b1d310",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7adc21ba-58eb-49fe-96f4-b72da7190ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d4ef49-c320-4edc-a583-128e9d3ce6ef",
        "cursor": {
          "ref": "bd8e50c4-e6cc-4d05-a9d0-11cef73017eb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd601098-35f7-4501-b8e6-56e5da285d3b"
        },
        "item": {
          "id": "f2d4ef49-c320-4edc-a583-128e9d3ce6ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b925eaa4-f630-4edc-92da-faa8bfd0d77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89643bc3-b713-45ef-8b99-f82445d84b9e",
        "cursor": {
          "ref": "2507f487-9614-4e94-9666-2d13c999f5c7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b01ecb63-7f56-49d4-94ff-23104fba8c16"
        },
        "item": {
          "id": "89643bc3-b713-45ef-8b99-f82445d84b9e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f58f4af4-0381-45a1-97c1-922ea0da3f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f6ef6-2cec-4591-896d-416c67ae0d1a",
        "cursor": {
          "ref": "0f64b39e-15ee-4c8b-bd30-3d898befd110",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "410b5699-780e-4333-9144-3b19db0aed44"
        },
        "item": {
          "id": "829f6ef6-2cec-4591-896d-416c67ae0d1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "815ce6f6-b8ff-4357-b29c-58deaf25deeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5573cf4f-7b84-44f3-8052-4141a7a4f8b5",
        "cursor": {
          "ref": "ee4127da-ec5f-4fb1-80a7-333cf808817e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8ed0c0c6-88e9-4e23-9aab-5bcbd1b2608d"
        },
        "item": {
          "id": "5573cf4f-7b84-44f3-8052-4141a7a4f8b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5828fa03-c4c4-42e4-8920-95b6dd1bc62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6aaea25-2910-4bd5-85da-40fbf7df83f2",
        "cursor": {
          "ref": "70f62cee-340b-47de-a584-3e1835623427",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c210e375-0292-426a-ad40-2432511f172a"
        },
        "item": {
          "id": "a6aaea25-2910-4bd5-85da-40fbf7df83f2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "91f76ac3-6624-4fa0-915e-1def0f5e4ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71b6182-5169-42ca-80d4-cfe7e2d80363",
        "cursor": {
          "ref": "c8e5e415-f319-48f5-a5f1-fc021b472078",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a35d8699-c668-4ea6-9198-5171f706aceb"
        },
        "item": {
          "id": "e71b6182-5169-42ca-80d4-cfe7e2d80363",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "16e7aa1f-f549-4590-a08e-6e54b0387588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46559460-39d9-453b-af9e-8febea6944f9",
        "cursor": {
          "ref": "fe1f7e97-4abc-4bf8-baa9-5d740ee6762a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "69284d5e-c61d-4dfc-88c1-cf0eec33fcbd"
        },
        "item": {
          "id": "46559460-39d9-453b-af9e-8febea6944f9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "36bda9f6-6d9b-482b-b276-59437bdb4925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d206092-5bd3-43f6-8e97-e095a545dbd5",
        "cursor": {
          "ref": "9cc02f89-4a72-4734-91e9-b1a671b63057",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "957fba4f-8630-4220-81c0-f1195b0dc19b"
        },
        "item": {
          "id": "3d206092-5bd3-43f6-8e97-e095a545dbd5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bdb2ada5-1929-4657-aa49-e1a2450664ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71896aa1-302e-4a43-a6fd-1117ef2ce767",
        "cursor": {
          "ref": "b911db17-0d73-447c-98d5-9ff3d927c5c1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "212027dc-af54-4011-84a4-aa8605a3be60"
        },
        "item": {
          "id": "71896aa1-302e-4a43-a6fd-1117ef2ce767",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2f9fa61c-0dbd-4044-8948-e2dbfef88318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b92957b8-f3e9-4978-a4ad-4385d18aa5f6",
        "cursor": {
          "ref": "68a887c6-44ed-4d1f-9263-a582368cf7e6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7307a02f-df55-4ece-a939-d6afbc81dc8c"
        },
        "item": {
          "id": "b92957b8-f3e9-4978-a4ad-4385d18aa5f6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "da9262d7-88ba-4ac8-bbf3-b4f03df9a528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d6eec462-b8f6-4fbe-bd42-36b8599d79d5",
        "cursor": {
          "ref": "c9f93b87-4317-4182-ab66-7ca799802b43",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0e9d903b-d5a7-4bee-8e44-730e7d8110dd"
        },
        "item": {
          "id": "d6eec462-b8f6-4fbe-bd42-36b8599d79d5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c73cf74b-6b4e-4ad7-a35f-131494a4d47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "131043b1-18c1-4ab3-8a87-c8f3e277d49c",
        "cursor": {
          "ref": "d9bdb8dd-8069-4511-8276-de7390632b14",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75815115-8c78-4090-a4ff-65cf2b5ef1db"
        },
        "item": {
          "id": "131043b1-18c1-4ab3-8a87-c8f3e277d49c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e6a9eacd-918e-4116-bc18-182b8eefb748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "50e9e983-3524-4243-9aa3-b00702e700a3",
        "cursor": {
          "ref": "39cbdd7f-8bb4-4568-ac3d-24bbc03f8665",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c7cb30c6-9e83-4145-80d5-0cfcd61405dd"
        },
        "item": {
          "id": "50e9e983-3524-4243-9aa3-b00702e700a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "968b1dcf-54a8-4b57-af1d-7f2497fe6aad",
          "status": "Created",
          "code": 201,
          "responseTime": 10450,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a62c11-f766-4a62-a972-a6e3d35edc96",
        "cursor": {
          "ref": "64ae3109-4d94-48d4-8e6f-263e7931af24",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f8729e7b-6a03-455e-9b59-fcdbd0d8a152"
        },
        "item": {
          "id": "d1a62c11-f766-4a62-a972-a6e3d35edc96",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "553cb221-f97f-478a-8fd6-3485722bfc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "aa94f419-7f44-4c1a-8089-89989ce3a6e7",
        "cursor": {
          "ref": "1d95a206-5127-4bde-a1c7-3093e9fab432",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "39cc8a54-0f5f-4ef8-8461-30c8f6c84ef5"
        },
        "item": {
          "id": "aa94f419-7f44-4c1a-8089-89989ce3a6e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "44a7f079-ed43-4fe7-afca-8f754dab9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6ee88ae8-9251-4c4a-9d25-b6ef35cadf37",
        "cursor": {
          "ref": "9ff097dd-6a5b-4309-8065-ff3b888b6fe4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7fc9392d-09c7-482b-a08f-1ddff33fc322"
        },
        "item": {
          "id": "6ee88ae8-9251-4c4a-9d25-b6ef35cadf37",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "46166384-fbdd-40bd-afb2-a932326c95b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf849b14-66d4-493d-bd54-80cc0187376d",
        "cursor": {
          "ref": "d134e817-cc2d-4b38-82f7-fb9b292f0174",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "822d592b-3dc7-4322-8e1d-33ec56f1ec27"
        },
        "item": {
          "id": "cf849b14-66d4-493d-bd54-80cc0187376d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45acf7cb-8c33-45da-9e8e-537bf8c62f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eee621-a22b-4906-a7e0-bc27d56445f1",
        "cursor": {
          "ref": "52505527-a542-4a28-bb84-4d4846789afe",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "36d8e379-0af0-4615-b7ca-7616d663adba"
        },
        "item": {
          "id": "e8eee621-a22b-4906-a7e0-bc27d56445f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "08627621-d8e9-49b1-bcaf-f75667d67001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93542d5-89cf-497c-a6d4-68aef19ef7e1",
        "cursor": {
          "ref": "3d10643a-5228-4123-97da-5e3fa542cf66",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a29576e4-8d83-488a-b397-64e2c2798b3c"
        },
        "item": {
          "id": "b93542d5-89cf-497c-a6d4-68aef19ef7e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "99a12ef6-33f8-4850-994d-f5e4b7c150fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aefc534-5a75-464f-9dc4-0163700f6b1e",
        "cursor": {
          "ref": "3b74d289-e0ac-43e1-9acf-692ee4c83130",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e8fc950b-8a97-4e2a-bdf5-ca07ff4f9ffe"
        },
        "item": {
          "id": "7aefc534-5a75-464f-9dc4-0163700f6b1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0295d338-47ed-4071-88d4-49e7e0ba7fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd29bc-3206-4842-872d-dee289d555a3",
        "cursor": {
          "ref": "293bc8cd-a68d-43f1-98ab-55ba229683d9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0e17e28f-30da-4fae-8e5d-d620b32dfb54"
        },
        "item": {
          "id": "0edd29bc-3206-4842-872d-dee289d555a3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9640e71c-14d2-4a5a-9901-9ba90a9bd677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9a0bfc-61fb-4734-8355-ceeb01ab5df9",
        "cursor": {
          "ref": "35118836-e518-4cd0-9812-c46e7f8dee2c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "adf2ead9-1e41-45da-96d1-6dd002fb616f"
        },
        "item": {
          "id": "4a9a0bfc-61fb-4734-8355-ceeb01ab5df9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "76ee93cb-6923-426d-bdf1-b164f83d295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7074728c-1871-4970-a8b5-92d34e9122c6",
        "cursor": {
          "ref": "1d35175f-c921-4d98-a529-dafaf6d000f4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4827e0e3-e9a0-4663-937c-39db8eda72c3"
        },
        "item": {
          "id": "7074728c-1871-4970-a8b5-92d34e9122c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06a51ecd-36b6-461d-b76c-ad3222c40346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454483ba-2141-4a84-ad89-d813e09c312e",
        "cursor": {
          "ref": "baf5fbd1-5270-489d-a4e5-c6ad54999b19",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3398bdc5-0a82-4717-9169-22634a9931af"
        },
        "item": {
          "id": "454483ba-2141-4a84-ad89-d813e09c312e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32b7809b-497d-4044-9ec4-3283ca30ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bca0336-133b-4819-8b85-5df7362392e5",
        "cursor": {
          "ref": "abc63502-271d-4ac8-93ad-4f94c5c782ce",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "548ffc93-c877-47b3-ac15-94641e8f570f"
        },
        "item": {
          "id": "7bca0336-133b-4819-8b85-5df7362392e5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a416d52a-4291-4d42-b220-4c9458b10fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc22847-b442-443b-909e-c9c311e92c0e",
        "cursor": {
          "ref": "f42447c1-a726-4095-adc9-d12157586b1d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dbf47d48-105b-435f-b6d5-994a54a585e5"
        },
        "item": {
          "id": "6cc22847-b442-443b-909e-c9c311e92c0e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af980991-2305-4cde-b406-00ed34de0b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a471fc41-784d-418d-8b01-ede77ce66280",
        "cursor": {
          "ref": "93fc0819-c7e1-4645-b2a3-7b2bc4d85f2a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5a03f20a-8996-4573-a655-ee9d59343b7d"
        },
        "item": {
          "id": "a471fc41-784d-418d-8b01-ede77ce66280",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c485649c-79e2-480d-8099-f54af424551f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdc9d39-d633-4d23-af72-47e1f6e7f28f",
        "cursor": {
          "ref": "2e550755-bfc9-4f35-8388-22739adb9e28",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d31e634-aa4d-4e4b-b60d-a4203500f848"
        },
        "item": {
          "id": "7fdc9d39-d633-4d23-af72-47e1f6e7f28f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07d66596-ebec-4dc1-bdc6-7e13288468ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3392e6d8-16b0-47ee-8fae-b56248125e0f",
        "cursor": {
          "ref": "a2d96282-2213-4cb9-b8eb-bf564f2f3df7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "30e43ed9-85cc-4385-aad8-d67f6138c599"
        },
        "item": {
          "id": "3392e6d8-16b0-47ee-8fae-b56248125e0f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "de1d1154-ccf3-44f0-9d1a-6876f38969b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382d9da9-11a5-4b7c-842a-b5cc13d9ed2c",
        "cursor": {
          "ref": "b19cc620-1ca4-48d6-9d28-61bc701f45e2",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "837ca946-6c8f-4fb3-9436-a501511255c1"
        },
        "item": {
          "id": "382d9da9-11a5-4b7c-842a-b5cc13d9ed2c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3f22358-345a-4579-b63f-baf5f7d032b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1a6cbf-328b-4d94-81c5-c2961e89c93f",
        "cursor": {
          "ref": "571ecb42-dd21-4e01-a6b4-5526c9153441",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6787b03-0631-46ea-9d4b-6b93c005d0aa"
        },
        "item": {
          "id": "cf1a6cbf-328b-4d94-81c5-c2961e89c93f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99dc25ab-19ab-4d99-8e7d-77b62e6fc033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67efa3-9076-413a-a3eb-e40d73b917f8",
        "cursor": {
          "ref": "a3d77042-c22d-4f1f-af18-77263c7b945f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a8fa1a38-8a30-4917-80ea-00222880ad18"
        },
        "item": {
          "id": "2d67efa3-9076-413a-a3eb-e40d73b917f8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "579a3821-505b-4208-8a25-2bcc04a8bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17892ee-5b91-42d2-9e82-569bdee751b0",
        "cursor": {
          "ref": "4bd95157-95d7-4566-8aa9-a525aee757d9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0967e980-9a8d-4b6a-b390-1731a4e2cbf7"
        },
        "item": {
          "id": "e17892ee-5b91-42d2-9e82-569bdee751b0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d2e2f3e-4b88-4980-aa4f-9eefbdd1d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d3a10c-dcf1-48b7-9272-89cfddd0c790",
        "cursor": {
          "ref": "703c6af4-878b-4ffb-856a-39a798ca5b27",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "203bc57c-8869-441c-9102-4fb9aec50a92"
        },
        "item": {
          "id": "21d3a10c-dcf1-48b7-9272-89cfddd0c790",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "78e65634-d39c-433c-840f-65b1cb436f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d564c-0dc8-4b93-b51e-b06b40f60601",
        "cursor": {
          "ref": "5bafdace-8943-4a5d-8e0e-3c53b6cb66c8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0cb62f3c-c056-47e6-a2da-d11b54cc547f"
        },
        "item": {
          "id": "4b1d564c-0dc8-4b93-b51e-b06b40f60601",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24e43223-465b-45e2-b293-0e76cdae926a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a820edc-d84c-4e21-b95e-08eb4b4646e9",
        "cursor": {
          "ref": "d0e5cb8b-2800-4f43-9989-7f74fec73132",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "515c60d7-0e64-43d8-9eaf-c7d0e8a6ff0f"
        },
        "item": {
          "id": "8a820edc-d84c-4e21-b95e-08eb4b4646e9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc7b7795-7342-4f92-bbac-88393abd35e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0780b-7a81-462d-a4e5-2fffaa46636b",
        "cursor": {
          "ref": "630c10bd-ed3c-45b6-af80-5cb9f278c837",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e5aa2a3-c0d3-438c-842d-56c1b82d9b3a"
        },
        "item": {
          "id": "d2a0780b-7a81-462d-a4e5-2fffaa46636b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d48f65cd-febe-483d-8b54-8ddaeeea0ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72cfaa2-e5fb-4b90-bdc7-d77656a1f056",
        "cursor": {
          "ref": "796a05d3-451b-4e52-a2af-978dab53cf33",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9a986a05-b509-438e-9b54-9e95eabff9a7"
        },
        "item": {
          "id": "b72cfaa2-e5fb-4b90-bdc7-d77656a1f056",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef9906f1-f0af-4eab-9b8f-6d9e2bdd0826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19a2fa1-f02c-4bf4-a452-43ca9050d873",
        "cursor": {
          "ref": "d6045bc4-c7e4-4f8b-a2a3-88f1b19b46c7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f26b6d19-422b-4a54-8403-048c18aea457"
        },
        "item": {
          "id": "e19a2fa1-f02c-4bf4-a452-43ca9050d873",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0a7f22df-4620-4298-94f6-69214d26e7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae30e161-cac1-48d9-aaec-9ba75b76942c",
        "cursor": {
          "ref": "7b05152d-bbfc-4f9b-ab14-aa05b7660b92",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d3b38e2f-7a25-43eb-ae36-930022a54585"
        },
        "item": {
          "id": "ae30e161-cac1-48d9-aaec-9ba75b76942c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6acc8ce4-997c-457f-be5c-0efe41953b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34e31da-e4dd-4edc-8ba1-70cca86eb00e",
        "cursor": {
          "ref": "238446cf-c5b8-4fb9-9a51-374819098d83",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9497f743-c022-46ac-9212-8d1236d94d17"
        },
        "item": {
          "id": "f34e31da-e4dd-4edc-8ba1-70cca86eb00e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9596adf-621b-440a-9338-43dc43be43bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6404172-77e6-4831-a9dd-38cf02ec87b3",
        "cursor": {
          "ref": "3f6d1fcc-0119-45c7-b8a0-a9bc9acdadc0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "25472d40-30e7-4d25-87f1-6bbe4671e824"
        },
        "item": {
          "id": "b6404172-77e6-4831-a9dd-38cf02ec87b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90261ebd-1dc6-40c0-97d1-8627e428bcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e3f63a-4e08-4bf0-be94-c3941c1989a5",
        "cursor": {
          "ref": "14f0e103-4b24-4e69-9d48-64844cdba68c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "36907c92-96ff-49bb-af9e-565e44b03fcc"
        },
        "item": {
          "id": "00e3f63a-4e08-4bf0-be94-c3941c1989a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e219f4a2-2a24-45d2-83ae-8fa8fa8a042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e060888b-dbde-4d6e-ad3d-dba7b742fa76",
        "cursor": {
          "ref": "7d178d82-f163-4fdc-9da1-641ecedde782",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f670a7f2-95ef-4206-84b3-76a22c235359"
        },
        "item": {
          "id": "e060888b-dbde-4d6e-ad3d-dba7b742fa76",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5daf7322-4652-4419-b2be-c9ea084f2580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c387555-2e9a-46a8-a97a-d7edc4d9c5e0",
        "cursor": {
          "ref": "1520371b-684c-46e6-b01a-225591fb699a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "34a94af5-6fe9-46ef-897a-25054f5ecc1c"
        },
        "item": {
          "id": "6c387555-2e9a-46a8-a97a-d7edc4d9c5e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d8d3059a-8b1c-455d-809d-babd25740b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069bb31a-b3b8-49ae-a2cf-f6adcd3c5da8",
        "cursor": {
          "ref": "96cf4e66-2616-4223-a5f0-1d6b37180ef8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7ef9314-2a85-4fc7-812d-592c22def3d5"
        },
        "item": {
          "id": "069bb31a-b3b8-49ae-a2cf-f6adcd3c5da8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "29ab2989-e145-4e5f-8829-01158f552347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6048b4b6-e670-4cfa-bbfd-c0bb3386c27b",
        "cursor": {
          "ref": "35c1d8a1-4d3d-4817-8813-a0fc22b03e45",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba231a1e-adbc-4014-bc24-baf027d3bcc4"
        },
        "item": {
          "id": "6048b4b6-e670-4cfa-bbfd-c0bb3386c27b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fd6e800f-b540-4add-81da-cf0856ce1dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d24f69e-1cc6-4d6b-b9bc-c2c5e13eff33",
        "cursor": {
          "ref": "9d2e8029-67b4-4665-ad79-a91774e13a82",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "92eced65-2fc4-43b6-bf06-c773bc10ea9d"
        },
        "item": {
          "id": "7d24f69e-1cc6-4d6b-b9bc-c2c5e13eff33",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "04a59386-48ad-4c9f-a8ae-a717ce6dc0c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7375a764-d873-40e9-80a1-0f95dae306dd",
        "cursor": {
          "ref": "72b69d6b-fcaa-466e-9d55-801d80595658",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec4cebc4-54f4-41b9-b29e-3419b9ab5eb8"
        },
        "item": {
          "id": "7375a764-d873-40e9-80a1-0f95dae306dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "272a2f88-2ec9-4a33-9bf4-fe549cf32127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae57843-f250-480c-acfb-8da69f147634",
        "cursor": {
          "ref": "836ac215-bc5d-4cf7-ad59-a0b401cae438",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fba2c911-ebb2-4ec8-a674-7b05642f3941"
        },
        "item": {
          "id": "dae57843-f250-480c-acfb-8da69f147634",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68708f4c-94c7-45ae-9561-e0959f4a5349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bceb281-af0b-4967-9f07-ec0b294d03ae",
        "cursor": {
          "ref": "96778508-d0de-4930-a820-16835057e24f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8afecb1b-c6cc-4400-9f3f-4aba3eae29b1"
        },
        "item": {
          "id": "9bceb281-af0b-4967-9f07-ec0b294d03ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d3d38c54-21f8-4bfe-b669-51af2d16130d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4702b375-5666-433d-9a85-b522744987da",
        "cursor": {
          "ref": "d4fd6389-0c99-4850-9fec-6791d3c8cf05",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "48120e23-564c-4e5f-9ed0-a0f431b8b7c4"
        },
        "item": {
          "id": "4702b375-5666-433d-9a85-b522744987da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "157f1c43-80ea-41a2-b77f-30d0fdc40c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25e4d21-afc7-4be8-b4d4-ebb5a51e6a09",
        "cursor": {
          "ref": "b928ab3b-1dad-4fc5-bd96-21f7c07d85bc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "719112af-4824-4bca-9802-a954f97bb8f4"
        },
        "item": {
          "id": "e25e4d21-afc7-4be8-b4d4-ebb5a51e6a09",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "61e52623-d92a-4024-b50f-d09d9f011f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c14ad3-d9a1-48d4-b9ba-1a5d5fd320c8",
        "cursor": {
          "ref": "04dec73d-f194-484c-a25d-86db63a08515",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fbeb0db0-4330-4254-a086-089eac159215"
        },
        "item": {
          "id": "44c14ad3-d9a1-48d4-b9ba-1a5d5fd320c8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aaa12c17-d634-482a-968a-fccdf95ecf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0079a5c-7dd6-474f-aadb-2479ea6bdb81",
        "cursor": {
          "ref": "a275dc34-bf01-4979-8bbf-1bebd4a9b8a0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "19532df6-4177-4b2a-93fb-95f28e0c978e"
        },
        "item": {
          "id": "c0079a5c-7dd6-474f-aadb-2479ea6bdb81",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d61e9f19-0a94-4699-b2cd-bca71846aab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e02e2-8e03-4c79-b627-7dc12985c735",
        "cursor": {
          "ref": "b126b085-f078-40b1-928d-dbdfb628bc46",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e5ebc7ea-896a-4db1-94d4-bde150fcea6a"
        },
        "item": {
          "id": "258e02e2-8e03-4c79-b627-7dc12985c735",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "69d00d07-ac5a-4c54-800e-fe4614f832f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c0f995-e372-4451-9ae1-7147e27a30cc",
        "cursor": {
          "ref": "5f04fa96-e5d7-4a1e-81cc-11e7a4ad53cf",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5686b720-ad25-4f5f-8551-aee0ebabad5f"
        },
        "item": {
          "id": "c8c0f995-e372-4451-9ae1-7147e27a30cc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff9554f1-ab4f-44ab-b8ae-8a10c95e95eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef93e27-cebc-4a50-936b-a39bb209c1e9",
        "cursor": {
          "ref": "cd24fbc2-6974-4813-ba44-aea13c62aeef",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f05589ef-692c-49f6-a766-79653a987a45"
        },
        "item": {
          "id": "3ef93e27-cebc-4a50-936b-a39bb209c1e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fe5a117f-64d0-477f-9f82-f6558d759484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d8f192-3df1-46ca-8f6a-a587f795835d",
        "cursor": {
          "ref": "cd589dea-77bb-4aac-80db-8fb1aa722a3e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8a878cd-885b-4bc6-bd59-50b038d55810"
        },
        "item": {
          "id": "c7d8f192-3df1-46ca-8f6a-a587f795835d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f18e82f1-6b60-4af7-a6cf-ac4f75854bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f42a25c-db58-4ca4-b74c-865b5dd14340",
        "cursor": {
          "ref": "9a6d021b-451d-46f7-bd9a-f4e6561a8c07",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "88318d33-3241-490d-b615-00709bedfbe4"
        },
        "item": {
          "id": "3f42a25c-db58-4ca4-b74c-865b5dd14340",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c77c8fe-32ec-4808-86d2-4030e6811ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f024c-8109-4603-ba51-1c27ef1eb0f4",
        "cursor": {
          "ref": "9b014fc0-1dbf-4add-812a-56661e64bdc4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2656f2d4-8a95-4fa1-be93-807419d7d263"
        },
        "item": {
          "id": "cd0f024c-8109-4603-ba51-1c27ef1eb0f4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8a71853-e15f-4cc5-9d7c-14bd61ade7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fb968e-20e0-418d-985a-6fb616df16d3",
        "cursor": {
          "ref": "cdab5906-b264-406c-a1bc-bd6a3a028624",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ee68187b-bd00-4733-86bd-1bf8558e84e7"
        },
        "item": {
          "id": "f0fb968e-20e0-418d-985a-6fb616df16d3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d6cd7bf-c762-4c64-9242-258b15ae2f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83637a38-3150-4c3c-bd8a-dd010051533c",
        "cursor": {
          "ref": "b0d56875-f913-470f-bdf7-1b63c3e2b950",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7dbae304-084c-4cca-aed6-db401aac5c89"
        },
        "item": {
          "id": "83637a38-3150-4c3c-bd8a-dd010051533c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47d9a184-83e5-43ce-961b-ff6f52e8854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db13a401-2828-415b-85c9-622ef3d243cd",
        "cursor": {
          "ref": "32d38566-3514-4f02-a753-ed07a118f061",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0e46551a-44ab-4e13-8be4-41b432657c17"
        },
        "item": {
          "id": "db13a401-2828-415b-85c9-622ef3d243cd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cb804b2-9ce3-4c01-b7d7-58249e8ed1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eccbc53-b4c8-466e-845f-c1b207a1c1e9",
        "cursor": {
          "ref": "ca917fb0-ade4-4747-969e-ac0e655a40f6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "68c98ef8-466e-413b-b8c9-9fa3b458bfc7"
        },
        "item": {
          "id": "8eccbc53-b4c8-466e-845f-c1b207a1c1e9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c3eb594-364d-44c5-87c0-ecbbe4a7b6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21ffee-981b-408d-9b07-bff955f27af2",
        "cursor": {
          "ref": "1436cbd3-ae85-4f6f-82c0-9499df0aff05",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e1be95c0-d814-4ea3-a165-d1ca9c315332"
        },
        "item": {
          "id": "cd21ffee-981b-408d-9b07-bff955f27af2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b386fd13-9275-4f6a-a066-97ca0aede743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d12fb6-31d3-48fa-a300-4b0055c05305",
        "cursor": {
          "ref": "9c843744-7d9b-4d66-a2bc-8dfc20c8fbdb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "21470d71-2683-4802-9ea8-d079d020e06e"
        },
        "item": {
          "id": "03d12fb6-31d3-48fa-a300-4b0055c05305",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e0b7ee66-c486-4b3b-bb43-8046118f3ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea737b-700e-4a29-b513-52891eabbdfa",
        "cursor": {
          "ref": "b8fb715c-08bf-4afb-996a-374e6dac25c0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e12d48be-a4b0-42f7-b702-d88230712c33"
        },
        "item": {
          "id": "bdea737b-700e-4a29-b513-52891eabbdfa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5a17ba5-3f9f-487e-b5a4-65de21228ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f87c29-dd7b-4caa-82a4-9d555e7214dc",
        "cursor": {
          "ref": "50aa3b95-1cd6-4e38-8da8-6a56511d3f18",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "effbf55f-926e-427f-8d8f-5a65a846abbc"
        },
        "item": {
          "id": "36f87c29-dd7b-4caa-82a4-9d555e7214dc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7dafd95a-9726-45c1-8297-230364df7380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5dee1a-8774-44a6-989f-aa78922422c5",
        "cursor": {
          "ref": "789a537a-7e50-4546-a713-84b275e467ae",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d2f70197-18f6-411b-954d-235b56fd979f"
        },
        "item": {
          "id": "9b5dee1a-8774-44a6-989f-aa78922422c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c68e235-b222-4bbf-a3d9-89d680f35d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd0db9-3d75-47c8-977d-f95d70314fe8",
        "cursor": {
          "ref": "05442c81-e7b8-4a7e-9c00-dda40b75fe34",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa820fe5-da5c-4bd1-b82d-a431af37c088"
        },
        "item": {
          "id": "9dcd0db9-3d75-47c8-977d-f95d70314fe8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d9a95dd-8ddb-4118-be96-72281849dbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20efb40-02f2-49f7-b641-e89fbba62e78",
        "cursor": {
          "ref": "3099342f-0755-4a03-a8f6-5a3ba12ec755",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b50a354-b53e-4fe1-9ac1-0bf9b396db1b"
        },
        "item": {
          "id": "f20efb40-02f2-49f7-b641-e89fbba62e78",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ace1548-a3e1-408b-bb9a-427541fdff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88062532-eb57-419a-8e50-e9a699b754aa",
        "cursor": {
          "ref": "20ecd744-ada7-4f43-b5f2-27165a9e4f7c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9cc9a67a-7d02-468d-9ae0-6021744a2b84"
        },
        "item": {
          "id": "88062532-eb57-419a-8e50-e9a699b754aa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd10b67e-7dcd-47af-a79e-fa85b4834d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff82c7d-5547-401f-b95d-7c97a3530f13",
        "cursor": {
          "ref": "7fb7665f-dd50-4091-80f2-559700c6788d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c14a7c94-6aa4-4fc5-a3e7-c52b67a35047"
        },
        "item": {
          "id": "fff82c7d-5547-401f-b95d-7c97a3530f13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad72ca8f-4518-4d7f-8d0a-0495651fb0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec15f26c-71b7-4b6c-a8d9-74466df32e7b",
        "cursor": {
          "ref": "d7dfb7ed-832e-4dd0-81c7-a8ba199011ef",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7e21a174-b77e-400c-9a6e-3a3f7bacdc95"
        },
        "item": {
          "id": "ec15f26c-71b7-4b6c-a8d9-74466df32e7b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4e287c41-8f77-4bd3-906d-6ab818282a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d310512c-623c-4768-a911-e3b6ef0cd6fa",
        "cursor": {
          "ref": "b2442c65-fa54-4663-be91-b8efc5b119b1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72cd5db3-9bd3-4782-9268-59c1bfa11a7b"
        },
        "item": {
          "id": "d310512c-623c-4768-a911-e3b6ef0cd6fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e84ab945-a8c5-407d-8e04-5262a78df9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d8b51-2702-46ae-afd4-bd8f31031e87",
        "cursor": {
          "ref": "b78f6115-220d-44a9-9f1f-6632278bd32d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ca61631a-99cf-4731-aba9-5bc66877b396"
        },
        "item": {
          "id": "6d0d8b51-2702-46ae-afd4-bd8f31031e87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "56086561-e22c-4dd6-972a-ddd47e5346df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce4bd6b-e1b7-4711-a2cd-b4e15098f53f",
        "cursor": {
          "ref": "c9f91daf-cd4e-4119-abe6-0a4a48e0d468",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d95416bf-534f-4c8c-afe4-e251615edc07"
        },
        "item": {
          "id": "6ce4bd6b-e1b7-4711-a2cd-b4e15098f53f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a17503d2-107f-4cf6-8d51-50ca70d2e463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0487f724-379a-4d0e-9ad6-7d3dcd28026e",
        "cursor": {
          "ref": "16e1ceaf-2e13-456f-bf13-e72395f77cf4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "897c98bf-b84a-48a6-b8c1-be85251b70b9"
        },
        "item": {
          "id": "0487f724-379a-4d0e-9ad6-7d3dcd28026e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "14775a67-0f2d-406b-895b-ce6eb1c2ecf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e176aa7-adb8-4c88-8e25-75250455f17d",
        "cursor": {
          "ref": "70cba2d7-be67-4334-bee8-3ee56ee63347",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73990d0d-0853-4356-aa4d-e05d21878251"
        },
        "item": {
          "id": "8e176aa7-adb8-4c88-8e25-75250455f17d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5fbad544-595a-4dc4-9664-f5b2ffcd010c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4968a74e-adec-49b4-bb67-fdd332ed02dd",
        "cursor": {
          "ref": "a142b2bd-8900-4aa3-b4d8-95b8e76b1dab",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d17fb1ae-9aee-4693-9df8-6dcf952097e8"
        },
        "item": {
          "id": "4968a74e-adec-49b4-bb67-fdd332ed02dd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c977062f-809e-49c0-a51d-6b1f3ec9f77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f78ad-bfa7-4cd4-830a-6966ddbf4658",
        "cursor": {
          "ref": "abb84ad7-8226-4f9c-bc70-7d932abc524f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f11669bd-9956-4502-9eab-fe97c962542d"
        },
        "item": {
          "id": "862f78ad-bfa7-4cd4-830a-6966ddbf4658",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5df6abd4-299b-4e7f-978e-8f5ef0e10f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bacd4cb-3248-4c74-84d3-93e78a353101",
        "cursor": {
          "ref": "d3c3d49e-3497-4d84-93ce-00a2d1d46fa3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5477126e-7b93-4dde-915c-1b50d003ccb9"
        },
        "item": {
          "id": "7bacd4cb-3248-4c74-84d3-93e78a353101",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "117f3026-233a-4fe1-912d-37b900d81004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41767d9b-2702-4769-9b20-9b71b708669a",
        "cursor": {
          "ref": "0636b0e5-900f-4533-9d48-bf3dff72a241",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "58b31648-38a0-4488-8a2f-c90550f8ca1a"
        },
        "item": {
          "id": "41767d9b-2702-4769-9b20-9b71b708669a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d4bcf6fb-ef49-4a73-82af-59dfbd355484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b8485a-7c18-4a4b-90d6-d6dd6e324940",
        "cursor": {
          "ref": "db484ce9-2612-4b66-932d-fa23032e1889",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8fd26c1c-2f5f-4da2-9cd3-c3b5415d6731"
        },
        "item": {
          "id": "e6b8485a-7c18-4a4b-90d6-d6dd6e324940",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c87f9c38-6be7-4a47-9387-b5a5be5bb865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c40185-d475-449e-ab22-831843f20546",
        "cursor": {
          "ref": "a221fb7c-1005-42f8-aad3-a07f68c2468d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "46ceb0db-0036-487a-b805-0ad2ea6deba4"
        },
        "item": {
          "id": "f3c40185-d475-449e-ab22-831843f20546",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e07ae050-cac9-4fba-92ae-2531f14e4958",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4586d592-56c7-48d9-aad2-6f1a09e3592c",
        "cursor": {
          "ref": "c539efdb-3200-4700-b47d-8ffe32dbe2e8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48573209-4440-4ab6-adb6-9c571faff05f"
        },
        "item": {
          "id": "4586d592-56c7-48d9-aad2-6f1a09e3592c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17b656f8-a6b3-440a-a842-d1161ffe4948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58db77a0-da2f-4c94-b408-15ac99278863",
        "cursor": {
          "ref": "8bb8e3ff-2c38-4fad-b22b-7ced63ebf695",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c3105aec-2dfa-4131-a409-0601e3a279b4"
        },
        "item": {
          "id": "58db77a0-da2f-4c94-b408-15ac99278863",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4e6b1386-85d5-4706-8fc8-fc08f0030a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70e9f76-c0a4-4d6d-a338-00c54326476b",
        "cursor": {
          "ref": "a6b77b05-d8d9-4a7a-86f6-7f095fdbdb35",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "09019c96-c8d1-4965-9570-21dc6e85f7eb"
        },
        "item": {
          "id": "d70e9f76-c0a4-4d6d-a338-00c54326476b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c917e07d-27ad-4009-8bd8-b975098a12c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89ed448-f1d0-4151-86b4-091ac5dda140",
        "cursor": {
          "ref": "0d6cd2f2-984d-49b4-9dda-33ba72656554",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ca573c9e-a678-4dee-a01d-653443ce037a"
        },
        "item": {
          "id": "b89ed448-f1d0-4151-86b4-091ac5dda140",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d8db0aa7-c78e-4e4c-b38c-a10f632fd1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64427c7-ba60-4d74-a89f-1c02256b0a1e",
        "cursor": {
          "ref": "14c338cf-d433-4c4c-84b8-dfa53c788a91",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "872e8e1d-e40a-4a11-8b58-0d9cb104d12e"
        },
        "item": {
          "id": "f64427c7-ba60-4d74-a89f-1c02256b0a1e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3dd982e3-98d7-4dbc-b4bb-2209b57055ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d2efbf-0233-47fb-bc97-80e67696fa34",
        "cursor": {
          "ref": "8f848a96-1d8a-4206-9ab4-51e9fbfe8cfe",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f01b57a3-67ba-4f29-b22c-6c8f800fd09e"
        },
        "item": {
          "id": "44d2efbf-0233-47fb-bc97-80e67696fa34",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e596f53-d2ab-4343-adbc-8a5fbf76b536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78522bce-9254-409e-8893-c89848b33b7c",
        "cursor": {
          "ref": "a1813caa-bd35-4bb1-8227-2155533dd424",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a0bb46c-d8f8-4773-abed-7386992ad41d"
        },
        "item": {
          "id": "78522bce-9254-409e-8893-c89848b33b7c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "531351e8-383c-4de7-aeed-e9b9ebf22dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adfab3d-8656-4acf-8e83-febcedb53436",
        "cursor": {
          "ref": "33675708-e8c8-4848-b2f6-35e03c5f8b8f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1aa3c610-aada-4bb6-9ec1-45d373206173"
        },
        "item": {
          "id": "1adfab3d-8656-4acf-8e83-febcedb53436",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5ccad1c5-2795-4cc1-85a6-31ca10c0f0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76d98d4-c08f-41c5-8f00-c704b7a4b544",
        "cursor": {
          "ref": "2afa5b2d-2f34-40e7-939c-e3ac1b90ab35",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4f933cee-76ef-4a98-9fba-8c3f244c2fa0"
        },
        "item": {
          "id": "f76d98d4-c08f-41c5-8f00-c704b7a4b544",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f140204-ef0e-4e68-9357-b3217eda0298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6836f6-e14d-4b13-beba-7660fe771610",
        "cursor": {
          "ref": "77f7548e-af08-4599-ad7a-6132c5594bc2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73f0620c-9580-4834-b369-0f4eb2871d32"
        },
        "item": {
          "id": "3c6836f6-e14d-4b13-beba-7660fe771610",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9eee3f31-3077-434e-8b8b-da3df096e180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c94cf78-d0c3-48a6-aea5-69c9426573d5",
        "cursor": {
          "ref": "93577da0-5e92-4a7e-96db-ca8ea0f30141",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "69eda37d-83f6-42c3-9d4d-82aef0042930"
        },
        "item": {
          "id": "5c94cf78-d0c3-48a6-aea5-69c9426573d5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c356897e-04a2-445e-ae00-a2f86893ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1664f4fe-12e1-42ff-bc6d-ce48c9234f93",
        "cursor": {
          "ref": "379c689c-8667-45ec-808d-9992688722e2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "251e3ba6-b0bb-4be2-af88-52b52a426a8a"
        },
        "item": {
          "id": "1664f4fe-12e1-42ff-bc6d-ce48c9234f93",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "949d64fc-24f4-4a36-adb1-81a972195cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91844152-f1f6-44d4-bb93-f74c7b540556",
        "cursor": {
          "ref": "c083999a-96ba-43cf-9012-60bd257141e4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d756ec40-66b6-4b22-8931-0fe72a1c743f"
        },
        "item": {
          "id": "91844152-f1f6-44d4-bb93-f74c7b540556",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e1491236-7284-482f-97d8-e34b87a1cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98486ce-176c-47e4-ac65-9fca8e5e746f",
        "cursor": {
          "ref": "390b64a9-bd89-4102-a38b-fe5c666c1e47",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b56575f6-d174-4737-a24a-28ec450625e7"
        },
        "item": {
          "id": "f98486ce-176c-47e4-ac65-9fca8e5e746f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "18253cbd-c98b-4af6-ac3a-0296534061c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e015270-900b-404e-bf5e-be80737e5c45",
        "cursor": {
          "ref": "0a43dc3e-336f-4dec-a8aa-8d6936e254cb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2363cc43-69e6-41eb-9729-5dba610b48be"
        },
        "item": {
          "id": "9e015270-900b-404e-bf5e-be80737e5c45",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb7e5fc8-08f2-4039-a98c-7cbccf76444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60eac5-29bf-4c94-8e15-9688f80df3e0",
        "cursor": {
          "ref": "85a1cb17-c1f6-42dc-90c7-3ff1c35c04b0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5c49ad3d-f22f-4b72-803d-e109bfaf2114"
        },
        "item": {
          "id": "fe60eac5-29bf-4c94-8e15-9688f80df3e0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f940ec61-d3b5-471a-88f3-e275162a7fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99063489-7358-4778-94c8-10750ec0f197",
        "cursor": {
          "ref": "5cdc1483-ae24-4787-b7b0-976bf97d2696",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "50ee6dd3-4de7-430d-a022-d0b3a0092f6c"
        },
        "item": {
          "id": "99063489-7358-4778-94c8-10750ec0f197",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d3215ad2-352b-46fa-a904-cb5c5749d973",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "df83c3f7-4465-4459-aad3-e5dcdb9593cf",
        "cursor": {
          "ref": "11684570-56b4-4b73-a971-e38f4c78a8d7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c7a8b11e-a111-4adf-ab5a-38f85bf5b2c8"
        },
        "item": {
          "id": "df83c3f7-4465-4459-aad3-e5dcdb9593cf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dadf9fc7-b14f-4c36-8d27-ea11bce2cf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4fcd4-d274-4cad-a6f0-5b82bedf6f8b",
        "cursor": {
          "ref": "550bdc09-a8bd-4adc-b469-3ec2dc2feb33",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1b4f9f62-8d1e-49c1-bea4-f9c4fbcc01e2"
        },
        "item": {
          "id": "d5a4fcd4-d274-4cad-a6f0-5b82bedf6f8b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7d9a4326-75fd-49bf-9bbe-5892e0485d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0688b484-f837-4d1d-a07e-91693892a253",
        "cursor": {
          "ref": "b0e38754-a655-43e1-96c1-ff868d722ff3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "21e1bcff-1fe4-4a05-b950-b7aa26c93bbd"
        },
        "item": {
          "id": "0688b484-f837-4d1d-a07e-91693892a253",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fcbf90b-87e0-4f51-87c7-f3ecffb123f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b9119-dbd9-4e91-946c-f72b4f947469",
        "cursor": {
          "ref": "dbafbcc1-0855-4dff-9171-03f54c8258e3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7057f3b4-1c48-4897-a818-83a651260b69"
        },
        "item": {
          "id": "2c7b9119-dbd9-4e91-946c-f72b4f947469",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d155f226-5b37-47c8-8153-e28878e7a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b231b8-e683-4fb4-8fb9-aacab7cee1e2",
        "cursor": {
          "ref": "2d533fb2-416b-4821-993f-ed50cafefb6a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "370cd88f-3f70-47f5-9c52-4f81b088f455"
        },
        "item": {
          "id": "72b231b8-e683-4fb4-8fb9-aacab7cee1e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "003dec77-a5ed-436f-a141-558a70598ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741594a-3dd5-4ad4-a59f-16a95153ae27",
        "cursor": {
          "ref": "b1263559-86d3-455d-a50e-0d0ec05d13ee",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "29345655-b24c-40bf-b4be-837c20a4b3ba"
        },
        "item": {
          "id": "5741594a-3dd5-4ad4-a59f-16a95153ae27",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bc9720c8-2a73-4f8f-ba3e-73aacb6e1284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56919ac-dc73-432d-ae87-7de315af97f7",
        "cursor": {
          "ref": "0ae7c273-76c6-496b-b7ed-fe2eb8482e76",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bbe01ed8-81d7-4699-b6b7-c58cc8acd001"
        },
        "item": {
          "id": "b56919ac-dc73-432d-ae87-7de315af97f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d9c4e5a1-4003-4886-92d9-27a729fcab0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6381a81-2db0-4bdf-86a4-328e5917dbef",
        "cursor": {
          "ref": "ccc76199-a657-4400-a92a-ca76be170dbd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cd530bff-7284-4660-b261-f5677f5d7bce"
        },
        "item": {
          "id": "b6381a81-2db0-4bdf-86a4-328e5917dbef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "afa33629-f133-4417-ac7b-8c27d1ab04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e18b33-b87b-448c-9e9a-e7a0d53d0986",
        "cursor": {
          "ref": "5d45e548-19a7-42af-8c7a-4d56fe94b827",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a7116969-2514-4120-8fbb-457239f0e9d8"
        },
        "item": {
          "id": "a8e18b33-b87b-448c-9e9a-e7a0d53d0986",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fee81e2c-e8b8-40a0-9a97-1fc5eefccd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5fca4e-6c5d-40fd-8e43-8745914c9164",
        "cursor": {
          "ref": "86bcb7d2-ced4-485a-9ea2-7c2c7cc05acf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f554238d-3972-4e0b-9bf8-79bc0f39243d"
        },
        "item": {
          "id": "bd5fca4e-6c5d-40fd-8e43-8745914c9164",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b6572bd2-98b0-4254-bf98-9975c84753a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f51c7c-ada6-4492-9a30-208d6dd0e6cc",
        "cursor": {
          "ref": "30a19a52-20a1-4c1c-a5b7-60273c6eb3fc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "59d49775-e654-4914-9996-cf904cdbc0bc"
        },
        "item": {
          "id": "48f51c7c-ada6-4492-9a30-208d6dd0e6cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a97cf47c-91ad-4ea5-940f-4e9581e00496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7c30cd-e8ed-47a0-a263-a8f138b264c5",
        "cursor": {
          "ref": "93e2fcca-bb2e-4a43-a508-d16e7d1299f1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0efa2bc5-a490-4fcf-9746-964525db5fe2"
        },
        "item": {
          "id": "dc7c30cd-e8ed-47a0-a263-a8f138b264c5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c28c2648-52a2-453f-8420-eae4feb5b1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069ef151-86d5-4b19-abfb-7ad01b4d2799",
        "cursor": {
          "ref": "ebab107d-07fb-40e0-b35a-7965b468fe53",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "66c75df3-74a0-4383-9567-c12259ee1cbc"
        },
        "item": {
          "id": "069ef151-86d5-4b19-abfb-7ad01b4d2799",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1f43c20f-f1e8-4734-bd77-60e73c2ff906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f356748-15de-49c1-83d4-e40ef63e3d6b",
        "cursor": {
          "ref": "4fbfb180-e33d-456f-903b-eb10e878ecce",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "399caa47-4c59-4f05-bce4-827e60dd50aa"
        },
        "item": {
          "id": "1f356748-15de-49c1-83d4-e40ef63e3d6b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3b80cabd-5e88-402a-a40d-b5e1a1b2ae47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a4610b-38da-4b45-be73-c3a4b72bf47e",
        "cursor": {
          "ref": "a27085fe-6bee-447e-b30e-14b647c76516",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ae075523-4f02-4b37-8ea6-3a9dc2b31970"
        },
        "item": {
          "id": "62a4610b-38da-4b45-be73-c3a4b72bf47e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "61f2e2f9-440c-41bc-a120-4b3e59b7a664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e928a1d-7b26-4218-b97b-14a85a0e9f78",
        "cursor": {
          "ref": "8718b103-f13d-4200-9458-40f0c2f3ec04",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "76349e33-2d0d-4fd6-a2fa-881c810329dd"
        },
        "item": {
          "id": "1e928a1d-7b26-4218-b97b-14a85a0e9f78",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9baf9470-521f-4268-86ea-1e6e81f4b619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9449a647-2e6f-4ded-a756-3554970d14a8",
        "cursor": {
          "ref": "64eedc65-4735-49b6-8b36-777e376ea091",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "15680a2f-92d7-417f-a63b-08755b0ea56c"
        },
        "item": {
          "id": "9449a647-2e6f-4ded-a756-3554970d14a8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "efeb1885-6e1a-4c7d-991c-332d99204757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2e7a48-b34e-496e-86e2-7bc6438ac71e",
        "cursor": {
          "ref": "9d0f6c77-bd7e-469a-94d0-163b6febaaff",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "309e686a-ea56-4508-8a8b-07ecf94d23c5"
        },
        "item": {
          "id": "aa2e7a48-b34e-496e-86e2-7bc6438ac71e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "53407fc7-8f60-4471-979d-5c21b7a9bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859ce886-f4b2-4029-8a4c-27c45e8ca450",
        "cursor": {
          "ref": "c007adff-a7bc-4aba-8ca1-d6ab7ceb8062",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "33ccfa63-9055-4682-9687-5d8669fc2c31"
        },
        "item": {
          "id": "859ce886-f4b2-4029-8a4c-27c45e8ca450",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b8a62af6-8c33-4060-9f36-f7d3ef7361d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09e148-8521-49ad-9086-b0c94c861fb8",
        "cursor": {
          "ref": "0bce61c7-347b-45b4-919d-ac2e1864c2b1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e80362a-34b9-475f-931f-ee0078f13be6"
        },
        "item": {
          "id": "bc09e148-8521-49ad-9086-b0c94c861fb8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b59ed19a-3dce-4b64-9d5c-6613d333d1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad18ac-5c2a-4603-97d4-20155a3b313c",
        "cursor": {
          "ref": "410b7f9e-9a06-47ac-bbd4-d803ae8e88ef",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "eddf0bf1-5104-47bc-8e75-97f046042a13"
        },
        "item": {
          "id": "4fad18ac-5c2a-4603-97d4-20155a3b313c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4fcc7c91-52e5-4c9c-bd5c-57ba8aa52908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439d0afa-1902-4d81-92f4-414a37289197",
        "cursor": {
          "ref": "570f39f4-e9af-4a5e-bcb1-1932a7953ad7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "11439149-70fc-4f1f-ab7b-e25798aba2cd"
        },
        "item": {
          "id": "439d0afa-1902-4d81-92f4-414a37289197",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6fc39e6a-67af-4287-8bc7-e98d26048a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5e06cd-de6d-4221-9b9d-296281de37a0",
        "cursor": {
          "ref": "cff50f4f-e164-4236-a380-c62556045cc3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c0cf13b5-722d-4507-8d81-094d9d21cc8d"
        },
        "item": {
          "id": "3d5e06cd-de6d-4221-9b9d-296281de37a0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "921ddd14-3491-47a6-9a6f-cd6ef8b081c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e3b153-99ea-476e-9ea2-cf77c2380dbc",
        "cursor": {
          "ref": "6658422e-c49f-4838-979f-fa3542bcdf7f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fbc46fbb-c443-4d04-8b29-fe76da977665"
        },
        "item": {
          "id": "e1e3b153-99ea-476e-9ea2-cf77c2380dbc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e92ededd-eaa9-4186-bdde-781e3ee7b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d96f40e-9d41-445e-abc7-e2e8df7a162d",
        "cursor": {
          "ref": "c6b89308-4762-4ecc-9205-2670eb28c8f9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bb616aa0-2b87-4818-9be3-1a7602d6f8da"
        },
        "item": {
          "id": "0d96f40e-9d41-445e-abc7-e2e8df7a162d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "63a0e682-0715-42db-b61b-10e7707c3256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1aa3ea-36df-4175-bd20-d0c41afa8385",
        "cursor": {
          "ref": "bce59545-dd97-4b61-ac5e-13d973019a3c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "206f68f9-cb95-4887-8f8e-d146db16a264"
        },
        "item": {
          "id": "ae1aa3ea-36df-4175-bd20-d0c41afa8385",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d8aa4f7a-a40b-4978-be9b-b03f860d5c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cb8998-4a64-427f-aa2e-d6968ba0080e",
        "cursor": {
          "ref": "52ef3f26-bd9b-42d0-8231-7c916778b965",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f1291d6f-367b-41da-afb9-26ba2e4e0ec7"
        },
        "item": {
          "id": "f1cb8998-4a64-427f-aa2e-d6968ba0080e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3b418f7c-4ed1-4c29-bd64-1e40b2d9c0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd6832d-8495-46a9-a088-c3dd69f918d5",
        "cursor": {
          "ref": "2124ca1d-fc91-4f71-9779-6f999aca86aa",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f694dd06-621e-4562-a42c-3fc955ee42c5"
        },
        "item": {
          "id": "9bd6832d-8495-46a9-a088-c3dd69f918d5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "24f82dc3-955b-4c43-b219-7457f0314ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc7371c-063a-4bce-bd84-db459d4d5d47",
        "cursor": {
          "ref": "cefced8c-5eae-4144-853d-8370c1eb7f44",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80a10ef0-5592-4fc7-b6c8-bd00302f381f"
        },
        "item": {
          "id": "9fc7371c-063a-4bce-bd84-db459d4d5d47",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4a58379f-53b5-442f-a3f7-8f701ea44a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b551af9-686c-4219-8d93-b55856301f2d",
        "cursor": {
          "ref": "d99e30ab-ae25-47d9-8470-95fcd85ce8f3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8291d3d9-30fa-4133-a59e-5c8a95dab9a2"
        },
        "item": {
          "id": "1b551af9-686c-4219-8d93-b55856301f2d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5577908-67eb-4978-80aa-5e58b406044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08580652-ae26-4f1a-95e4-3e5e8a287a7b",
        "cursor": {
          "ref": "0bc65e1d-9134-4818-9b9b-d44ffe908550",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "78c676ed-bf4d-4163-9881-6c91cfebfacb"
        },
        "item": {
          "id": "08580652-ae26-4f1a-95e4-3e5e8a287a7b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d74f0987-63b1-40e4-8fbd-1d516068bfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2186da4c-3b36-4ebb-8dff-e3f83fa37910",
        "cursor": {
          "ref": "38dea549-f646-4333-9fe1-061fa4e7c704",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "84a54cfc-f6f4-4bd7-ac96-615f1e92bb39"
        },
        "item": {
          "id": "2186da4c-3b36-4ebb-8dff-e3f83fa37910",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c26898e-9246-44de-aeaf-6cc5634ecb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c346fd22-4d57-4388-b78a-175322e2854f",
        "cursor": {
          "ref": "d607ef7f-501c-455e-bfa6-2ab05f1793a5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cf14650d-ba2a-4523-b3d5-057f47fd0aa5"
        },
        "item": {
          "id": "c346fd22-4d57-4388-b78a-175322e2854f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cd4cd9f8-d481-40c5-b253-930940eecebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0ed58e-ba3a-4222-8716-3f4ea74bee33",
        "cursor": {
          "ref": "8b6bbf5e-a2f1-4a82-a9f0-e5bbc92d0935",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d18dd1eb-09c1-44fc-8351-a3590627b4fc"
        },
        "item": {
          "id": "dc0ed58e-ba3a-4222-8716-3f4ea74bee33",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24fd3385-5be2-4fec-b735-7300fce9bef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9fc9c2-c937-49a6-b897-cb7b08e1e016",
        "cursor": {
          "ref": "bea1b138-ec61-4a70-b77a-6212b6fce913",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "47f1195d-ea65-4f8f-b4ed-a6702f2571ea"
        },
        "item": {
          "id": "5f9fc9c2-c937-49a6-b897-cb7b08e1e016",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "204e8498-e607-44ec-9619-fac11d766d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5489def7-0bce-4629-b9dc-cb62d61e73cb",
        "cursor": {
          "ref": "2ac05332-4d70-47f6-ad80-f25fbb55c830",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "741533fe-6fee-48f7-8d12-6f2bd9a8f357"
        },
        "item": {
          "id": "5489def7-0bce-4629-b9dc-cb62d61e73cb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "514a1f6b-5891-4b61-bc12-01ddae07acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b54af5d-f943-4b1a-a94b-3a94e5a53cd6",
        "cursor": {
          "ref": "4ac73534-cdc3-4c9e-8f95-943581aa7673",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d7bc62a4-8cb3-4936-9004-2718d06db685"
        },
        "item": {
          "id": "9b54af5d-f943-4b1a-a94b-3a94e5a53cd6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e9880a46-df65-4c5e-b186-39a1d27fbad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bbe53b-4af4-4599-ab01-7767e387811b",
        "cursor": {
          "ref": "acaed823-d21e-47b1-b2d0-1a72d252382d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f6bc5f70-df36-49d7-be03-8bd54f02ba5a"
        },
        "item": {
          "id": "10bbe53b-4af4-4599-ab01-7767e387811b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b161d1c0-9f60-42c6-ab9c-703912ff1e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7912f79-4faf-4f31-a908-a556119bea00",
        "cursor": {
          "ref": "ee1b85e4-2c5c-40eb-8789-84187ee748ba",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "32511e4e-85f8-4d6b-8c29-67e2440482f7"
        },
        "item": {
          "id": "e7912f79-4faf-4f31-a908-a556119bea00",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7beb6f72-1619-42ee-9655-9dc706592f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f186ecc-7286-4b4a-8d69-687a36e3883c",
        "cursor": {
          "ref": "4756186b-8a0a-44de-b0c2-891254e0f909",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "04a72b91-5484-4d09-b9fb-1545bfe04a21"
        },
        "item": {
          "id": "0f186ecc-7286-4b4a-8d69-687a36e3883c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "76c209c8-fad9-4d3f-b841-7bdd461b2318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a014c3f1-66e2-4dd4-9f4b-4252a7b0cab0",
        "cursor": {
          "ref": "f0ac859d-365c-4caf-b753-20439545bcb5",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1070ca39-11b9-4502-a446-eca5756346c8"
        },
        "item": {
          "id": "a014c3f1-66e2-4dd4-9f4b-4252a7b0cab0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "07ab881e-a745-4bb4-adf6-0754c2d0d158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff4bc56-d011-4e60-afa5-4f159e22d4dc",
        "cursor": {
          "ref": "61772ba5-7ff5-4a3f-ba3a-2f1fa4631485",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6c16fd0-ef3a-4be5-a7f0-a5aeb2776639"
        },
        "item": {
          "id": "8ff4bc56-d011-4e60-afa5-4f159e22d4dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b5276ca0-7fdc-4d56-b658-836cf58d7be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f13047-3096-4eba-9b1d-642f4f09d7e6",
        "cursor": {
          "ref": "58fe31ba-d5db-42e1-b259-61ff721e8939",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "57b61a1b-9d13-4803-9bae-8cbdfd651441"
        },
        "item": {
          "id": "40f13047-3096-4eba-9b1d-642f4f09d7e6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fb800557-c842-4e2a-99a2-74f9de0c6aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022fc5d0-8c72-4e19-a234-5f3fc72285b5",
        "cursor": {
          "ref": "29924592-81a9-4cd2-86b0-3ddca00a43f3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1162fda-c779-4b59-b9a2-12ab64aa259d"
        },
        "item": {
          "id": "022fc5d0-8c72-4e19-a234-5f3fc72285b5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "420b593d-c15d-4205-bc59-d34b1b0eb31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f338001f-0166-4f82-870c-87f25cdf5438",
        "cursor": {
          "ref": "9ed2bcd0-93da-4a6e-9956-174333928265",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "de42ffa8-c298-4735-803e-be7d70f1c7ce"
        },
        "item": {
          "id": "f338001f-0166-4f82-870c-87f25cdf5438",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4b2b103f-5542-462e-b9e1-65da55087fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f32cb-0a89-404a-949d-beec33d65784",
        "cursor": {
          "ref": "1c271144-08bd-4735-ab83-dd09b4fed35f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d4805baf-0564-43ad-ae67-89eb4b977b49"
        },
        "item": {
          "id": "d73f32cb-0a89-404a-949d-beec33d65784",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "396e6092-b7dd-4a51-804e-3a7ef24d5b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2aee7-a86b-4e78-a9c6-7827b02f963a",
        "cursor": {
          "ref": "a503fbcd-a970-4502-9cd0-1e3e8babbcff",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eeeb2c70-ba03-404c-84d8-84e74871e1d5"
        },
        "item": {
          "id": "dec2aee7-a86b-4e78-a9c6-7827b02f963a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "07aa3569-b5dd-490b-8b72-30bc933c590f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1dfc24-9d7e-4501-bda1-cfd9bd6c907f",
        "cursor": {
          "ref": "29a43e88-89cc-460f-8f26-b8e9ef0fe1db",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "96e5646b-e82b-4782-8a6e-171c1f43c984"
        },
        "item": {
          "id": "9f1dfc24-9d7e-4501-bda1-cfd9bd6c907f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "855cb02f-4497-47f4-b461-1d1efa82a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2876b2-f65f-4fce-a8f4-edfb33aba3c7",
        "cursor": {
          "ref": "832b3511-2e33-4294-b8c1-6a5cf77addc8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb816990-0cee-49ee-a0e8-e8f7e8645ccf"
        },
        "item": {
          "id": "ce2876b2-f65f-4fce-a8f4-edfb33aba3c7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "244a9334-92de-4375-bb0b-14cfc765f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859877f3-7918-413e-89bc-bb97124313e4",
        "cursor": {
          "ref": "3573f2f4-e20b-4d4b-9f54-3f39f128cfe1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e87fff40-9b7e-402e-90e1-67e19b0f9de0"
        },
        "item": {
          "id": "859877f3-7918-413e-89bc-bb97124313e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92d90852-53c1-40b9-936c-d55b9af81150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9e1741-c464-4439-a085-16918a26247a",
        "cursor": {
          "ref": "998c26e4-91af-445c-9eca-45b6df084319",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f794a382-cb57-4459-b57b-0ae4793892fa"
        },
        "item": {
          "id": "ee9e1741-c464-4439-a085-16918a26247a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9d25d66-2af6-4f6e-9317-775c64204b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f064b2f-8819-461c-ad25-e973a7602387",
        "cursor": {
          "ref": "38877cb4-f111-4df7-b067-66f4344539bc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "63bc755f-d366-45eb-8cc0-f77fd726a53a"
        },
        "item": {
          "id": "4f064b2f-8819-461c-ad25-e973a7602387",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fae7e90e-bb94-4d22-bd24-6c2559a2b764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fffbaf-bd58-4352-8b38-ab2e133b8b1b",
        "cursor": {
          "ref": "332a650b-a89f-4efb-93bb-ffe89973b145",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2eaa4a34-87aa-4fcd-8011-345525c2ddc1"
        },
        "item": {
          "id": "17fffbaf-bd58-4352-8b38-ab2e133b8b1b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "564d8e43-0338-4ab2-90a1-6fa12ae8502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b9dce8-da01-4c5e-b717-e4df7c714ec8",
        "cursor": {
          "ref": "2e4c88cf-0f08-4dc2-ae11-efeb3e97fcf0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8a5ff487-8c9d-43f7-887e-cb9fe4b8ea9f"
        },
        "item": {
          "id": "82b9dce8-da01-4c5e-b717-e4df7c714ec8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b1e4f579-a52e-4f5f-a1d1-ec4a865e3e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a6c8d-1d19-4cc2-8dd6-f4adcd270a33",
        "cursor": {
          "ref": "b5cdd724-c8c2-46cb-847f-96e1cad56935",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6d37cd24-054b-4b88-8402-488dfa3a6416"
        },
        "item": {
          "id": "711a6c8d-1d19-4cc2-8dd6-f4adcd270a33",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0fbd6551-89e5-4ae6-8870-42965574cee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b6cf83-cc89-44ea-942e-e410d2e8954d",
        "cursor": {
          "ref": "1f50d79b-8abb-411b-af96-de686a1fed22",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "79ff165d-3be2-4dc5-9e57-6784e86dbddc"
        },
        "item": {
          "id": "f7b6cf83-cc89-44ea-942e-e410d2e8954d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "934d7f81-5b49-44fc-aac9-678c74373fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a1713-deca-4819-9c2b-fb8f6f6bbeaa",
        "cursor": {
          "ref": "cf5cb8d4-5276-4165-aad9-3fed66e3d235",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f3b59617-d6be-4382-8a7e-65b996446341"
        },
        "item": {
          "id": "4d0a1713-deca-4819-9c2b-fb8f6f6bbeaa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e8828e5b-7d10-4346-a688-623def297257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057a0b3-8a2e-41d9-8f15-dd14c6333246",
        "cursor": {
          "ref": "d13ccf60-af6b-4d30-8601-0877ae5efbe4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2bbf7c26-3e28-4ceb-91c6-332ec7a13872"
        },
        "item": {
          "id": "7057a0b3-8a2e-41d9-8f15-dd14c6333246",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13fbc2a2-669f-4dbb-a1df-6715827ce7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e2c993-2bb5-43fc-b6a9-8ee0d126ac72",
        "cursor": {
          "ref": "8e72432f-d5ab-4df3-b8d4-c4b02fdf605b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "317487c1-2300-4f13-886a-a50b04f93d4f"
        },
        "item": {
          "id": "b9e2c993-2bb5-43fc-b6a9-8ee0d126ac72",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "869359f9-fd34-43c0-bce8-61cbbff5bc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2a058-b473-434a-ad5e-11bcc7711d05",
        "cursor": {
          "ref": "0e476c64-3544-49e6-9679-ab73c23f4b5d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a10fa71a-a1bc-4831-a06f-e6b4c1ba2066"
        },
        "item": {
          "id": "ffc2a058-b473-434a-ad5e-11bcc7711d05",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a39a3ff1-1621-464c-8be5-a4ecde04643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f95f02-b03f-40e0-9c4c-6fbf22adc20a",
        "cursor": {
          "ref": "87ea9ddd-40ed-484b-9178-a0dff91f5c56",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3f271947-fbed-4084-afb3-498c4cf2f2fb"
        },
        "item": {
          "id": "39f95f02-b03f-40e0-9c4c-6fbf22adc20a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eddb89ae-d421-4c86-b084-e0bdf0613c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6016d4bc-2742-43c5-80ad-dba74bcb926c",
        "cursor": {
          "ref": "f747b1f8-aa85-4cbb-bc2e-d355737ab946",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0b5336b1-2d8d-4751-b28d-b3563d1eb399"
        },
        "item": {
          "id": "6016d4bc-2742-43c5-80ad-dba74bcb926c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "761cf4ea-16eb-4082-9065-029e00f85d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5d7f0f-f73f-4be3-b616-cbc5e8946fb6",
        "cursor": {
          "ref": "9eba0365-fe7f-4d58-8ea7-e362d86a23c6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bb04a482-f22b-480d-ab11-3cc06752f4ba"
        },
        "item": {
          "id": "8b5d7f0f-f73f-4be3-b616-cbc5e8946fb6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c86769d3-7ea2-4fd4-a154-edd9e05390c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16246797-53ff-4682-bc76-2afb6aeeb0cd",
        "cursor": {
          "ref": "babf224c-5fac-4c70-a291-d6060343a4c6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1c7f805f-7852-4c28-99f1-d39e96575f86"
        },
        "item": {
          "id": "16246797-53ff-4682-bc76-2afb6aeeb0cd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ec000c22-9b13-4ef1-8685-c042d803b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91e4e3d-3f37-4d9c-aa97-8fae686626ad",
        "cursor": {
          "ref": "715d3d42-4bfb-4b33-b77b-af506ca65eec",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0ab537f4-61d7-4723-ac8f-3fc017500267"
        },
        "item": {
          "id": "d91e4e3d-3f37-4d9c-aa97-8fae686626ad",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e95f04f-4918-4cf4-a65d-dea9f8fb50e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9851bdd-2313-4de0-9411-4245471968bc",
        "cursor": {
          "ref": "688ec8a1-da38-41f9-b701-56630dee5d06",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3e090142-438f-44cd-b175-f3c23cc1373f"
        },
        "item": {
          "id": "d9851bdd-2313-4de0-9411-4245471968bc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "63751092-212b-4f18-8588-088f5fac6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6883ed1-1eaf-409b-bda9-9f929c3e6c95",
        "cursor": {
          "ref": "47f06b95-8a1d-4396-b1c3-0fd5572c747d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4553a6a7-594c-4c17-940f-706084db2188"
        },
        "item": {
          "id": "c6883ed1-1eaf-409b-bda9-9f929c3e6c95",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "15b4aae0-cdc8-4b45-b0f5-ace9e7a66a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749e95dd-11c1-4243-a6f8-5868808c86b3",
        "cursor": {
          "ref": "d4dc7480-e74d-47c6-b48d-b2311e9bf716",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1419f638-f1b1-4377-8906-428bdc0ef24d"
        },
        "item": {
          "id": "749e95dd-11c1-4243-a6f8-5868808c86b3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2726aa85-b605-4c3a-a3d2-2c96b323242c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d754989-2db2-455c-b270-2ec9a3c8010f",
        "cursor": {
          "ref": "8b148297-9f16-4623-83e2-54d3840864d0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f208ede8-9eae-42ea-ad45-1f383f852e79"
        },
        "item": {
          "id": "0d754989-2db2-455c-b270-2ec9a3c8010f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d52a0268-d721-43b2-8910-8fdf34f84486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcd9408-8d23-416c-b0fd-dba1c906865c",
        "cursor": {
          "ref": "3d2405f7-4e1f-4f4e-85c6-b8caa76e6a30",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "be982b21-acbc-4d9e-a601-875d45711694"
        },
        "item": {
          "id": "dfcd9408-8d23-416c-b0fd-dba1c906865c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bacd2094-f0a2-4415-aeda-e08db1c61866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ee4f01-9893-4ab5-9a50-cb98769450f6",
        "cursor": {
          "ref": "d77e601e-80c7-438a-b97f-7eebb6fdcf6a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3f0e35e0-c800-4c14-897b-98026bf27ca8"
        },
        "item": {
          "id": "01ee4f01-9893-4ab5-9a50-cb98769450f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a828b2c0-d08a-45e9-8220-b2bb4089088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c43a82-3d75-41de-b5cc-4222e3f01645",
        "cursor": {
          "ref": "0f277ad2-49c5-4208-8ec5-d5ad4d6e32d5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "52060fdd-c5ba-46fa-ae61-174f3a6be528"
        },
        "item": {
          "id": "78c43a82-3d75-41de-b5cc-4222e3f01645",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "87aeefae-6160-4a87-a5c6-50191a48cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d745661c-489e-4b8c-947e-a7e75d20e0e9",
        "cursor": {
          "ref": "4a7b7189-a2dd-42bb-a30d-47751a7c37a2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8022b68f-2788-4396-84bc-9da7870b6436"
        },
        "item": {
          "id": "d745661c-489e-4b8c-947e-a7e75d20e0e9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e3fdef5f-7092-4223-afc0-4a997e90d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a83576-475b-4c5b-90cf-d5f0aa8ce025",
        "cursor": {
          "ref": "492a8e74-a90e-43a7-ba6d-0e3a4e2a119c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cf567244-52b1-41d0-b215-ff3090fab0f6"
        },
        "item": {
          "id": "31a83576-475b-4c5b-90cf-d5f0aa8ce025",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2b23617b-7f7d-4afb-b3c0-7e179b69cf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35e6280-14f9-4df8-ae90-9f2c5d6de0a9",
        "cursor": {
          "ref": "16d4b185-91aa-4574-9156-919c9de0ced2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "67efb232-669b-427f-9ce1-509547cf4e40"
        },
        "item": {
          "id": "e35e6280-14f9-4df8-ae90-9f2c5d6de0a9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b2785bad-a129-42cb-be27-6b13edd220b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5228a456-30e9-408d-835c-68026adfebf7",
        "cursor": {
          "ref": "ada7adc9-992f-4520-a709-48c5bf8678dc",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "70e32c8e-8920-4208-8980-7903364dc1e3"
        },
        "item": {
          "id": "5228a456-30e9-408d-835c-68026adfebf7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1e47dba2-92f4-4377-a736-4f75d8cc217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37a8ad-3d2b-4c53-8788-0b95443711fe",
        "cursor": {
          "ref": "8cc17ad0-7596-4cbd-8800-050449128281",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d4db690b-31d8-403e-860a-df583ac98239"
        },
        "item": {
          "id": "6c37a8ad-3d2b-4c53-8788-0b95443711fe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "647f34cb-e8d5-4dac-b1e2-ef88e2095ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98caf2c1-cb23-4943-b098-a3fa286d3df2",
        "cursor": {
          "ref": "a9933698-2eda-44b9-a6fe-8ab05c5a1da1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e8a7fd3c-2308-4fa2-afd0-9544813acbb3"
        },
        "item": {
          "id": "98caf2c1-cb23-4943-b098-a3fa286d3df2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1eabb7f-88d5-489d-b146-a3deb432ca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac969a13-d1ed-45a9-a63c-a7504ab54671",
        "cursor": {
          "ref": "3c89adcb-527d-4d88-9233-dd0523692114",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "663b21e4-d3fd-4765-9d80-710213707b33"
        },
        "item": {
          "id": "ac969a13-d1ed-45a9-a63c-a7504ab54671",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "53139577-e207-4de6-9eb1-f40a55bea672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb98ba-8016-4dc6-83de-39ec89fa4c41",
        "cursor": {
          "ref": "28386f1c-c01f-4f8b-8b6f-c5a6b62c0de8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "de58d1b6-93e0-4d14-b580-e713d3b52458"
        },
        "item": {
          "id": "2ebb98ba-8016-4dc6-83de-39ec89fa4c41",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a7f645e1-88d9-479b-be70-92da13313247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cd0dc9-bc08-458f-b22c-4af2390ea4ba",
        "cursor": {
          "ref": "aca69951-471f-4f8a-8e6a-d11855ad84d7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4894eff2-b5d9-443c-ad54-1b2706076032"
        },
        "item": {
          "id": "38cd0dc9-bc08-458f-b22c-4af2390ea4ba",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ecf1773b-c1b6-4cb2-8760-55b2735671e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a58f125-11f5-4f98-a5f7-4bf86912aa31",
        "cursor": {
          "ref": "06fba7e2-b7a0-4b7b-a79a-ea39ba63a833",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a460f1c9-441b-4b12-b24c-d4ec3a9cb176"
        },
        "item": {
          "id": "3a58f125-11f5-4f98-a5f7-4bf86912aa31",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b563fc71-5f6c-421c-8f1d-eb17f8418e37",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b439ba-19a4-42c2-989d-960502b4da8c",
        "cursor": {
          "ref": "682c1461-cd0f-4b97-948c-a28cb4ec16d6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "da4d72cb-0854-4018-9f85-8aaaae2fbffa"
        },
        "item": {
          "id": "14b439ba-19a4-42c2-989d-960502b4da8c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "21079bb1-1099-40ba-ad3f-5ecd3d59f695",
          "status": "OK",
          "code": 200,
          "responseTime": 5392,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "937aedd5-5ed4-4a48-8349-7e956ced3c09",
        "cursor": {
          "ref": "3f16f862-d3cc-43bf-9eeb-eecfa06efda9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a3d82e7-95ed-41fa-b1ca-4e6c41093cab"
        },
        "item": {
          "id": "937aedd5-5ed4-4a48-8349-7e956ced3c09",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d48d16f-d421-433c-bb50-424aa12eb732",
          "status": "OK",
          "code": 200,
          "responseTime": 8525,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4512bd-be59-4169-a05e-71f9bad4c7ef",
        "cursor": {
          "ref": "a2e6d099-89a2-4a5c-8cbe-65e5e9bd09cd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1f1732b6-c1d5-45e7-b734-f911f26f96b1"
        },
        "item": {
          "id": "0e4512bd-be59-4169-a05e-71f9bad4c7ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5a4b4f8-f3c7-4d3d-9d82-28f47c2be79a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4512bd-be59-4169-a05e-71f9bad4c7ef",
        "cursor": {
          "ref": "a2e6d099-89a2-4a5c-8cbe-65e5e9bd09cd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1f1732b6-c1d5-45e7-b734-f911f26f96b1"
        },
        "item": {
          "id": "0e4512bd-be59-4169-a05e-71f9bad4c7ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5a4b4f8-f3c7-4d3d-9d82-28f47c2be79a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e254f13-01d1-4c95-9f6a-73fb918fc5f1",
        "cursor": {
          "ref": "70b52593-4944-4d98-affa-f9bfe17fd006",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "735b748a-3cfa-4c18-9181-34e1d626cafb"
        },
        "item": {
          "id": "2e254f13-01d1-4c95-9f6a-73fb918fc5f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0471394c-1157-4248-af7d-7c36767f7f7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02397a6-1667-4334-b7ea-ab14837ab2dd",
        "cursor": {
          "ref": "96a5ebbe-7ea5-4454-961e-fff98e0006bb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e01b3156-f45e-4974-b746-185fe1d79c0e"
        },
        "item": {
          "id": "a02397a6-1667-4334-b7ea-ab14837ab2dd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b99df52d-e4c1-4a45-b9d5-2c0755c221df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}