{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2daa4268-3c0a-4d74-afdc-409f08dc4e25",
        "name": "Clear Cache",
        "item": [
          {
            "id": "41d6f8b4-9a5c-462a-bba6-cf5e197c6cce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25660418-e322-420e-b8eb-08e3bd620513",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e9ff1e2d-dc0a-4fc4-94ad-1d863266e09b"
                }
              }
            ]
          },
          {
            "id": "18c35e5b-29ac-4150-a346-e2670bee6fee",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3fa25459-6682-46f7-957c-019602db31b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b55c2c1f-dcce-41c3-bafd-53494a3efcc4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b575c72-e5ba-4774-b9d8-84b05889f34c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "00314d11-e85c-46ba-9f85-2278c1d4376d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ad53c07-e9b2-4960-b180-a91d1509b1a7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e122f89e-a5fa-4f4b-aea0-c139359b2128",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18ab08b1-c3e4-446d-92e3-6c8c608e58c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "402604da-195e-4306-b7cb-d4222d755ba5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edecb140-d3b6-4b03-83f6-f41599d0ab4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe29c87b-aaa8-4f7c-b6b7-6521ee70cf98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7d6d478-864e-4d7c-912d-4b4974ed8a17"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "124cd731-b993-47e1-bad0-d2fc47065fd4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "10879fea-4f38-47d3-befe-a8170797ada3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4dace16-06ad-4a52-97e3-283ac2df2c84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e5cf235-d79a-43c6-ad00-194f1445e6c4"
            }
          }
        ]
      },
      {
        "id": "008a1993-308b-4277-9308-d96f43c1ed50",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "600ed261-ed13-4346-bede-8c1363f6748a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0ece9c2-ea82-41e0-87ed-0679881da17a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79c3f905-a176-4a8c-9700-a09c9ad9de84",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707db7bc-95b2-465d-b40e-a93ebec8fbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27714b73-eea1-4c31-b7e9-abc0a3a89952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0f588d-4d4a-4beb-a986-840d6443fa3c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6784db8-f2c8-4b7c-9c7b-1294ade6075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edea15c5-c546-4be9-9283-6d13a37b76e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6677500b-b723-4a0a-b811-569e528eb1c2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec9eee-5a7d-474e-b435-c4af00eea6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2327f45-d7f0-48d3-affd-dc24f34f8429"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b12725de-d633-4792-a4b3-ea8c7c8714ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecd9ad9c-9e51-47e0-98ea-de9e8c53b0b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aeb672-4fa8-4535-890b-0a0968838d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a28dd4b-2648-4212-a251-c0874b61af8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c46837e-e884-44ee-a1c5-f98490ac0238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ded851-2da6-4c7f-abba-6ceca50415f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f22956e4-81d7-4edf-857b-ac57063d54dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e71663f2-5aa3-4c75-9e97-3a4482694fb1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f06842ea-b93f-4ef2-8f8e-0191acdd2373",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2bf6958f-d15f-45a3-949c-bab6d6b81e8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "057a1b83-81b9-4dd2-871f-85d2295a9ec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "073b7361-5852-4d1f-965b-c3a00f1824bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0557878-e261-4e96-8e3d-2019b2d370d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "379ddabe-74e6-4c80-9754-760b0b01a711"
            }
          }
        ]
      },
      {
        "id": "1f5cad3e-8431-49ef-b1ee-01f1e2d7d5b5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c9d4bdb-7c18-4ad0-83aa-0e8935c1ba22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03536197-2e86-44ee-bae0-1522b1c5d6f9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b914dec8-8646-465e-809d-112de78d453f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce834eb3-fef0-4651-966e-7c8d5f718777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc22f68-7c01-40ed-b555-711a6448a40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb6ea28-7018-407b-bb78-61d3aa04af02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b27f7fa4-9b46-46f0-adfe-d0e8323af578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e934833-880b-4282-a0e1-b64fcb02708b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88ff4e-43a2-49aa-bae4-21d6e4c18b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15742950-6d8e-4fbf-876a-901956ae2f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b440a718-7019-4229-8b9f-9761ba4c8305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d20e7604-6d17-4802-bafd-73b305451d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d13a23-ebef-4df6-b65e-c5ab5d766155",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01cfa79-8f5a-4f03-af9c-cdde1e15fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a98e960-0afe-4728-84be-d9f9656b4226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c6c419-6fec-4091-a2b1-0b4ec9d46d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c72a161a-725e-4321-835e-08925872ddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05252bc-5feb-424a-a3da-034aaa7c06af",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54514377-95b3-4e4c-bd12-84bf3d81134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616fd52d-e635-42a5-a85f-1a6d4868bc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9683c0-b31a-4fe9-bcd3-304b1713e701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f16ab1d-7335-49eb-9d3c-96f54978a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a2d825-d6c7-4e13-8bfd-fde2474ac6a6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ab278a-c250-4f59-b1d9-f97cc0aa835e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b53fa6-48ba-435d-a8b0-8175d7778147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e3c9ff-8e1c-40fd-9e99-563126cf3e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09e70735-657a-41c7-9fbd-d1a2d1bc39f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65df808f-6514-4040-a6b8-c46577bbb4aa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1a914e-a84d-4f8d-aba5-0afb5f517f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03bbaaf-2b80-4308-8d07-9d09c47beec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1f3055-02d9-4729-b85f-1d7763f3d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e230c3d0-c884-4e65-b7a1-989ac3226052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a20461-5e36-4843-8adc-7ca6510f19c9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f01d23b-278e-4997-ba6b-cd8250207f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d42917-a8d1-4c0c-b0d3-4bff5153593a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f57481-051b-451c-9241-a5e30630f273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "024787cc-7d21-454f-974e-5e658c2e23d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508035fa-447d-418b-819a-0a6f13d92d00",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0af5ab-9cc9-40e0-970b-83023d970515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eab6fd6-aff5-4233-a295-7c7ea9030116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b6bc5e-b34f-4516-bab5-23e144b920ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec94f810-9fff-48ee-91f2-62c0969047cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfa70b7-2561-4f67-92a4-7aa2cf39de37",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6591b819-6196-4256-a5d4-35830d7d2472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99eb354-4e3b-43e5-9a58-7db1b20f832d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10ca367-d4a8-4933-9a05-75248df20a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b43be367-1900-4b38-a4fe-178c757a99ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd18c02d-9c68-4216-b30e-cf58f3428a1d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52816a03-94d6-4bf0-aaa0-74d4c1c76ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a812f2c9-658f-40b5-a989-e6d551257422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214df6f2-ef1e-4e83-94e8-eb4baec4620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19c20883-8509-4776-b34f-edb1682be266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c1cbd-3989-4378-bd35-0bd34ac7462a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39c4fa9-2283-46e1-9571-2c57fe46d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573813b6-d6f7-4255-930e-f70fac0733a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c59eca-167b-4482-bffe-3f090191ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65256199-c97f-43f8-aecc-9e75b076abd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b22ecc-c6fa-44e7-8946-b5b71e34b887",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98a533-dc18-47bd-99d1-20ec3ef8bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63d46c1-e0d8-476d-a1bf-8ec962c7db27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f896725-8bad-4765-85ee-fbdd634c037b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "505c3ab6-6b63-453a-80d3-2a0f564591ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c75ed84-9b6e-4e27-ada5-9a75ed3439dc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ae1811-6fd0-4305-90e4-7c1b1378f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900d0332-7464-4b04-9d90-1ff964930529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da5c028-d87a-473b-8af2-9f33bebc08a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03695d7c-ed85-4d34-a39c-f564c63e7694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9147589-3e76-4916-aecf-29d3d37a63d4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2d73b6-86e7-42ae-8f43-f646721d51d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ad9259-f77b-4de7-bd29-e49076bbf6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222bc599-32ba-4d2f-870f-d58ebd7cc888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98161a23-8607-4275-870b-2a22fe26090d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e8a0a1-9bf6-4efe-8dbf-058718deec1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119df07b-b536-45b4-b438-197aa965fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6902028-91ea-4071-a17d-724430cff6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4e9134-11b6-4e79-858f-44755cc6936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25305a9e-c97b-4d56-a1d6-f6dcb89ba6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a74bd5-b8ca-4abf-91d5-2aa0cdecc0be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6b6f6-106f-4589-b0a9-3d37793d7536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53be2a75-6ee1-4490-b9d2-d66b3b8b6059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5e1ed4-835f-4b75-8eee-ce8e636ba93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04ab9ba5-f0ac-465d-9550-66fd4dc156a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c2cbb-3fdc-42e3-974f-470b2285177c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf5d8c-8d4b-4e8f-a6d6-be14e41d529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567f13f5-8d56-46b7-aa5a-e2e89a1a955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e2bfea-16b5-449b-abe3-74ed754b04af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc47cf6d-50eb-4005-8ae9-ec7ede4100b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e87291-8e0f-47b8-974c-0e1d55471be1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3b71af-d91c-44a8-b7e4-edbc7a87c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51776bc-eb50-4927-b49f-1d8bb79e68b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582d8947-f560-46b0-950e-bc868bccda7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bec8145-8601-4b77-bc30-30cc35e06266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47223ee3-b74e-440d-86d7-992fae26007c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dda1f5-03a3-4fcb-8fd3-914ebaffbca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cac39c-c838-4c1f-9205-9f9ad56fc1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e42973c-df12-4926-bb90-dc3eb95057f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1ab5ef-914e-4956-ab09-2639554b798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d2fc03-31ce-4861-bc4c-491c638605d2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f5a9bc-90e2-4005-87ab-f208ed25e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d968396-0a93-4c8d-b575-ac98a61863db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2425b0f5-da4a-4336-9d4d-5dad3cbdfda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50adfe8a-e0b9-4dc9-97c0-ad024d5fc2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bd60ea-10ca-4491-a11e-8fcf3952ee5b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2811bf46-8f55-4995-acbd-2a85e1c99d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d32203-1c02-46df-b031-94e3ab4c334b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3233be-405c-4642-a90d-949c0d84146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fca2161c-17d8-408f-af0e-7861d284206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168258f-65ae-4526-be88-b572e0645ab7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e1fe21-7ac5-49ed-b060-5dd6c4c8a02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396a1aa6-4d69-4d4b-bbc7-af8ddf6c2030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebf45c0-4df6-4ad6-adbd-c471423b88d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe54a44e-660b-47d5-b6fd-150042643f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de540535-eb06-4e8a-bda2-d3a28512af20",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7dc032-eddb-4adb-bdb0-2ef16b1f14ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b051ea-fd96-4797-a5a6-258a735e0dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c8be48-53df-499a-b8e9-6f8c78b36b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b60d4483-ad0d-4539-9a76-4a9eb4b923cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64898fa0-808e-4c67-ae3d-b4aa8d5e5dc2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576c7f69-4cca-4d86-9067-fdbb81ae4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e3d468-1624-4a92-aa86-eb175f62d42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a64d64-8e7b-4570-9d80-e085cd907f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "180b7dda-4577-422f-ad22-99c1bbf9e60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd490ae-3789-47dd-bdad-2af5ca6bdc4c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba440e-f761-44b1-bfe3-509a28a5e092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f54d01a-6e99-4934-8842-3fcbd26f5ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a515cbcf-8fe1-481e-a047-03dc2d5c68d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee10f2a-7516-4f0e-89b6-a40581477e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc204efd-de14-4711-bdfd-b744eadf7599",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9792c85b-7087-4789-bd21-b3ad7438c301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2049c42c-6de0-4b67-a0a1-4f8c6fea5bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41c1b61-4fd1-424e-9bb9-035a7e38a46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b001af50-7467-4a00-8adc-84866baf79a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0edafc-bb92-426d-8dee-007b8e74a162",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a56fe3-cfe8-4f61-bf4d-cbc85c996762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b90cc-fe46-442a-a854-35d032ab950f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896af1b5-8453-4c7b-9864-8e17b450d01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c21300b-e7a8-4f9f-8d53-b81a9784b455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30daa2d-aebb-4e6d-8f87-042f3604b48e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552d0667-3b0e-4fb0-955c-e425220824c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ff8c15-ce91-4019-94da-e5a15b61bf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007c5b25-4358-44ac-81a5-fc06333d12b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9602342f-218e-438f-ad92-0bc955bcbd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf291bb-edf0-4235-83fd-d013bd90e436",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c13670-041e-41b6-b118-4354f508c67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23893dc2-ca7b-433d-95e6-5e2fcefffae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df10cf11-cfda-4569-9061-70e8f1623830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0549f32-3d9c-4681-9f67-b51358b608ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46078631-edec-447d-bcaa-6b33b69c516b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b53c20-af2c-4a16-a3ef-81c5c1e08fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bf8c7d-ba5e-41f7-927f-197d96dbf7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437b8faa-8b26-43ab-b301-e38e80f3ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89642fd-2754-47a9-b0e2-386a24ee43c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8665c82-c62d-41b8-a185-13ed926130bd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69c509a-4243-4b8f-bf3a-dfee75ef64a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2010fca2-4943-4335-93bd-ca994e155eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c9be34-020b-4406-a70e-0dc2e793b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aefa359-f5b0-4652-baba-7f4c60826e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca4a567-e101-4f7d-bb80-c8cf9a2fdef5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272efc2e-8f02-445c-9de9-873d578a341d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c0cc39-6e19-4a79-9459-3b535fddaa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2294b906-0742-457c-857f-f2ad92308488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60d3591-ae6e-4f50-9f35-7f3a239551a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85556b2e-d7d7-448f-a641-8a1913f53bbf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c871c-c549-4bd7-81d4-f74cf127b46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993dd194-c3d8-4ef5-9f85-24e990996742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b67370-71ad-489a-8233-298fc5237df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e466eb9e-70b2-45dd-aca3-dc19e3ac5b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703b1daa-ba6a-4653-9337-086174304340",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f996d69e-2c35-4d53-ab5d-b76d9c65225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f78bac4-3231-4cfa-94d6-473b678603d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78ed2aa-957f-4316-9ba8-61ef1ec24bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf145e2b-ce4b-4025-bc7e-f6362a8553aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c5fc89-e057-46ab-a9c2-38415a121fac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492a432c-8fd1-4dd0-b86e-eb1fb1158621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39346208-8313-494e-bb01-f0fe55d26875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191d4e93-0ab9-4bd7-84f3-13485cfad681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2e59f8b1-5269-4b82-85e4-ad208f322b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d057dc40-1532-460a-bfff-65c121f53d37",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e20492a-ba26-4132-99bd-a214e5b76d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a89a898-c17b-4bb9-a0bd-619b9f3218fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f37a7-3528-4133-a904-f0bfd3da4850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a08cd836-dd82-4536-9a06-dea4b9879016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2cfd82-d581-44d8-a3af-7b8cc9bfaf0b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3dd1fa-98b1-4b8b-b780-b31b03b6a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9760700e-7ff3-4999-abed-7dbe35c96af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a97e09-1c26-4f28-8130-505a27dbe94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee38aba-12d8-4134-8501-c8aeba215a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc58c91f-0986-4116-82bc-d3e91d8bb41d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963eca19-c915-47cd-8062-cd4362486b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe47072-43c3-414a-a723-1569a608671e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b0fd86-cd29-444f-8a42-dfaf8038d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea072ed3-b07b-421f-bbbe-6e700da049b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5258249-85d7-4bb4-b4df-3187a070c2c4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24505af4-e4ae-4f6b-9afe-4ceee7193a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824f7f8c-3df9-4dd0-a6d3-723c07177d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086dd870-151e-4656-9785-f2f5147fbacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af0c1886-ba9c-42e4-925e-187c06cecbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09695d0-2357-49a8-9b3b-191ed0a07dc2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da8b42e-54ba-4783-b904-b7725d7f4d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11df34b9-a2ef-41f7-b175-7deefacffbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70fcd48-26cb-4903-aca4-f486a76e6089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e312634-0c08-4e8d-83ec-4bd63eb43ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a088149c-7499-48e8-bcfd-a1ba5c66e56a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aea206a-5964-4d13-be6f-034082a58b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407a2d1f-086f-45c3-ba53-973438ce3340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9055cca0-cb06-45f2-aad1-378181ac5690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dcbb20-84d4-4b6f-8673-56c45d4a144c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7823be2d-dfe0-470b-948b-3c606f44327a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4756a57b-9f06-4d27-8dfe-de31cacf2afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7867d64b-b612-48fd-91be-456838cab76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e67a2c-f2da-482b-bfaf-ee2b9b80b039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc891a4-5c70-4b10-b70d-e6d47f3d49ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea6441b-dc9b-4447-86b7-a487d635f7ec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92581058-3cb0-43d6-9ac3-982555e89099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e6b53f-e61a-46c9-b61f-1315c39b9a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93bfea0-1c29-4fed-a0b5-5f8eb8c5e8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "556f5423-772f-4844-bc8f-6cc2b1424796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abf959b-712e-44d1-bb77-748624c91dba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48debf57-a0d2-4cfc-8658-c411a7f0a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd811e7a-6071-4afd-9664-25a89219f627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cf5e8c-20ce-4c2c-bf25-8e377219d396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7838d64e-cb98-499e-b3d4-8acf2674a31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d51a767-ee98-4660-a177-26becd5415c3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff6cc75-62c3-47e8-b2d2-ed4d0facd4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eef10b8-3b15-4adf-a325-246537384b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7a653-dc0d-440c-8eec-58daf3240efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d92c20-d326-4cc8-8e06-50fc06d9769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306e141f-25e6-4083-8bf4-27e7efc7f71f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d4be3e-7584-4d58-8725-285fab1c9e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93e7f02-0244-425c-ba76-c4191ddbd482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce130e7-c52c-4149-bff9-e7f1ad68b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e0b3f4-182a-4944-b950-bcc17554fcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b209c75f-ad30-4960-ab31-322a7eb758d2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f70871-160b-4390-904b-387016336cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a78ee2d-10a6-40e9-875d-5ebaee32f4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb65bc6-4e90-4906-96f9-63563bed69cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f45321-c5ae-4563-b97a-1f25bea766b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3fd5ef-4fe2-49d2-8993-9e1ce87b05dd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ff0fd6-63a1-4dc3-a7b4-e98640630257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3053dc7-1a92-4b33-9cf8-37154554bd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a50c58-fa4e-4c05-81e0-35a07e722d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a6b33d-3704-49b4-a2c6-d1fdff2c9bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758b0de1-9f69-483b-b235-dd6adb616b18",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc2b57-768b-42ab-b18e-026ea2a7122e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9fe07a-d411-4ccd-81d8-679fe6fcba1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d85511-b247-4e6c-95b5-4ce67480b4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "384ae44b-7460-40c6-a730-fc584403f990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b81913f-55a0-46fc-a8ba-88dd05e086bc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404296a1-acb5-4d9b-a10f-be1830eb5296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60762d36-22e9-4e56-b308-d2c456a7d7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e106a9-83bf-4e1b-92be-ed155622567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0aec877-16e7-4d68-833a-7de724cb4bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fcc506-ea58-4f45-916d-9f840d800e90",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb8a30-cb0a-4d73-8858-d60e25db04f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60de445c-7f25-43f3-95ca-a7389113ff2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a4e86b-bc3c-44dc-8238-98b0a386246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee69a65-0343-4184-b694-fba1076a3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9eb4a-0a4f-45d5-b8bc-e25a55c0ba27",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a7c88b-d2f7-4231-ba07-4962f1fe20c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a226ec-7814-47f2-b70a-7d4ff675a897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db561408-fbd1-4645-8f15-9867d66c4127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05b4b5f-7213-4165-a985-1efaa3579293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306a419a-c5d4-4afe-a729-513d3c200adb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dd3cf2-340d-46cf-9fb9-06cc67a0fa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fea008-2df9-493e-b4b4-77f0b9bc2c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd95279-b65b-455e-a382-8533b07fd092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba147301-a5ef-445f-821c-4cc7f374bdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7399743-d44a-47ce-a755-a48c3667484d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb32964-1fcf-455a-90ec-47b417340601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85537c2f-b8cb-477f-9680-5691a61c1983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75fdde-aa1f-47a2-b053-107620d99f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "830c5ac1-8fc0-4e10-a04d-26ba5fc06c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29628a1-0688-4771-9524-52421db30381",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ae4b9d-7d25-491e-97a5-634a5242a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4b74b8-e412-4c13-b25e-f87a3a500a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63de6d8d-6b2e-4077-bf76-cdf16b4c5fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea376d0-3e70-41ba-885e-62879ebce999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11a6022-d3d8-474b-80cb-f419782a73b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad75e21-5ed9-4a67-9c8e-7f98779a5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e597300-cb5e-47f4-ac4a-1b5c8c1942f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adea408b-a894-4dd2-84a9-bac162333cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "644feccc-4689-4a98-a0ff-c8aba93e7ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6da6718-ad0e-4ba1-9270-410b12a50086",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73e3ded-4039-47ea-b260-65ec1f8956fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932ac89b-ab3f-4fcb-8c0f-bab46c6e1bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592cf92c-2b13-429d-827b-3c22a85d0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "690585fd-4326-44af-8957-680b3de46aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8562d8d5-0785-4e81-b17c-4bc7ccd17edb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60524c1-7f15-47dd-9861-a2b26df5b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed33a84-9c11-4571-bfb7-1b5735f414d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac83d42a-6969-437a-a23d-f740e84ad84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f1905b-f946-4c6e-ace2-ff17dfee90f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dda61d8-4a61-4fba-927f-e1a643ab3649",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec49aa43-c0e4-40b0-a2cf-d3e4ecd7c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c312ed-0a32-49ba-b4ac-697d6546fae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6665f5d-9381-4e76-abe5-77c09a665336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d838ad0-998f-4d36-9832-06b1a8430d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7619ce-2fd8-4662-b35e-938bd92ac742",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bddae1-df30-4119-9ecc-7c727b4ed43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb05ee1-de47-4922-abd5-25f0cd024575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae64d5-e8f4-4918-8cf5-03fda0647cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91795e5d-0291-40c4-8cde-18d9b732c938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552e202-4bac-4895-8e12-bb1c3eb20e60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3376bd-0659-4efc-a17d-e78f1abf16d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae569aa-3a54-4eca-9f6d-f22a349039d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10326f99-7444-47f9-8c91-9f04d2cebfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "add29a06-8926-425f-a604-35ea5374e796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf931bf0-f99d-4884-a12f-61745b96f8af",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684fe94c-1bcb-4063-a6b9-4ffee1d9f049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea38af97-3d5d-4c8b-8a8b-d0790abc0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a3a248-797b-4e03-8d61-ae8135c8dbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "563976c0-9f3b-4b45-83c4-8ba38ebef1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42eb814-2d0a-4d63-ab26-2c99663bec69",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6e35e8-18d2-43a6-852c-be5299fbff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c1c440-0408-4899-b24b-b94619361a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d51985-c2fa-484d-93bc-ece7bb694bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e2727c-111d-462a-b8f3-2e1e650744f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce69e8-d02d-4979-b247-44245e91fe84",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3502ac-ba00-409f-b7dc-fe546e497336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ef1857-9863-4fc8-a50a-5dcf5a7319c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4902b60e-1163-41ad-b405-5a7d1041fe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06cdb89c-94b7-4471-94f7-424c514d1131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e31fc8-d57b-4dd2-b127-7676d5930053",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e0837b-8775-42dc-bd06-7ea57044835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c06eb45-46dd-4840-b928-5aff82290004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e82c08-5671-4887-b975-8009d1baf507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b707e7a-fe61-4a1e-93d6-dce1feb4ff52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a91275-0ad9-451e-9e0a-87f8a89ab81c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29065860-cbfe-44ef-9237-b807a4051303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59084213-c5a2-4614-b356-a8e356b0d8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fb8e77-27ed-4a23-a10a-3dc7f00308c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631cecf2-0678-4435-964e-f711c9d7c9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff2a277-baa9-4b76-b5ca-a51bd2b30798",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42469fda-b276-468d-98ab-08135f7e0522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fa43d6-0360-49b7-9347-6323947ed38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2c4dab-d096-4407-a50e-c2a2bb618b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53cb791b-f0d3-45c0-943b-22348c5b483f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a610c1-46f1-434a-a625-2f81d94a52ab",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f3fa3d-7c58-4a0c-92c2-fa1937d15def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9533b593-77b2-4c33-a332-0a59273f20d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75dc321-1f21-4c3e-a373-1f387d2d9638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "50bb1104-b0b1-42e4-83a4-42c87766db9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f056fec-967c-4532-8108-c661a4386910",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17bab31-e448-4152-b544-cab68170acfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16018cb3-e5f8-4b54-b4a6-1442cefa304b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6011fc03-ec74-4b1b-83bd-33bf12c92e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edc6193-e0bf-4cd9-b603-b81ae5974f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c4188-aba5-4f17-a77a-295e99580097",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27981e02-267d-476a-89b5-bef69482346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d9428f-ad80-439c-ae4c-f18eee2d68ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce077e-7b53-4cf1-9eae-76f2669a03f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "145c4cd1-6e46-43f3-8539-f78f81f3cb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d635ef2f-74ac-4caa-bbf7-9853e65eb694",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf091e0-6a38-40c7-8ac9-596804aa42c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4480764d-3e54-48da-bb51-d0d205acf8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb42a20-b337-470f-931d-c836ea3e917a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11d08e60-3996-401a-a262-31e63b1b9287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5291d7f9-8d6d-4a9b-bf87-2cbbe82bb444",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6a1d44-045e-45ca-9676-afce3fefe7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f781325-6feb-410d-8fc5-28d28313c749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf4c8f8-c19f-4435-be6c-1f65d59fe6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a31ed68-4746-4316-b45a-b969fac5ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4a359d-9096-4321-81df-76190d0b9302",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d609ce8-7bcb-42e7-bb1d-9d85bcbd51e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9801a5-744c-4152-a61a-7d82a0d223ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06335123-9110-4ba7-a737-17824b81f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea5cbde-fe23-447c-be86-f3494c28563a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfc8222-1ff6-4164-afbb-adc6520e1a80",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7344122b-9171-4508-8115-77744867a4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365afcee-2d7f-4441-9f05-0bb8d25d6f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99f9a3f-784a-4813-af1e-a82666565429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1938e27c-9074-47c0-bb05-b202b5c5b35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc4e0a7-7ccd-499c-a440-b09dcf95211c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30bd1c0-bacc-47c2-90c6-17c166e83df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219eb5fc-68ea-4875-9fd5-190b7e6b3812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852bef58-a1dd-4e7c-9a1a-939b4808999b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f185f96-f565-4645-b171-791422961bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023755dd-c5f2-4592-81be-284024555c30",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68382497-0778-4a36-aaa1-d950ed254b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837717ed-eea7-44eb-870b-f70aa6ea740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8178b052-4217-4a32-9b73-166bf938d869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38cbc4d-b0ea-4732-b32e-0f43d34f7f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0998e368-243f-4a67-a217-edb2b5ce9108",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5173e47f-d497-4047-8eb1-a75fb9d11191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef53d8be-183d-4580-bb02-47f785d7abce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612b77fb-ac1f-4962-9858-b9ace8f22eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3c6d9e-677d-443d-8ab1-a1da5ca2b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f1cba6-312e-4464-bd30-103bbc054dc3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2042c54-d676-4879-a6ad-fc2e5d3a99f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7652a6-a950-40f0-89e2-f21c51261d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940ffe52-e9ca-4b95-aa57-1f275c1705af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00499237-34c0-4dc5-9e09-fafd4c0ab0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c34e46-37f0-4048-ae19-11c7f021f274",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d484c596-0716-4016-b8fc-5db6100a64e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1130ce47-47c3-483d-897e-453a1a5c8e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55fca34-3110-485c-acb7-6d970cd995a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0559a30a-53ea-4831-8538-b329408f208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e085981c-1999-409f-bef4-7c1604d8af36",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0315a37c-0831-41cf-85ee-c5b91f87f8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f9a8d-d15e-44fc-ba68-f229033773ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a050b-d7b9-49fa-b809-411e78b130eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7fbd9a-0c1d-4896-92ed-6e9ac4d5a2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dbae7e-0212-4686-964f-53d0f3a96c55",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ad35f0-3739-4be7-ac83-db7d981cd7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4126794-d52c-478c-a874-b8d75fd2d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65291ab8-dfb5-4efc-8623-72d470ddd77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2345fea0-bed4-4436-b761-b55ae4d29415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa00b0e-72fe-4d50-a59c-6e265e11a876",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b49c2-5663-4f1c-a69d-6571dd4fc983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29980d2-17a8-432c-8fd7-738b7a362c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ab94c5-edce-40ef-b2d5-4fa1622d73c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb449b1c-2580-4f06-a80c-5fe0a377db59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e57cccd-0bc9-4fd8-a41f-4db05acdf3fd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5df552c-3151-4000-9b35-e55a2ab2699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ba9478-7cdf-4c96-ae2f-8f2b4aef6a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d105d9ed-6890-439b-a6ad-ea7b49f4a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42727ecb-4d6f-4644-a808-7a2f268649aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c621458-0a9c-4b6a-889a-be3682636d97",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d2dae-2865-4b64-9cd4-ebc4f85a5471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d901c30-1e49-4a64-8851-65d4a54454ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6ae91-7cfd-451d-acb9-d689050ca295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41df0598-7459-44e5-b113-6c755cc8becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9bb446-dae9-4f13-84d0-51de899f714a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486ad3d3-4fe8-44b9-bfe5-06afbcfddb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7718855-2e57-40b1-adba-8f4439025f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1dfa6c-a682-446c-9627-3b1ee0329e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06ffd801-6103-49a6-a74a-63e9d7c7eaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f5fb5-4d39-4f43-81af-5789c25fdb2f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfb699f-af93-419a-a3d0-7364b1919483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cc6cfb-2704-429a-b858-96686831f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd17079-f78c-429f-abe1-ad8a71f243c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf649da-4154-4802-b3e3-1248d09baf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aead308e-fe6f-41fc-b5f4-5f866a0eca61",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b114060-6037-438f-901e-4f952d73305f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de70c375-f97d-4679-9bbf-b85008b442f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b46bd8-6bc4-456f-862d-01b00cda333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8726e96-267a-4da0-a86c-58943860a96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ae24a-9d53-44a3-98a9-ee2d1f2c12c5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683177cc-9d40-4a84-8095-9ffa1c551899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71155f02-691d-4520-b46b-654885304323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecdd60c-f274-4f59-bb27-bffdfa5d57c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3795097c-f728-497e-b908-f72b3baa1de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7562175-047f-4ec8-a0f0-6da49cf634b8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f1799-33d2-4ac9-a089-4aaa2b799707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31096616-40bc-4c4c-8e35-c52b060e04a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a270b7fd-b8f2-4969-8cd0-b879e8d59bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6b5168-c1a7-40c7-bc97-02e9e71eff53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6eb3d9a-bc87-484e-85e6-bbbf1e8e26f3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ab48c-7831-4a4b-8c12-c938fcc45ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7c6930-85ee-42c4-9882-afb7fa56c2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7b78a-93ff-4623-a1a7-b3d10c023bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b92e995e-c7ea-48e2-8968-7043a43ec79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76df99f-b539-4e07-b929-f4510aba4a7a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159ea1fd-8d77-4070-bbdc-df6eb6942382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61229d6c-b58b-4fda-9526-f97267b158f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e655a2a-146e-4721-9e0d-b082ce2bb164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0680f6d6-a153-425b-86b1-3ff304a6bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ed1a49-1409-409f-8f1c-9fc76ae9c993",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f596e95c-5eee-42b3-9eae-9acd78b74db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c383b97e-45c5-4e3f-8b71-74ec702dbde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1355b6-5263-4173-bb0e-af37df3294aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa93a2b-d21b-483e-87b5-95850b238c83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06ec7fb9-3ea1-4510-b5b2-46ad48474022",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8581c1a1-9b53-417e-bf1a-0281c2a3818d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b90aa2-1d17-4b9f-b6ce-5397253bfc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0ce6347-9a81-4112-b510-1b71645c132f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc01c9b7-1f76-4851-8eda-8b56d249cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ae99e70-db8a-437b-b08e-f8f1ca3a2797"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "471473e4-2608-44cf-ba0b-a09c2c80f5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c99490d7-dd84-4b25-b0c9-1a5f77c88ca9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7006ab5f-747c-419d-b557-c863577e5642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4070f79-5085-47e8-90b1-6344d7e3c171"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a266dce0-d203-4330-bf46-3134a0b9c5df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f069e9a0-2e98-4237-b931-5a5155d09295"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "280e1a1f-edbf-466a-8670-144dbbc34a34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8560a247-61c0-4e19-8570-79efc9cc7383"
                }
              }
            ]
          },
          {
            "id": "b68c3a62-d68b-4d52-bf9b-c53386a96960",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6453da9e-211a-4bfc-9897-9a1da38c146f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7613645c-e526-4de4-89f5-96a184499af5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8b032f-c5c8-4129-9989-13ecd31c0f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89af2f7c-76e8-4323-880b-3b0c5709a870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec31f462-23e1-4944-8a83-ffc5661375ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3518690c-2a9a-4034-ad25-b53bcacb08e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d108db63-4ec6-4b69-bd75-063849299a1c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19f6ea48-ff6c-4928-9f39-1f081783306c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf5cf04c-b2db-4529-bb17-3d5a65ffa694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37ac7fee-8b97-4f17-9fe2-6d17f9ae5e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86c23e09-11e6-4da1-85eb-78c677db6820"
                    }
                  }
                ]
              },
              {
                "id": "ef3188d1-a8a8-4e48-af48-8970735d6428",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3064ecce-db5e-401c-a1ca-13fc0d073ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "468c7e32-f1c1-4bca-921a-0128511b1432"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be24426f-b966-4ec7-8059-a71542a0db2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45fd0303-3345-4e2c-8304-96a15cd29922"
                    }
                  }
                ]
              },
              {
                "id": "1e438a28-8222-46b4-acc7-b10be3018ba2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cbdec89-509a-4e13-bb1e-f045415e6d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe1b5589-2ed4-4eda-910a-8ba526065ab4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fab46b71-679f-42ae-a72a-38f76907dedd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfa5a97c-1ea0-49ed-b77c-8535479ef5ee"
                    }
                  }
                ]
              },
              {
                "id": "50dc1532-6ffd-4c43-bfc8-e00e0aa4c779",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3535bb03-e834-4d7f-b018-935c8cb4424b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13974805-103a-4fdb-beba-64dcb271e4ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc87fc17-4761-46ff-bf74-c9cfd1075dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8b0955c-e85f-4b97-808f-ddcd814ab9ca"
                    }
                  }
                ]
              },
              {
                "id": "3b724434-e1d6-4b6e-aeb9-83f2569388c3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8edea491-475e-4b3b-8ea5-18a274264def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6322ea7-91ee-49fe-b534-15ea071b8394"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af15d904-f413-41be-9c6e-7663cebc678d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4e0f4ac0-3f80-475b-8a46-de6fb8cf35f7"
                    }
                  }
                ]
              },
              {
                "id": "5747a32f-452b-47ac-a129-af124633db38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eec8abe0-b5b7-46c4-b086-0c08098cb00e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8599dab8-c997-4158-b234-e6f5c77949f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6ce3fc-00c9-43d4-b490-c04c85271d0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f16a85e2-d913-4535-bf51-cd8560050cc9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9c7cf2d-ce91-4d11-8be2-131643fe4cd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f11d51a9-3a68-46e9-9f68-94520e920d94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "77d8c277-0c51-4199-af16-5b343bfd33e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce4375e7-514b-415a-88e8-9a74ffc3abef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "568ba3a6-af7f-4841-a0af-3d13dc598a7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f6c5b66c-6fe7-4c73-83b3-db796f7ad847"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40471614-8b0f-4063-acde-b79ca57aba5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9dc48e1-b39c-491c-b900-fcb67b129f93"
            }
          }
        ]
      },
      {
        "id": "346864c2-2c8f-4367-b06f-06bef77be429",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3ba70874-8ebc-4d68-9a56-23efdaf4e1a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcf1c671-a403-4a0d-a84c-a4e189e33947",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64a52454-6f2f-4f4f-a012-b573b9b0b38c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604566a7-4a3a-4afd-9d47-430df4e5730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb3c04a-980c-4325-a7fd-c037241a65b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd31b045-9afe-44e2-aff5-4e28458d8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c27655c-3deb-4be0-aeb6-4baf64462ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5489a93c-f968-47db-a59f-89be40464f6e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f518b441-c2da-47cf-9897-f414d93f8881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec2d669-5ba1-40bb-9427-418be24ef5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271ccdc1-e233-4941-b4ce-542e71125246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b0a8f0-71ef-411f-94ed-daec326d47cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1cc023-2ed1-45ff-bf5c-1dc6264250a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7cadb1-e494-45fb-9a24-d116de6018a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7e4655-b2df-416b-bc89-315b9a4085f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb25b75-1980-468d-881d-47d3e04d50b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2a65b8-b10c-44c8-97e3-21daa17c08f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a54da-d319-4f64-9ccd-ae7a982e42c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b44e16-829e-4d69-adc7-53aece0cda95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877a0441-8607-454c-a3f4-f17792dbbfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ca4a4e-3bc6-43c2-a772-d7d6c1d72ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d6dd1c-b5f6-4705-9bbf-c4996de898e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5a4dae-4892-4d16-8e99-1e022a3fc206",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240676de-1b27-45c0-9b73-27a78115b8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11ba54e-3139-42ef-afe8-f8e68cff7571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a2684-1a96-4740-a469-483e05b54087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c349f36c-b056-4d46-902d-b358275bdcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e8276-a942-41fb-8d66-71ee70ac12f1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb71097-00d4-4da3-b1de-876412b366ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee15d98-c4d3-421f-b5d9-7675f0cfd7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080e055f-1a11-4086-bea8-c5e6fc5dcc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "492ef3b5-c298-4a6e-a430-62073971063a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ea787-8573-4479-b418-dceaf3cd904a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a64b56e-a2aa-463c-84cd-3e54ebf51d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e049990-bb5b-4f30-af2a-1392e06f7c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58336ad-aaac-4fcb-8e07-8606b5fee677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06865ca-2804-455a-80f7-a9f561cb4a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a616ccc7-9c48-421d-8192-fc3de858d8ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3dc5a9-f6ca-4a99-98cb-26146d90b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa661c4-2203-47cb-a849-e4513884df3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f60f0b9-e767-489a-b0d3-afcb9fb9f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3690e004-cad6-4191-aec0-61ecb4e72270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74bde7-cb44-4093-8a51-be9dfb1a5589",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5454e42-5880-472b-a76a-81f8ec93069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a9870a-97ae-48c2-8c8b-061719de8c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04238db3-63ae-4a77-80db-cd99e50d0898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d3e953-b044-49bf-94c3-69e371e8ece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b65c9-6650-42d3-8e74-7b7a64ee864e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c435e1-4029-4322-8d91-084df68692f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dd58a6-e157-4ab7-945e-473b2b77a5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f7f17-1f11-425e-9137-5669eea077c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb52b6e-b829-4906-a915-d9ded72fbcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e69d8e-93da-42d3-8029-741e58ffa61e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af71a748-274f-4f5f-8180-ba706c8d80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194bbfe4-0f4e-44e2-8f27-30b6307f2974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3534e503-1b5f-4a03-b209-dbe66949187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ee180d08-1441-45cf-94b8-e4ca91eaaa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa7b36-72c9-4951-815c-412ee86ba5ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a0c2a3-d524-4df1-b4f9-ddc7886faea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488aadf7-0887-49c8-8de3-2bf8b2e4e3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17c666b-3047-43d3-91bd-daafe8c93cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91c6c02c-8556-4f9f-81b2-9f2f9b8f6946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afde5edc-bee7-49a1-b707-0791e2f766fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e031488c-7229-4dfa-b3c1-a93a5c5772c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62738f5d-1404-460d-ba83-d19fb804a793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd50bd3-b5b6-4316-99ed-93b5223489dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6438e6-0e00-4ebc-a061-2d1c653de9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d910acb-f45b-4267-9542-81893f5f15dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f8a477-9e58-4c34-9cde-628caad4be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f10eed-9b2b-4956-8a8a-0bc88a1827dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466fe71a-5d4b-453b-be27-98a47a7c3790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93a115e-ccd0-40b5-9f7d-6b70f5089796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f51d155-5d08-4e2f-af3a-d0f303481125",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5a833f-2cbf-44ef-aa94-394dc082d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49778a54-b557-40ae-b5e9-ee52409c8612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2666cb-79f0-42b2-8c62-89e457eef7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cfebc8-e942-49af-a1ca-a7dc03aea918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663ee549-7a7e-467a-ab09-59d1f9f3a8c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d37fb93-d559-4f15-b1f2-3e78de167df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4540bcfa-80d1-492a-b154-3d18220fec13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667c6d2b-a962-437f-860c-69daed947c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab1f14c-cca7-4661-b9b0-b279a5ac6602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5ec4cd-f37d-414b-aa75-c826af7fd6aa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd92f9e3-dfbe-4a82-80d1-0d3d20f6a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8da8e38-9b2d-4243-8ada-d36f252c5830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336a8b50-9149-4b2a-a807-2ee8b9b83eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a29b37b-b1b8-467a-91f8-650d0a84f492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f46e7-85bf-47b8-9bfe-0cac24b7eaec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120d02f6-82c5-4acc-a0da-3c36e1f39a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7483c1-37d9-4d40-bdce-9bc75fc7791b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03298c1-a09f-4ba1-b0b1-442873edc42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32df897-af72-4a3e-826c-69298d362656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0a7d79-e421-4106-9774-d7a4a848c242",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2728cb80-5266-47bf-be30-1e1c42a2cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee0429a-c7aa-4ca8-8e6c-3ab2711966cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a95b192-f4a0-44c5-b4e6-03e4d6e940bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ffeb4e-79da-47a6-971d-2b8cbe876814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50559b24-85ec-4fbe-9636-d7c979742ae7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a8f3d-0273-4049-9cab-72a4d5c80e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1371805d-b863-4baa-af79-e9ae8fdb837e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc8be39-006b-4fec-ad19-1c0473ae052e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd23ef9c-c47d-46fc-a118-9b7ee80c71c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda6e1c-05ec-4e0d-acf4-e7a46f33be69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7cabaa-48f9-4640-90ce-d74e7c469c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c01acb5-b148-40e0-bebb-582adb447c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e8dae7-b4dd-4fd7-aaf7-4dc418808910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1a2afc-4868-47da-9e7e-2deb062a790f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01291235-c11e-45fd-ae22-19fddbf42f6e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf038e9f-96bd-4411-9ad4-e09af7f3b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3ac935-dffc-40d1-af64-d09579b882a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62b9478-4060-4a0a-94e6-5c0c0a19c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719884c6-c875-4fe6-87f7-df21a40cbdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e590da8b-a5f2-432c-b665-487c96eedb79",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b125e9b-c01f-4a5a-b101-96020df1309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04df62d5-d313-49d1-b8ac-47e18b43f8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526ab751-11bc-45f5-b35f-a98fc93c2553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bde76b-f236-4af1-a2df-12a81e0a05f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30e313d-59ad-4de1-a829-a16b4393271f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715325f1-f3fc-4c84-bb81-ce77fa547d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cba34cc-9c4c-4efa-b16b-dc72bba0af08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80594627-5156-4b1d-9202-d9dca87c174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ce4258-dc1f-4fd5-b265-ee013193860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f0732a-c027-4e29-8757-2410ad52103d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b436c8ca-0639-4a47-90cc-322711a88981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208cb48e-762a-4076-833c-3fa2f73a27d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01f941-a9c8-47ef-8fa2-94f93f00ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2547273f-fc2a-479e-a4e1-da69baffafb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99941b32-2b3f-4730-ba7c-fc39579db4a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e3513e-1f9f-4c80-827f-e3512e2e6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b52971-dcba-46dc-99a4-032f16ad0208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e221380-3c37-43b1-bd0b-604dfc55eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60539cc0-da71-4b44-a7e3-d4b7562e5bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eece01-9523-4182-96aa-371b85eaf42d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5a6f3-dc19-4fe5-8b3b-7d6e6bafa447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f2a7be-5701-4e55-b549-6408ffaba8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3cd22e-1846-41d1-960d-d669775bdf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd26f92b-7f3c-423d-af4b-edd641a677ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d62fc7c-75e0-4cd7-9f07-061d0f40e942",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a20d42-0d77-402e-850e-52e13246a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80730c2f-898a-4ca4-9c5a-f44686bfd8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660d106-61fa-4607-9214-d9f87d0a2bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a730dbc4-0caa-4df7-ab31-2409c5cf1520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f51226d-8390-4bb6-80d5-e20d0f0817da",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4c9830-9f1e-4b32-a759-556636081431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3f0aed-c055-4b52-90b4-1ddacd641bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ed0ce5-7508-4819-9846-8500acd933bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b92b2120-eb18-465a-b07a-7cf0162679c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97f82c5-7e35-48b8-ba12-d7f65eee9190",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b00fa5-6a2b-4be1-9543-577f2d56630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136f9b9e-934f-412e-b24c-4207c169b92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f425f2b9-4be1-4a46-b5e8-281db2cb5935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e75a50-83fe-4c74-a7ae-56bfbfb9c8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f42bf87-7265-43cc-8eed-278a56617b72",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc1c0a-8d8f-44ba-8d3c-c1542d670ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeaa9ca-bc0c-4e1a-ad3e-542c36500f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2ac9a1-9c2e-43dd-b366-e129f78e79b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7640863f-d628-4d4a-b1d5-b9815298f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692b87d9-2420-42da-ad40-32fc0ca026bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5f5bc2-87c7-42dc-8a3e-866013f165e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d1b119-fcae-49cc-92c9-50f598cfb14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760fcd37-4a6f-4430-807f-76daddf09087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a7c1d1-a977-45d1-98d4-27608af06cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6be467d-7f8f-47d6-acbf-022885f321a6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b115da3-496e-4129-a154-8306ef8de1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af781fa4-a6a2-4004-9cb0-19a3a5821bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981069d9-8fc3-4476-a06c-ea7a94ac270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea835ae4-75cf-4b7d-b968-e050e483680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1c08f6-9c6b-4175-aedc-2ad3a667f74e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce822c-013b-48c4-a7c5-61358f01b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06816c92-9eb1-4d0a-9ef5-b26bdf3a9876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a233c351-59eb-46d4-927d-9f4e8950319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac4959b-360c-420c-9b63-f8560f56d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d76c70-a999-4428-8d12-9f3500a887df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf731ea-9a47-45c2-b70d-fa54223ae740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc118018-9490-4311-bc60-90317913b02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4540086e-0882-4848-82ee-496b18ecacf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f2ce6b-db40-4a4d-87a9-16afd0e36baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf7660e-22a8-49c6-ac4d-81014f0d49a4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e0264-51ab-43e6-989a-c2bece5c977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212389eb-2fbb-4005-b7b8-07ad623667c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cac7cb-bbac-4f65-8f4c-cab79b7f33e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2422b826-f012-4f1b-8bac-db9fa3abb275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee25dc6c-dfd3-4d0f-99ce-ff9e47d0e8fe",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f542497d-97f3-42b9-b304-195c9e578764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0853a05-ec0d-4be1-a975-776ee5a5d79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20c4fee-bbc8-42fd-a720-52f7abe61be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af40b128-adcf-4fe8-96d5-8c6677dda523"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3daf4a29-d6f0-47f5-95ca-336d5c5757e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9399b802-202c-43e7-a13e-88677ab61792",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f844d41-5ac4-4c43-b5f7-897634bb209d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03cb30d6-f4a2-4007-8745-870d45aacffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aacc01c-c532-42d8-a631-2481b45154b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7634d29-4225-463d-b928-0c32d410bbca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8abc26e7-6e20-4fb9-982e-07383f1f35e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6743de2d-3b2e-452d-a159-0359c588cf80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e8ee00e-43b6-4776-a60c-440b4e27deae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20dc8fc4-1d04-4827-95df-8ca9c69bfe0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be5d16d3-5c78-49cb-9e8d-297df592d440",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6939cb02-a060-443a-bdcd-47df8f0f8564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f6ddcf-79d5-4406-8cfc-dfab7cbded57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4315ab7-fa1f-4078-8940-8dfa7eb4d556"
            }
          }
        ]
      },
      {
        "id": "35fb4f91-a2d7-4d6a-90b5-16b8b631c555",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0ed27796-3beb-4b2e-b729-d30ba48ad80f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55455316-60d3-4ef1-a8ad-02df618e9c6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc9b25b8-edf6-4eef-84d9-923f3dc5e164",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7e0a0c-25fc-46bd-ba80-475f7834d8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddddc61-5dcb-4f79-848b-f676ce616b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3f4800-019c-4599-a94e-af2701e6f88d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb1ad61-8bc8-4872-a6f0-a141c03c8b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f7386c-57dc-4ad6-ad5a-1349e866734f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31060af-9def-480d-85bc-e2f0815091e2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fd9ac1-8ea5-4367-a8f1-fea4724b8e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae36e03-e1a6-4a2b-a8fa-a1c568970d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319af364-be5f-4e41-92c5-026d3a6b44e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539fbc6-372a-47e5-9b0c-f069a5bd786b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940b38a8-12f7-4877-83cd-e95017412442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f59d6-ed2d-4cfb-bad0-c1511bd88750",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52e75c6-922f-4bf2-96e5-edc1d9105d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7155be-6770-4099-bbeb-87e12aa228e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589fcbab-feee-4ac7-a0a6-726c584d267e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a9d6fe-e981-4a24-bdab-5788cfe42f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f055f2a-7b83-4853-945c-85610a4f58f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef52555-6060-4fb0-bf00-fe118ebc86c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca2743-6b41-404f-914d-4968471d1101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0350237b-bb62-491d-b23a-a74325c1cf56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e4819c-52c0-46e3-9915-086840c1b4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c975dc3f-282a-4885-962f-7454cd2e79a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb4bb72-4519-4c8d-8711-508a1164afb2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f99e141-3645-42b0-acf9-24691d21dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02824a54-9ec3-4e7a-a050-a52d3a0f3b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af05c7-78dc-4fa4-8c98-5906cc168859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba8a013-0fbb-4e0b-82db-dbbd8550e196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b32fcb-65a3-4265-b395-8474ba9ca629",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785bd59f-052a-4f0e-a7d0-e519b152187d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7debad9f-b9ab-4087-8879-ca9d23ddfac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bbaa5c-a0e4-48c3-af88-7ea7380e7354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0330777-e6cd-4505-8980-1b1cad18437c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fec6c31-56b6-41b2-912e-0a36bef7688a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9345ef47-db87-400f-ad4d-9be42ad01aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d820c701-e6dc-4d9f-9e41-f0cb19835b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b765e3-9bbe-4cce-aa69-7c96521fd8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b87ae53-af3b-4500-ba81-4188813f92ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b58a87f-884f-4068-9731-33c7723f7a22",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2bada9-f980-4704-9d21-26a9f6de1502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa263fc-1cd8-474f-848e-17ade6fce3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab28459-07c6-4f1e-8e5c-13cd230d7645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac635fc-a950-436b-8315-d7aee337e1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6587edf4-b795-4a62-9dcd-967b6f7daf33",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d479213-eca2-4e20-b418-b71e99861f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1550bd3b-092f-43a9-8865-04407a742855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad14b40f-c352-45c7-a7b0-e06953234096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbe1aea-ecb6-4821-8451-242ef8583297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5743ab7c-cfb6-470e-9648-bdb7c3dea71d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dcbdd5-1f6f-468b-a606-3ad0e2593742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb899ac5-5313-4743-9aa6-40ce2e927987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd58bc2-49ab-47aa-b5fa-9295548d85f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30267c38-8bf8-41a7-8636-47878d0666a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e218ec-de11-4e7c-a06c-eb31c79f70ad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a9c0d4-360a-4098-8924-303053dd0082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7cc7e9-a3e0-4172-a319-071d82bec433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c8fbb6-dad7-40b5-90a6-5b703e3c843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d4d6f2-ce2f-48f5-84e9-d650f91b14d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6dbf50-9e94-4f8a-81af-2ad65067746c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf07ad5-bae4-402c-bb89-3072a231ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d29af77-8342-4ec8-a756-44aad9cb8586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9aa330-1362-43d8-895f-c84200b90c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c59917a-7d64-4f51-a19b-89bfa9acd9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a43c924-ce1a-4ff3-8f5e-2ef66fea81ed",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d369d-da59-4f61-a8fd-b6cca6062eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41b040f-c54a-469a-9b2f-8d24a9d8b51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2f6161-27bb-488f-a896-2c625d5cb709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1facc608-9059-49af-9a60-00a9fdc775a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb48cd11-da95-4232-864d-6e4cba1b4e53",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca92108b-57fb-41d3-b334-3a09ff177345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1287f116-e863-4162-adb8-aff3ae8f670e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8213b21e-7de1-45e6-9217-a9e66d880a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f107aa3a-bc0e-4e43-82c2-e162d2ab4fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e74bc8c-024d-4f84-827f-c06ca1cc6fd5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76946ba-319d-4157-a68c-533dbe8d2952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0310d697-febb-4f6e-97ff-27452d324741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41561259-1d72-40f0-9c1f-12489ff61b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9dd532-d85a-4b3b-98d4-47b7752396e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9557f5b8-25ab-4d03-af9e-e7ca188fb288",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b704a6-019e-4014-a143-f35cbfdab779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daaf1153-fa8b-47df-8694-9f09bc3ec1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84544a72-aeb2-4c8b-8cf2-09139eda742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19749a49-76ed-4203-993b-5642530ba016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccc1fc8-2b46-42f6-8892-2ffd60ce1deb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7559f776-3f1f-4ca7-84e0-43140fabac65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d8e231-6484-4126-91aa-27e28aa7ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a87025-88a7-4aac-a005-fdd41af60942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11976b67-7222-4d55-959a-9efad21ab27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d50e125-5d41-4d36-bf1b-869ac81e9716",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ac4f4-17e2-44ae-818e-563619ec68fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8e1571-8937-401c-ac77-f63b0ce7204d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba40322-f137-4633-8aec-8b7874ca0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff86613-4b0f-4af8-9694-16db2542e8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85f1cb-3b59-4572-9f23-ae79c5f01025",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a09ba-101d-4267-824a-3cea952c0ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7382893-81c8-44fa-9f25-a5943c1d8f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec78a4a-e002-4fbb-b5c2-4327df00c5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e6ee8d-2e4f-4fb7-8f29-bcc848e13298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24d8cab-4264-4ebb-84ec-f87d94214e1a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b36f5-33b0-4704-bd1d-38fd01224e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48a317f-40c5-462c-ba88-090637e3d014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44d6a99-2a52-4bfe-bc2c-42a781226954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488b724f-60aa-4c4e-9ab3-50764c37f04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ebc656-87af-4724-9dca-ccabe22453b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a10949-5fd8-48d3-a26c-ab660dd7879f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ab847e-32d6-457c-8e8e-03bf637f0f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64218c4-0632-462a-9afc-d4d5702d65b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c0f069-e275-4758-87ce-c1a95c240b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752f9ac2-c0ac-4bdd-9e2a-0c58ad4ff640",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30582f97-5429-426b-9f56-5142c1820d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d0c7ce-fd8f-43da-8d3b-b09f72099306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5baf98-ac57-40fb-bcb8-aa19b50f7f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f4b577-b9e2-4ab9-bfef-39096db9e1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e4cfca-2b32-42ac-b63c-229e25e4ef37",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bde2f48-0c7a-4ce3-80ce-f3506aa1afd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb78f966-0125-48f7-8c0f-40682e828e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e46f057-d8f7-4e07-b8a3-b4cce5e328a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33a22dc-8de5-4d0d-847c-798d2cdc2179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b5a2b4-6e5a-46e1-9b0e-66bd52708fe3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87a88f3-4b0c-488b-b140-71bdaf2025f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9171808-13ff-4c56-b8ce-b41563135e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31263a01-59b1-42f8-8140-21e839106867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c79862-a466-44d4-937a-19bdab0b9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5746fd51-85b9-42ac-8a20-8452c3917fb6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f25df91-8a75-4826-ab74-b09c51cdc4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1c311c-a806-4cb6-8852-5bc8fa92bb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ebef6-deea-4423-b59a-3c1f0d7bc917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e17de8-a6cb-4b8d-8e34-026a2bb13e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1ba3f-7f6a-4dc6-8769-fae191069c93",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023430d6-a837-4664-be57-0377b1dc4744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca924ca8-c5d3-4513-8cdc-8af0194b2556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d09934-1beb-466c-a7d2-49029876b29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aa70f1-5c36-4bf6-aed8-5c0caa921b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79cf3ff-d1e2-401d-a5ed-cd9006de49b8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9579a02-53c3-475e-a88f-e9e0c66ae7f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52476eac-61da-4ef1-8af7-f0e6f3c30ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7342b67f-ce4a-43a3-95a5-56c8af302b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c27466-bbc8-401d-a2dd-23416325a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe489505-2edc-4908-85e3-d834d8bd3f98",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52966714-0291-41de-a27c-ddf5fea44b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62866f35-4aba-4e65-8600-ee323f7dade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0534d-354c-4fb2-9972-df60b57cab37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07fc585-9213-4f71-ace1-b873635024ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe206bd-05dd-4377-bfd2-dc7eda01e4ac",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb852a-dc40-4a05-ab3f-774cfbe149c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf61ff2-795c-4798-a903-e4dbeb8c1f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63340b93-9007-43d9-9a08-d5a1ee0ca83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06462650-8a34-4e51-acdb-f8478d56d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f387c7-54bd-495c-885a-acf08340dddb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabc364c-df73-40aa-a136-df21d2b75a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51e7b80-a28f-4435-8c34-1a4f7cb04fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ccce65-262e-48db-913c-80b4d17924b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8642b00-4124-47f3-9719-27e460dec318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989a4990-e391-4cb1-ac7d-75898943f5e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d0bc62-9dde-4a07-ac29-2056486eb457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6dacf0-fb6e-4971-b22b-ae13c8a525f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c5e789-26eb-4dbe-81ab-3226af2bea67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78207b1-ccac-4022-b9e6-44addd011f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e5948d-8052-46e4-97a3-868e3916ccbd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09fefc9-b517-4a78-997f-727863fc2541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40b1e6f-1a29-4050-9763-10f65c431880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c7d7dd-a39c-4c2d-a1d6-1db5e66f89e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733fb38d-8f90-4c7a-9929-6b08f691056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfd3740-fa4a-4b2b-8969-5a63e38186a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bd4b5d-2c6e-4bff-aa6d-ceda52dceb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba0758f-89ad-41aa-ac88-dae855e46acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515ac8fe-e6d5-4e7e-a91e-2fcd8a2db749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b0986f-3269-49ac-9a64-fe68b1a0b506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0a54b2-2576-418a-8f34-4e857d0e6506",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fdf1e7-3327-471b-8b6e-6833d7ddf65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccbf591-f860-4833-9111-769db7a7de64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babdd9ea-9b13-480c-9aae-ded0d2ef6d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f742a2-a155-4751-b2a3-786e75c333f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec5afa-8c11-44a2-8e07-ddee4fcb9b20",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44680ab1-f3d8-4584-8e6c-b024c3cfa7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8745b2f-25ed-48d5-9a4e-3a89949279b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1fc73a-0ca9-43de-b40e-e8a41b750e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eca017-83ed-4c36-b8bd-3d04283040d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce80e83-529e-41c8-bdb1-0906ce5f7892",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12bfcd7-e195-4021-97e7-9de8fed7df27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7f67dc-fe6c-4bf5-afb0-4ee192fb9ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796cfa03-476e-4872-ba28-cc43c5ee683a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dded0d64-9e6f-43ae-a0af-3b38d29d3632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9052b145-c612-42d1-9754-8e7ebe35b966",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ccff41-d362-4e0f-9433-c075cf0a5041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21fa306-877c-40e3-b56c-55c9e5c8d274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582007bf-a5c9-49ea-b465-a8a541cd381a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2089f1c5-d3d8-44ea-a676-f77afd06527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659759f5-c57f-4365-947d-cf3a47c17777",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2cd32c-b02d-46d2-98c2-e3f8e51f9d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94eed7e-fe7e-4ea4-a6a0-ec0caf3f8319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5fa3e4-4bef-4d5a-8ace-bb38bb80a6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008ee307-fc72-4c5b-b3f1-4f13fb1b3813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371b3aee-5ba7-4d43-96b3-5e5fe4387f96",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4f1054-5df0-4747-9ecc-4c1e6695f745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139ae86b-dd43-419b-b564-2cadf970565a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e0ca6a-b760-4e09-b162-0d313c7c15da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1e84da-923a-46b1-be7f-8a8e317b5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c2c01b-277a-47ec-b277-5edda4386f5f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680164f1-2558-486d-b802-788d06b727d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bc2d81-e553-4377-bedd-3550a76396af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a900cab-e2a2-4e78-9f47-83d07cfe67a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9a39b9-e1d6-419e-8dfd-b5e31a129a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b08ebc-2461-4b0a-85de-0a70f4e2793b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b15a8-39c2-40d2-b91a-9a55e57ee485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc65aafc-4d80-474a-bd06-6cbf8ad9ed33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2663ce4-3cec-428b-b0f5-0d213e93bbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d240c870-cd8d-40ae-8da2-51f09d053a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0c6d5-8c06-4667-abcc-a80b07def673",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b206456-a45c-472b-8f80-615045d00fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c671e89-b96f-4155-bc6e-a0d4ac8a3c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aec90c2-368d-4d1e-ac13-befee644ea85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d281c3-4002-47f6-8ee1-1e137af2efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c454d519-d87d-4b9a-b060-ad559b2292d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed547a-a15d-4684-bba9-063154812335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445bcbde-8fce-44bd-ad6d-b3f0aff1f158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529f0183-e0c1-4f67-b9ce-bcc957ed1180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5af9c1-7f87-48c9-9ebd-8557a6798902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb69b16-66af-42af-9f40-53037b587fef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09689546-b243-4de1-82c7-9ca787bf227e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e5aed4-e118-4b6a-8ca4-4437b9387cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3281bc-495d-4f02-9862-360f0b593d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413349e0-a419-4ce8-aee5-085b40ef9fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca57def-0e5b-45fa-946b-e52916ec91d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589d9c97-6404-4f44-9545-7b0a0543a75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edd8664-c59c-417b-b9b2-1434cbba8c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb2e2f-768e-45cf-9ecb-a802c8a460f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ef3165-8eae-418e-b8fe-d5fee2529f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5709c2ae-c0c9-4cca-9ba2-76d23dce68c6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ced08-34d0-4d7a-bdb1-24ebcc38efba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f241f903-ad54-4eee-9095-fff7efa1263f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcaf318-0f6d-4376-bff0-7fc77f23933f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9379af78-7c2e-4778-84d0-58d6ad26286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33715fbd-4b99-440f-bec6-e8e991befdb1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c85ca1e-0ef7-4b14-b2b3-83a640c735b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263ae7d0-e9b5-4fbc-89f4-0ef4d949c74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d951382-d038-4d63-b186-ff91efc21bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28f0f11-76fc-46fb-91ef-10beb2285c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2d5e51-43de-4f00-834c-f09a700dd886",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ceb3d-c48f-44d0-b693-53df5753424d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fbe4ff-64ee-48dd-8fbf-e5bc53538416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea52c91-8e25-4959-9674-7f313ff2dd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c47fdd3-c2f1-43df-881b-6bb6bb09a382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91958e4c-b2a1-4b05-a8a4-565c7d91adf4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e83fcee-e636-4ea3-8432-f5d0775545c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebbba71-f0b7-483b-aaba-2b82844ab57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c90e226-8e95-47ed-9457-e760b0420e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a252b268-0fb4-4458-9eec-a170638009ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82e218-ecee-426e-8d0f-6b529d6e431f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7949704a-9b97-4977-8c1f-17b04d011610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f303df93-5394-4066-b838-cdb6e8aadbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc587c-49f0-4e50-8130-04137e723336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d61741-381c-4d2c-b6b9-5a8f7a8113bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930aef92-1720-4603-af22-02993ec3601b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0131f79-4277-44ce-b70a-807c80abb9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6660d869-ce21-450f-88c1-cb9d10f3e5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38da08f9-71bb-4c8e-909f-71647c4de881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716c88b1-1acf-485a-88b8-a2997b0f78d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8997f9d-6f01-4272-9fb2-404e0226c3ff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a26d78c-120a-44a9-99d9-cb2c4a523bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231da4c7-7703-4e07-8977-29b2cf02763f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9b3fe0-76ea-4a68-97d6-fab267fb6dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370a1ad1-4928-4d34-b36a-97bf994ee388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c358d79-b238-4bbd-8184-f07ce8ad53ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca8d939-eaf9-42a7-aa61-330ba9b1241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d06a62a-dd94-4683-a29c-fd15eec00b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c568fc-087d-45d8-9d81-8013ea9fe774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784fd652-b6e8-4b32-8756-ad1b3a58d3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7450d85-159b-4fa8-aef8-9b9806b0fe95",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c468350-9ad7-46b3-9902-3d8ec10b0f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1245d302-c098-4be8-aba7-3263c3b95fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54e71b4-ee4b-4fa2-8346-440c50c7e9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886a817-98a7-4919-a34a-baa81dcc9d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76932b76-1b6d-4474-9ce6-7aa506aef597",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6c5e1b-3639-4a10-a46d-7fcff50999c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f56ecf-5b01-4f72-ace1-abca9ff17936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6721b64-0c23-4b3b-9522-705c4f1a9e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88b821-6423-4918-91f2-35a72f1a5159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f706f480-f37c-4c8c-b929-c5d10dceeb07",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f9b60-ebbe-4304-ab8c-7789d763ae21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317eb422-8fd9-411c-85a1-faf0bfc2e434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a682d3-2126-4d6d-8aeb-f6e1b1dfe0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f06572-8026-4e3f-8a46-95bb52a1a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611c0752-49e6-4ed2-98b1-6e669f1c80ba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0677a4-6457-44a5-a084-35f2ef7ab326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96421eb6-a2a1-4b9d-8e2a-4c0ed23f57b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c1ef8-0a47-4541-acdc-77fb695b39f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44171145-ac08-44ff-b2a8-1d1a42fa98d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6931bc5a-6f6b-4685-b929-76f1a4b9345b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bdc50a-2dcc-4f61-b17a-04fdffdb983a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fca3f4-1cf3-4969-ba21-5201a1b14268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9eb002-21b1-4107-8ae0-0848b61ab3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf289ff-b070-415a-a6c4-2fa6f9229f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9689e872-3cb5-4c16-baf1-a5a64ce1edb4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d659961c-ccec-442a-a566-cae54f3ea8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b97aca7-4d5d-472d-8a6e-6947572671b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e7fee1-d6db-4855-b924-39584ce5abb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2878a644-407d-438a-b80f-57adb0831c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0363604-73b2-4872-9e9d-e065d53cb06b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff0eb17-28f6-4e0f-a0e9-93d20f4ce3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d13a44-47ef-4334-8315-2b1e92be585a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da67ee3e-0f02-474b-b21f-d13075d90358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365ff55a-bdcb-404d-bc2f-033a9bdc2910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621796c0-c1f2-4fb8-bf24-f4fed9204c58",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feacf0c8-a443-435a-b26f-d94b1c264946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff5d142-6aaa-41b5-a3be-1210f2d6be1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdac77f-b762-4d80-acd5-278b31427297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3704fe2-7a34-487d-b692-22a4789cca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb48ed53-7420-426f-9f74-bfbe92e896d6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6174203a-82fd-4e7a-8b3c-290c1dafd6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcb7fb0-d57a-4b70-96ca-ed83e053ce60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d13ff5-774d-46bb-a9db-5b1b395cebbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f382ecda-38bd-44dc-9d4b-09946dab25e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bab6940-9940-4f39-98bd-19d07b75a98c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be235978-4cf1-4630-8ef9-90fd22868798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dfdccc6-f33a-4c88-b421-2bd552854900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bdad4a-5782-44a7-875f-8ebfa0d45094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb7444d-0b26-4e63-a2e6-829a195855dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cb09c4-1155-4b39-ba6e-0b2462f26508",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa3e798-bad0-40eb-a0a6-3a10c85abf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db6badd-dd6f-4473-9a34-78f2659fdbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af963b-716d-4d76-88ed-a170ba06b51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc0b89-8b24-4229-9572-2ce46f0b099a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e9be38-a0ad-4580-a71d-3add3bcac1d1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5a81ff-7303-4b5d-9478-c38db5af6922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d5ae0d-dae7-4f88-8eea-6c7a71c1840c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f2ee68-0a66-44c3-a890-b78f4d61a65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b96a87c-1c4c-46b1-931c-ae9ca7954f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57935c90-fca8-40ad-9533-f4c388181483",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f94e2c-9b60-47a1-a836-bdddb90dd39e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2678e1-ec17-4469-940e-ae3d7e42dffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa163e-94aa-4d50-b05a-adeb54cef99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af379f4-6240-4697-8166-f4ffc577d03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bae3783-2ec5-427a-affb-68cdcb6ff5e4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c0baf1-f587-405e-bbc6-ee04a4a123c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60139848-7bb1-4db5-aeb5-34f943aa6fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e96421-6abb-4153-b1ee-ac05daa788b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b58f63f-a192-4e7b-bc01-57a9ccb2a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f710c4f9-6f76-4143-887a-7f0dee781538",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47c080a-066e-451b-8c83-6c2fdb2aee42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8180262-6256-4509-a8e2-be8296e19a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71108601-ea53-4410-83d3-ab6e3b382837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e60b05f-ed63-4c19-87be-eefa1cc341d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d64380c-cd4b-4ee0-ba94-ce0827acef3a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d81a3c5-6456-4b8f-98e6-a07ae3006433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff948627-3ac0-4c6b-bb59-f25441d1668e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23c9948-d580-4eb8-a29b-e7e55b3d483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759e6e27-4df5-4ec7-b9d5-8c9cfbf894ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623f18dd-6ba7-4655-a60e-193010920937",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaeba7a-8073-4072-803d-9f166ba0cb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02a0feb-92c9-4f67-a6a1-f7e96e059149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef175b4-68c4-4479-82f0-2449d3e618a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782c1b51-c92d-4a40-80d6-2d4735377420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb81b38-52db-4266-a1e7-5f526dfaba53",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5070bafd-626b-495f-82d3-7857951f05bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3f28ca-749d-4294-bac8-00ddf22cc100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be2b7b3-204e-482f-ad41-51a7eaa88f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a258253a-56fe-490f-916b-2abfa1c07ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e053f543-27f8-4da8-833f-65d197048f65",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511f3586-deba-4312-9126-949114bb56e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ef09b1-3a13-4f21-9821-0952fea1069b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d24a71-dfa1-4848-8161-c59b42317d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f92c84f-d65c-49ae-a0e7-fbfb6f865e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76825a50-0d93-49f2-8a3e-fa0c35fc9ab8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076e401e-fd64-4d05-92dc-0bb2920e2349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d02d7c-dc06-4f6a-b20a-ad368adcff65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac9dea-05e2-45ba-b3fa-b775a4fa560a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367faa07-e24c-4bbc-b582-c121a23ada70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744f655a-ad07-434b-b8e5-53b968b0a3d2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f57bfe7-b74b-4d59-8f28-bb93038e818b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b89c54f-b432-44e0-bf0c-28e8eac1cfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eae19c5-7f34-4b10-8744-14c40d72e43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0c4068-0512-4357-85c0-37ed4c76e902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233dc85d-9565-4498-a6de-b058373a3d40",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67437ed3-c810-4c8e-84a5-31d8f27d3c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d29883-9ba6-4537-8166-227c390454c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f23fcd0-48fe-4512-b938-5f901e7edce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23abbec-0fa7-440f-aae1-dfd62626eea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fed73d-2876-408c-95a7-0b11a52cffa6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e76ef2-5f95-4a3f-b82e-c1d4195427fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b1fab7-abac-4ca4-9c41-7b205acb2208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490ecf5e-dc0a-4193-a1db-0aeb1a7f901d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bced0ef1-cd7d-413f-a91e-08ae0242da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2217367-4cde-4f13-a2a8-0b3f2bdcd300",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0181a889-838b-44bc-a31a-76895bd5a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db78175a-8921-4742-9e4d-ad7b2aa4ee5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bcb4a0-33ac-45ca-813c-8605bc2ed7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d35a82-428e-40ae-a966-db24afaa8a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ba7b3f-8f73-47f6-8ebb-5e6b50c58ecf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73467a78-2ff1-41ba-8c21-c4bbbc4ff4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f074fb69-d45e-4406-9e1e-c7443c58743d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a183b1b1-2846-4b79-80d1-95ff28ef3043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eda35f2-32ea-485c-b9f4-6d71961b23bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918e4157-370d-4ffa-8c57-2c23e2391e11",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928c27ca-c349-4407-bf5f-e1661f8e825b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9fe026-0dd1-4d35-a8ac-46c58d8f4559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a818ad4-a682-4434-9d69-1f3c7f5a6948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45dcc22-aa8f-470a-be3a-b2fc80d4cb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9682ca-0bb4-4c61-9858-cf8c55bd95c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4397a3-ee99-4e99-adfe-3c9ee3a8cd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e785ed91-fc17-4bca-8d9a-c4b999bcab36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260175f1-0837-43b3-be03-4610ca36a03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e548f32-2445-4642-932c-57b0933fbdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ed3f56-9ff3-42b3-b864-891d01b3c96b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d362962a-3c7f-48f5-80ad-c796d32d60a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b0853b-a251-4944-9f28-15022eb2bb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f223ab6-cd5b-4be3-bb12-acc40a629ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32b21ee-a052-4508-8c07-26a4a9df1700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a002b9-09bf-4098-96e1-bacd8a018d91",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcb9501-67ae-4126-817e-6676a101116c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5b9944-a619-4c54-9e5c-2570ec2138dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165120a9-2039-4267-8d59-716ec5bca838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8821c46a-07c0-4f67-8882-c8ce8d318bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41654147-0f7f-4a88-955d-0a73017b1ae5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3facd8f4-81ef-4bd3-8d14-42982654ebd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b74fb0-6019-4711-bbc2-e49cebbace27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d622b6a-e2a0-4e58-8169-b6bd8831474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c7e021-d8ce-4da2-a32c-b191a1cd6ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437c4f9a-786c-446f-8810-15610e16bda8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9831dd4-bc51-45ae-8a00-a63b71b40e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02b89db-9136-4c7f-92d5-c1f8b21a7936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2883e43e-b4e4-4b3b-9649-df201844e7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c8e894-841b-4822-bc31-ded13a468355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80e59b6-4c14-4f78-a413-2c103e19adf0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e55b68-6d15-4780-8b0a-bf4b8e71b075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95ecaa6-a4dd-409a-8131-bc8c6989415c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec738ce-6621-42af-9214-3280a9ace1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5af2aa7-8bee-45e1-b25e-4f8042f76a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b85c9af-a227-4909-8811-2cba2298aac8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4875b50c-da9e-47b1-a76c-a2be8bc44094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13c7c80-46b2-442f-8646-fd1615c46b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062cc545-a17d-4602-8fba-0f3b16dc3186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0860bc81-e986-4c18-8f47-0a44fbe0eea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67533a7-a4ba-4ff5-9881-3a0da2262828",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d9ee6-2da3-4f43-a320-181855aafc5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd5140b-48a3-44fd-be1a-82d368e82998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f93fbd3-9704-4335-ba98-3b9a8223ad8b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ada5c0-b5b2-4049-b700-a73f289f4335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3d70ee-ac2b-4c81-8d73-19720b4cc3dc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2fbea9-3c24-422c-a058-67a61776b1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de077382-10c5-405d-8072-2cba4686e5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bd43c1-1d51-46a1-a695-9860d89f8b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5d2027-a458-420e-8038-076e0c40af31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9bd3e9-16ef-4126-a271-b3194fe71f26",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56668e83-52f6-45dc-accc-3effd7419d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0966f6-a09d-4e64-ba40-55487119336e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f114ab-11a8-4979-90d2-c8b5ec02528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffedd7f-6471-4086-bfdb-0ca269cb9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059a87f-fedf-4d58-8a98-a1756e34f4f2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa8600e-ac94-4bd6-b61e-2fce79a4ae49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29604688-6778-4630-a24d-45d4a72e181d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730cd8fe-06b3-423b-a43a-23ec79736264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e338a1-c2d1-47ee-86c8-df0b8ed31a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce65745-e37d-4148-a3c3-fea91a19f38c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830ce344-d187-4a92-a17c-a25b4d2f44c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c61b393-a779-47d5-b6b3-3af6bb71a53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b2119-9c2a-4112-8678-38c558266d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b419958-5879-4764-8b6e-afd0f604d965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a75129-1f45-4521-8381-77ad05955617",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bda414f-2f8f-4874-9461-1c68b811d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460586bb-6f7f-4b7b-a82d-106f435f392b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4eb716-5c93-4f25-afae-fd65fb5f4f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38389c9-3317-4c0b-b30a-1c2fa2936e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25b2d9c-5d97-4062-9b17-ab5f0f07819b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c561f30-3f2a-43b0-b94f-708e37e19ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953692bf-b2c3-4015-9445-d44826fad154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb138e9-22e5-4cd1-92aa-56e341b5d8f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3914469a-21a3-4b71-98c8-dfc1de9ac46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fae4ec-7a3f-474a-80e8-b190a02f086f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34824fe-a00c-442c-b0d8-0e4cd4ce7561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1489c84-65a7-4106-9a68-74817a43ce48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9668baed-49ab-444b-9dad-7f0601dfb6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b501d-85a1-4b21-8250-b943504bea1c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fed089f9-5be5-4984-97ba-f554d884627c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40cf58ef-37e1-478a-90e5-d92a45830ad5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cbbec9e-357d-49dd-bde6-6d46da493664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "591a7167-ac11-4b38-bc2e-b0b93eb4bc36"
                    }
                  }
                ]
              },
              {
                "id": "350690ee-0a9c-4f32-8ae1-2f298b4d39e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91d26492-a8c8-4e91-b4bf-5ec666d95be1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc213b9-dfc2-4e06-a72b-c8e0ae1def11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8e9c3008-d757-4983-88ce-3592731f098c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc7498-9968-4ec2-887e-905facdfec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bd2b5ae-4545-4acd-b132-1e5edd766e6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037bc2cf-2a8c-4850-b838-b8195fa6c329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "103af6bb-7f24-41c9-834d-586245ef3faf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84864f6e-31f2-4ed1-9d34-d5ff01485f4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6cc5de0-0808-49d7-b7eb-7a8fabff0585"
                    }
                  }
                ]
              },
              {
                "id": "c28c585c-5738-4bc9-9f1e-b985ce0ab32d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e2108602-dded-45ec-8822-f43db8926120",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0834bc46-a56f-4323-9974-2c42c725394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "da5536ea-9adf-4a30-8cd4-a7fec92e8112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e78e835-2357-4135-87bc-03973755944e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df1ffa5-2ad1-4724-85cd-4e234b6de8f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57061753-c957-45c2-8334-9fff5f7948ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df4f9539-daea-4129-b377-2c3f57993bf6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c6738ea-3f42-4644-9dec-a1696bb61665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b7803c7-9fb0-45e0-b36f-76ae4d1571c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84642363-fbdc-4d10-b99f-6b3c17861e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73be87fc-ac07-4ee7-9e71-65ba1075b229"
                    }
                  }
                ]
              },
              {
                "id": "e1f8b218-d4d8-46e9-9c14-bc690bbc6ad3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edd95f7c-3551-4de3-913f-441e859d34a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "edbbcc18-55d9-41e0-a83f-5cc19e1b1b68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74695ea2-c4c9-40eb-8476-faa26f89d816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92b6bbd1-3383-4a2b-9b3b-7a2ce61abff9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a98a913-1c1b-43f7-93fa-5bbf9b0a7924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f6375c1d-aa8a-44e5-986e-ab030e629f99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e18bd84-0ee9-422c-8fab-8acf783868cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dd5e2ff-02aa-4061-8c22-875d059dbd7f"
            }
          }
        ]
      },
      {
        "id": "b59a2c16-02cc-4581-8d84-2fb947ea7f08",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9acb8382-6b5b-4943-a603-a694a1c07637",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bacca4e3-fc17-40a3-9b39-54b8fad92340",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b615d543-d97f-44d6-972b-c2c3f40c64a2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74f5b9-073c-422b-891f-151687c6a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09881a47-cdb7-44f0-901c-362f9f0fe6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d73ea9-90c4-4088-bcba-8a6bb1f8e84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41131d58-a649-4e1c-ad18-252fe9745eb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc2f6ae-5d73-4331-9d59-b7aa16495fcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c97657d-c799-4709-a886-4049e031cbcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc202103-b919-43dd-bc60-ad7a6b5ac4f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3854314b-f354-43ab-8a60-6993aa9febc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00d63635-dbb3-4adc-91fa-796f428e4b06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4f883c22-71a9-4382-a239-7399cf51faf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c59d11a-905d-4060-8fc6-fdb21aad288f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a6beecc-8408-4805-903c-314cf5083eb9"
            }
          }
        ]
      },
      {
        "id": "a17c8cfd-3a5c-48f9-bb64-272a13d9610d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dac9522a-61d9-4e24-a8d1-2b39218ac693",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a98b1082-8f21-4c2d-b1ea-af75ba883d5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b574d64f-53a1-4735-a2ac-7c90f8336841",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880243b2-7874-48f3-a73f-936d80b9c225",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da25dc69-6bcf-44a3-a425-84436bbd5a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e6a1c-7505-4a5b-992f-86f0395b60e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427076f0-cf93-4b1c-8ef8-05a927869eaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b73ebe-ff66-4620-bcf3-6d36d961202e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d56b8878-7d1f-4b0d-8f3b-d0cd368e201d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f70397-b692-41e0-993f-15ba376d83b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1abe32e8-d128-48c4-ba7c-f1fd37eea264"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa54b9e3-7a11-4c1d-99ec-32c51c69342a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "546a117d-dc2a-46b3-97f8-1f8c03aef344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "191ddb87-a6a0-4835-88f0-849d81971dd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cca2cb6-c54f-458a-b2cc-d85685c6a8d3"
            }
          }
        ]
      },
      {
        "id": "91bda120-8db5-4dee-980d-f66fbd73d902",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca79854b-516d-4cb9-bd4b-c5905018ca4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1904a5de-1925-4e32-9b9a-9c6ab6e9ba70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e15ffcbe-c9f2-4c49-bd9f-339f6ea57f3b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f3dad7-2b77-4077-8d1a-3ab132ce4ac5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "911fd25d-864b-4815-afcb-c72be9f5c198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d2510-5507-4f1f-a3f3-6a7e6db721a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b4e5e56-39f0-4649-a8f7-a0993956998a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35c2e190-56b0-4833-b26b-2150f62cc0a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5f212ea-e3e3-4172-b777-339c5db626a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62b63c46-b3b8-41c4-a96d-96f1424b815d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56dc0197-b229-4d05-9f01-7dfa567dda74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73d29d3e-9416-4075-adc8-a347a3e1280c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bab538f-28ef-4773-9c2f-6483c0523daa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc929d3a-252e-417b-b854-ac24a5240250",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb04725-f78b-4a83-adc1-9ad9276afe6d"
            }
          }
        ]
      },
      {
        "id": "41ea8550-a5fa-4c1b-b39d-ec1878b37441",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10e91a6b-a30d-46cd-89c4-6750aa0ea3d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32eb7b71-bc22-4acc-92cf-26c5f0018688",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c757f1a-14e6-4c66-ab27-eb680ba293bd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eeee449-456f-4914-82d9-b8225dd024f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d5abb52-95cf-4b01-a9f5-19e901f15a07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.734126984127,
      "responseMin": 10,
      "responseMax": 9973,
      "responseSd": 690.3612729926612,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715128186536,
      "completed": 1715128223767
    },
    "executions": [
      {
        "id": "41d6f8b4-9a5c-462a-bba6-cf5e197c6cce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80c2b8b5-45f9-4f33-a21d-eb1ba9648a98",
          "httpRequestId": "b17546a1-b2de-4da3-8f19-1be75b0e12c2"
        },
        "item": {
          "id": "41d6f8b4-9a5c-462a-bba6-cf5e197c6cce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ab220aec-1aa0-4c3e-a7c0-2dc53e36b0c3",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "18c35e5b-29ac-4150-a346-e2670bee6fee",
        "cursor": {
          "ref": "88927462-38e9-4ac6-a553-d196a77c0d18",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d24f77b7-822b-453f-8470-9f8e05fa86b6"
        },
        "item": {
          "id": "18c35e5b-29ac-4150-a346-e2670bee6fee",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d4d3a585-eac8-4b80-945a-381da1e27225",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2ad53c07-e9b2-4960-b180-a91d1509b1a7",
        "cursor": {
          "ref": "7c7de2fd-4b95-4024-be14-d502bf1376f1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57a49e2a-3868-4bc5-a3fc-d8b473fa4b68"
        },
        "item": {
          "id": "2ad53c07-e9b2-4960-b180-a91d1509b1a7",
          "name": "did_json"
        },
        "response": {
          "id": "6daac7ef-5017-431c-9ec6-93cfccce1e07",
          "status": "OK",
          "code": 200,
          "responseTime": 426,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3f905-a176-4a8c-9700-a09c9ad9de84",
        "cursor": {
          "ref": "68ddf766-43b2-4d35-9c89-2aa76885a5a9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba464e13-230e-44ad-8f45-b52f4c640126"
        },
        "item": {
          "id": "79c3f905-a176-4a8c-9700-a09c9ad9de84",
          "name": "did:invalid"
        },
        "response": {
          "id": "bdf7997d-5572-4ae5-b5a2-ed7c2b5b62df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 548,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3f905-a176-4a8c-9700-a09c9ad9de84",
        "cursor": {
          "ref": "68ddf766-43b2-4d35-9c89-2aa76885a5a9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba464e13-230e-44ad-8f45-b52f4c640126"
        },
        "item": {
          "id": "79c3f905-a176-4a8c-9700-a09c9ad9de84",
          "name": "did:invalid"
        },
        "response": {
          "id": "bdf7997d-5572-4ae5-b5a2-ed7c2b5b62df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 548,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0f588d-4d4a-4beb-a986-840d6443fa3c",
        "cursor": {
          "ref": "0618f07b-0ae9-4e4b-ad6b-05cb72708223",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "165128b2-f525-4f16-a503-a76642de13b6"
        },
        "item": {
          "id": "ea0f588d-4d4a-4beb-a986-840d6443fa3c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "112478a4-df83-4b2f-b4ee-1f0b38ab6f6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6677500b-b723-4a0a-b811-569e528eb1c2",
        "cursor": {
          "ref": "ecf0e47b-d5db-4e02-bd0d-7a9e253b4c61",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3251cdd4-907d-47b9-acca-e8dd8c14fff3"
        },
        "item": {
          "id": "6677500b-b723-4a0a-b811-569e528eb1c2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "784e95f7-286b-4843-969c-b64239e9129b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd9ad9c-9e51-47e0-98ea-de9e8c53b0b1",
        "cursor": {
          "ref": "57cef133-ee3c-440e-a953-108e0d23bf67",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "db030bfe-3f9d-4358-a10d-90a007d000a6"
        },
        "item": {
          "id": "ecd9ad9c-9e51-47e0-98ea-de9e8c53b0b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "513194e0-5d3a-43a2-b7a1-11422e06a682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71663f2-5aa3-4c75-9e97-3a4482694fb1",
        "cursor": {
          "ref": "59e0c6ef-bfa2-4c3d-b63f-8c709ffe3281",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2892f057-a016-4bd9-9c13-a564317023a4"
        },
        "item": {
          "id": "e71663f2-5aa3-4c75-9e97-3a4482694fb1",
          "name": "identifiers"
        },
        "response": {
          "id": "185d6551-9f76-4cae-9027-ecdb9f66e5d9",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914dec8-8646-465e-809d-112de78d453f",
        "cursor": {
          "ref": "9b429499-c307-4a08-a183-8ce444badaf2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "76abc348-39ec-4a5c-8c03-c77ab7e5dfbf"
        },
        "item": {
          "id": "b914dec8-8646-465e-809d-112de78d453f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "10c815e4-50d9-4641-99ec-deee4e244ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e934833-880b-4282-a0e1-b64fcb02708b",
        "cursor": {
          "ref": "ab95f617-28b9-4478-92c0-49c581ae1f16",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fc0cb3b4-5562-4b76-ab91-03ac80b2393f"
        },
        "item": {
          "id": "1e934833-880b-4282-a0e1-b64fcb02708b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "836647e9-0743-4495-af43-9787ebaf0192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d13a23-ebef-4df6-b65e-c5ab5d766155",
        "cursor": {
          "ref": "647a2913-a05c-406a-8995-35b5530b45f6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a3b765a4-53f8-4f08-ad76-609d291870d0"
        },
        "item": {
          "id": "99d13a23-ebef-4df6-b65e-c5ab5d766155",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a2b3832-8215-4bbb-adb0-744b8cf0a781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05252bc-5feb-424a-a3da-034aaa7c06af",
        "cursor": {
          "ref": "0c4f1516-c1e5-406b-942f-01a6627fc84e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "388ae8ce-dae5-4d5c-9143-12a1ec9104a4"
        },
        "item": {
          "id": "b05252bc-5feb-424a-a3da-034aaa7c06af",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "891b5a32-68c0-40c8-ad9f-4e8fe03a53c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a2d825-d6c7-4e13-8bfd-fde2474ac6a6",
        "cursor": {
          "ref": "2e6d0884-e8ee-4133-8f25-d71d6a483d7b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "19ce9afe-286d-4a90-95c4-52d440724ee8"
        },
        "item": {
          "id": "56a2d825-d6c7-4e13-8bfd-fde2474ac6a6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "491acf83-b05a-427b-a042-9a42f542944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65df808f-6514-4040-a6b8-c46577bbb4aa",
        "cursor": {
          "ref": "b7510fe7-6600-46b3-bb2f-4f6e1e6339d6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "933f3e7c-8367-4d2c-ba0d-7accc13e5f5c"
        },
        "item": {
          "id": "65df808f-6514-4040-a6b8-c46577bbb4aa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aaa9084b-9a39-4add-ace6-c3e13402f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a20461-5e36-4843-8adc-7ca6510f19c9",
        "cursor": {
          "ref": "5a4a7e9c-776e-4aea-b44a-c780925746ac",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c40b0b00-cb7b-4477-9409-167e4b43e892"
        },
        "item": {
          "id": "02a20461-5e36-4843-8adc-7ca6510f19c9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "51cb1143-3993-4392-9932-98e693e71321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508035fa-447d-418b-819a-0a6f13d92d00",
        "cursor": {
          "ref": "dec85e3a-e4d5-4cf7-b493-84bcd902c2a3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "25c30208-85c9-4f15-9985-6e0a9500c401"
        },
        "item": {
          "id": "508035fa-447d-418b-819a-0a6f13d92d00",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0653e61f-1009-4af3-97fc-fad1f07ccaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfa70b7-2561-4f67-92a4-7aa2cf39de37",
        "cursor": {
          "ref": "6d065ec3-6cff-4173-84cc-af0c7e23fb19",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ae838fb-6a50-403d-bea2-cab4fdd6886e"
        },
        "item": {
          "id": "acfa70b7-2561-4f67-92a4-7aa2cf39de37",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "25dc7b58-9608-4a14-a35f-1d68236240cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd18c02d-9c68-4216-b30e-cf58f3428a1d",
        "cursor": {
          "ref": "3cc73344-c05b-4a97-a677-e748885b1046",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6c2e0079-3077-46a8-9d5b-ca0616e13ae3"
        },
        "item": {
          "id": "bd18c02d-9c68-4216-b30e-cf58f3428a1d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "716a3478-f15f-4483-9926-95db5ced8ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c1cbd-3989-4378-bd35-0bd34ac7462a",
        "cursor": {
          "ref": "267ed7e8-f2f5-4831-bed2-584072697683",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "92401f0d-ef2d-4a22-b16f-e3ffcba5d15e"
        },
        "item": {
          "id": "ba9c1cbd-3989-4378-bd35-0bd34ac7462a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "02170bc6-fc3a-4e4b-bafc-6ac9934537a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b22ecc-c6fa-44e7-8946-b5b71e34b887",
        "cursor": {
          "ref": "ef9f09cc-8b5d-4ab9-b5fc-5e88d8d42eda",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae657608-72d9-4efd-b740-94af6eb05c06"
        },
        "item": {
          "id": "52b22ecc-c6fa-44e7-8946-b5b71e34b887",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2a70ddda-aa77-4aba-867e-cc45eed79886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c75ed84-9b6e-4e27-ada5-9a75ed3439dc",
        "cursor": {
          "ref": "87072df0-9828-4fe2-b90b-9b225219f970",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f6867552-37b9-425d-b962-cd10d8bad02c"
        },
        "item": {
          "id": "1c75ed84-9b6e-4e27-ada5-9a75ed3439dc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2d709528-284b-4e3d-a469-a750bea47851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9147589-3e76-4916-aecf-29d3d37a63d4",
        "cursor": {
          "ref": "49056bf0-d2ef-48a7-baf9-565fc20e3a3b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d5027d92-e146-40b0-b65c-71b5145e4d3f"
        },
        "item": {
          "id": "f9147589-3e76-4916-aecf-29d3d37a63d4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5ce0826d-4956-476d-bed0-df6bfc1a01a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e8a0a1-9bf6-4efe-8dbf-058718deec1c",
        "cursor": {
          "ref": "a5b62375-ef5a-4e40-b027-23cd6444eb5e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "24a39157-7146-466f-a33e-e05a03fe0442"
        },
        "item": {
          "id": "88e8a0a1-9bf6-4efe-8dbf-058718deec1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3c84eee6-8e2a-4b5d-864b-41db74d58f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a74bd5-b8ca-4abf-91d5-2aa0cdecc0be",
        "cursor": {
          "ref": "4202432c-e317-4a3a-9542-0829630dee44",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a6a7d87-1412-435f-84e7-d4fc2c73548f"
        },
        "item": {
          "id": "a5a74bd5-b8ca-4abf-91d5-2aa0cdecc0be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d15f2494-5622-4a61-92d5-da6e0588db14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c2cbb-3fdc-42e3-974f-470b2285177c",
        "cursor": {
          "ref": "fd4daf19-8755-4d8b-b12e-57d2bff1c029",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "16c1529e-9d96-4b87-8c84-88e692b2cdd3"
        },
        "item": {
          "id": "5c6c2cbb-3fdc-42e3-974f-470b2285177c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e4b53bec-2c91-430a-bddf-387de0266c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e87291-8e0f-47b8-974c-0e1d55471be1",
        "cursor": {
          "ref": "9d527d42-249f-4392-86a7-4b278795214a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2d6a51de-d806-42f4-9577-b532db08d3d3"
        },
        "item": {
          "id": "f2e87291-8e0f-47b8-974c-0e1d55471be1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5e3fef81-9c10-4c3b-9555-7f2288e56f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47223ee3-b74e-440d-86d7-992fae26007c",
        "cursor": {
          "ref": "93d62ae7-ba89-4928-b073-a788e7bc3443",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3754bed-4040-4de0-80cf-5b0d446a846b"
        },
        "item": {
          "id": "47223ee3-b74e-440d-86d7-992fae26007c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1f26cb67-874e-4a9c-a69c-0a50caf8970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d2fc03-31ce-4861-bc4c-491c638605d2",
        "cursor": {
          "ref": "b1c33605-9e06-428a-b87c-001fcda4cadb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5d616e42-e40d-41ea-9c07-92f9e19c79db"
        },
        "item": {
          "id": "43d2fc03-31ce-4861-bc4c-491c638605d2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8737706d-805d-4ecc-a709-957d03aba190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bd60ea-10ca-4491-a11e-8fcf3952ee5b",
        "cursor": {
          "ref": "e552e41f-27ac-4bbf-8d54-03791f928ec6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "89b79104-f76f-433f-b1ed-e6dacb5d2e59"
        },
        "item": {
          "id": "83bd60ea-10ca-4491-a11e-8fcf3952ee5b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "212f5669-0dd3-4c0f-af5c-0e395b30e714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168258f-65ae-4526-be88-b572e0645ab7",
        "cursor": {
          "ref": "72ebc6e6-36ef-4bd7-ab69-a142b4ae456b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6dc8cd0a-5947-4db9-9c7c-02c9caff4ce8"
        },
        "item": {
          "id": "0168258f-65ae-4526-be88-b572e0645ab7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c1bd8d07-e122-4382-b416-845eac68bfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de540535-eb06-4e8a-bda2-d3a28512af20",
        "cursor": {
          "ref": "185c118d-df3b-4e30-9ea4-0e05fc8115e7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "61a018ab-fedb-4ae2-8dc9-d1b65f8a5add"
        },
        "item": {
          "id": "de540535-eb06-4e8a-bda2-d3a28512af20",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "527141c1-fad9-4af5-9065-bdf75034a79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64898fa0-808e-4c67-ae3d-b4aa8d5e5dc2",
        "cursor": {
          "ref": "dc4f59da-a480-4c88-b027-ca66b4583831",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f4f3cd64-f6c5-4659-b2fe-76f4d6ef6075"
        },
        "item": {
          "id": "64898fa0-808e-4c67-ae3d-b4aa8d5e5dc2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "95a13d97-23b9-435f-b59e-763279356b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd490ae-3789-47dd-bdad-2af5ca6bdc4c",
        "cursor": {
          "ref": "fdd545ee-3caf-40fd-a8ab-3bbef21df3af",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b756099-065a-40fb-a8cc-1bff4829870d"
        },
        "item": {
          "id": "2bd490ae-3789-47dd-bdad-2af5ca6bdc4c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ccacb8c9-e027-4cfb-b49c-22628b180ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc204efd-de14-4711-bdfd-b744eadf7599",
        "cursor": {
          "ref": "11fe823b-877c-455e-9ca7-5605982abee9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "58485000-11e6-4e03-9f1a-9d776c8734bf"
        },
        "item": {
          "id": "fc204efd-de14-4711-bdfd-b744eadf7599",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c6a66345-a4bb-45cd-856c-788eb6c13da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0edafc-bb92-426d-8dee-007b8e74a162",
        "cursor": {
          "ref": "dd429ddc-6555-40c4-ab72-51639c7361b7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46fbbb0e-4a15-421e-8440-87c4d03cf745"
        },
        "item": {
          "id": "3b0edafc-bb92-426d-8dee-007b8e74a162",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dfcad0d1-c9d1-440a-aea9-e93d6e112499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30daa2d-aebb-4e6d-8f87-042f3604b48e",
        "cursor": {
          "ref": "31719fb4-314a-4c60-a80f-e528aff1c7ec",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a32e9520-1621-41d5-b384-d5bf78ed3801"
        },
        "item": {
          "id": "d30daa2d-aebb-4e6d-8f87-042f3604b48e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a54bfe6f-08ac-4067-835d-40a4c0cfecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf291bb-edf0-4235-83fd-d013bd90e436",
        "cursor": {
          "ref": "a9b37ec3-874a-475b-b35c-47faa0a0d3ec",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b255c559-7371-4518-a7e6-9e548840ff7b"
        },
        "item": {
          "id": "adf291bb-edf0-4235-83fd-d013bd90e436",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "325bc97f-4802-4774-b621-ddc6cb2c7545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46078631-edec-447d-bcaa-6b33b69c516b",
        "cursor": {
          "ref": "9ed2552b-6dba-4b10-b07d-cac07b7f3593",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8d4e8fe5-f4b6-40e8-936e-cd102038c8dd"
        },
        "item": {
          "id": "46078631-edec-447d-bcaa-6b33b69c516b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5227a21f-1aeb-4103-9a35-b35af7767d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8665c82-c62d-41b8-a185-13ed926130bd",
        "cursor": {
          "ref": "bbfc6d52-1f56-46b5-85c0-1518d0a0f1e1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "493cf67f-0462-4a8e-be0f-b8dc9c06ff2a"
        },
        "item": {
          "id": "c8665c82-c62d-41b8-a185-13ed926130bd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "95d7e6a4-d8f1-413f-b83b-c5cf86f64296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca4a567-e101-4f7d-bb80-c8cf9a2fdef5",
        "cursor": {
          "ref": "6c7b4bd1-5e50-4b8d-aca4-80310321780b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0f2fe0ea-39f2-4625-9721-655965355bb1"
        },
        "item": {
          "id": "eca4a567-e101-4f7d-bb80-c8cf9a2fdef5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2fb925bb-3821-4312-aa2d-cb0447a3f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85556b2e-d7d7-448f-a641-8a1913f53bbf",
        "cursor": {
          "ref": "6ed1860f-5459-4870-8a31-4decc6d46f24",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a3c25e71-5abd-4ad4-816c-a50d9043b4ec"
        },
        "item": {
          "id": "85556b2e-d7d7-448f-a641-8a1913f53bbf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2a894e43-89d1-4788-8532-9bc6d6e49248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703b1daa-ba6a-4653-9337-086174304340",
        "cursor": {
          "ref": "9ff2b1db-f645-4e3d-92bf-3a54d86cba10",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "379e37ca-0043-4700-a459-552fc5f099c8"
        },
        "item": {
          "id": "703b1daa-ba6a-4653-9337-086174304340",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "45f6eeba-60a2-4df3-ba73-9ae22a1a5f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c5fc89-e057-46ab-a9c2-38415a121fac",
        "cursor": {
          "ref": "17b148a0-3146-4d69-b7cd-8e1ac5d2f6f1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "acbfe98d-ca94-4d8c-bd3c-0299d93788d3"
        },
        "item": {
          "id": "71c5fc89-e057-46ab-a9c2-38415a121fac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "781841e3-c0b3-4de7-8bd5-cd5b3f69d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d057dc40-1532-460a-bfff-65c121f53d37",
        "cursor": {
          "ref": "e5907e1a-3022-4f2d-979d-cbc407ae99c4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a74a7998-a652-4913-8f85-56a53a17f48d"
        },
        "item": {
          "id": "d057dc40-1532-460a-bfff-65c121f53d37",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a5acdc02-30bb-4836-a663-1711cb6ff029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2cfd82-d581-44d8-a3af-7b8cc9bfaf0b",
        "cursor": {
          "ref": "0a984cab-d982-4a69-ba23-12252eb14739",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "66915a49-6b93-42b5-9a56-71392062672c"
        },
        "item": {
          "id": "5c2cfd82-d581-44d8-a3af-7b8cc9bfaf0b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "51d6f0ea-30cd-4653-bf7e-2754bf8ca313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc58c91f-0986-4116-82bc-d3e91d8bb41d",
        "cursor": {
          "ref": "74ae932a-0b95-40f6-850a-68d064e446f3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c4966a24-c54f-4b51-87bc-75fd54fa00be"
        },
        "item": {
          "id": "dc58c91f-0986-4116-82bc-d3e91d8bb41d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "62caaa03-feca-4c68-adf7-d9b8d9a62f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5258249-85d7-4bb4-b4df-3187a070c2c4",
        "cursor": {
          "ref": "ae764a9f-0cda-46e5-beb0-1ff3a9955f39",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "455bd49d-ea66-4f3b-af03-14965264d0f9"
        },
        "item": {
          "id": "a5258249-85d7-4bb4-b4df-3187a070c2c4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "611572a9-6f4f-4f6f-b01c-9934219896d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09695d0-2357-49a8-9b3b-191ed0a07dc2",
        "cursor": {
          "ref": "2a33534a-9cd0-48a8-a457-c528dd48806f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7b474ba9-f147-46ca-89b9-182f73c0377f"
        },
        "item": {
          "id": "f09695d0-2357-49a8-9b3b-191ed0a07dc2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "131b7d8a-ff7c-4cc8-bd51-6e2d40e76179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088149c-7499-48e8-bcfd-a1ba5c66e56a",
        "cursor": {
          "ref": "cea84b80-9cf0-4640-9699-3fa9c21b630d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fc3192b7-e2ae-46e9-9eed-ea4bffaff152"
        },
        "item": {
          "id": "a088149c-7499-48e8-bcfd-a1ba5c66e56a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49741688-6dee-4cce-879c-6125a0a16935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7823be2d-dfe0-470b-948b-3c606f44327a",
        "cursor": {
          "ref": "18ba1c60-3534-40bc-8043-20da34719e60",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7b5b40bc-af34-4878-9e87-ebe469f90c0d"
        },
        "item": {
          "id": "7823be2d-dfe0-470b-948b-3c606f44327a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "03f6bf30-72a7-4e49-a7e8-0d326e122ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea6441b-dc9b-4447-86b7-a487d635f7ec",
        "cursor": {
          "ref": "521512e4-b1cf-4f01-b67d-cad3af63dada",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "50477552-e7eb-4f5c-b3d4-d68e13f5c672"
        },
        "item": {
          "id": "dea6441b-dc9b-4447-86b7-a487d635f7ec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "769d8dc0-82fb-4713-9057-9551cf4d19a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abf959b-712e-44d1-bb77-748624c91dba",
        "cursor": {
          "ref": "f66604f1-f247-43ac-87f2-7932edf2e1a4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9a98d64d-3775-4214-a7b5-17a58ade3ada"
        },
        "item": {
          "id": "4abf959b-712e-44d1-bb77-748624c91dba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2bcd4d34-81de-4795-93b2-238f8c9e7314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d51a767-ee98-4660-a177-26becd5415c3",
        "cursor": {
          "ref": "4f6ac6f5-b6b5-41df-a015-3faa6d9d0663",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cc9f6e66-1e70-4799-88e6-d4e19c9692f9"
        },
        "item": {
          "id": "0d51a767-ee98-4660-a177-26becd5415c3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0fb116de-9318-4eba-8cb7-365d0a3a0135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306e141f-25e6-4083-8bf4-27e7efc7f71f",
        "cursor": {
          "ref": "a974e72d-ece1-4371-bbca-2948bf8a3da5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0a6cf0b3-77b1-4b9b-952b-10619daafcda"
        },
        "item": {
          "id": "306e141f-25e6-4083-8bf4-27e7efc7f71f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a51f3fd-09cc-4dda-8ff7-1f56dca530ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b209c75f-ad30-4960-ab31-322a7eb758d2",
        "cursor": {
          "ref": "2d3b0413-49ba-450c-a386-1c770be228d4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7bd96978-17c4-4ed4-ad24-85d504c0d436"
        },
        "item": {
          "id": "b209c75f-ad30-4960-ab31-322a7eb758d2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7ed6675b-6c42-4f22-8204-0b6b90bf62ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3fd5ef-4fe2-49d2-8993-9e1ce87b05dd",
        "cursor": {
          "ref": "8ffee644-77e8-405f-9258-20ad90523bdf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ab7875c-e3bd-45f5-8410-b5a6a789f993"
        },
        "item": {
          "id": "4c3fd5ef-4fe2-49d2-8993-9e1ce87b05dd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c6f33c70-3bb1-4f35-b781-c974ff693071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758b0de1-9f69-483b-b235-dd6adb616b18",
        "cursor": {
          "ref": "bfd0239b-795d-4bc3-b3a4-c3a940de4451",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4fc25d6-9e06-489a-98af-93f1e5258679"
        },
        "item": {
          "id": "758b0de1-9f69-483b-b235-dd6adb616b18",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "89b82df1-e8c1-443c-afbf-421354c1aff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b81913f-55a0-46fc-a8ba-88dd05e086bc",
        "cursor": {
          "ref": "c7da8e84-3553-4c08-9b05-b23de19f50cd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2c7c36f9-06be-4e82-a6e8-a57d17f44884"
        },
        "item": {
          "id": "4b81913f-55a0-46fc-a8ba-88dd05e086bc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "973f8374-00e3-4695-9f9c-135682e697a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fcc506-ea58-4f45-916d-9f840d800e90",
        "cursor": {
          "ref": "7c5f04b4-458a-4f58-a3b7-78273ebbdd61",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "31c2431a-75c9-427d-b2d0-1a5980f3a790"
        },
        "item": {
          "id": "79fcc506-ea58-4f45-916d-9f840d800e90",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f4b7204a-7495-4454-aa9e-c25e42c5618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9eb4a-0a4f-45d5-b8bc-e25a55c0ba27",
        "cursor": {
          "ref": "9de32d4d-532b-4a6b-b9b1-f052ac9932f5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f7247f56-d10c-4dd9-aa45-b3676a1ee8b7"
        },
        "item": {
          "id": "ecb9eb4a-0a4f-45d5-b8bc-e25a55c0ba27",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b22c8212-01f1-44a9-9914-01f3308aefda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306a419a-c5d4-4afe-a729-513d3c200adb",
        "cursor": {
          "ref": "0d9b5917-07f8-4828-bb7a-3aebb96815a9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "069e5819-a595-431c-9c74-f12207c9cef3"
        },
        "item": {
          "id": "306a419a-c5d4-4afe-a729-513d3c200adb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37c065a0-7c24-4e99-9c77-7e618a83b746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7399743-d44a-47ce-a755-a48c3667484d",
        "cursor": {
          "ref": "57e0d375-dad4-43ed-9a30-8d8e8730e12f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "edb3cf58-3025-48b1-be51-a328bd70213c"
        },
        "item": {
          "id": "c7399743-d44a-47ce-a755-a48c3667484d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "791f1329-1115-4c00-8157-78ab62002ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29628a1-0688-4771-9524-52421db30381",
        "cursor": {
          "ref": "f707966e-2a8f-41fb-845f-4169e634050c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90692022-4599-41da-8197-fcca201d3c8c"
        },
        "item": {
          "id": "d29628a1-0688-4771-9524-52421db30381",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7838235c-e50a-486b-a3f5-ecd2140f19bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11a6022-d3d8-474b-80cb-f419782a73b2",
        "cursor": {
          "ref": "5e60620e-2217-4dc9-ae51-91de367e0efd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e20f6b10-3522-4a7b-9492-ba21aa143936"
        },
        "item": {
          "id": "c11a6022-d3d8-474b-80cb-f419782a73b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "24407f72-2a1e-48fa-af6c-15197f9d7f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6da6718-ad0e-4ba1-9270-410b12a50086",
        "cursor": {
          "ref": "a4944ca3-03e4-40a8-9c87-1322c5a1bc8a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "41a08135-bcd9-498a-b626-41181e36fbc1"
        },
        "item": {
          "id": "c6da6718-ad0e-4ba1-9270-410b12a50086",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e060c30-6c24-477d-bdbd-d9c9592a5705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8562d8d5-0785-4e81-b17c-4bc7ccd17edb",
        "cursor": {
          "ref": "ae70d16c-e8a2-4501-9a38-71224f538a2a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e158b76-731b-4267-8c67-3192b9722bdc"
        },
        "item": {
          "id": "8562d8d5-0785-4e81-b17c-4bc7ccd17edb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70d7aa53-052b-4f6c-9006-bc8d28f7b62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dda61d8-4a61-4fba-927f-e1a643ab3649",
        "cursor": {
          "ref": "fe665314-df7b-4cab-91ff-79a2658fbc84",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "80d1227b-77a6-4775-b16a-8bfa7a26569f"
        },
        "item": {
          "id": "8dda61d8-4a61-4fba-927f-e1a643ab3649",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3686304b-7458-4a6a-a5ac-471bf09fa207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7619ce-2fd8-4662-b35e-938bd92ac742",
        "cursor": {
          "ref": "60b1d236-e161-4c2b-ad93-937b8629b18e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4f373002-3df7-4103-aa3d-bd1fbc35d855"
        },
        "item": {
          "id": "ff7619ce-2fd8-4662-b35e-938bd92ac742",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "54b8c4f6-3c22-46b2-8d1f-356949f3dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552e202-4bac-4895-8e12-bb1c3eb20e60",
        "cursor": {
          "ref": "78c3af97-1d16-4c5b-b9a0-d5ca9e31a8ee",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ac57665e-9301-4ce7-827e-83619abc3dab"
        },
        "item": {
          "id": "1552e202-4bac-4895-8e12-bb1c3eb20e60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fa7f849f-13d6-4458-b3f4-858f7383178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf931bf0-f99d-4884-a12f-61745b96f8af",
        "cursor": {
          "ref": "a04d9b28-1154-46e3-8a80-4d97e13cb502",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1c460f54-e80e-42b9-a6b6-d36ffdd3fb0a"
        },
        "item": {
          "id": "bf931bf0-f99d-4884-a12f-61745b96f8af",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7ac70c83-b853-4f3b-98eb-33325a7da6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42eb814-2d0a-4d63-ab26-2c99663bec69",
        "cursor": {
          "ref": "b1f3500d-d181-470a-a647-eee02c149b0c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f15140ae-daa9-4f3d-a4ca-4660a0737072"
        },
        "item": {
          "id": "b42eb814-2d0a-4d63-ab26-2c99663bec69",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09ea622a-821a-43f0-857b-b9b0ea1411fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce69e8-d02d-4979-b247-44245e91fe84",
        "cursor": {
          "ref": "304bee69-21e0-4698-b5c7-477b4a090ca9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "92e9d037-f4ee-47ed-8bc6-3eb27857d6bb"
        },
        "item": {
          "id": "79ce69e8-d02d-4979-b247-44245e91fe84",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fd526e05-7c21-4def-bf4b-8583bb6fd38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e31fc8-d57b-4dd2-b127-7676d5930053",
        "cursor": {
          "ref": "2c4e0f56-134c-4cc9-81fb-7c643be37cf8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b5dfacc9-fdd9-4554-add8-98429857d7c5"
        },
        "item": {
          "id": "13e31fc8-d57b-4dd2-b127-7676d5930053",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "512f70ab-fe68-4138-adcc-c3d7511646cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a91275-0ad9-451e-9e0a-87f8a89ab81c",
        "cursor": {
          "ref": "16bee897-a64c-497a-bb7a-6b35d876d9d8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ab0a6203-dbd1-4b0e-aa8e-ebc115e544e3"
        },
        "item": {
          "id": "c3a91275-0ad9-451e-9e0a-87f8a89ab81c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "82951d5b-865d-4f4c-a3e8-2eedc0f0e950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff2a277-baa9-4b76-b5ca-a51bd2b30798",
        "cursor": {
          "ref": "937bf742-c7af-4b2b-b05b-92eb1a3366ae",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d3d0ac3f-e12a-4682-9e4e-e5482ab47c16"
        },
        "item": {
          "id": "dff2a277-baa9-4b76-b5ca-a51bd2b30798",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d387678e-2c6c-49c3-83fb-b7ddafdbef7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a610c1-46f1-434a-a625-2f81d94a52ab",
        "cursor": {
          "ref": "cce71b24-5fbe-4225-9de7-3ad548a96a48",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d77b2157-e38f-4374-b8bf-301905964d7d"
        },
        "item": {
          "id": "c6a610c1-46f1-434a-a625-2f81d94a52ab",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "40fb0c71-cf0c-4526-8e63-32ed9b846983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f056fec-967c-4532-8108-c661a4386910",
        "cursor": {
          "ref": "ef30d764-f129-450a-99b9-821e961c6a2c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d43050e0-c8ea-41bf-8ee9-ffdc1bbc88de"
        },
        "item": {
          "id": "6f056fec-967c-4532-8108-c661a4386910",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d608966e-1235-4141-a70e-cbea4ba79341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c4188-aba5-4f17-a77a-295e99580097",
        "cursor": {
          "ref": "7cfedcd6-2d78-4f64-8a0d-25e8981c776c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1f0f9236-7b75-4105-ba49-5df51ac780e9"
        },
        "item": {
          "id": "b66c4188-aba5-4f17-a77a-295e99580097",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5975cdb4-dc76-443f-97c0-75bdeeadad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d635ef2f-74ac-4caa-bbf7-9853e65eb694",
        "cursor": {
          "ref": "d880df42-6fa6-4ef2-8675-46bb5eedee0c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9dcc0e5c-702e-4c3b-9390-e1ca49333070"
        },
        "item": {
          "id": "d635ef2f-74ac-4caa-bbf7-9853e65eb694",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "80f32d23-ac36-49e7-9fb3-cfa14bb9c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5291d7f9-8d6d-4a9b-bf87-2cbbe82bb444",
        "cursor": {
          "ref": "19568f2f-0aee-4cd3-882f-9a9e38993fe5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c5e2936f-fdae-4213-8397-4e57b3889ac9"
        },
        "item": {
          "id": "5291d7f9-8d6d-4a9b-bf87-2cbbe82bb444",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b8251e5e-2bd8-4768-b8a3-cade5a74f550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4a359d-9096-4321-81df-76190d0b9302",
        "cursor": {
          "ref": "43e9c137-c18d-4ff2-9626-3b58e9c7a9eb",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fa0148b6-82df-469e-b72c-2682d31cf30d"
        },
        "item": {
          "id": "2a4a359d-9096-4321-81df-76190d0b9302",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fac7ea2d-ab66-4f7e-bd88-a029c183da81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc8222-1ff6-4164-afbb-adc6520e1a80",
        "cursor": {
          "ref": "38282557-f75d-49fb-bf2b-be5e11e6a1de",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dd0274e2-a53d-4b47-ba74-f3c214c15c4e"
        },
        "item": {
          "id": "dcfc8222-1ff6-4164-afbb-adc6520e1a80",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99938fd2-da94-490a-9efe-2e46a44e258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc4e0a7-7ccd-499c-a440-b09dcf95211c",
        "cursor": {
          "ref": "41ff13f4-3849-4b4f-a70a-268e17223028",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4394c721-4708-4227-83b2-e7bb3dbcf339"
        },
        "item": {
          "id": "afc4e0a7-7ccd-499c-a440-b09dcf95211c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2dd99768-4ba7-45e1-bd0d-0f8574662d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023755dd-c5f2-4592-81be-284024555c30",
        "cursor": {
          "ref": "6668ea55-9d34-4010-a358-86fadad19910",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c921f118-289b-45d3-848f-9513ebb7353d"
        },
        "item": {
          "id": "023755dd-c5f2-4592-81be-284024555c30",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cd30cb78-88e7-433a-807e-de34e106a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0998e368-243f-4a67-a217-edb2b5ce9108",
        "cursor": {
          "ref": "8339cc30-ac62-4370-a512-cd24e0de9dfe",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "93fd083f-fc03-43b3-acd9-0d41eef67c83"
        },
        "item": {
          "id": "0998e368-243f-4a67-a217-edb2b5ce9108",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a8723f92-c432-463b-8cc4-af6ae206d099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1cba6-312e-4464-bd30-103bbc054dc3",
        "cursor": {
          "ref": "e46f8d93-c8d0-405d-9ab6-307df23b8f05",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ee910dee-c353-4db6-a68a-b31f37653865"
        },
        "item": {
          "id": "f8f1cba6-312e-4464-bd30-103bbc054dc3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "da33050f-37f9-441e-b1a9-f43c7eaf8231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c34e46-37f0-4048-ae19-11c7f021f274",
        "cursor": {
          "ref": "93518b5f-5e37-4b97-8adb-ae78051b57f3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "61cbb9aa-3e5f-4cf4-8c14-40d5f00c36aa"
        },
        "item": {
          "id": "d0c34e46-37f0-4048-ae19-11c7f021f274",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5427a991-5ba7-4d1f-93f6-6f86fc3e1e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e085981c-1999-409f-bef4-7c1604d8af36",
        "cursor": {
          "ref": "4aac7ab4-ba71-4aa5-b2cc-ba50aee60e36",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0679d056-9e0a-4200-9c75-deae79b5565c"
        },
        "item": {
          "id": "e085981c-1999-409f-bef4-7c1604d8af36",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce94a7f6-c32d-4ed1-adae-af0b63f66bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dbae7e-0212-4686-964f-53d0f3a96c55",
        "cursor": {
          "ref": "37d050f2-43e1-404b-a22a-d3466b4b3d2d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8f45c628-fa1d-4e9e-a477-c3fc03a70913"
        },
        "item": {
          "id": "31dbae7e-0212-4686-964f-53d0f3a96c55",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a4c30ae4-48e6-40e1-8c3d-2d9563955e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa00b0e-72fe-4d50-a59c-6e265e11a876",
        "cursor": {
          "ref": "5ed07bac-72c0-432a-9045-4ad0b42f5c9c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0d37d23f-86e6-4974-814e-862533c55754"
        },
        "item": {
          "id": "1fa00b0e-72fe-4d50-a59c-6e265e11a876",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "961672ee-3b43-4dfc-8536-4b5239b5bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e57cccd-0bc9-4fd8-a41f-4db05acdf3fd",
        "cursor": {
          "ref": "ecc7fd2e-10eb-45db-8cb6-74b3eef822f2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d36035c-0ac3-4553-bf01-0f7c2f5b2d6e"
        },
        "item": {
          "id": "7e57cccd-0bc9-4fd8-a41f-4db05acdf3fd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af5e3503-6c97-46dc-8488-f1793e473514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c621458-0a9c-4b6a-889a-be3682636d97",
        "cursor": {
          "ref": "c9c00689-e14e-4313-8839-add24db1b867",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be41aa82-c4ae-403b-9fbc-97e8bc444b6d"
        },
        "item": {
          "id": "8c621458-0a9c-4b6a-889a-be3682636d97",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6bf2c212-c53c-494b-be57-41b83a5af4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9bb446-dae9-4f13-84d0-51de899f714a",
        "cursor": {
          "ref": "78f02f75-77de-4c5e-9e37-092db182335f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7917da6a-d7bd-4270-8d45-396367d0be24"
        },
        "item": {
          "id": "4a9bb446-dae9-4f13-84d0-51de899f714a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4a577c31-0b00-47ec-b3bb-5473d2a5a229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f5fb5-4d39-4f43-81af-5789c25fdb2f",
        "cursor": {
          "ref": "c39e180e-d3e1-47fb-8ff1-64dc60de0f25",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "538f0b3a-22d6-4b64-a276-07fa59a2a3ea"
        },
        "item": {
          "id": "f58f5fb5-4d39-4f43-81af-5789c25fdb2f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "83b79822-3ddf-4f4d-8fc7-2e03f8d5dc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aead308e-fe6f-41fc-b5f4-5f866a0eca61",
        "cursor": {
          "ref": "f2a15587-cca6-4a0a-a3ff-cb52837291a3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4941053f-6f5c-4f53-adc7-abe0ee78db1e"
        },
        "item": {
          "id": "aead308e-fe6f-41fc-b5f4-5f866a0eca61",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce3a5ffb-9f18-4143-8f47-c265626c9ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ae24a-9d53-44a3-98a9-ee2d1f2c12c5",
        "cursor": {
          "ref": "7fe7824e-4389-4306-b65b-cb9032d9fcb8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd6e49c2-7c0d-4589-8b93-9f3388db5b23"
        },
        "item": {
          "id": "f54ae24a-9d53-44a3-98a9-ee2d1f2c12c5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b5140a1d-2228-45d7-8239-de23807b581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7562175-047f-4ec8-a0f0-6da49cf634b8",
        "cursor": {
          "ref": "f307c01b-58ee-4caa-a6c6-5391cfa04e16",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d905445a-4fad-4d6f-807a-cae4bcd9b839"
        },
        "item": {
          "id": "c7562175-047f-4ec8-a0f0-6da49cf634b8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ec7bad97-3541-4314-87df-42039d56b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eb3d9a-bc87-484e-85e6-bbbf1e8e26f3",
        "cursor": {
          "ref": "9f2fe550-3e72-4dcf-8de9-c12158819f13",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c99829a9-ed5d-4807-8457-acc5649cc146"
        },
        "item": {
          "id": "e6eb3d9a-bc87-484e-85e6-bbbf1e8e26f3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd77a009-e1bd-4303-83b8-5363ce2ce90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76df99f-b539-4e07-b929-f4510aba4a7a",
        "cursor": {
          "ref": "5d26532e-2d8a-49ef-98aa-1e3c05d06bc2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f7fc3c03-e070-4dc0-86f9-c3fa4e1307f7"
        },
        "item": {
          "id": "d76df99f-b539-4e07-b929-f4510aba4a7a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6e2433e4-0594-442e-8d56-593a1e9f19e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ed1a49-1409-409f-8f1c-9fc76ae9c993",
        "cursor": {
          "ref": "3e25549d-1544-4dae-89b2-b568fe409442",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4808cf79-b09f-47a9-985f-3a725920fedf"
        },
        "item": {
          "id": "f9ed1a49-1409-409f-8f1c-9fc76ae9c993",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ba56c487-fac7-4392-b14c-d07400fa0a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581c1a1-9b53-417e-bf1a-0281c2a3818d",
        "cursor": {
          "ref": "acdf8ed3-8959-432c-a9f7-611ab8d33772",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "382fa66b-c6d5-46be-91cb-439e0832f4dc"
        },
        "item": {
          "id": "8581c1a1-9b53-417e-bf1a-0281c2a3818d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f94bca4-c34a-4971-8240-084f496bd715",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7613645c-e526-4de4-89f5-96a184499af5",
        "cursor": {
          "ref": "3070309c-e24b-4569-bf57-f6a4b4795c2e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dfeb417c-246b-4a6c-a634-37034d13de17"
        },
        "item": {
          "id": "7613645c-e526-4de4-89f5-96a184499af5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d34846f2-a00f-4206-b27d-41407c309f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d108db63-4ec6-4b69-bd75-063849299a1c",
        "cursor": {
          "ref": "ebf369ee-8d21-4327-8e82-aaea9eb1be6b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "063bdaf9-6f51-471a-b208-d4035ea341b2"
        },
        "item": {
          "id": "d108db63-4ec6-4b69-bd75-063849299a1c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6503732c-cbef-49b9-b39a-b3e9619329cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ef3188d1-a8a8-4e48-af48-8970735d6428",
        "cursor": {
          "ref": "7f5be3fa-457a-44c5-9eef-ade4cc218f22",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "416e7a08-7a0d-4a96-8827-63c1d960b91b"
        },
        "item": {
          "id": "ef3188d1-a8a8-4e48-af48-8970735d6428",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f8aa01b9-f644-49ea-9d61-af2a10144c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1e438a28-8222-46b4-acc7-b10be3018ba2",
        "cursor": {
          "ref": "d8b2b7b6-9d6b-460b-b832-ad70a62823bf",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b5e6fde2-675d-41c7-8ac7-1e3ebae52398"
        },
        "item": {
          "id": "1e438a28-8222-46b4-acc7-b10be3018ba2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c4149e6e-ae8b-41a6-a33b-2f943745ee9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "50dc1532-6ffd-4c43-bfc8-e00e0aa4c779",
        "cursor": {
          "ref": "4633cb0a-53fd-4439-83aa-b2af721e3c02",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9021de88-7374-40f6-b63a-aa2f4488eaed"
        },
        "item": {
          "id": "50dc1532-6ffd-4c43-bfc8-e00e0aa4c779",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9fb08ed2-8f36-48d5-a806-3260cc4dc87c",
          "status": "Created",
          "code": 201,
          "responseTime": 9973,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b724434-e1d6-4b6e-aeb9-83f2569388c3",
        "cursor": {
          "ref": "032d80fb-7d73-4239-8d37-51277113c391",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "085ec22e-bb92-4b29-a660-2a971779f33a"
        },
        "item": {
          "id": "3b724434-e1d6-4b6e-aeb9-83f2569388c3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c6410a6a-d91d-41e4-ae1d-1a3cff013e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5747a32f-452b-47ac-a129-af124633db38",
        "cursor": {
          "ref": "97576b91-b617-4f8d-a4d6-fa4f573187b0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "95f6af1c-d13d-4d86-8ba1-1f4234048a53"
        },
        "item": {
          "id": "5747a32f-452b-47ac-a129-af124633db38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b4b506c5-fda5-4158-b817-6a6953baa1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "64a52454-6f2f-4f4f-a012-b573b9b0b38c",
        "cursor": {
          "ref": "a8fdf95d-fba6-4433-8c08-7b343c6d3e18",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8ce1cd19-44d9-466d-95a1-55098b3eabe2"
        },
        "item": {
          "id": "64a52454-6f2f-4f4f-a012-b573b9b0b38c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2f23fb7-a473-4221-bd7b-d71c8ff8f21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5489a93c-f968-47db-a59f-89be40464f6e",
        "cursor": {
          "ref": "0cf8269f-58cd-40b6-912d-c043559567e2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "78cc1a5b-c3d2-4be7-ac77-0fe8fbcfacb0"
        },
        "item": {
          "id": "5489a93c-f968-47db-a59f-89be40464f6e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3413e98-5aca-4136-9882-1d050ecedf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1cc023-2ed1-45ff-bf5c-1dc6264250a0",
        "cursor": {
          "ref": "40ee5da7-4f46-4f4e-a107-fb4716374745",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6744a68b-8031-412c-a7ea-b8a1d9b7770e"
        },
        "item": {
          "id": "6c1cc023-2ed1-45ff-bf5c-1dc6264250a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7e9cfec-9dcf-4685-a5fd-869ea2565012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a54da-d319-4f64-9ccd-ae7a982e42c5",
        "cursor": {
          "ref": "60fe00b1-9bd2-45ce-a622-708b02d6177a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c045d75-77a0-4c67-9596-aecbda9300db"
        },
        "item": {
          "id": "ad3a54da-d319-4f64-9ccd-ae7a982e42c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4a15086-6eb8-46dd-b7ac-4c49e551ca1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5a4dae-4892-4d16-8e99-1e022a3fc206",
        "cursor": {
          "ref": "18bec26f-4410-4873-92bc-a580126eef9d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5b220cfa-f9f3-473a-8a0d-8e545ae90806"
        },
        "item": {
          "id": "2b5a4dae-4892-4d16-8e99-1e022a3fc206",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "538daaae-9b0f-46b1-b739-d12458598739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e8276-a942-41fb-8d66-71ee70ac12f1",
        "cursor": {
          "ref": "6240d00c-9032-40d6-8a77-ea7ee4b2e19a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "987acfa5-7755-468d-9d87-1c17b98ee2fb"
        },
        "item": {
          "id": "f16e8276-a942-41fb-8d66-71ee70ac12f1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c5d4ebb-2107-4123-b137-6c3599a1195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ea787-8573-4479-b418-dceaf3cd904a",
        "cursor": {
          "ref": "40277b5f-c69d-4f19-8ab7-769ba9e789fd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6f5c61aa-881f-4ea5-be3d-8f7cdc2ce475"
        },
        "item": {
          "id": "606ea787-8573-4479-b418-dceaf3cd904a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ac8a8c3-3143-45c8-aaf5-ab4a7644d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a616ccc7-9c48-421d-8192-fc3de858d8ca",
        "cursor": {
          "ref": "1776da2c-5c2e-4cd2-9d18-0453d10232a7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d96ae3cc-764a-4dfb-8cab-7d91058d708c"
        },
        "item": {
          "id": "a616ccc7-9c48-421d-8192-fc3de858d8ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d011a3e-5ded-4af1-b67f-260e73f8ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74bde7-cb44-4093-8a51-be9dfb1a5589",
        "cursor": {
          "ref": "589a6521-ba4b-4110-82fb-fb58d8de9ccb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "01cbe710-f83b-483e-943b-aec5fa076d24"
        },
        "item": {
          "id": "5f74bde7-cb44-4093-8a51-be9dfb1a5589",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1cdc1a46-7ce1-47f8-a48d-ca0bb8e7db18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b65c9-6650-42d3-8e74-7b7a64ee864e",
        "cursor": {
          "ref": "312e758a-c850-41e1-9774-0e83d8e323d3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a55cfeaf-b425-486c-83a0-df38b32080f4"
        },
        "item": {
          "id": "9d3b65c9-6650-42d3-8e74-7b7a64ee864e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01bd1e4f-a01c-482d-be1d-ec786d02f76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e69d8e-93da-42d3-8029-741e58ffa61e",
        "cursor": {
          "ref": "b326f16f-4e05-4b3b-9b15-5a7c2a1a6c62",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a10f2eb6-74bb-48ba-96cb-e6a438160222"
        },
        "item": {
          "id": "17e69d8e-93da-42d3-8029-741e58ffa61e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2ccd9f76-a992-4e83-bc7f-742147ff1a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa7b36-72c9-4951-815c-412ee86ba5ed",
        "cursor": {
          "ref": "691c3614-144d-4828-9206-7f894de32fa7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f7e86857-46c7-494c-a9c9-95aa729d43f6"
        },
        "item": {
          "id": "0faa7b36-72c9-4951-815c-412ee86ba5ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a07cee3-a0ed-42b6-9fce-f2a07484ac0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde5edc-bee7-49a1-b707-0791e2f766fe",
        "cursor": {
          "ref": "1dfcbda3-f5a6-450e-8335-6bf81c263765",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "597e92c0-3a2f-40f7-9df9-d40e53dcb9a1"
        },
        "item": {
          "id": "afde5edc-bee7-49a1-b707-0791e2f766fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "19ffcab1-1037-47d0-9c64-75ae69c17428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d910acb-f45b-4267-9542-81893f5f15dd",
        "cursor": {
          "ref": "062362d1-8f43-4ad4-9a29-e3dec4b667ff",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0973e350-8b1f-42e3-822c-4f9784d017ed"
        },
        "item": {
          "id": "5d910acb-f45b-4267-9542-81893f5f15dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e51ad9f0-f88a-4203-8410-b897e9188a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51d155-5d08-4e2f-af3a-d0f303481125",
        "cursor": {
          "ref": "39b9aeaa-a9d5-4176-995c-70617d135b22",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dff0d1fd-6210-4835-af9a-9d84ce328621"
        },
        "item": {
          "id": "7f51d155-5d08-4e2f-af3a-d0f303481125",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "627ddbc9-e61e-4b41-84ea-adb734e2f0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663ee549-7a7e-467a-ab09-59d1f9f3a8c4",
        "cursor": {
          "ref": "5ebbca58-598b-44b1-963f-efe7781b84ae",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c4292b9c-0b65-4b58-9a4d-13d2e5d7c2f6"
        },
        "item": {
          "id": "663ee549-7a7e-467a-ab09-59d1f9f3a8c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "81cb2ca6-fa83-4b2f-8926-4efd3d677543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5ec4cd-f37d-414b-aa75-c826af7fd6aa",
        "cursor": {
          "ref": "11e61f27-a5ca-4369-a0f1-1f80f75b5d52",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d01ccd2f-f341-4576-9f1e-bd56fc3ecdb1"
        },
        "item": {
          "id": "7d5ec4cd-f37d-414b-aa75-c826af7fd6aa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b58cf030-2078-4d54-835b-a177505e5632",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "513f46e7-85bf-47b8-9bfe-0cac24b7eaec",
        "cursor": {
          "ref": "54e76c00-fad7-4055-9f22-34f4d96bc569",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34e18dbd-0ba0-48b7-af38-4463bce19b93"
        },
        "item": {
          "id": "513f46e7-85bf-47b8-9bfe-0cac24b7eaec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8fc79e6d-33b9-44a9-a83f-72eddaab3813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a7d79-e421-4106-9774-d7a4a848c242",
        "cursor": {
          "ref": "61a56be1-3b41-4d46-96c9-802fa0f9c00f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e937b5b6-c5dd-4eb8-b76d-eb3fa24f20c5"
        },
        "item": {
          "id": "dc0a7d79-e421-4106-9774-d7a4a848c242",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15df02b6-0dc2-4023-95f3-48939e63ea6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50559b24-85ec-4fbe-9636-d7c979742ae7",
        "cursor": {
          "ref": "73a0266b-3b82-4714-96ab-7b8c3e334e8c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2d7a0af5-d323-4934-9360-bde57d98b835"
        },
        "item": {
          "id": "50559b24-85ec-4fbe-9636-d7c979742ae7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f7441b6-55bd-4f62-bcad-58c3d62e81e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda6e1c-05ec-4e0d-acf4-e7a46f33be69",
        "cursor": {
          "ref": "db38a9a4-501c-435e-a88f-48debe05d47d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9b696939-731c-4130-a7fe-7efa451637cc"
        },
        "item": {
          "id": "7dda6e1c-05ec-4e0d-acf4-e7a46f33be69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c1101c9c-0c63-4660-83e0-c733e824bf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01291235-c11e-45fd-ae22-19fddbf42f6e",
        "cursor": {
          "ref": "179b204e-4462-4a25-ab42-0b8663fc3ddf",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ccb9f211-3962-4961-a341-ed0281b0b067"
        },
        "item": {
          "id": "01291235-c11e-45fd-ae22-19fddbf42f6e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0544503-80ee-4376-a0ed-d08fd0fd8795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590da8b-a5f2-432c-b665-487c96eedb79",
        "cursor": {
          "ref": "a17f0bc1-a4cf-42a0-892e-b5ab4192ea81",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07dbbe68-6c7a-4dc7-9efc-38c25ecc284f"
        },
        "item": {
          "id": "e590da8b-a5f2-432c-b665-487c96eedb79",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72d44d01-2d3e-4246-a054-0f112e1a5702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30e313d-59ad-4de1-a829-a16b4393271f",
        "cursor": {
          "ref": "eae28d4d-3de0-44a0-8f71-800e5b06487d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b2fb2610-a2d7-44dd-a25b-578927cfce15"
        },
        "item": {
          "id": "c30e313d-59ad-4de1-a829-a16b4393271f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2aedb1cc-7510-467d-a678-0e65e58bdbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f0732a-c027-4e29-8757-2410ad52103d",
        "cursor": {
          "ref": "6703000b-cb88-4dba-9e2e-85ccbebaa512",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "073f66d8-3e14-4ad2-b004-363fb7cb90e7"
        },
        "item": {
          "id": "30f0732a-c027-4e29-8757-2410ad52103d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b77130a-3c24-4871-b9e4-7ba27e7ce088",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "99941b32-2b3f-4730-ba7c-fc39579db4a1",
        "cursor": {
          "ref": "020e5b79-13fb-4fd4-acea-03d7d08c147a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b70c712f-e1c0-4441-ab93-f401f55ae330"
        },
        "item": {
          "id": "99941b32-2b3f-4730-ba7c-fc39579db4a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "667e8a52-147c-49b0-b5c9-56a2fb34cde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eece01-9523-4182-96aa-371b85eaf42d",
        "cursor": {
          "ref": "df6bd9aa-c584-4aa1-ab33-0fc9122148dd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f7c8de1c-20b5-438e-ab7d-c55a65e4994a"
        },
        "item": {
          "id": "e9eece01-9523-4182-96aa-371b85eaf42d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "231adf74-4fda-4c93-85ab-ff054a654454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d62fc7c-75e0-4cd7-9f07-061d0f40e942",
        "cursor": {
          "ref": "401d4356-cf28-442b-bf68-4b684bf6cab3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b3c97192-5125-48fa-b72f-9cd798799ab6"
        },
        "item": {
          "id": "2d62fc7c-75e0-4cd7-9f07-061d0f40e942",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8bd95951-1d13-475d-9ac2-40392e0c1233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f51226d-8390-4bb6-80d5-e20d0f0817da",
        "cursor": {
          "ref": "24fe4fcd-1d51-4809-b7fe-dbd4714633ec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "75ce7d80-ff87-497a-9682-f8c914c10bcd"
        },
        "item": {
          "id": "2f51226d-8390-4bb6-80d5-e20d0f0817da",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2d9ef049-db25-404e-addb-7134476b1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97f82c5-7e35-48b8-ba12-d7f65eee9190",
        "cursor": {
          "ref": "ae9dfc98-82ea-4ee5-b85a-d6877ed058a9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "602fedf0-acce-4aa3-920f-ac78145f6153"
        },
        "item": {
          "id": "d97f82c5-7e35-48b8-ba12-d7f65eee9190",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8f54e5f-7606-4696-ac4c-bc4e6fa602bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f42bf87-7265-43cc-8eed-278a56617b72",
        "cursor": {
          "ref": "3fb0ff2b-827f-4543-a7a4-1f3fd16baea6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d4e96cf-7ea5-46fb-aff0-e9c0c50e2c54"
        },
        "item": {
          "id": "0f42bf87-7265-43cc-8eed-278a56617b72",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "611f2ff6-bdfa-4d57-8a54-a15c99f1c465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692b87d9-2420-42da-ad40-32fc0ca026bc",
        "cursor": {
          "ref": "8a484eaf-0db2-4b87-8051-b1b879399157",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f68528ff-8389-4cc3-8906-1a38677ebdd2"
        },
        "item": {
          "id": "692b87d9-2420-42da-ad40-32fc0ca026bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3c39252b-ac17-48f7-9353-e2fdf75e0248",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a6be467d-7f8f-47d6-acbf-022885f321a6",
        "cursor": {
          "ref": "e9f91a95-8bf9-48c1-a447-a0acb50460de",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47d7d93a-9be8-41bd-96b9-cd581d582611"
        },
        "item": {
          "id": "a6be467d-7f8f-47d6-acbf-022885f321a6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "407287bc-ac5c-4fd8-83ab-c1efd6bcd94a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "5f1c08f6-9c6b-4175-aedc-2ad3a667f74e",
        "cursor": {
          "ref": "254c7def-f16e-4600-b36c-88e0034e6d4f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8bf6cf0-a524-4d1e-8a2f-dc3153e561f9"
        },
        "item": {
          "id": "5f1c08f6-9c6b-4175-aedc-2ad3a667f74e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a89cabac-8ff9-4b88-bda3-3feb8e485948",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d8d76c70-a999-4428-8d12-9f3500a887df",
        "cursor": {
          "ref": "1f3346fe-4942-4a8e-970a-68a0515d4e33",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "846dec4a-80ca-4986-b34d-e91052ad6221"
        },
        "item": {
          "id": "d8d76c70-a999-4428-8d12-9f3500a887df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7ec5c2dd-f64d-40c4-a4a6-8be69d08b985",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9cf7660e-22a8-49c6-ac4d-81014f0d49a4",
        "cursor": {
          "ref": "265aa54d-2ac2-4e43-b0ef-9ad2cc858b9e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7922f1ed-0f30-480d-8910-e1d570340aec"
        },
        "item": {
          "id": "9cf7660e-22a8-49c6-ac4d-81014f0d49a4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fcafbd60-6a7e-43ad-a79d-22a3f02474ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ee25dc6c-dfd3-4d0f-99ce-ff9e47d0e8fe",
        "cursor": {
          "ref": "535dcd12-ce03-442e-9c9a-498e32e4ea8e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "49bd3bc8-9ead-4095-abf3-99422e58d604"
        },
        "item": {
          "id": "ee25dc6c-dfd3-4d0f-99ce-ff9e47d0e8fe",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b28704fa-ae91-40db-aa1f-8228a41ab0c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9399b802-202c-43e7-a13e-88677ab61792",
        "cursor": {
          "ref": "9bb39db8-f9bc-479b-9ebc-a30dac6387fe",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f2b01c5-bad1-408f-b530-d6748103a3e9"
        },
        "item": {
          "id": "9399b802-202c-43e7-a13e-88677ab61792",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "55071f47-3e00-4f7f-ae0e-46ccbaf85555",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9b25b8-edf6-4eef-84d9-923f3dc5e164",
        "cursor": {
          "ref": "4226ea29-fde9-4320-957a-45f6476b0e2e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c2fe6015-b5da-4dcc-988a-417ab3e6ef6f"
        },
        "item": {
          "id": "dc9b25b8-edf6-4eef-84d9-923f3dc5e164",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5dc27711-bc71-4035-80e1-a274c57bbf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3f4800-019c-4599-a94e-af2701e6f88d",
        "cursor": {
          "ref": "2e50864b-96c1-4b22-9e0b-7ebed2dcc2be",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c4d982a5-9ed7-4277-a06f-722d818a6980"
        },
        "item": {
          "id": "ad3f4800-019c-4599-a94e-af2701e6f88d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fcfaf912-f02f-4dd9-b665-24491b399804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31060af-9def-480d-85bc-e2f0815091e2",
        "cursor": {
          "ref": "df56b20c-f3ba-41d0-8e4d-482b4921dfa3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8173e0f0-c18e-488c-98d7-d565d6a9eeae"
        },
        "item": {
          "id": "b31060af-9def-480d-85bc-e2f0815091e2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "583fad4d-4e3d-44c2-9c55-0dbf2bffd904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319af364-be5f-4e41-92c5-026d3a6b44e9",
        "cursor": {
          "ref": "02107871-8ecf-4440-809e-53e06fdf0782",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fc00c2ac-0dc0-45da-8978-4c95a70bbc93"
        },
        "item": {
          "id": "319af364-be5f-4e41-92c5-026d3a6b44e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "408af8fa-cd44-407f-aef7-04bca927d0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f59d6-ed2d-4cfb-bad0-c1511bd88750",
        "cursor": {
          "ref": "4fe75b65-bc10-46fd-9e87-4753d934fbfb",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0e6ffd33-5ef0-4cf4-9a91-d8254c15ae22"
        },
        "item": {
          "id": "cc3f59d6-ed2d-4cfb-bad0-c1511bd88750",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83f0b0bb-eb0f-4d1f-8c91-874e3cd71dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589fcbab-feee-4ac7-a0a6-726c584d267e",
        "cursor": {
          "ref": "17520ea2-313c-40ef-96fb-cbe15e5fe261",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b617fa89-eeae-451d-b199-2bf172e2dcf2"
        },
        "item": {
          "id": "589fcbab-feee-4ac7-a0a6-726c584d267e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ddf138a3-7120-43c3-8a65-3d0508d006d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef52555-6060-4fb0-bf00-fe118ebc86c6",
        "cursor": {
          "ref": "10c334e8-dab8-4b8c-af27-3404cbb713da",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a2417df4-f743-4340-aebf-4de7f64131f6"
        },
        "item": {
          "id": "1ef52555-6060-4fb0-bf00-fe118ebc86c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3a28e192-ec35-4e10-ba4e-5d44c3e66bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb4bb72-4519-4c8d-8711-508a1164afb2",
        "cursor": {
          "ref": "982f84da-f44e-4150-bc18-bcdcaaee0f6f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9b86a13d-e59c-4656-b5e8-4c17c2381df0"
        },
        "item": {
          "id": "4bb4bb72-4519-4c8d-8711-508a1164afb2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d06f6a5d-8612-4aeb-b0fa-609d75c5331d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b32fcb-65a3-4265-b395-8474ba9ca629",
        "cursor": {
          "ref": "bbbb375a-86a8-431f-a3b5-ce6e8c817266",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6c98d119-331f-4d29-8483-7efbb9844492"
        },
        "item": {
          "id": "b6b32fcb-65a3-4265-b395-8474ba9ca629",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec3e13f9-eb44-4d42-a3e2-cefaf854052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fec6c31-56b6-41b2-912e-0a36bef7688a",
        "cursor": {
          "ref": "2a69a9e9-07d0-45a9-91fe-82cdad859804",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f697b6a1-0d26-40ed-b130-346475252957"
        },
        "item": {
          "id": "8fec6c31-56b6-41b2-912e-0a36bef7688a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "93741d98-8ff1-4ae4-8381-23c4e4c45781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b58a87f-884f-4068-9731-33c7723f7a22",
        "cursor": {
          "ref": "078fc5d4-fc0f-4bd1-922a-4d1ae0d2c18c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "913461b8-819a-4dab-ab53-af3f2c716104"
        },
        "item": {
          "id": "6b58a87f-884f-4068-9731-33c7723f7a22",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8e4f395a-399a-4aa2-ade2-e85023d25bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6587edf4-b795-4a62-9dcd-967b6f7daf33",
        "cursor": {
          "ref": "81448bd0-0fe0-430e-b546-f51d79a60181",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "82e5cbff-4085-471e-b040-f84cef1e2707"
        },
        "item": {
          "id": "6587edf4-b795-4a62-9dcd-967b6f7daf33",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd0c409f-d46c-403f-8872-3b52eaad5ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5743ab7c-cfb6-470e-9648-bdb7c3dea71d",
        "cursor": {
          "ref": "6710632f-a9b6-4ade-abf0-1407df4db316",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d7ee7f38-6ade-4b12-8c67-1306395029da"
        },
        "item": {
          "id": "5743ab7c-cfb6-470e-9648-bdb7c3dea71d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "75ab7b63-10af-4705-8fd8-91ccc12c73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e218ec-de11-4e7c-a06c-eb31c79f70ad",
        "cursor": {
          "ref": "45c9bbd2-7c5a-43d2-97ad-ae516f78bf65",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cd601bb8-06bb-425f-b5d6-c66ef5f198fc"
        },
        "item": {
          "id": "37e218ec-de11-4e7c-a06c-eb31c79f70ad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ed2ce48-8faa-4f73-b053-932345f2a9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6dbf50-9e94-4f8a-81af-2ad65067746c",
        "cursor": {
          "ref": "7f99f671-7200-428b-9621-234661d8094d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b38e9dd4-c2e7-44dd-8350-a9930158cf0a"
        },
        "item": {
          "id": "6a6dbf50-9e94-4f8a-81af-2ad65067746c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b7df1515-a684-46d4-ab00-0c210daff643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a43c924-ce1a-4ff3-8f5e-2ef66fea81ed",
        "cursor": {
          "ref": "78c98ef9-63ed-4a60-ba00-660ee4198c95",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f34eeed-74b7-4a93-ae06-267113b40e9a"
        },
        "item": {
          "id": "0a43c924-ce1a-4ff3-8f5e-2ef66fea81ed",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1111010f-5955-4d2c-add4-186b4792b4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb48cd11-da95-4232-864d-6e4cba1b4e53",
        "cursor": {
          "ref": "c7f9558f-44fa-4e94-b76c-79ce3aea4466",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fc9e154c-132b-404d-aee5-dfd930ca5f4f"
        },
        "item": {
          "id": "fb48cd11-da95-4232-864d-6e4cba1b4e53",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ed5996a4-1df0-484f-8d3f-c14d2ae01620",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6e74bc8c-024d-4f84-827f-c06ca1cc6fd5",
        "cursor": {
          "ref": "aca76ead-39e1-4ede-a8cc-1f9727981d8e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5fdf4d4a-f764-45ef-8b3d-62bc8c171d77"
        },
        "item": {
          "id": "6e74bc8c-024d-4f84-827f-c06ca1cc6fd5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a000aec4-071c-4b76-91c0-86ecf5c008e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9557f5b8-25ab-4d03-af9e-e7ca188fb288",
        "cursor": {
          "ref": "f9750dad-63c0-43dc-8704-da9acae1f217",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6c828a5e-b371-4e64-bcc4-72b3ed291949"
        },
        "item": {
          "id": "9557f5b8-25ab-4d03-af9e-e7ca188fb288",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ebfd9974-accd-4308-939d-fc62420356ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccc1fc8-2b46-42f6-8892-2ffd60ce1deb",
        "cursor": {
          "ref": "964993da-4529-4ddb-bfc1-4b321b2f3246",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8b36115-3a6f-4d63-b669-a1bb890b33af"
        },
        "item": {
          "id": "7ccc1fc8-2b46-42f6-8892-2ffd60ce1deb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a488d4cb-9629-467b-a7ae-4423fe5bdb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d50e125-5d41-4d36-bf1b-869ac81e9716",
        "cursor": {
          "ref": "0da178c5-7fcd-4f3d-afcf-797d83fe2fd7",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7444688b-b4de-4353-9ada-e82545a4deee"
        },
        "item": {
          "id": "7d50e125-5d41-4d36-bf1b-869ac81e9716",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b0854cd2-ac92-41d4-bf4d-9ef1eadc9595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85f1cb-3b59-4572-9f23-ae79c5f01025",
        "cursor": {
          "ref": "b791d1f4-3410-4359-9038-8f8bdd76a921",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6e8f50a-d4cf-49a2-95d5-05e55c2a7bd8"
        },
        "item": {
          "id": "fa85f1cb-3b59-4572-9f23-ae79c5f01025",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c038bf1-ddd7-41e6-ad41-1f077e0f466b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24d8cab-4264-4ebb-84ec-f87d94214e1a",
        "cursor": {
          "ref": "a5419699-dfe7-41a3-9c53-2bba572a8eab",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "512ebe0a-eca4-494d-8267-d1285c28a26a"
        },
        "item": {
          "id": "c24d8cab-4264-4ebb-84ec-f87d94214e1a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d5ad6604-980b-4fe7-a2ff-ff74901f8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ebc656-87af-4724-9dca-ccabe22453b5",
        "cursor": {
          "ref": "27d2b51f-8814-4058-a6fa-b155a595b2b4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3245490b-213d-4c7c-95dc-311827fa9852"
        },
        "item": {
          "id": "d6ebc656-87af-4724-9dca-ccabe22453b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ae9ad21-b5f6-4152-bbfe-ac41969b2c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752f9ac2-c0ac-4bdd-9e2a-0c58ad4ff640",
        "cursor": {
          "ref": "e913a257-d9ae-4f44-8f24-dcf01787dfd0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "19e8ba91-e4ee-485a-8223-e80eb765d2c7"
        },
        "item": {
          "id": "752f9ac2-c0ac-4bdd-9e2a-0c58ad4ff640",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "55a85ef8-2b51-43ef-8b0f-9f38979a0b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e4cfca-2b32-42ac-b63c-229e25e4ef37",
        "cursor": {
          "ref": "45a96ae2-cea4-4cfe-abe7-37ee9a0fe12e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6be7636a-a536-4336-bcfc-976b40db24a0"
        },
        "item": {
          "id": "81e4cfca-2b32-42ac-b63c-229e25e4ef37",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "692d8e42-845b-44bf-af82-4c9e79eeb2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b5a2b4-6e5a-46e1-9b0e-66bd52708fe3",
        "cursor": {
          "ref": "bb0d16e4-8c95-4eaf-82c7-d974d6623e8e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "24f3d170-04bc-4fcd-923e-5c0c9f1c4189"
        },
        "item": {
          "id": "50b5a2b4-6e5a-46e1-9b0e-66bd52708fe3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5f47542b-e333-41f0-a98b-48871a992532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5746fd51-85b9-42ac-8a20-8452c3917fb6",
        "cursor": {
          "ref": "252ee9e4-8307-49e8-b97f-40e516d4a7ad",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f130cb01-5d02-4c6e-908b-a70d72eefffe"
        },
        "item": {
          "id": "5746fd51-85b9-42ac-8a20-8452c3917fb6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6bf33ab9-8c99-48a7-80ba-27af9428552b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1ba3f-7f6a-4dc6-8769-fae191069c93",
        "cursor": {
          "ref": "db44458e-67e5-4463-a837-6a148d53ba52",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6c077495-2b4d-4757-aef2-82a36f78d3fa"
        },
        "item": {
          "id": "31b1ba3f-7f6a-4dc6-8769-fae191069c93",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37891e63-3205-4e50-850e-4635e6abeba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79cf3ff-d1e2-401d-a5ed-cd9006de49b8",
        "cursor": {
          "ref": "400b3736-d4cd-4113-b796-890ba995029b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e6aa84e9-e15c-43d5-87b9-b9e4a8ba7ba9"
        },
        "item": {
          "id": "d79cf3ff-d1e2-401d-a5ed-cd9006de49b8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c17966c-746b-40a5-9350-354d07834079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe489505-2edc-4908-85e3-d834d8bd3f98",
        "cursor": {
          "ref": "7024a458-bc69-4cf0-8d62-b648f8fff518",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f1ddada-39d4-49db-b67a-6ce3648e855a"
        },
        "item": {
          "id": "fe489505-2edc-4908-85e3-d834d8bd3f98",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fb169bc0-ad51-43d6-93fa-93159db1d669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe206bd-05dd-4377-bfd2-dc7eda01e4ac",
        "cursor": {
          "ref": "8a9acc1d-a791-4f98-84de-ed871df2c599",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "55cdb2ab-dc7e-4cd3-b818-d825d34b73f5"
        },
        "item": {
          "id": "cbe206bd-05dd-4377-bfd2-dc7eda01e4ac",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "046d8098-bd4f-4f94-9ee6-1edd0d21a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f387c7-54bd-495c-885a-acf08340dddb",
        "cursor": {
          "ref": "3e09dab4-06ec-4680-9468-4f6c48025c11",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0802214-353f-409e-9373-2b1f96e3e461"
        },
        "item": {
          "id": "21f387c7-54bd-495c-885a-acf08340dddb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9a67786f-81de-4773-9ffd-fdfce62d0ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989a4990-e391-4cb1-ac7d-75898943f5e9",
        "cursor": {
          "ref": "7e4396a6-5aea-45cf-87e2-8531b1129661",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "436b64d5-a4d2-4f72-acd6-c44410179f07"
        },
        "item": {
          "id": "989a4990-e391-4cb1-ac7d-75898943f5e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a1849ca5-f832-4776-bd2e-e757e9074272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e5948d-8052-46e4-97a3-868e3916ccbd",
        "cursor": {
          "ref": "0a403ea8-6dac-441a-ab87-a2932d687094",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9ad35467-ad1b-4b0b-9502-f1dc17d92a3b"
        },
        "item": {
          "id": "51e5948d-8052-46e4-97a3-868e3916ccbd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "25301131-3e44-4831-a315-3017a8dd3daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfd3740-fa4a-4b2b-8969-5a63e38186a2",
        "cursor": {
          "ref": "925cb13d-2c7c-4566-9cfa-97a66d364283",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84fdcda1-a674-471d-a22f-65a48bcfcdff"
        },
        "item": {
          "id": "bcfd3740-fa4a-4b2b-8969-5a63e38186a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a80b30e2-4262-4fbc-add4-4d53297299ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0a54b2-2576-418a-8f34-4e857d0e6506",
        "cursor": {
          "ref": "add925c6-462a-4f8d-aca4-bb69f08fc4ec",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "86f79335-1aa5-453f-b9e2-104bfe400717"
        },
        "item": {
          "id": "0e0a54b2-2576-418a-8f34-4e857d0e6506",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7319ca28-cee7-4ac2-b0b3-f41019aff742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec5afa-8c11-44a2-8e07-ddee4fcb9b20",
        "cursor": {
          "ref": "a1c31350-9ef6-4d28-8018-080bd5ed57cd",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "79ebf9ed-83aa-4e7f-9c31-e1ecd7fca949"
        },
        "item": {
          "id": "baec5afa-8c11-44a2-8e07-ddee4fcb9b20",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d134166e-0de7-498e-8f1f-3765d8771194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce80e83-529e-41c8-bdb1-0906ce5f7892",
        "cursor": {
          "ref": "0c080dd7-7902-4c22-9f00-4fab1a2e7967",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "59655113-32f5-434a-a9d3-86132e32bdb3"
        },
        "item": {
          "id": "cce80e83-529e-41c8-bdb1-0906ce5f7892",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a5bf324-f9bc-4bf3-850a-2c5efa0e0cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9052b145-c612-42d1-9754-8e7ebe35b966",
        "cursor": {
          "ref": "87ee98ae-998b-4db5-b48f-f44afc659976",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e80c8520-7308-4565-845f-69089e488d41"
        },
        "item": {
          "id": "9052b145-c612-42d1-9754-8e7ebe35b966",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13a28c8e-e4a1-4187-bba4-0cd0aa3a31fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659759f5-c57f-4365-947d-cf3a47c17777",
        "cursor": {
          "ref": "37e749c7-ccb4-4c9e-90d4-4c786eb038ba",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "128c00c4-1efa-49f4-b8a4-186ea6edf308"
        },
        "item": {
          "id": "659759f5-c57f-4365-947d-cf3a47c17777",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "df622bab-6f14-4467-a810-9b4d2837d003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371b3aee-5ba7-4d43-96b3-5e5fe4387f96",
        "cursor": {
          "ref": "23f870cf-dbb6-4cfc-a4f2-03f54cb661f0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "56929ac0-f2a6-48e6-b946-c4b1ea64d0b2"
        },
        "item": {
          "id": "371b3aee-5ba7-4d43-96b3-5e5fe4387f96",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df05f4c7-0e00-4bee-99dc-1035537eed9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2c01b-277a-47ec-b277-5edda4386f5f",
        "cursor": {
          "ref": "bd8aada2-56b1-4e05-b54e-117dc833a8d5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "39052114-f767-4d3d-960c-ab4865182764"
        },
        "item": {
          "id": "88c2c01b-277a-47ec-b277-5edda4386f5f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eb7451a3-b05c-477e-b189-79ea84297025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b08ebc-2461-4b0a-85de-0a70f4e2793b",
        "cursor": {
          "ref": "881c80b1-f8ac-4241-b6ee-9f6ea60aff88",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a4606147-1ce0-4052-b187-853c796e17be"
        },
        "item": {
          "id": "c2b08ebc-2461-4b0a-85de-0a70f4e2793b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bfb8b3c9-f3b5-474e-8eb6-94e49758bdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0c6d5-8c06-4667-abcc-a80b07def673",
        "cursor": {
          "ref": "1f850bc4-c244-4073-9ec5-cb9ff4c3defd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2b029539-0212-4e5b-a169-6280e5fe82ea"
        },
        "item": {
          "id": "4cc0c6d5-8c06-4667-abcc-a80b07def673",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "42883b07-8cdc-437a-8fc9-ca34c4af288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454d519-d87d-4b9a-b060-ad559b2292d5",
        "cursor": {
          "ref": "a074d1a1-37a0-4195-91d2-5ea595f8c399",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "00f7e627-c956-4ddc-9454-7642bdebea2a"
        },
        "item": {
          "id": "c454d519-d87d-4b9a-b060-ad559b2292d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8c7423dc-3102-4fd1-af6b-b361c9adf82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb69b16-66af-42af-9f40-53037b587fef",
        "cursor": {
          "ref": "a7051cd8-ae0d-4ad2-a194-e2f3e4f03acc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "78b0aa40-8704-4c3a-8bb9-eb4f8a8ebcba"
        },
        "item": {
          "id": "4eb69b16-66af-42af-9f40-53037b587fef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6d8c0c7d-fd2c-45d2-8735-863734aa1c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca57def-0e5b-45fa-946b-e52916ec91d6",
        "cursor": {
          "ref": "99fa6ed9-9c4e-4a3f-b2ec-900cb1d11b37",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d1d2057-cb50-4a50-ac38-bec290b47b64"
        },
        "item": {
          "id": "1ca57def-0e5b-45fa-946b-e52916ec91d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bd71cfcf-aedd-4a34-ad57-61070ab4fe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5709c2ae-c0c9-4cca-9ba2-76d23dce68c6",
        "cursor": {
          "ref": "1864eb3d-053f-4aa2-9e6b-416f7460ee2f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eb882880-e763-4338-a85f-bd0994e8cf1d"
        },
        "item": {
          "id": "5709c2ae-c0c9-4cca-9ba2-76d23dce68c6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "479ad355-c37b-47b8-be1e-e5861e2607b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33715fbd-4b99-440f-bec6-e8e991befdb1",
        "cursor": {
          "ref": "5eff9248-2c4c-482c-93e6-41fda3fc732b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4ae631f3-0c04-4d83-a5ae-2d3be8c7fd6b"
        },
        "item": {
          "id": "33715fbd-4b99-440f-bec6-e8e991befdb1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6bc39811-0866-40ff-a0bc-54008aef3eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2d5e51-43de-4f00-834c-f09a700dd886",
        "cursor": {
          "ref": "fd4caac7-67f9-4e33-8169-b3d88c762bc8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "66062d47-c0db-4c92-832a-fc9d89c4026c"
        },
        "item": {
          "id": "1d2d5e51-43de-4f00-834c-f09a700dd886",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9bb84feb-7dfc-4c79-a15e-070f185b3eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91958e4c-b2a1-4b05-a8a4-565c7d91adf4",
        "cursor": {
          "ref": "7c07a7be-86c2-4c6a-8028-893766655683",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3914cb22-c2a1-4023-a51a-04f5f5b85643"
        },
        "item": {
          "id": "91958e4c-b2a1-4b05-a8a4-565c7d91adf4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f0265d62-4f45-49de-8657-04793db118f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82e218-ecee-426e-8d0f-6b529d6e431f",
        "cursor": {
          "ref": "02279654-9736-4cc4-a174-10c97dd13c2f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d0e7c1b-153f-4482-88ed-5bd1ad1a3cc8"
        },
        "item": {
          "id": "3e82e218-ecee-426e-8d0f-6b529d6e431f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "af03f37d-c2cc-4f6d-9a44-3ad683de1f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930aef92-1720-4603-af22-02993ec3601b",
        "cursor": {
          "ref": "db881644-e3a4-469b-be06-c9a945094831",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "81ba26be-4dcd-4083-b32b-840e58ff3fc0"
        },
        "item": {
          "id": "930aef92-1720-4603-af22-02993ec3601b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6eb7be55-f901-4181-8b94-7338d77df1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8997f9d-6f01-4272-9fb2-404e0226c3ff",
        "cursor": {
          "ref": "4548b1e5-1464-4c69-b1e8-5afc4fb7e84e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ff23a9b7-eba4-431d-98ce-e7f5623c7902"
        },
        "item": {
          "id": "c8997f9d-6f01-4272-9fb2-404e0226c3ff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7cb44f44-dd43-4f93-8c05-cbbfc76b382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c358d79-b238-4bbd-8184-f07ce8ad53ca",
        "cursor": {
          "ref": "43c5faae-e5ab-4e78-8924-a2026afd02f6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01dc9de8-cde8-422d-91b4-7622273442de"
        },
        "item": {
          "id": "3c358d79-b238-4bbd-8184-f07ce8ad53ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fd1799ec-7a8f-4a2b-aab5-51b90d74a9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7450d85-159b-4fa8-aef8-9b9806b0fe95",
        "cursor": {
          "ref": "fca4bdda-0562-4f3d-a358-f3994cc46a71",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "44606138-b6c6-405c-a23e-c9e4a84be328"
        },
        "item": {
          "id": "e7450d85-159b-4fa8-aef8-9b9806b0fe95",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "573153bf-754e-4967-87c1-cc7f3773bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76932b76-1b6d-4474-9ce6-7aa506aef597",
        "cursor": {
          "ref": "fd4cd2f1-eae6-48d0-952b-6a5f4f7f2db8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9426b1cb-7bcf-4eb3-8ef4-87810a245ed2"
        },
        "item": {
          "id": "76932b76-1b6d-4474-9ce6-7aa506aef597",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8cf9e299-0eed-43f1-a63e-9d5e8ccda055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706f480-f37c-4c8c-b929-c5d10dceeb07",
        "cursor": {
          "ref": "96d8a0c5-010b-4057-8f72-2b08f2639baf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "acf31b6f-61da-48b5-aec5-e09acae40237"
        },
        "item": {
          "id": "f706f480-f37c-4c8c-b929-c5d10dceeb07",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46cfd022-6a34-4e61-9882-dde9c0e50c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611c0752-49e6-4ed2-98b1-6e669f1c80ba",
        "cursor": {
          "ref": "ac5cbe8b-231a-42cc-a783-2ebe4d70672a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d52e8d5-71d4-4506-9423-ed151cd94755"
        },
        "item": {
          "id": "611c0752-49e6-4ed2-98b1-6e669f1c80ba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fd664684-d30f-4921-8bf4-0155cf1cad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931bc5a-6f6b-4685-b929-76f1a4b9345b",
        "cursor": {
          "ref": "e304678f-6fb1-4dce-94ac-493c41e133ac",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c788853c-12c7-43f5-b920-40c26df62637"
        },
        "item": {
          "id": "6931bc5a-6f6b-4685-b929-76f1a4b9345b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2908c0e8-2355-4917-a643-d45304a9a10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9689e872-3cb5-4c16-baf1-a5a64ce1edb4",
        "cursor": {
          "ref": "0b035617-cc57-4cbc-bcdc-cf79263b6609",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "14c5d3a8-deb3-4e1b-8f9d-ed56dfaee982"
        },
        "item": {
          "id": "9689e872-3cb5-4c16-baf1-a5a64ce1edb4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4e3dd60a-7065-4abf-826f-46de5eb8364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0363604-73b2-4872-9e9d-e065d53cb06b",
        "cursor": {
          "ref": "b3bff0b6-c648-456f-a37a-d55c7215ea18",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4a58f757-4096-47a5-b1ce-cb3925ffe5a2"
        },
        "item": {
          "id": "f0363604-73b2-4872-9e9d-e065d53cb06b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36ddb47a-9bde-4c5a-851c-44dc98febccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621796c0-c1f2-4fb8-bf24-f4fed9204c58",
        "cursor": {
          "ref": "5ee03780-0d7a-42a1-93ab-25394328e01d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6797f2e4-80a1-4f9f-acb8-2ff5c762c09b"
        },
        "item": {
          "id": "621796c0-c1f2-4fb8-bf24-f4fed9204c58",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7327e8ac-26da-4539-861e-82c61943ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb48ed53-7420-426f-9f74-bfbe92e896d6",
        "cursor": {
          "ref": "dac98435-1621-4a39-9417-ec9e06a88ee8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c27dd86f-acf4-4c34-966a-add378884aec"
        },
        "item": {
          "id": "cb48ed53-7420-426f-9f74-bfbe92e896d6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "55cac56f-49c6-4150-be13-5fa4853ddb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bab6940-9940-4f39-98bd-19d07b75a98c",
        "cursor": {
          "ref": "1005e397-152c-47a1-8111-9a040bdb3d6f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f7e70f22-402d-4758-a55d-aee4262fec1a"
        },
        "item": {
          "id": "9bab6940-9940-4f39-98bd-19d07b75a98c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d288e210-875f-4cdd-976a-aa5ff0c9038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cb09c4-1155-4b39-ba6e-0b2462f26508",
        "cursor": {
          "ref": "c4d42674-6ef1-4cb1-9e6c-e104dbe042bd",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5080eba4-4761-4c47-824e-1f4181dd60f3"
        },
        "item": {
          "id": "58cb09c4-1155-4b39-ba6e-0b2462f26508",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dfd47b89-f35c-48a4-b0fd-86015a971aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e9be38-a0ad-4580-a71d-3add3bcac1d1",
        "cursor": {
          "ref": "6c47880d-6c1f-4def-b906-ce65076878be",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "00526f95-ada1-496f-b750-44b68c0f8b4f"
        },
        "item": {
          "id": "10e9be38-a0ad-4580-a71d-3add3bcac1d1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "41a4a2fa-4a6a-4994-b4c7-6ac883111645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57935c90-fca8-40ad-9533-f4c388181483",
        "cursor": {
          "ref": "9f307e9e-3222-4631-a769-caf9f18542ff",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d440542e-a7bb-4a91-941e-0ec10aa7d8d4"
        },
        "item": {
          "id": "57935c90-fca8-40ad-9533-f4c388181483",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1dae77f7-cf77-4ee9-b57c-7713fda28f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bae3783-2ec5-427a-affb-68cdcb6ff5e4",
        "cursor": {
          "ref": "02ad1689-27cc-4467-aa01-c43be2b6e2ff",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1ead2068-7064-4f84-b4ba-e23bfed37e71"
        },
        "item": {
          "id": "6bae3783-2ec5-427a-affb-68cdcb6ff5e4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "98089702-9a4b-46f8-b706-3ced16962464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f710c4f9-6f76-4143-887a-7f0dee781538",
        "cursor": {
          "ref": "ed1f0bf7-91fa-4401-9aa1-b3dd7627bd8c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4d884fcf-3a82-4c3b-9aa9-0d996f56aef2"
        },
        "item": {
          "id": "f710c4f9-6f76-4143-887a-7f0dee781538",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "59043a16-57f6-409b-8643-cb5bcc9f6157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d64380c-cd4b-4ee0-ba94-ce0827acef3a",
        "cursor": {
          "ref": "ba4d76a4-d1e3-4c6e-b667-b7947e668aa6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f3daf11b-aed1-49ed-8462-e9008de7006c"
        },
        "item": {
          "id": "5d64380c-cd4b-4ee0-ba94-ce0827acef3a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93bd7a37-5b8d-4316-bce8-81bb3eaf1829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f18dd-6ba7-4655-a60e-193010920937",
        "cursor": {
          "ref": "cfe602a6-7334-4ea8-b8b2-f86346f80412",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0f3093e0-4f0a-4fe5-94dc-2bb81b5604d1"
        },
        "item": {
          "id": "623f18dd-6ba7-4655-a60e-193010920937",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6cccd20-1782-49e3-948c-461639e94c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb81b38-52db-4266-a1e7-5f526dfaba53",
        "cursor": {
          "ref": "367d6ffb-5787-4c4d-999a-2ec8e0ea97c3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d54fff8-62ce-41d6-87cc-e29004b086d7"
        },
        "item": {
          "id": "abb81b38-52db-4266-a1e7-5f526dfaba53",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d4269ca1-50a2-4a3b-aea7-f39e46a07ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e053f543-27f8-4da8-833f-65d197048f65",
        "cursor": {
          "ref": "98a308f3-7a36-4880-8557-8e880fa7c3ca",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c50a002e-1788-44fb-b5c6-88888ee8193f"
        },
        "item": {
          "id": "e053f543-27f8-4da8-833f-65d197048f65",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "311103e3-1494-4959-ba77-13eccafc3f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76825a50-0d93-49f2-8a3e-fa0c35fc9ab8",
        "cursor": {
          "ref": "26212419-4e61-4ada-8a47-aeaa5049050d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bcb3c03d-3349-44a9-af02-dd68c13f40d1"
        },
        "item": {
          "id": "76825a50-0d93-49f2-8a3e-fa0c35fc9ab8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b570cef9-0400-445b-805a-46ee8f3b8ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744f655a-ad07-434b-b8e5-53b968b0a3d2",
        "cursor": {
          "ref": "cd99f84c-6508-467f-ae2b-a10e62d7d4a4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c543bed9-f46c-4f7d-bb7c-0a3b07b7249b"
        },
        "item": {
          "id": "744f655a-ad07-434b-b8e5-53b968b0a3d2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c4a7854c-78bc-4cc2-af05-ad4c45f02534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233dc85d-9565-4498-a6de-b058373a3d40",
        "cursor": {
          "ref": "25e5d945-23c7-4cfe-98b8-73d0ff390a02",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b99496ed-5e5d-44bb-ba87-c4d9d299c580"
        },
        "item": {
          "id": "233dc85d-9565-4498-a6de-b058373a3d40",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "858c1210-993a-4341-950d-29a70f5f85d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fed73d-2876-408c-95a7-0b11a52cffa6",
        "cursor": {
          "ref": "68ee18ce-b4c3-4382-989a-295f5025926d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d5362fe4-8307-45ec-b04e-0934e9c283b1"
        },
        "item": {
          "id": "26fed73d-2876-408c-95a7-0b11a52cffa6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "99219d41-4d9e-470f-ab32-3cbc16e6a94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2217367-4cde-4f13-a2a8-0b3f2bdcd300",
        "cursor": {
          "ref": "ef3fdef6-da8f-461c-b5da-f3c8f3ec2514",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4f64580-c5db-4264-adc7-7f26cc11ad3b"
        },
        "item": {
          "id": "d2217367-4cde-4f13-a2a8-0b3f2bdcd300",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "056729cb-66f4-4d64-8d58-4775b254309e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ba7b3f-8f73-47f6-8ebb-5e6b50c58ecf",
        "cursor": {
          "ref": "74c1dbd4-150f-4442-bdac-806e2d3ca129",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "063cde05-c8ed-4945-bdd8-9d6cfd7f8df7"
        },
        "item": {
          "id": "a4ba7b3f-8f73-47f6-8ebb-5e6b50c58ecf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0328cee7-e2ea-483b-b878-627303808405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918e4157-370d-4ffa-8c57-2c23e2391e11",
        "cursor": {
          "ref": "39e2d321-f33c-472f-a04d-c7b4e4155782",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c31e8a40-e048-409e-9db6-da91a4fdb794"
        },
        "item": {
          "id": "918e4157-370d-4ffa-8c57-2c23e2391e11",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d675612e-f4b3-4997-9eba-edc83fa3dd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9682ca-0bb4-4c61-9858-cf8c55bd95c0",
        "cursor": {
          "ref": "68c11f02-426c-4381-8662-4f112b59823a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1dc4441b-ac49-45d7-99cf-272be1c09489"
        },
        "item": {
          "id": "2c9682ca-0bb4-4c61-9858-cf8c55bd95c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e10b4b89-8b9c-4143-9588-5e1a6a578316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ed3f56-9ff3-42b3-b864-891d01b3c96b",
        "cursor": {
          "ref": "bac14570-c68e-4d64-aa65-27b29a4ba289",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b0071ed-7100-400e-999c-f7496d97e6d1"
        },
        "item": {
          "id": "29ed3f56-9ff3-42b3-b864-891d01b3c96b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5eba99aa-a946-44a9-b993-6c3cf45603e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a002b9-09bf-4098-96e1-bacd8a018d91",
        "cursor": {
          "ref": "f917b4f0-35f0-4b18-aba1-0bd3c1c1f01d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dfcf95ff-7d3a-4917-82c0-1c81e19311b4"
        },
        "item": {
          "id": "72a002b9-09bf-4098-96e1-bacd8a018d91",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3066909c-4d6b-4f3a-abf3-76f4119b83b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41654147-0f7f-4a88-955d-0a73017b1ae5",
        "cursor": {
          "ref": "7422dbeb-5d8f-4cfe-8f27-d5c5b5ff4b57",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "af880d25-2430-4b10-8bf0-638d5d9f87a7"
        },
        "item": {
          "id": "41654147-0f7f-4a88-955d-0a73017b1ae5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a4652dbf-5193-42c0-b00f-ae939953f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437c4f9a-786c-446f-8810-15610e16bda8",
        "cursor": {
          "ref": "b13842cb-fa44-4859-8e1c-5c03cc44cb87",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0975f40-a9c3-4db3-b883-943c667e9179"
        },
        "item": {
          "id": "437c4f9a-786c-446f-8810-15610e16bda8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2e424b81-a8ba-4f03-ba6d-97b0f4c35281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e59b6-4c14-4f78-a413-2c103e19adf0",
        "cursor": {
          "ref": "eb4cbef2-7894-4109-b04d-641ffaa69e60",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "15bea7c5-fa35-416d-a1e1-79fe4fd45cfe"
        },
        "item": {
          "id": "c80e59b6-4c14-4f78-a413-2c103e19adf0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "676dfd3d-63eb-476e-94e4-9f23bfa874ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b85c9af-a227-4909-8811-2cba2298aac8",
        "cursor": {
          "ref": "b4aa207d-44f0-4865-a96e-c04f6e54d91c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c04c6348-788a-4e52-ae69-db57d2127dc8"
        },
        "item": {
          "id": "2b85c9af-a227-4909-8811-2cba2298aac8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "33fc33a3-8797-4320-aab0-253342c8bdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67533a7-a4ba-4ff5-9881-3a0da2262828",
        "cursor": {
          "ref": "92b311f7-ea1d-4964-9d03-0f8054429686",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "34138fd5-7596-4654-85d4-bfca808281c7"
        },
        "item": {
          "id": "f67533a7-a4ba-4ff5-9881-3a0da2262828",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "59147fe5-e6e8-456a-b9ba-b6181576210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d70ee-ac2b-4c81-8d73-19720b4cc3dc",
        "cursor": {
          "ref": "96a78829-acdd-49a4-949d-5f727542264b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "59bb73c5-b190-46e3-8048-40d9f6f0236c"
        },
        "item": {
          "id": "ca3d70ee-ac2b-4c81-8d73-19720b4cc3dc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b5de5485-1028-4df7-99e0-2256629bbce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9bd3e9-16ef-4126-a271-b3194fe71f26",
        "cursor": {
          "ref": "70a045b1-514a-420f-971f-a508618c1716",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6e5484d-5667-47c7-9992-e4f4929ced02"
        },
        "item": {
          "id": "4b9bd3e9-16ef-4126-a271-b3194fe71f26",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9ccbf080-5224-42f7-8019-e583443861b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059a87f-fedf-4d58-8a98-a1756e34f4f2",
        "cursor": {
          "ref": "edd1b71a-61e4-4acc-96c3-d1bb4115596f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "81d3f2c6-5c4f-47cd-8b49-10bda5f1305b"
        },
        "item": {
          "id": "3059a87f-fedf-4d58-8a98-a1756e34f4f2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "20ffb0e9-3860-4b93-b9b2-3c8b714b4702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce65745-e37d-4148-a3c3-fea91a19f38c",
        "cursor": {
          "ref": "6a4ec4f8-d0aa-4609-bff9-faed436d1340",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "63812700-970c-49aa-b45e-b6fd93fc9f6a"
        },
        "item": {
          "id": "6ce65745-e37d-4148-a3c3-fea91a19f38c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e3435946-eb90-473e-a41f-fcc896fc28d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a75129-1f45-4521-8381-77ad05955617",
        "cursor": {
          "ref": "51226f8d-74c5-4cbe-8c64-1fca3dcbf833",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "82fd64fd-f202-45ef-8d9d-59977e2ebc4d"
        },
        "item": {
          "id": "c8a75129-1f45-4521-8381-77ad05955617",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1f307cf7-4d56-495e-bf9b-a4120ff17645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b2d9c-5d97-4062-9b17-ab5f0f07819b",
        "cursor": {
          "ref": "c7987eeb-f681-4a91-9658-3bcc93bb93b9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8115a472-2ab8-44d5-a910-b90d6e37c74e"
        },
        "item": {
          "id": "d25b2d9c-5d97-4062-9b17-ab5f0f07819b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9b1784a8-15c1-44f9-9d5e-a814c2decf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fae4ec-7a3f-474a-80e8-b190a02f086f",
        "cursor": {
          "ref": "6e8ebfaf-901f-4c1e-8b71-a7853c471e9b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d2494e45-433f-409e-9b2d-0e4188507485"
        },
        "item": {
          "id": "38fae4ec-7a3f-474a-80e8-b190a02f086f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "abeca123-cf80-464e-9d55-0af41e750166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d26492-a8c8-4e91-b4bf-5ec666d95be1",
        "cursor": {
          "ref": "f1028b77-a458-4786-8db9-01a3729601e5",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2330358a-cff9-473c-bb90-42979d60d6af"
        },
        "item": {
          "id": "91d26492-a8c8-4e91-b4bf-5ec666d95be1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4a63629d-da7e-4240-8a2c-8438629cf378",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2108602-dded-45ec-8822-f43db8926120",
        "cursor": {
          "ref": "614b70f7-8783-45d8-906b-6a7d7eb4efaf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b7ac2a66-c14c-4e6e-b669-8f14147cd1b7"
        },
        "item": {
          "id": "e2108602-dded-45ec-8822-f43db8926120",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c1e37082-79e7-4533-a100-5fb1cee5005b",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4f9539-daea-4129-b377-2c3f57993bf6",
        "cursor": {
          "ref": "10e7b0c4-8bff-47b8-9d6f-4f1a079a6a2a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4776ceb1-06d3-4227-b837-85ef24359d6f"
        },
        "item": {
          "id": "df4f9539-daea-4129-b377-2c3f57993bf6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "34dd18b5-0b5d-4376-af2d-ee65bbb1bf48",
          "status": "OK",
          "code": 200,
          "responseTime": 2878,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f8b218-d4d8-46e9-9c14-bc690bbc6ad3",
        "cursor": {
          "ref": "14b2fd66-e4d6-425a-b655-1b829452b239",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "430e49a3-e5b2-4ec4-b6cd-31658bab522c"
        },
        "item": {
          "id": "e1f8b218-d4d8-46e9-9c14-bc690bbc6ad3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "924642a5-1e35-4550-bd3c-2fb55c6acf20",
          "status": "OK",
          "code": 200,
          "responseTime": 3205,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b615d543-d97f-44d6-972b-c2c3f40c64a2",
        "cursor": {
          "ref": "b4aff25e-efbc-4e21-90dc-51d514097c72",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4beb9264-1b6c-4216-8f6a-98d4532f93a8"
        },
        "item": {
          "id": "b615d543-d97f-44d6-972b-c2c3f40c64a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77be83e9-11d4-4bd2-84d3-6f7c93365176",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b615d543-d97f-44d6-972b-c2c3f40c64a2",
        "cursor": {
          "ref": "b4aff25e-efbc-4e21-90dc-51d514097c72",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4beb9264-1b6c-4216-8f6a-98d4532f93a8"
        },
        "item": {
          "id": "b615d543-d97f-44d6-972b-c2c3f40c64a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77be83e9-11d4-4bd2-84d3-6f7c93365176",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b574d64f-53a1-4735-a2ac-7c90f8336841",
        "cursor": {
          "ref": "455bea1a-b0cb-438a-bfb1-6f3e17d2b8bd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bc7a8c59-2f05-47fc-a22f-a869644066c0"
        },
        "item": {
          "id": "b574d64f-53a1-4735-a2ac-7c90f8336841",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c9bdc2f-322a-4242-b8f0-74ce51c7543f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15ffcbe-c9f2-4c49-bd9f-339f6ea57f3b",
        "cursor": {
          "ref": "f626d11f-71c7-4c74-b36c-3590736df665",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "31bde2ee-de85-4f88-8060-af3a16e8ab3c"
        },
        "item": {
          "id": "e15ffcbe-c9f2-4c49-bd9f-339f6ea57f3b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8d90a18-0187-4955-8d0a-77bdec22026b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}