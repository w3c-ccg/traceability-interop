{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ebf26102-4857-4e4d-8dff-b5365c256132",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d158c293-be6a-4600-8197-adf6d51c081a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26677bf7-ebbc-48ad-8949-29946f858d37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29df39ce-cf5a-441a-8b85-fa74f2150aa9"
                }
              }
            ]
          },
          {
            "id": "02b07b14-53e3-4864-b7be-0bb9dc1c8faa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55b008b8-ce1b-4146-b7c3-6695f495e341",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "506d5f2e-992a-495b-885c-d12c12c42dd2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c253467e-2132-41bb-b2e4-a0586934c3bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "098c3efd-cffb-48f4-b10c-bde8e8592632",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8616e144-568b-479d-af4a-5f318f6b0cf6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf794562-08f9-404d-8371-9b478f585ef8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "856dde6b-8296-49da-8c5c-20b3dcc81911"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a9835b7-bce9-47ed-bf60-d983b5b34a48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcfeab55-92a1-467a-bf13-b61d2f22f14d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e592a6e6-ceed-4ca6-bd3d-f16edf63369a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a01a0a46-4e8e-4c58-8f78-18571eb7366f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c07aed85-66b6-4be4-89b0-798bfb805b3a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "095e9fc3-f87f-4e4d-a8bd-4f14e02b9f51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ab145ef-165f-47a5-812c-67fbbd647d9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e21f8ce-1519-49ea-b4f4-2eddbe9eb933"
            }
          }
        ]
      },
      {
        "id": "5ef79bc5-0624-4dd0-8ecf-5fc41dabeb3a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3e47164f-5502-4558-923a-2a996490bb9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "531c24a2-289a-4198-839c-af5b4a87b751",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fc2139f-cade-4c5a-9b8f-b3e26b786019",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f10b3-86cc-44c7-b232-531d2f2d4d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c9ae0a6-1289-4607-9d38-df8969cc70c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a9a79-1b97-461f-82af-18d0e302c33a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6106d157-2758-4cf9-bdc2-9efaa5a28fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0516437d-e473-48e5-a7a7-3c0ba0217c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887f0a52-fd0f-4696-a862-3f95188d150b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59563473-c88a-4c41-baab-97dcdbdb206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8feff1a2-4f81-48cb-9ed1-95ff4733f61e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccf8d391-7803-4e3f-a57e-68577eed36ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3c4a8b2-96ab-44b5-b759-3c0a5cc089e4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50612f24-3c18-4fd4-9066-8e0c745fcb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6f8039a-de31-4d29-80e0-3de10aa4fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b64b33-0673-4e2b-8524-4748b0654375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a4d1e-3944-4468-946f-af14cd22440e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a1427fc-c525-47de-b3d5-c5bcbc7960a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a299ad4a-2cba-4d40-b590-e7eaa8abdce9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aff1348-c47a-459f-9efb-7f8f5c17f872",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2c2ff509-0e68-4333-b38d-8f0e904279a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd58acc6-ef4d-4923-b4db-f3660e91afa1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "093998be-c759-4133-a941-bc7fa78f4e25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f06fb3ef-6ab5-4e18-a54b-262a3a9a2ac2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97d50194-8362-48d6-99e8-9d3f7af47a08"
            }
          }
        ]
      },
      {
        "id": "72337b3b-58f5-4c83-b483-ecfa4d61d4fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9154c7ca-f987-4d0e-b5e5-30ff4a3ed595",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cda47a9-331a-4c0a-a3df-401766e10ea3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8ab3126d-cabf-4bed-9d38-ab596e0505fa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f543e362-e43b-4118-ac4a-54f2d9e4469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3d15b6-5e1f-42c1-bfa5-358097bcdccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b177ba6-3b12-480a-9120-b112e1c8609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d52081c-3a61-4a25-b3e6-bee0a9dcaa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de21ab81-474a-4c0f-bbc2-25a308dd9e74",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0022451-6791-40e3-977f-570550522989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa97d25-0d81-4d02-b5ac-54d9a9787a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ac2ebb-eada-4d86-9a7c-a016d38ef0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9cb776a-c3a9-4668-b6a2-b0213ea2605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c06a59-6d6f-4f83-a278-e9ccef504c10",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43d00c9-4ce8-4763-8934-eca7fa8237bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94763758-7f64-43f0-ae14-0930c5cacaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a2e6e-ef71-429f-bc1a-bf06cfdcf622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0218b2-8fe0-42df-b20a-c8ae18985706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d9c80e-f0c3-4dbb-b3c1-045eb8b400f2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b522615-ad1f-41ca-a62c-c846485057cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92e8383-b459-4e40-a177-fa76acd9da0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9645ea4-041d-4bf6-a41e-43d9f09fa36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ca594d1-0cfd-413a-bd80-8db7a690073f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f5ed45-97fd-4a75-975b-ba5a4a019c40",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b023a8-806f-440b-be9e-71be53c02d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f43770-f7f4-4ce0-9ca7-edecf78a7443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8190fb13-3d32-437e-be70-47e2cfcbe794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61383ed3-4282-4699-93b3-e1b5082c7c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142a0e4e-c41c-4ff9-9a23-18a6ef50b76c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2a407-fd1a-4c54-88b8-fa9754ba01a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e375f4-7789-4fbc-bf70-93fd69a2df3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536e1ccc-2935-49c3-87cd-6a4d873f95ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca61f6a1-e82a-46d2-af95-7a3bf0efc8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b052d3fd-4ae9-4c83-bfed-cc268e37b7c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6124b5-df48-44f6-be65-670924c2a72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e64c15-1444-481e-87ba-7b31719b3304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1712fc-00b7-48e4-ab1b-d8fec98b793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "264638fe-230f-41ca-b6f8-371ba1bdd8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0fed0-6a7b-411b-942a-1188bbf021a5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65833bf5-6a43-4fbc-a0af-5a8d023aca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4024af1b-5a61-406b-9edb-13194feb576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c163b12-9dda-4633-930f-c4f1038bec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b183a80-02b1-4548-a184-c0bac7a256bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632d4e27-6218-4d3f-bb27-f8b184fc9987",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7a4b42-01d9-4294-b440-e4ab7015cd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc242922-c74b-402c-8fc3-21648e5abdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c9aec-7d1b-424b-8cd4-47a4ac26f151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24985a06-1986-4943-a870-2f465e85e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d4d6c4-b8cd-4d39-a771-9f4d187e9677",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c806348-93c9-4a2e-9e72-752ae2190a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4ce27a-efbc-4c31-8fc3-3c854421e455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0bb285-f6c0-4d2b-b816-81fcde7b5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9abccce-e430-4e88-880e-33b192e600fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd347ad-ec8d-4da4-827d-7eb05fb9e445",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2f18fb-4687-4828-b2b6-5eb1b62cef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd3f9c-7a89-4121-a87a-9526760e0944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef6416-4a89-4f62-9cf3-3c4459dd9e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b43a0196-da74-4fa7-879e-cd5d4a866182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0ff7be-e469-4021-8eb5-b989caa77d70",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121f11ea-5155-4ef6-a2f6-eb205ffc0d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70458d20-bc5b-408e-953c-12ccabcd1353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732cbeed-17f8-4c08-b813-cb267dc66a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2bd132b-cd4e-411f-8bef-467192766d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbdc83d-4979-4e67-ada8-11c7a553f2d3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9ffe9-7a51-4a26-97fc-c113798e18f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f47fffd-9a61-42fb-a7ef-e5595f96d2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8cc2c3-bd83-45c3-9460-a141197df2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22fd847f-9e05-47c8-84b6-dcbc32a6d59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd0c073-8b27-43db-845a-6a0b3e971dac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3a24a2-5b3a-4b1b-92d2-55b57bf4e9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b92697-8d94-48aa-97c5-ad0f9fa86146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902fdf22-0d79-44cb-a56b-12b39af1a4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb7a4c3-5139-4b3b-a45a-dd66385c9779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144d9e05-4faa-4a93-afa7-e3c389227db1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fc8fdf-9606-47e5-9e72-10e771542ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c625358e-9f9b-45b3-90fd-2916c581e899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bfb1f1-8cc6-4b00-a89e-37aeca71daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecba6055-d60a-412f-9878-7834f9fe35ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0060d83c-8916-4bff-805e-c6fce42b8cbf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd9369-60ff-45d3-b72a-9c8a17d3805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ebfb1b-ed23-4cb6-adbd-0ca75bef0a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9425580c-6b1c-4177-b8f8-55168c5df817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aef473f-5f70-41da-a0c2-fd086def5894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c5f5d-5e8c-4e5f-8010-dd009d65fd9c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d940430-6745-4af9-9628-dcca819a76d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2218b29e-35b2-4568-8529-ba532963a242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a466e8f0-3af8-4eb1-af43-8007bce38697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ece72e-246b-4c86-99f6-c924a513e5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf23b80-1a24-41a0-a140-e8be33823752",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3403b2-8b5f-4814-85c1-f858384503f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d5e055-80ec-4b72-b7e5-aa03aed19207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c348b02-2fba-4bb7-8de6-9d6ab62ade57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "728cecd5-377f-4261-a7da-1651caac5ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2511fe7b-03c6-4657-aa81-3a3ab47775b9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b714e4-b077-4791-ad07-700e5ff764e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399bc903-e903-4456-b796-2ed22cf6b475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c83b8-9a9a-4cd5-b06f-0960776829a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ce9d60-f6ed-41eb-a025-33c853063e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1eced-08da-4131-b829-580d6358a5af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983db48a-14b0-4c12-90bb-a13e25086e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dee246f-555e-4c02-831e-0927007796fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fe9b18-4330-4ff1-a170-14b715a7b9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9753cb6-bae2-4ec5-8119-88ec8e509ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373f225-1886-4963-8342-2165304cd86c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e140da-bc60-4d07-ac41-b7d4052286ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a82aeb-3c84-4a0b-b823-c6283660230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183273d-f7cd-4596-b151-d39d74e625e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a246b674-2b34-45e6-9603-a86f23971563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48786400-e117-42cc-8862-3617f48dc00d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863d7989-a4fd-40c7-aaf1-eb5a1dd86376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b725fdb-cc5c-45af-baa5-e6575f9d5503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2845454a-a87a-41d7-b549-4f79b993bf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9fc7fc-399f-45ba-b554-c54447bd8a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e256f6-fddc-4680-aca7-e2e9d97536c4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e65219-aa6a-483b-aa0d-e1ed54454035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cf0123-fd61-4536-a458-99f9630be0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db70ecf-488b-4400-8bdd-66065a2e63cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c1dbaf-1cb5-472d-9630-763335edabd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4310b20d-4337-40fd-a100-7cb62d4753eb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9ff285-d3d1-4a3d-b967-d9a647917323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa7e185-d51e-413b-b01c-df3122cac42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b7123b-80dc-4a6f-9edf-5732fc0272f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "741fe626-236f-461c-a63b-ef10ac731840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec678596-ec8a-4d5a-9c29-bc838ab6396b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365b13a6-e9a7-4923-b9dc-34aff9fa02c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66909c6e-f431-4e53-b934-0db489ece4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0abcdb-5a26-48a9-9582-397f6c4bf96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a504d672-4ba1-434a-8419-b045cbfcc92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad4e8c-5332-400d-b0c3-8b880e96f55f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aca8f2-e34b-4938-8e15-1450b97a6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4098bb62-be61-4d7d-82c6-6b8f35ed245d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa9d697-1089-42ce-bd9e-9f41071d9c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30469a08-a6d5-4a4d-81e2-ed00e9fd37a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f1ea86-29f6-46fe-a05a-efa69fbeeea7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c8ef42-13e5-4d37-a9ff-3c7a8637639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207f6a21-7f16-4b5a-ad78-ea7877a2660c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eff7ed5-0d4a-47f1-b162-0c2e065e6192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed4bea5-a1d0-4370-9705-09049cacedfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e035548-a438-43e9-a6bc-6fa689540734",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ad25a9-0319-4b8a-90b6-4be104c8d713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f949f051-c07d-44ea-b724-d332a63c709a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f2db92-1f1b-4178-89ea-49bf803f0c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40effa85-f1a2-42f3-821e-9b8ab00506a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416038ca-f4b5-4558-87c4-f5b9a6e4d192",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0982c57-7d22-4762-9ebe-b1cd3fe6b5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bfe13c-1ffe-4754-9e0f-7b14a0b5a107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abed588-5100-47f8-a4d4-8e047c5e3f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50a04de-c2e5-4511-8b41-43f203c9bc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93885554-202c-45f8-8d70-682c1297f61a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1b9be9-4b83-4794-8fef-03c3756e1da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8d7e7d-9b1d-4c63-a3f0-75f62e5e8b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f060c699-9f76-4fb4-aa5d-a2967aefd9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7a93c5-2e51-4c5c-a468-2cfcb9bd2f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e0f57f-739f-4572-939f-35cacc9a43ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf24262-48b0-4a7c-a606-aa76a242592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f14c27-559b-487d-be9b-0b162d09f1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea879571-db2d-4e5a-a502-66232eed26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "308d9b7c-3b7a-47e6-8762-404e23d3b463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7e3db1-2a0c-43ca-b2d5-3003d246018f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96381b95-8682-46fc-9c75-4255c4a02e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3628db2d-2a3a-44c6-9c1d-e5de6e029aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af27360b-5852-48c8-8ed7-187ba8a422a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93886f1c-f872-4c8e-9966-00acd25e868a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50891c4f-2f89-458d-9f2b-69d5bb17411c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fe644-c5ce-460f-8567-b8ec4c19b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c27eb55-e9f1-4ac3-88c8-9c4460ca998e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f369ea-daf8-4216-8451-30d8748ede8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1142d4e1-6b25-43c6-875f-68e440bcf95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b70a7d-55bb-412c-949f-63be512ebf3a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6c250e-8e5e-49b4-86c0-3f53c21756f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd88b83-6f86-4c62-a32e-a16ebfe7285f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d6d7a-cea9-45e9-9c2e-368dfad8c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90edd3ab-cc5c-4a11-bb67-9700e9891205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e9011-624a-448c-a7d9-06ddf4a4326d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9056fadf-e909-4f4d-839a-978428e3abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b545a074-d91e-452c-b187-d22fbcb4da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fbecd5-2c53-43d7-8342-262576750598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6c327917-ce0c-4e49-a378-f10002dab6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51007c84-79a8-4526-bc4f-10262eb70762",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cc74e0-c282-424a-9902-dd45bea9b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f5fce39-996f-4f1e-9bb0-2536eded839d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb7e3a6-0bd5-4c6d-a02c-c68ef06b84f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9796efe6-4201-44ef-95c4-8c5af1e1c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54970106-b1f6-40cb-9e2b-80ea3f4eb2da",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a14c32-4e5d-4381-9526-044a075de0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b7e686-726d-4239-acfc-5c50251bfebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cd0bbf-05e6-4de5-840d-a3654873f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7c7bf3-9bd0-44bf-b073-8fcbd77382f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e82d992-a5f2-49f6-b353-4e207adbd2ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd74efe-428d-4128-b9e1-3ec8ebdff839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c11fe-d331-40d5-bc6c-d7a11d810564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d41e97-ce76-43a4-85ef-72bcafdc20f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb91245b-a2c5-4c32-9b75-15d7280e5b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed72673-ba24-4f9c-8400-e9c96b6063a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3225717-520d-4a50-800a-8421a7208d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bb625c-d2a9-4a57-9480-6a791e92161a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3949e822-7aae-4d8f-b19f-73ce0924e77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3adac574-d28f-44e0-aad4-c3cdfb2b3e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee259dc1-6653-4819-802e-92c2c5e1f1d3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906eec95-d6d0-4725-97e9-1130dd79ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad819cf-4300-417a-affd-66f94b0f1c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47db3c55-565b-4adc-a739-37afe4713248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45b0f43-335b-4e2e-b9de-cfd3de0bc6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab2c231-7162-44cc-acf5-bfc68369308a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bb7a40-3f69-4bdf-b141-85b1bc48c89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611d91b0-9740-4280-bddc-e710a5f7a1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac2b401-d301-4afe-a1a6-81380a2d3fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b198994-49d9-4a2e-b6f6-b5b51a9eb228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c346ffb-007b-48e5-9ebe-92ad27f1a85d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bc4dc4-f335-4291-9e85-6c4ea1ccdbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ccff73-d53d-4d7d-baa5-314296014b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f4d237-c4d1-44bb-92dc-fcadaec235f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08c95828-9029-4ac6-81c8-bf50c29e72f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c6800e-d6e3-46e0-b8ac-983eca1f0095",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d0f67c-054c-4ff3-a8b3-4c1e22038549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e361ca55-4cc3-4e01-b10a-7ffce6b8c0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab37dd8-343c-48c5-8937-71c4be5045a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "69433f12-1025-4d83-ab07-81ce1e8b1319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b0ad3-ee2e-4ebd-bf75-3b2b617a1710",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca7aeb-d034-41e4-b51a-a05a0c3c6242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f996656-4eda-4978-8dd2-526270059497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6276923-f0ce-4392-9d68-785e18085976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4643f263-df5a-4c1d-b979-6b4a40a40214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b823e1-1fff-4826-a2e6-846c7c972934",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a910d-0e9f-4f64-81f8-c186a86bf022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7909f27c-e0d5-4890-a22d-020a92779bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfa4188-a4b3-4083-b10b-0b9122205157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3947e6fc-e74d-47a9-a1d8-3dbe0997a766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058072bc-0205-48ed-ba9e-0e48db5a7d39",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09ee269-680d-4d93-a904-6357a92f002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423c3d5c-207c-4982-9733-f1258802f169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a994e1-7e12-4408-9055-59d1f4b9d93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "030c9c5e-d11b-4a99-8355-696dc208e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5305ce-5924-4a88-81d2-a4de5798c2dc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a6564a-5470-49cf-8c5f-10d9b9b99342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a440019-b415-4406-83fd-ebb0a0cacda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd11b1-46ed-4d81-8687-665e4d17ce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7d6c6b-9e39-43ba-9010-15899e145c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842190de-8009-430a-bf76-3d2f59c29cfe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2faa7d6-be15-43e3-9926-3ed01a80aa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd533d6b-fc0f-4162-8ca4-e46b569c16e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f53949f-0be5-463a-bfae-7080612a1748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9220b51f-bdfd-4af1-8abb-0cc78793017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72c323e-4681-4039-bc16-8cf7c15496c9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc603c6-3a47-4547-b5d3-505c7cab6e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90fe337-ebc1-4343-8c3e-dc33a8faa668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b91ff3-30f9-499e-a739-87e2b959c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "842f08e5-36bf-4595-8c97-717f6939cfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e09ab9-492e-42e5-a9da-7f4fc1d1c705",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a211a9-e3eb-4dd5-84c5-ba95a76ddca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328e4887-6973-4aae-a8d4-7cec213ca8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c886c4b3-b1bf-4e75-9d51-c822d98b99f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96a0ba79-8f50-4568-9aea-9ba0f5459a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1f96fd-8d9d-4f1f-990b-19ca91881b6f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac88d3-1562-48f6-a7b0-366dbce6b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f341674-ed13-4014-b997-9eb8b6448c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285e8ccb-5206-421d-88c1-e93069fb2368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4a5546-f489-4e7d-b09f-4991b5df5a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d3b0d8-7bf3-4d1a-ac24-2c319b451c18",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d16ad9-a25f-4f0d-97b6-93ef47657351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f9da58-9648-4403-8ae5-79b8b50048d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ea463-ea6e-49b5-a710-6709ce429958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "841d2545-af76-4520-9412-5b252f87f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5221ba-d81f-448a-8cc5-27def5e069ad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31a4a30-4e62-4053-b8ee-e407e606c772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad2c29e-387b-4f74-8e85-1394d0c56f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4400e1f5-8351-4a8f-96bb-4310a6d27a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf04f6c-55fb-4ce1-8a0d-030637b3e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf03705-7142-46e3-9ef5-7e507aa18671",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351859e2-cbd8-4dd6-a48b-d4f536d6693f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcab2c4-4522-4781-86ec-e53e4e5effcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72ca9c9-5047-4669-946b-11ccbcf95a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0f77b3-4440-433f-9e79-a792650e5767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5471415a-989a-4948-af6f-615cf0825c5f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f94d42f-38b3-44ce-8221-bfac94e8115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66173484-5c21-47e3-abe4-09a0a38c2625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe8742b-05c6-4012-950f-c406635e513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf2f270-ee95-4593-be89-958a10df0364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc645de-7fd3-4a4d-bf6f-dffb7c1b25e9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174ede49-927f-4d09-b760-396607e8815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807dae7a-d37c-4c5d-bd79-3f082a040ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2e0e28-be45-4a57-a7e9-a3b8152189a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "568341a3-5df9-49bf-bebd-5667df0f8a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ed6a83-55a5-4e22-90e3-c41e550dd457",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebfc0b2-35fe-4f7b-be50-5cdc9106bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3548cf-8295-4d0f-9a0b-d99982fc1fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993c9a38-16aa-441d-9f01-3d6242fcf6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f2e3b4-493c-4f52-82ca-f5df931ade3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ad36b-e961-4473-8fdf-b5df3d31a0a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa44ed33-2f96-49e1-808b-f77ce2b63a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ed676a-f283-4cc8-9d6e-0b24958ead65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa69cb5d-4d93-498b-a31b-149324847b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4636a210-48ed-4ee7-b6a5-1c6d90d8e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf240d49-b052-47ca-8d40-8a9063010248",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd67595-bc8a-4c83-a1d1-44220b5bf89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7734d8-0a78-46f6-aa91-9c5a39814590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3b5c82-db73-47b9-99fb-2b612e09b04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "993f55f9-52a4-4fd2-b789-07b2a87776f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e61080-3d94-4b4f-ab81-4a6301bd881e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c678b89a-5920-4154-97d3-211c75c7a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4838b32a-9c97-4124-ab9b-328c81019d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f17bef-49ed-466e-89dd-963b4ba946af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0957ad3b-072e-44af-a5e5-03c0e8acbd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfda1b5e-1f83-4f20-8272-2e5a1ffeb964",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399646c6-415a-48af-a0ed-e9b2a17b3e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541c5695-2745-45bb-8314-da572ac3adad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8dff55-0be3-4438-82b6-db76c6538aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3feab265-8510-47fd-89b8-ab0657a634bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd694e51-6ee8-47c8-b75d-214f43eab743",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fedf4d0-1f4c-48aa-bcf9-b99815cf7d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f9f3ac-0fa8-4da5-8718-c27d320922db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9af1b1-6293-4dcf-9926-d93accf6ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f92165e-66ef-4975-86d8-75ec334c40a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57c946c-e091-449b-89e4-485cc514c00e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be81cf-064f-447f-b96b-b20cea9c5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd77fbf-63f1-4bfa-9468-81df45ed0059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c9affe-e1b9-4cfa-807a-bc6ddae36e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8577b5de-4c0f-4610-8f24-4d572063f7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb6f20d-846b-4f43-958b-528af6b3b8f3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e316ab5-220e-4a20-8738-62a566ae221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee85e805-a915-4b59-a6df-b95bc2f37afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe685e-0444-43b0-8edb-b27296517faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0838e7-2dcb-4a07-bdfc-00016962a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee37252-67cf-4f87-90dc-b8770a6f9aef",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467a88a5-0df4-4492-a1b9-a5a11ebb39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901b4675-e7a5-49e9-8b9c-9c3632d81018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed958fdb-4d27-40bd-a15b-8eaaeb6f0f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a376b9a-ff2e-4534-9e55-1b99efba92d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df07e2a-0075-4600-8f2c-9e3e416f1085",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e86623a-a10e-4a9a-be69-86855675b651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28df840-de71-4549-8793-826fa0266bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f58fc4-fc1d-4337-b5b3-86ba7e644af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "690e5c61-3936-4f96-837d-5d791274653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bbe58a-748a-4689-b300-9d28a91f6a2d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaa0e3f-f1b1-4e04-a782-cf2fe11f99a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb54a59-5268-4f2f-b0cd-79864d7a9c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853be3db-a59c-49d0-aa42-64b04fd0f934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae793cec-d9be-4ebf-9dc9-a19d45503832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91803612-2ca2-4cfb-984e-d43d9b572b56",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bef0a82-cefb-4219-91f9-14a88bbe152b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab77ebc-0408-49f8-bab3-dc3cf942a180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19afa480-5f27-4b12-bf05-661e33febec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8c8779-2d09-4832-9e59-73e9fa0bd987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32488d04-3f9f-494e-bd82-3927dcac5653",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe7325-fe9e-49dc-a76d-60746a9ac8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db58d23-e657-49d5-9c00-3bf0416f3248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66cd28a-1dcf-407e-a64f-da851da4938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc99acc1-6b64-40e7-a451-df9ea05b4f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af527751-2485-452a-813c-1d7ae0ae3957",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51a257e-20c7-4b37-ba9f-e4f47acd5242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9849a2d-a235-410a-8b3e-6e6c9cdf3782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c220fc2-5642-4177-9a19-ea36068db4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba332143-e6c4-4213-baf4-1247f6f2bb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28fb740-c491-4691-8f3f-b89275a36b64",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b69189-f794-4209-bed2-3574baad613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e2f881-c1bf-43bd-b1a1-87d1e692d6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66b2ad3-12fa-406a-9bc3-d46d543c4cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43156e30-52c5-4514-9e65-2bbd73fe7ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390767f9-37c0-48a7-9085-04d40512fa6e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f92836d-8b7f-467d-b317-c96fc0d64bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337ee2e-2932-4272-a1d4-ce9ba31a6a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cb57ec-f071-42b7-b943-32a2d85074e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8fb554-5573-4d3c-a5af-b085a15d8813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3e072-30ff-4c77-aa81-094b55462047",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc5d52-23cc-4b21-88fc-2e58208063e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192e4f7d-2863-4e26-808e-d59e055c1c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac7a29d-743e-4c01-9e65-282b1ea5c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50843162-293a-4fd5-9003-9989b41c4258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faff6b8-3e53-4c60-9b08-514bf911302a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6032cb71-17a4-40b3-8ead-e21d777bc72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b643d5de-7954-4600-9fcb-a2fac0ee1bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0bffea-005f-4587-bc4e-7cb1a55c235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bff67e2f-b374-4706-9669-4e33da7b7732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35661198-71d6-464a-aa42-4eff4c0224dc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b3ea69-cd47-46ef-9755-59929510ec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84e4689-a4ea-45bc-a253-1f6f6c47f60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d28070-27f5-4902-ae8b-81e190d03ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c536359e-3a09-46e2-b5d1-a087129d94d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3bb298-f9df-4e90-83cf-8e64890272ba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff1163-de29-48a5-9f69-bd80ea35eaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd576f70-f710-4754-8e79-5561aec137d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb38518b-91d0-41df-8e40-0f9eb190f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e8ec2f-debc-471b-8181-10930865b45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfc86f-59b3-4c44-863f-a84c602fcd60",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00467019-ef1c-4225-a36b-c590629ddc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b83869e-bff2-49ee-9cc2-1bd429648a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859cbd10-9311-4b63-a2d5-7d022eca55e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ba49e5-cb0a-4504-bfae-1fc1fe4188bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea2c6a-88e8-495f-94d4-013c01f40bf6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b2619-1ce6-4e4f-90c3-067e972573f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd56aad-1783-4b28-b225-ec2099e26067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e0cc09-b3d0-475a-9542-07566f761317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f48254-c3df-48ff-b1bd-5b50fbfad7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e010440-1030-4f6b-99fb-ae269520fb8e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b247f535-e404-4827-a3c3-c24929689732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5fe5ce-e470-421b-9c70-22725b048e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e2b268-8daa-4515-aed2-1b20606e122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f86642f6-cd16-431d-8eac-613c7dd4e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e7b5c4-aa7c-4504-8b81-b1b89a233118",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4bb3f3-dbb9-4d8b-9795-03294273b397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4daf230c-3243-4777-9060-94b4857e9555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a14b1aa-427b-4340-a052-67530192ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c943de99-8aa0-41d5-ba21-c83084d4907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3157d4-7023-4076-914c-66fa49270a57",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf54c381-3321-4551-b3ef-00af4d0a58dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05586df-34a8-4c62-a03b-09da9855ade9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0213f9a3-17ea-43e7-b82d-77dc1e4e4e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bca965-3b1d-4c47-b729-8b4ffea91791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71e4f94-cddf-4816-8a8e-c6aa131105fa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ad3c5-9570-4a89-9af0-468ad75af768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3a2370-d33f-479a-9665-4985848144a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cefd50-04be-449c-94f1-c0becfe5d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f2153b-7528-4453-a1db-a309510c3124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419a1e9e-7ee3-436d-a103-ca6f9a772b2b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36d1d2f-41f9-430e-9fe3-96fc4a3c9a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a887f6f-b363-41b5-9409-b497faecdd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c95327-47ff-4697-921b-bc9ffc383248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea92652-83b5-415f-8a47-da92e1bc2778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eb4bb3-7492-4ddf-bbbe-2e5b37f00866",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ed7b1b-3ae3-485d-bf0c-450af225a21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064a6843-f29a-4607-b67f-0952839c2c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d52952-45ab-490d-8ea1-5e900b02e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67511f8b-9dc8-4830-a077-9822c1144d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66a5417-9055-4b1d-95d5-940a42da7f8c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0783362-c7af-4401-979d-46e77babf6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2de67d3-f330-465e-9418-17769a48d6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c405ad-8ebe-4d74-8463-fce13f9cf465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b3547b-9177-47ba-957d-2fc81b3f1bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d7580-df80-4c45-863c-97140b00e618",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f2627-5dd7-4d58-994f-a54c91dbe5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b1a655-9edc-4bad-983b-8aebf81478a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33677412-0218-4f95-ada0-db3e61eeecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "436ae192-43b8-4bbf-8eaa-a32d002c9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0025bc-4f81-471b-85e8-a70775bba006",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560a6ca5-603a-4bc7-9f24-d6a32bfc5153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c971bab-ea13-4fc9-83b7-840752a4ca3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98a887e-897d-447b-82bc-7306fbe8fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8c3e8f-9420-44b7-952b-d6c8c0f1ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898d440a-d4af-45a6-8686-b7d2ec26464a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43549f90-7fd3-4bfa-947a-6aec8939a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce523f40-1ac1-4a5b-b1e3-1d12e2f76a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daad2fa8-b5ab-4fe8-97e8-d1f4b81b0714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be5588af-1624-460d-8517-ee1560ce38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ae4b2f-93f2-4fce-8678-75166d742088",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15a0999-8030-48ed-8b40-da58c8ded3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb164044-d2cc-44fa-b634-0b3a177b1b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9740dd46-614c-439d-9a0d-66f1135ad582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbe1ea8-619d-43ea-bb27-c5a50306dede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeb1caf-fceb-493c-ad93-b0f44628c452",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3df755-e3a4-46d7-8df6-c94405c6cbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc553c23-a95a-4d4e-aeb8-1e030201eb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0440df4c-432a-417a-9694-6301d0b78326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "baeeb415-20b7-467e-9fd2-36514cc2ef82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998cc13b-3a9d-4664-be84-e676d57d5f77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbabd9c-4bf7-43ff-bf22-b5b3cfbdb9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bff44e-5b64-4ce6-ac7d-c1a1ccf334b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4d8a1-3ebf-4163-8f46-d0e1f4f58a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d384156-8ba8-4f3a-9895-f12f512d16bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db05dbe-6611-4184-80ed-c7066f0b92ea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17125a0b-1d22-4ba6-8dd7-79ff5d6f06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9481ba3-9792-4d1f-9d03-a3a24537d7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d8d8e6-0115-4194-bf20-e5fe6912f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c5a482-f895-43b0-9a75-b8fa861791ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28201144-c471-48bf-92fb-2865ac749a7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a902fa6-72f2-419b-b4c9-24cfe2607300",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c7d8e-e2e0-40b4-b91e-424c27ab2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4f0018d-222d-46c3-8089-e23e0ea82d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772380be-5a4a-48e7-860c-863b295eff1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54f0fa10-5636-4f88-9338-b4e3d713947f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "488c4a46-2eec-4334-81ef-79a3588b7a5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "839e012a-4f3c-438f-9df8-02a1a8918702"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8eba10-6e32-449f-ac5a-4dc6a391cf32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd102e3d-6c60-43e5-a248-b7b18d22b396"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c834de9-2e50-4fc1-ae97-48bd6712cd52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c93e375-816f-4aed-96bc-1fd80df92316"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4bbb853-3a1a-4a68-9a50-e23d7b9e0ad8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ebe9e01-9f9f-421e-aafe-922b389e7303"
                }
              }
            ]
          },
          {
            "id": "cd1f08d6-ef9e-4c1f-8c06-d6660080b11a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc8dcc30-cb05-4447-af60-bdb944423f8d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a5c646aa-b0bc-4658-afdb-2a0bf7a16512",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094c6369-d5d4-4b95-be62-100d22bda59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f9e8f6eb-8935-4ed5-b609-c269dd4c25df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b85a534-2e13-4e26-83fa-6c87fa8bdaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8744ce-8858-410b-aea4-4b286006639c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae9f06ad-bf3b-45b7-99d4-fd770458bc61",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6b6d152-85ce-40d9-9bc9-6d82a0cc8fca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a09400e0-ba6e-40cc-92f8-dbd231c5d016"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99431754-1c3a-4202-b62d-56aa1ebb64e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c51417f-f308-4d46-abb7-bc5032696816"
                    }
                  }
                ]
              },
              {
                "id": "4979e8c1-93d2-4bc0-b1ea-17ac62453b1f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4210b51f-5e4b-4c84-a663-6e4ad72aa698",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0819808b-0022-4878-bea6-8fbc0318b157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d64cf2ee-170c-4aff-8eec-bc39ff801dee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31972873-b5f2-4681-affd-341db13c6996"
                    }
                  }
                ]
              },
              {
                "id": "c629e6f6-1734-4a2f-877e-42899920474f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b41d3a-0870-44a2-8542-e3cc2bbb2129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7021985f-9eae-4a5b-847d-c8bdd7e18a77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c691299e-baf0-4e2c-a9c4-aea1cf11e45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b64936da-a41e-4295-88a2-9d237d228309"
                    }
                  }
                ]
              },
              {
                "id": "e631bf5c-44de-4422-9d03-751c7cb1d5f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b072ce9-8ec3-43ed-a5bd-523ee9976396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1db17d4-e549-4180-9231-75c880585bab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de94fd9a-a8d2-4070-ab74-8f2019b1b393",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9cdbdf98-dace-4cb4-a860-89b77e02184a"
                    }
                  }
                ]
              },
              {
                "id": "42267ec6-f6ac-450f-9487-adc0292fe121",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57517341-4766-497a-8e83-a8407f3e916a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb831c02-8239-45ea-8732-3208f1178c86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a3a02ae-e9f7-4eb0-8ca5-d8ccb2fa6121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28b31e5e-3d65-4554-b94f-665eaa6b63e2"
                    }
                  }
                ]
              },
              {
                "id": "4778d15f-cdf3-4638-8718-128684817518",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e3ea2d-6c06-42da-830c-36546da65d10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2e4caef-88ed-4ee0-a536-2d28d8d144e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b738a114-f891-42de-9b3f-79be1f2700cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3cd8a86-be80-426a-9597-77406bd274cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d855434-e9e5-4170-8c1d-ec69d2eab9e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d28003c-5caa-443f-8fdf-00255fb308aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4464b14c-e01b-4752-b70b-f710faa814b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36c36b53-3806-46b8-b040-4f5f85507bb8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80d662fc-fbe4-4bba-858d-d1fe9af9ab51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "24ba914f-1d7e-4823-b9c9-1c9e25036bed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eca04cc4-3e90-47f6-955f-7255b3501171",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "116331cc-c718-4f3b-bf08-7c98cc5f7967"
            }
          }
        ]
      },
      {
        "id": "9d211502-13bf-403c-9750-f52764dddcce",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "08a2becc-a065-4056-9bbe-3879bb96dac5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66d00b89-40f6-4c08-af2c-723b3e4f909f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64c74199-117a-40b8-920f-87162889d232",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a4d161-1464-4122-a4c1-b7f42daafe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b1561f-f297-4889-a7cf-b1b85b046829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8693d3f5-66aa-416b-aaf7-c3eb7df03970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe695c8-ff82-45e0-8831-f7137042bfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b0b0c0-44c8-47df-8ea6-30bf9b182006",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8effcfd-00db-4eac-9112-e64a41548d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb9e32-b2e7-4284-a0e1-1a1b020bf26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f614179-7b21-408e-837f-27fe4e1ba386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50114653-048a-479c-820d-6981a48a5380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1504c3-05f8-4f64-b7b5-09470e9b557c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6b874f-d955-4cc2-ba50-ca6953284db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c2c55d-0280-43a5-a61d-ba7bb6b0b8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695060e5-ab1f-40f3-bbee-ed58ec44f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f12097-2e28-433a-aa5d-a07625f083e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4074b2-b3a8-4f3b-9c94-88a59371b57e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59496289-53dd-4389-8ad7-418c1bc1a0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae9ade2-f0c0-478b-83f7-99f0700ee7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b78dcfc-0140-458d-a10b-ba97d9a682dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4faa0fc-87fd-44dd-bc00-115a2570c731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d423b31-915a-4251-a287-b6759a6a54e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8f5cd7-81b9-4697-bfee-9658afe0d7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fddcbd-5787-44c3-9e04-ced6ec437295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d5f9b-30c8-4383-8aea-3b8f4e0e62ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3680bbbe-d414-4094-82e8-a48f9105260e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8ba3b9-c1b2-4de4-9080-aba47308894f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de94a1c4-fe74-4010-b314-902146ea2862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ca9b2-87cf-4023-ba76-0ba88c67fbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e01f41-be03-4f6a-a4cd-c58b9fad88b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7482753-b2e7-4e24-bcd1-57bc8bc3c108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851314d4-8dc8-40fe-91ca-894191d3cd4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2cc84f-bac3-4789-ac02-15ecdda4f3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a4b6b5-10de-46e2-b14f-77614398c4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf93ce28-d42a-47bb-a9e9-f7593a61e3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebff068-e648-459b-bc46-a25c7971c01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1654c30a-0e7c-49f7-8b46-4f9b9136cf7b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d3357-5ffb-4262-80cd-687e44c4576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cba86db-4838-4fc3-8ef8-cfe8aa65ff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd03642-3a6b-4822-a2e4-230df18b4774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "271597bd-f500-4633-96c4-834b74630bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a587898c-803d-4496-b525-d1fc6fab18c0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8cee2-6089-4a32-b923-1790202e0a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddb24b2-2ab6-4dca-b899-d2914541c7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d24c7ac-b678-4866-8a76-aefbdb01b6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68a1dffa-2179-4d38-9511-b137033b1ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a759b5-0eb2-4d54-a615-2130bec18384",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959a8a7b-a5c2-42b5-83bb-922f38ac1cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcf9b57-7c1b-4446-a4a6-ed69894eaca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fa4ab1-3531-4e56-ba5b-52b270ab236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085f7cea-7403-488d-a42e-d72cb3faad34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc9073-d96f-4341-bb9b-01e649e6d95a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db96b704-81f8-4e7d-abec-6b1c5ec30b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272eaeba-686f-4cb3-87cc-679b965c6702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd3b00-3f4a-4ac8-a771-2526782c95b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "924cf28e-2076-4803-aad8-a0031868b9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7049a-c127-4430-9ae0-875626330a4b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e04d595-fa78-4f30-942d-0ddb4dc73d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377692b0-2e68-4d14-9f59-6fff088a827f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112212e-4259-41c8-b753-32a9548b72f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adf9cdca-b967-426c-80ee-806d46abaf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3cf824-6ce1-49ef-99b5-0ecb3777f1fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782c6f80-defe-43c3-a8f0-ad8c16c7beff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afe630a-1c36-4287-93de-7acefa9ae91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8874f54b-1fc5-4e36-be39-05b7cce7cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4219bf-0192-48be-b60e-009069f9f6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c41738c-13d0-4311-a4d9-8ba98ded54bd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4406af-ca55-4d87-912e-38562974dd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea61c75f-8472-481e-be40-ea473681b91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2a037b-8c3a-454b-9f3c-25ee2ca2e0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61aa5c1-c5bc-4608-9774-d4f23144262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4534e1c-f75e-4920-85f4-51a72a6b7b33",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103bfe4c-b86a-41c4-8a13-47432c799468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24883a9c-27f1-4558-9b07-d0b349ffeeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5d5686-b83f-4a0e-a6f7-a5b095e9361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d88a6a3-3f40-4a12-9d09-ab23a2b51842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6b84e4-0ce0-4d94-8bfb-536f185e2170",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f326618d-7ead-4f02-b657-90cf04d7c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9648f5-94ee-407c-b667-d23d99abd33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da992e20-67bd-4662-ba01-20a6e82263c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f69e4e9-4efc-4df4-a809-d0d060648588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f9a3e-9139-4193-907f-59f1e6e5f690",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b305d2f2-c011-4d8e-9deb-6936aa9b3d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7077821e-1d64-4576-934f-16c13f088484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92374635-c6a6-492b-a1b7-dd898eeda128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44e1396-8929-4243-ab49-b12de70caf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc03bb7-f4de-4616-842e-55ffeff8ecdc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb26afe-d62a-494d-91f9-4bbb1c9b6b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef06828-86ab-4807-a5f8-8f08283a5a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800a408f-bd67-432c-8183-e95021fa436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56707ba7-c3f5-4923-bc0e-e4c056117b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c731560-d4f8-4250-ae9a-71e2d94c201d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f20fc-81a4-4e4c-a2d6-0fa011d48fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83210374-47ca-4647-b89c-70953e3bd6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1362873b-6410-411b-b9a3-f272c38a461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78c80af8-3a49-488e-9245-1fdb2ae451b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704f77d0-488e-468d-b61c-eafd90324e3f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c521fd-493f-4a66-87a3-0503871d9181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0844e414-4fbb-460e-927a-4debd5a825d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87606dc6-dc74-4383-8775-2718809b906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43d5e2e-5b9b-43d6-b795-d454553450af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de3e438-4e70-4a91-8d2e-3daa5b1bb355",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b607702-ff64-4d44-8c1d-e6885522ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4f49d5-5518-49d4-906f-39c914eccbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c8c152-72a4-4a3f-9fe2-29b3cc393a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec72f40-947b-4aa4-aee5-587365f1d21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f22260-67d1-48be-a694-a0adc33b71c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23121f7-40e6-4c90-adea-d6bff00dc845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec541d9-75f1-466c-a180-a6b2681f0955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b833752-05e2-4e19-bbe6-7e8efb403c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bbf0b2-d84c-4e97-b159-d7fbab3a44c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e730a85-f706-4eec-9792-54bb52bd155d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d47f5f0-8152-47ea-95b0-b152cc42c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22597921-2bec-4240-bed7-027dc163e868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487835f7-36ae-4bcd-8414-0e1eb543319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee3d1c2-f1d1-41be-b636-46043a34cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f765fba2-3e4b-41d5-98a4-86b0a6a39091",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3078bb3-95c5-4fcc-acc6-706a736339e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39294025-aa0e-4ac8-bbd3-a06fab9fdb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb0890-f788-490f-8735-81d39ac56ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e182c39c-359f-4d28-9e64-eb7ef2682f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc64d8-b6c2-431b-84ac-6506351f8042",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c1fc9-697a-4cb1-86e3-44adc447bbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2e40be-e4a6-475e-b2aa-538770787d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d94b707-eeab-4848-a512-52184a8a51f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50ab255-0b95-45bc-b7d9-a2941bbf9311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c676486f-00ae-40eb-9452-64e4d78ffbf5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ecff76-d3e1-4aa3-ac3c-838e1554ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4e8198-b517-4c78-aae5-93ea124a99fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79018b-af6d-4116-8ecc-d859823317a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d1e499-9535-43dc-b801-a9291175eb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df1bb2e-2646-46a4-9bb3-6befbd81f3bb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05c1dac-10c6-40af-acbc-eec155d2e3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce5edaa-7082-41cb-97e5-c224cf5ae43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bdbc79-93cf-4875-91c8-27f10956fb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38278366-d586-4728-a9ea-6d93d666ef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8847196a-9556-45ae-b2ec-caada8965f7c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cb1746-72da-4c90-a0fe-deb3f7b647ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5558e4ad-44a0-4a83-aa0c-dc406308d301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d513c9b5-5449-491c-a56a-0eadb5daa9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ac0937-f7e4-46c4-bc72-ab67a0eb367c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693f7503-bbbe-41c7-9652-4695785dc635",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e77e9ef-b87d-4363-bfd6-aa1af1b2cd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f421267-6612-47fd-8177-9c932d6b44ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceccb3e-950c-4316-95a2-c1f79b301481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fc6863-08bb-4c02-a281-c83cc7828c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd9802-6249-49e5-a6e3-2236e00b6876",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d1eb31-60f4-46fd-9514-41f1a4d542bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1def1e13-2954-4af9-a5d1-bfadcf0bc4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a61af36-5630-4519-8d46-cd830677114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ec3b21-4b21-4668-8881-7d135808a153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7331d3-7fe8-4f16-8426-20eb55d811d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dff2936-3ab3-4525-ba0b-3fcd30868ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf39fb0-8d9d-4a6d-bacd-b5ee201ae99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098c440d-1953-4f14-9fe8-9c5be8a4c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "192a75b3-311d-486b-9d92-60f03eb7e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db905c68-72c3-4f26-9376-a24c8059de61",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdd043f-d461-4d02-8d42-5c8d75d70c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f9e38d-83ef-461a-854f-5f4a7b6ee04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6ddd46-8b63-44a5-8d13-3a9fb6bbe528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67ae128-1587-4bd8-82f2-afbd3ebd540d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba802c58-1b13-4c1d-8979-f04f121f040b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "826282cf-8d34-4ff5-b8f1-840e75c21a0d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d741594e-76ae-4a52-9df3-621f03220d6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bb916c63-ed01-4a1d-bf0c-5567e0df5e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431671e-fc8f-4c85-8d4a-b6047d691525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9ce0f9d-472d-4ee0-9e9e-ba7c0c5f0247"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac902bb-abae-4ca7-85c7-4232e4d6f67b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef88050c-27d2-4232-adc7-6f60094fd8df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f30a880-dfec-48d1-b64d-936e3d76a783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19340d9b-ebb2-40bd-8eca-116e1d242e37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e02d01fa-50e3-4e1c-a313-7115d6e2d472",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4f97bae-2b75-45f2-8361-af3e586b1aa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa8d9296-5ff0-48e0-85fa-0afe8c6cd6f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "082c2ef6-6ccc-4422-950a-4e5ee079a9b7"
            }
          }
        ]
      },
      {
        "id": "da4dc563-ef3f-4e99-96bd-38732c3980c0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9c8b96f7-07cb-447e-bd83-297b4223c779",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1378dae9-99fb-4412-adad-3c3f001fa81c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "370b64f3-213d-4ad4-b8df-56fae0b0bc35",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455e500c-2318-4624-9143-b55ac973932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd398c17-b3c6-4e0f-8caa-74a901fb90b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a7a3bf-5d73-4793-80c5-5451f6198745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c2e55e-5c2a-49b7-9fba-3a17f43c4324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d324b5d8-72c6-4a13-aea7-3a39f7738169",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fea02d7-fde3-4366-a47f-d0a227a53cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfa1693-8fcb-4944-8376-e0c93691ff6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0f47f-5bc9-453f-84eb-c53b5138482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9366ed-4df5-4241-84f7-726006460c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ee11e-6fa5-4330-9a03-1535fca2db23",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ba25c-c186-482c-97ec-e2daa27df234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3376b8bb-7bd2-47df-ab06-350e9f3dbd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9996d46-4e86-49b7-b73e-6f4ece1da961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919f9495-240d-4dfc-8c34-f6ffe1b32ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38037397-84e3-46e1-b725-665ba01e1454",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1feff1-c0b3-4630-a4af-2f16494f6a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d80411-7feb-4ea1-a7b7-716d6752254c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5c5d90-9af0-4ebe-9e4b-921f540d58c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0850683-da6c-4a5c-a559-1ca8539ee129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36778247-940a-43b2-b39a-8a98dccd1643",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f4f72-d3a6-46c5-8233-8cc87c89a411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d86d2fb-5b19-4026-b8f6-dd10532bdd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa803f-eeaf-4075-8833-5e9d1cfea2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "871b26d8-d073-4220-a225-2ebe16bf5bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2814244-f6b6-4d40-97a1-9cda9255f91b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c89c92a-11bb-4a60-884f-0f675c8113d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3660c56-3048-43ed-97b0-545559c3ec2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d78230-12d8-4bf2-bf83-aa8655066355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce11c44a-730b-4efc-81ba-8cb80b33db48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694cf1a-0d76-481a-a01f-5e8da644fef2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5907efae-d547-4f40-84d7-07012be441ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4a1073-186d-43c4-b406-ac17bafa4770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9465adf-1dce-451e-b6c7-4e224d77abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92d2d12-aced-4326-a91e-3ccb874dc016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565533f2-efeb-4fc9-b11e-66633674ff7c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360b90b-b8b9-4aa1-bf45-abc81d2b0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41307a71-0700-4a48-b2cc-fb0d711c252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aaf31e-d3c7-4dd5-87e0-d6462150e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a37d0c7-8732-40be-8d08-1c78c4ffba60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c1a448-2f64-4e93-904a-b821b51c5852",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71e48b5-c8f7-462c-8e74-9bdd065b22ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13e0de3-b6db-42a2-acb9-fa531d83f237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2387bc-d080-4559-974d-7e0ce8dc67bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f8a962-0b91-498d-a996-64976eb70dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4673f0-582d-4aed-9578-e3e92f0cdb34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a6f6bc-55f5-42d0-b3d6-a98edd0991f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1292c0-8d9f-49a1-8add-dbfb334ae176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a420593d-c34a-4270-8f0d-9920fc4fa1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0985dd-c950-43ae-807e-957c3049e4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31af338e-a632-4199-9b7c-caaf6210b0be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14ad30-30dc-419a-8a9d-3a8be02e913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cf834c-ed7f-45a7-8cdc-da098bebbbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a37728a-8836-45f2-86b2-83d37e15634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d541da47-7351-4960-8fd1-7e6a0a551e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade1d717-e6c9-4dab-99d0-7478c38468bb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d296230d-53b5-4c94-81e2-20b5b7ded66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413d3118-ea4e-47e1-ac5b-b79dc1309e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a313961a-3254-4894-9ff5-2b5c69374c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "935b064b-714b-429c-94fb-ea0f949616ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99551bc4-1ece-42a8-bce3-4856ad66b37f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265f8711-2333-4da4-ae8e-8a2e648b25de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed08a05-08be-467c-9004-daf8b3721ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a211545-d37b-4d59-ac92-b1b05845716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc108c2f-6dee-4bd2-8099-9dd7e9910ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06249437-3291-4c98-8efd-2eb6ab3aa3b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223f5b0d-3465-4d41-8461-2a5886d84912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1b95e9-b7fd-41ec-8bab-31e61f2cd5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df51c917-c2bf-4838-8b33-36e0ce26f27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4587ea-170e-43f5-9e82-ba9fa40de927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f289bd7-8c58-4285-be8e-7998bc5a0720",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3324b5b-23d8-4b12-b6b4-c2426e53fdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c8bb41-fa05-43b7-ad21-0f4a0e43c167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c48bcee-0cbc-469a-be5c-37bbf4e5f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac1d451-b1bf-4071-8f12-1e3102681485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b095db69-21ad-4177-9e94-d41eb9936151",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c45a4b-bed1-4ed8-8371-b679166df5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efc45ef-3c7f-4769-a571-30f531873f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31f0e28-26fc-4ef1-9eb2-71e4f09947b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d5a1bc-9a95-4f00-bba2-d58bd723270b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44657599-4eb4-442f-be0e-408552e1a201",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add836d3-71f3-4a93-bf82-596cddc18dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340dfea0-b8e8-4c58-8311-d8278a0ef3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ae702c-eca7-4763-878c-13fdd944bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc07e5a-5b08-4cd2-a134-024b9ce6a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f2b94-baca-4b3a-9570-3f6415e82d74",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3e465f-04ef-4d62-ad6c-24581ee5a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41472911-e398-4798-a3d4-9941e5c0983c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8713e-0b8f-4fc2-a626-9c87ab6cb781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fac74c-2f9c-4e51-a18f-de90ac676b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5676048-4e57-47ec-9720-33b8a097dd3d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85689738-0459-4590-b428-03c5dfc21f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853e5f82-44e1-4a16-8b61-0d39ca3331c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3c8c4c-471b-4c53-94c5-9afe7dd3e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac340e7-89bf-405b-9b2d-8501e02e5332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa9d4bd-6190-4ad5-bd6f-1bd0f28833ed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1eea01-5a83-4492-8b47-1c1bf645c673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860e8afb-4c93-4d51-a55b-bbe60711f258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feef143e-710e-468e-b1ef-dc57d9fba75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af947ad-fa16-4d1c-87f4-72e98c45316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d71087-340c-4ae8-bb67-7da9628e23b6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9551d44-4326-4300-b1b8-2b3462a834be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a956bbd4-91c6-4d20-8e6b-cde693584d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4be6c5a-646b-4810-b28f-6f1e15ab49a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a275d33b-aa0f-4ab9-a07c-990f7143200f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdafcce-5dd0-4121-a8aa-677f3fcf4513",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ca6140-a4eb-4a4d-b04b-5466f7a6c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cb6d2d-80fd-43d7-a170-8e1bddf0ac87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16000d0-331c-4558-8dca-23667870dd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63cd8a1d-9e2e-4565-ae89-b6b03809507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b14a98-5b3f-4ee5-ba66-f000ec899c16",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea409cef-3b68-4c96-9ef8-3fc6e1a64916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94002f2-4c61-4baa-b1ae-34d74d71814f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f255272f-4709-4b84-bdaf-4a9468310bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45f891d-2abe-4d31-ad3d-0e50f1f796da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cb952b-8199-448a-92cf-f663e506fdd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ff6d7e-4ce4-43ca-a752-df02d18f947a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd2c10c-e47a-45f6-bc05-f9ecfff0ef68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36b177-dbc4-48dc-80a7-6d71eb7ca4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d425a1-816b-450a-966e-db5e9858d11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dafed9a-d316-4441-ab25-acf98d96ac43",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06e574f-6d18-4054-8851-03eb150af923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041c2d40-3fea-4286-9a5c-63bf5f878f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ace5ca-c830-435d-b351-8e5b8bdbf683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab03fe21-9b32-4daf-8d6a-901e37f74cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d313c415-cbd7-4cdb-8dda-19d8f7d95b56",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e72a9e7-7a6a-4200-a725-b9aeef0a30bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa69807-3bab-439d-a2ab-e0e1085bd716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb09f85a-8b1a-4934-a1df-a2fba1e4ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d369a29f-c13b-48f9-8e01-32a3dd68c2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6da863-ef76-4ec9-abaf-2620d4d7cb35",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781fb2de-9d93-4ba5-9cbc-66ec288b91e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6092bc2-61a4-44d9-9e94-0fce074fa77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c80aaaa-6e22-41ac-a79a-c8cb2cd19fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "accf4ed5-f8aa-4a29-b801-7801dc8b887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b21119b-e047-4f42-bfee-9740f8967a51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27bd5e0-fa80-4afe-b563-229c2c0483a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eeb2b7-bcbe-460f-9bb7-e0589b98b6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a49e0a-71fc-492e-95e8-61090d9475a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "610c548a-ec74-4526-bccf-41206ea41b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8845a3-42e2-4653-9852-7a34cb61d4cc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93325625-2f35-4b28-b496-a007e69cf18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b314a339-cb4c-43a9-8757-094afdfeca65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050614e0-1a99-4fd9-bcd0-9dfcb775a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25657888-987a-4038-a25b-78edf7e34c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931371e5-e2d5-471f-bd97-9af2744dc05e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ef399-004f-43ad-b331-e3d8a7e58a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a06e277-6e4c-459c-9351-3cc68465fa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfa5120-971a-4026-ac34-fb58bdefb303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9885126e-5819-4531-8f32-5760bda56baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea0e199-05f8-4422-bb51-f5473379ed86",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01ce87b-1d70-4286-8d97-15e8ad987156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfd9085-4d06-4079-9c3e-cb4e271c33ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd03f9-99a1-4db1-9218-990006f07016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99930b28-9f2a-405e-a15e-4e1e1dc0347a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5734334-b1f5-4471-a163-05839aa64c0f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db2fa18-2ab0-4c70-a68b-daeba32c1570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c0d91-0db5-48a8-b276-fe9c1c25713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7f2d65-5b35-4bc9-a49b-1ed5b14f0c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c5185f-fbf7-4512-b5a9-377b926e3af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934787bb-58fd-49a8-8b2d-a0608c1b0659",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa75d3d-2590-4ae4-99be-a779d39f8b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d04f32-c9e9-4ab2-a01a-0240516ae1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc72bf9-449c-4837-917b-cfb020e0dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9c1037-3b31-48b3-867e-95fd3f0594b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de94b5-7e3f-4d52-a247-9ec2a5d4f579",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aad002c-5761-49de-9e1b-f3614e371525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849fe04c-e4b5-463f-acc7-4d65a038f90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe9b5da-a5d3-4225-baf0-3d1ac7675bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e09bdf6-64a4-4649-9472-50fb90ac59a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741692de-180c-42b7-ae41-cc649028652a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f12d2fc-56b3-406e-a9e8-9e8f6efdc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0afce37-1c3d-41f9-84d9-1723bb53c116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b8fdf9-bdc4-4b7d-a504-fa11dcbc26ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a49d9080-92cc-45c8-85a5-aac7d272b56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9d7af1-0996-4b2c-8d56-5b22c5bfed4f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94be43b0-7276-4452-9709-2554f70802bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af143f34-c905-4494-ba61-b3239926e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a584558-bead-4de7-813d-313617f91e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56646d8a-32b6-4413-b566-5f992ddfbdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb423ef-f1fa-4ddc-b4c9-595e005f83bf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25025596-d2b7-4883-b517-536f26d83783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358fbd1c-177a-485e-a6ce-eeb4ca7949af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7414a51b-5a90-4cb4-a2f4-c668cc397de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f8bff6-b9dd-43f6-9e44-ef5b26a4eb32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6bccbba-7fd0-4553-8ca8-e7325321eef3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6dc98b6-32d6-4000-be5c-7a7a0b5c9a86",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6095b87a-14c6-4fc4-9349-0bb8b086652a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d823caaa-77c5-4c6d-9021-fb6075df7165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ed26d-b257-4be2-92e1-9bfa1bd7ed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37be2a31-a1b4-41c7-9df2-55d90d1a9304"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f92fb86-d634-47bd-ac59-f6a7024177e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e182f868-847c-4751-b66d-605115d3205e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7034d44c-739e-415b-9a7a-b157f7139000",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f6f4b1-df81-4529-8d83-7d73d3b0b8a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb0d4c98-ef54-4ea0-b969-4772dbc20570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ab345c4-fd6b-43b9-8e7b-57a6e900df66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "424cf5d8-2616-4acb-802f-ee6f77556fab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56606fff-7786-4435-a742-6b2342f668d2"
            }
          }
        ]
      },
      {
        "id": "8c51811c-4a2f-4738-bd30-85e9082d800c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d9becc97-b39b-41f7-8f74-ba3978d9a601",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97d2e5b5-b680-429c-b655-359a05d337ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c2127e5-a871-4c18-9c20-b8f631820012",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc293202-2ba6-46a4-b2fa-162132af8df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a16d70-3f4c-4619-8cd2-fb186449f8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd9264-2677-482b-adbf-671c7e9a1ad6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a961a-04ee-4f35-805c-f0a7a7a15172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d637ff5-62ca-46ce-88c8-ffc78bf159d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0a3244-7360-47b8-88b0-27b4724a1132",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d312a6ce-3f17-4e17-83a0-e358e57d19fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5eb25c-d4b0-41b1-a84f-e77517b86444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a647f0-c306-4e7f-a598-c1f2a2eb7b05",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e23c38-6a64-4261-807c-cba9952badea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed94bb3-6847-4829-b4fa-74e6d8ad8d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8fab4c-3fac-4434-9c08-d18ab34a96ed",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd4969-3707-4cae-8829-5fb68803f1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d8542f-f1f9-49da-a27c-700b9b3c09b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027f7656-0918-42b2-8c38-0efa4175e456",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4691b890-0c57-4c09-a12a-3d77b44c334a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12910c74-9bd1-4edd-ad04-c864e728f0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105aab2-16f0-4c72-b79a-7de4cdb90956",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a133ee3-6032-4991-88db-31552fc55fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39db1af8-05a2-43a5-94a8-80c9fc60afb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c519aa0b-31cf-4d98-b177-fb277cf59298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbde53bb-c171-43c1-88ac-7aedf86cb8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206f0d29-938e-4421-bbd9-4125625fa952",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b731d5-e9b9-4cdb-94b4-503f3db8e07a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0978c3e-9ea7-4d4e-b94d-dbb05f159b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44017897-97a6-4ed5-ac9f-1663257c4212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8514398-b594-48fa-9682-6e89b19f66fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd346b-3a37-4e77-8adf-7012256090c7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c36abc-e520-47ab-8110-b627f726bc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0e14a1-5ebb-4a16-b583-471f6b99a8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c833e-ca9c-430f-a67d-b41ae986e025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9220fe1f-af42-4112-971d-49575df6e9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6b3ff8-dbee-47ef-ae6a-1884116df746",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b45504-eb59-4ec7-92c2-0fb6b5e12c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9496ba68-426a-4a84-83ed-f20370c90e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e350d-8b3b-49bc-8f78-2c42bf37420b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef5dbac-dd0d-4b28-957d-957b199d8de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697b9105-aeb9-4602-a7f8-30c976a3c584",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb28451-a3a9-4b1e-ba71-450f70598327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007a442c-4f62-4864-b681-5a3a7d29d7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b18f82-b8f9-43c3-8956-c5229d6b3284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ff6918-2bc2-4406-82e7-067c2afadd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16233d1-7ad8-474f-94ca-6dca771747f8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ce81f9-a48a-4513-93e1-e7c3aae27d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8041c56b-59c6-461e-9898-73eb96695cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24edf50e-c32d-4e7b-9088-35ff57447f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7dcdf-b800-4ad6-b8a3-147d074d0e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71b5905-d862-4d7c-a67e-26ce51bb4dcd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f9a2c7-38eb-438b-a9c3-955a9af11cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc976c59-8b50-4fff-9f71-47fd729ce54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d88469-711a-4184-a153-64718653218c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5dbf9a-2fc7-46da-9862-8ea2cd899474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d692c61-41b1-4894-bc83-50cb6032f635",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a7160c-c802-486b-813a-93b151a59c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7701fe-0240-46fb-be98-a6113f9d8d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2225d3e-152a-41cc-be40-84ec13e2af63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad83e4d6-b4c1-4fd5-83e0-7fd100e452bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb26911-8457-4a18-b817-ec4f59dd4285",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8b1fcf-c7f4-4a0a-b953-280a8f72a661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25a4caf-ed73-4d59-af23-0bbc79b0cc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a5eee-06f9-47fc-a0c8-14199e4b3c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9771e790-1189-489e-a8ce-bacfe5330938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb1659-c334-4cca-af24-1b1f676653eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c06f217-02c2-4044-864c-25534eec715e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858f1aea-b828-47bb-9be5-50a118d094d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1140a9a8-1330-4405-853d-f7dea11652f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945fe24b-b410-4aaa-8f8c-b7b5b99519ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cba704-fe2a-4452-863f-b2638e7e4760",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8efca5-8759-48f9-bbc9-b9d93f063e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7356149d-241c-4179-b3a6-0d580d6f69bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3510a5-9b35-4f46-b7e3-a99b165b6e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5841ea76-c71f-450d-91ba-5cdc46988f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590bfd07-bab5-4685-bade-a890e3e06949",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a23de47-0c3d-4b76-829d-a5f774e7ce2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f19ceb-f2fd-436d-9519-acba14a2fdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7f757d-eae5-4b41-a65a-7aef9841fd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bfe3bd-ea5d-4096-a7c8-e3a39151f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebeb0ee-3bf3-4c23-940b-872d6e0708aa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35835ceb-51b3-4a81-bfb2-00877eabc44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03272b81-6137-432f-b7ae-7099476ecba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a945407-767d-48ed-962a-84e256c766f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f96cd3-0e9d-4da3-9fdd-59af96e80243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a538a933-4594-4213-9995-16227a1157d8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b253285-cf61-41a3-8715-328d82bdd927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccb56a2-f84b-472f-a9ea-6a1b715adea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dedee6-b5b0-466b-8821-74b1c8c6a9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78ef3a6-8272-4f21-b2be-6dcfc5b5e7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdadf6a-04a5-4a04-9ef9-81cea5802d2d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72907dda-38f0-41dd-90ca-c8feeba7ce69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be8a4e4-9f52-44bd-a3d1-ca007bf0c722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e707e873-d683-421c-86a7-fc4ffabadc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a80cb5-679f-4d19-af67-af994c26c39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab8373d-3781-4979-b39f-52056e11ec99",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b42022-ec55-4a48-91ee-4ac39bd47508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5cf7cf-f264-4d35-9f36-6d1d193440ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd24d6c-9d7e-4a09-950d-251a186c9265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963a15a0-8940-43f7-ab00-594f5a2f2459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e20e7fe-265a-4060-bf13-1088bbb18969",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa4a29-9e61-461b-93f6-259bec80ed07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c0b357-a89e-4528-b43d-29b4c1210482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fbdf14-65a6-4643-bed8-b37baa8737b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4685e26-8d62-436e-98f1-d16d632c92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3f7b81-36db-42fb-a912-a3563e3ed45b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ead6aa-b149-40c8-9511-a293c919b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a60027-3dfb-49d6-81fd-2e69df75a3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55176abf-0b18-4ba5-8770-a93fc6b9c68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7009d5af-5be9-4e88-ade2-2731dd6eaeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a7276e-b814-4aa9-9724-9c4aa06a330b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ea2a5d-e50b-4231-9758-a8818822b3ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487623c4-87e6-4e8a-b43f-f7c1da56d6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161c1cfe-44a7-425b-86d9-57c09f14f2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd441d2b-cad0-494f-9803-02cd3c46e70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee700a0-66dd-4bad-b236-569ba08da045",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d36653a-8c1e-478a-8252-324fcdc91505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be438ef6-85a7-470d-87b9-3216d6635263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d6029-6878-4c3d-a649-7812e283961c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f339b5ac-58c8-41be-89bc-8945a9da34f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a673a80-562c-4607-bab8-d6d78ef0643b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5934c06a-8db3-4686-a57c-1ff35f2bbc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a96539-0b57-4032-8e96-3173c8b91b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e01a04-c57a-435b-b958-2beab2eca2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ffdee0-2540-4ce4-9c8a-442607237094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8545934e-e0fb-4a3d-8d21-01909193b513",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79492d69-07c2-4746-8da3-1e2b8cf656a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ecd9eb-f6f2-4245-94e0-2afc5bf4d403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c62e5-7d15-4a4e-8efb-826cdb26ace9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5062809b-a620-4f86-933d-2c3276cf0a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218e08aa-6ba6-4cf0-8357-deefe0b045aa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab649e75-94dd-4d95-9822-55169785acbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810c6318-dd59-43c2-adbb-4c6a4b1110bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b299b369-7526-4ac5-bcc0-4491f9aa8118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bfa2fd-8a0f-46a5-b757-f2ce3592784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b995efa0-0311-439a-982c-10b02c4482f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a257984-d5b0-4fc3-8242-6424461f6c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa6c4bd-ccd3-4716-827b-06faadc094fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f2f2d-4347-41aa-9e1e-bf5e6da4868d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a650cd2d-a5c2-4e74-a897-2cbb8a5cc127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3437b94-7325-4a56-a9e9-aa8ed126ce14",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ed793-730c-453b-b873-219abe7190f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46feb99b-d5c4-463c-875e-9c36cd8fe99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eae5262-5edb-4a06-af41-1a3b5d249956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cf9f4f-2f3f-440b-84fb-51484f30278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb0d583-1ff6-41fb-890c-9c9e41689500",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45babd6d-0551-4fd7-8057-9dffb23861b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb3de87-3ac0-4faa-b42f-532e0ba1d0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72ed762-f938-4e23-aec4-25e22aaec8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a522b5-82ec-4ad1-a004-be0ac6c2e68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe0a4be-7b64-4866-a284-052760037657",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa676272-66e2-4a04-b702-e8ff374250a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d40801-4867-4e54-ba50-6b388aa66a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bdb0e2-11ce-47e6-b97d-ee3b073b485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72416fd9-f804-4c86-9e67-d6f44605ab44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89fff68-b939-40e9-8832-032999bd7d6e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df979f-4c2b-4f5b-abe0-cc46d7d437d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc6c0a9-585f-4795-b753-da03edec4541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63082278-2f4e-4717-835b-34069035e8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af024d7b-c56f-42b2-822b-539a9f93df33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be34c60-e653-4f76-9ca6-4c3d56b8a45d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb0038-739f-4128-b317-2de17d9225a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650abfee-a2f7-47fa-9aac-09672f0ed2f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44842db3-9c7d-4d62-a52b-1e4b2763e556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7996c8e-fe6a-41eb-bf61-6126e3792f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be23557b-4bd3-4425-a847-cf2844b1f74f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011ec62b-1f33-46de-919a-2e695bfc9357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08983dfa-6bbc-4b6b-bac6-e4ec15d0e4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe316ea-dacb-4fdd-9412-33e94f7a90fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ff4554-21f7-494d-80af-ee0751975cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e3ff59-dedb-40f5-ade9-9e54e80c8773",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e7add-f67e-4a24-b4cd-9fe22b3ce8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3384a1-27e1-4851-80c3-9c9ad807ecf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940b0edd-64a4-490e-865c-0f1332bf8d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692fc4c9-dc02-4509-bb10-3c7c3445a68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba474046-0be2-45f0-a562-f0210a00a076",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf3b27b-a65f-4486-b0ee-e98b7d8a4023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f45e85b-6bf8-4fd7-b87e-aafe30008b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00a6f9b-6a25-47e9-af55-54802013a5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e86fb7-fe77-4f6b-a6dd-4f6c445c146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e0222b-1f97-4632-8eba-752df67c6fc7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0959ce7b-dfd8-444c-8c45-decfb05a8151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3ce54d-1ea5-4261-90ec-4cadbbaf5b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cadf222-2653-4b31-a1c4-f5f809478dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b0f7df-8c7f-4b47-b00a-ca7543ca36db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2bcfb5-0c74-4070-b5c2-03b0919a61be",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e91c64d-fa9c-49e5-b106-1681c41336ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf4ac20-82ab-417a-b287-cd448ea4b5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a2e8b-1643-441b-bd62-57c746a06b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187da1e9-e9b2-4ea4-bd65-6f67a016f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e18c66-83d8-487d-a82c-ff1a13a48079",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e1f695-45ec-4d24-b615-e5fc9041a444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b80f46d-1194-49a1-82ca-761a0d7fc0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf7b31f-ab59-4235-86cf-6f5dccc4262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b556809a-1c79-4707-9efe-972146392350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e33eba0-89d3-48da-b733-59a0bb57d632",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6958100e-72d7-4b7e-9b66-4f5c73d9b9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50ec8d4-3d8c-47bb-8944-58bd92001774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69467c66-a6ea-4092-b37d-218187bf9aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5666a7a-f71c-4d3d-82f8-25a0de728f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9bf370-7a22-4ab1-a33d-48fa0b048a40",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3898bd56-0006-4e44-8f95-9e69e7e3b844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b25320e-6eb3-491f-9505-da44c1df2539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213ac847-ca02-438e-af40-21a14866219b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e085dfc-ad2c-4132-81a4-87fe081865d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54eeefa-5b4f-4f9e-8e4d-23f5012ceb1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bd3f20-b4fb-4e77-a137-8279fc99e723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfd6418-e138-4266-a636-cfd1aa7526c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611afa18-55fb-4ec0-aebc-7e23f35fa485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a2ec0b-a8d8-43fc-b845-0e334350e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cab87e-1cf6-4a20-aaa4-1cd66d018264",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c1d86f-ed74-4b2e-a4d5-8e95b4a81a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c409eb9-c90f-4164-9a9e-0c83764c0fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879d3bc1-70f7-4e7d-b59e-1e024e5b268a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf1ce0d-e9b9-4caa-a327-4bf0c457ee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9602fd33-51e0-466a-87ea-61538db9965c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a02616d-0dc5-46fe-82d4-e84a0331d6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ffbe3d-bbe0-4426-b2ed-96d06dabbad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812ecaf1-0bcb-4b9d-9ae0-cadd9380a784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c2dc65-b3dc-4223-a680-8f690018224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999a7c44-84b2-45d1-a76a-4cf6529daa43",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53497b4a-de9d-495a-b189-c12aea6bc5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c54fab8-7fc1-465c-8838-51ae60873897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3becaf7-1a2c-4214-bc4f-a322be307870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98cfe2d-a332-4f5e-9eef-6c1a19f1b6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c9731-7374-4e41-8421-145c2d24715b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30001244-9ba1-438d-89d1-2e404b3e21bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4ec819-2a01-4d33-b89c-739d961a8552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499e6e7b-3150-4b21-8022-16219b80c765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27809eaf-4bc7-4cb4-a448-d5909b84b87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95f4469-b6d7-4011-99df-a77a7d03149a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa7381-2c7e-4599-94ec-088c22be53d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f86e70-e754-49d3-9e7e-a72e997bffda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f5c2cb-2182-456c-8f0f-b762397050b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8c5805-56ae-4b4b-81af-0b8a4b549b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec913730-c44b-4409-b293-4ecdad95c915",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd42ed-a162-4498-a0e2-b1d701f95111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff40fbc-6487-4b5d-a397-ee40efbce677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da25b206-5f88-440c-81a1-05c1b0c74143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c166753d-3b53-4939-af69-40c43bbbfa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eca49e7-8366-4e79-add6-d9952bd0dc0e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3bb936-7ad6-4874-9819-0c6b096a689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb31bcc9-07eb-4895-bf42-636f4b3733b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc13cf2-1a6d-471c-ba42-4b929d2172f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c46ac2-7230-43a7-9f21-3477b3b7e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dce4fa-587a-43df-8120-bf5f9a2d5b5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087d5877-28f8-4440-b542-7ac6d652acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a616a2-e44f-4e25-be86-c5f50a900fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454c70a7-d0ec-49aa-9e6d-7de43584e4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764c46b5-39c9-4ee9-8d8c-d6d42110917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfdd046-7eba-486f-9c9c-0f3769468d1d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b7800f-a64d-4d2c-802e-df9016dce206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9795b1a9-ffe3-4e35-a575-e10c47d14ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc2519e-f4ea-47b9-a7ec-1efb81276e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceb052b-a213-4ad6-abed-6f88f8183d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098fe386-2046-44a6-9c99-811a070e73c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b7242-3335-45aa-90bb-f134e975ffe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f69bed-961e-4484-a6bf-5756b0bddcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4761a1e5-0308-41f2-9226-d2231e5fcc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80bdb6d-4d7a-4378-a2f7-7bfe84847ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192d91b-2267-4a3e-9c6f-d8f84d67a2e9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee100e73-7da0-432b-bb4f-0bae3e7c25a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff3e738-2ced-4a15-9e6c-cbd7efed4dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6f8059-261b-4dde-aafa-e26642af7dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff579dd-5850-4d58-b728-816600a020eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c294c8-a62e-4efc-bfa9-7f8a24d28be1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0259f70b-6822-4c9d-84ab-b5938cb4a9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ba1fb5-26c8-47d2-a750-9ec47617e2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e812a41-5de8-4acf-b940-c0585b2b0fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3619735-55da-4e14-a955-340d70bfbbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090564f3-8c74-4c0a-8c67-3a5471778f83",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1890d869-c7ce-4314-883f-b891354cd32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae8b7ae-37a2-4408-8e3f-90d8726da145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acabb14e-747f-43d5-8148-83d1a0c2ade5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44040e49-8110-4585-bc5b-93b7d8fe7113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61e8567-83e8-4135-897d-e5a18d99fa6a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c916777a-0942-4b8b-a7f4-86a5d8a385bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b5550-7b7a-40a7-9c26-9db7110fd4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea4bef0-99cc-4459-a8ff-58e587e72e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6f2bbb-b9a7-45aa-88ef-17e2d3af4648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36df8beb-d17f-4c88-81b6-a5799f47955a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9ce34-dba8-466c-a39b-195109fe3f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4acdc7f-0f1c-46db-83b6-79c11cb838d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49200887-789b-4f96-9219-fc9a72987a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d105e55-2770-442a-bde5-c5e6a88a32a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9fc392-9027-4df8-ad0c-8a9efeac25d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da12cadf-5739-4711-afd9-1efbb66dea93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f53b0e0-6a4f-49bd-a4a0-93cfbf385be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45541ec9-0e95-466d-afc6-bec958736b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d45ede-e14a-4004-b10f-662b9b42f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea24b60a-79ac-41cd-85d9-413a2f233fa7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a543825-0c7e-4dc6-b6ff-8b1203ff7dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a12b5b-a416-48ea-9078-fb6d5aefd514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1fb92c-07ed-4522-94ee-bb6b88e6d537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e65684-923e-4a59-8735-f3aa2845cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d3f53-88c1-42fd-8ec7-435c86b4dcc6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f970e0-26bc-4d99-bb99-e29a79de3ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020ab8cc-bbdc-4e22-9f18-ebb159e856cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796c42e7-6141-427d-b973-2e7b2931ccb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3332e2b-57d5-440a-8de0-7916a54a568a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e233957-dcf7-4fd1-a505-874fee2f1b32",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40270fb2-48f4-4839-b7bb-6e714685c60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c2457-3487-4113-b14d-3efe2187c225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c254df4-1a7e-4d15-97f1-bc31d49f0f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7fe7e4-755e-44e6-be05-63de66fc299d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d7ef66-1584-43c3-902a-4723ab45561e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceba713-59d9-4e61-a8f5-17d44dabbe5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080aa6b6-2b11-4b44-999d-5b9017b0847e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74e62f-9414-4a5c-b3da-771bdd2e4fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd52dad-4422-4c0e-842d-ad4b9a4d83e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c400b5-7d09-43a9-89eb-70d217cdac74",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f922781f-7fa2-4cc0-bf85-f01d0e988107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007d0643-fe01-462f-a364-f98dd63b5a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f29dd4-f24b-4eaf-8316-e5a9cddfbb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e2a538-768e-42df-9dc1-2e48f9288945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbffbafd-1766-453d-a694-3ba25863b4aa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05761ecc-3779-4dbf-82db-72855756ed39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73955b89-712d-414f-96c5-668ede891f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1db75a-21c4-49e9-9b9b-ce3d840bee65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc43c910-f8ae-43b3-a9e0-8e86342fa72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c990d8-1648-4c0e-a1aa-f8f62be48fa3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab5018f-0c4e-4bdb-b6ca-45eb18c74ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f678fc97-2e37-4495-a709-97a73e236958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf99a190-dc19-458b-8c61-44e51085c95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218e6d64-e9c5-4144-857a-f42d28c15c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7368aa54-046e-42e7-982a-31a254f1128f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f768dd-8355-4d7c-95de-47c2dfc62454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a209d933-9d3b-47d7-ac68-fdf38fabae86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d680a79f-107b-4e91-ae1e-e6b71550a5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa844c1b-b2bb-4ea8-90b9-8a9265218a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83feac5a-6502-4aa7-8886-a5ddf47d7c92",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435cd947-e589-42e2-a3e9-e988cbb3f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1d2c01-4040-4a5f-9ff9-4cf23afd2483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b36718-37b3-44df-9166-ba47a0bc6069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b63b1c0-49d0-453e-bc2f-c0266d656522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bbf13e-3c09-43c1-b8b0-9911d98b04ce",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5414b-bc80-4ccc-8ec0-1271ae3a11dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e78639d-8b94-498b-be5f-01c636d00d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac6267-af7d-4d33-b91a-3b186d2b8d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd739772-04d3-4b62-ba80-d95557a01dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c084565f-686f-4182-98d1-b2a0685b0943",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a647affa-fc12-4271-bf0b-67dd3b4b783c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93824dc1-cdfc-4970-9711-379c6615f670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42efa93-f56b-4e3f-ab6c-2c4098e6dd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e8deeb-7e4a-4511-807d-0dd556b305a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6147bb23-6cba-44b5-b659-c8b38611e71c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8741ea50-14c7-4999-a991-b9f18e9029fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42dd162-3466-45bf-b652-9c7b0d12ee2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23891ecf-ed15-4cbf-b03e-af07f57c7c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38b3a6d-9820-47fb-a2f6-28b168aeac1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ac6af-01dd-4152-b4f9-bb8d57bf0816",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35570681-75c5-4b42-ac34-f32eb42f2da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033ebcb3-7f84-4ee0-a684-ef3437ed512f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734746e4-e490-451e-84bc-dc8009e89e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8677236b-6abd-401c-bae4-7802c28264ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7b091a-37e9-4a5f-8a5e-4072f75873f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61ef8cd-a39e-4698-bb6f-c1e0d10e03e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d555d909-c3f3-443f-9fe6-f1514183f7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e90ce73-ca99-4aab-a539-4fa2cb7dbe8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97e91ab-4c12-4680-8daf-8406669524a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa2d05-c94c-4054-8a90-e6702dbe7c9d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef7ff2-5397-4c04-a238-1427c7cb8e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55f7ff0-0181-4182-97f2-2de974ae81ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c27858-6e1a-4cc6-81e5-5be0338f9538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bbc1b3-51f0-4bf6-b15e-ce9556e90596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387c0049-7b6b-4fe6-98bd-3f318a4c2a60",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c805d22-2302-447b-b7e8-40c600bd88fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d561076-a67d-4a16-b400-17b94684d7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ab218-d4cb-449c-aecc-1575ee82bd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d303ec-fcb5-4f20-bf21-93c1cae374f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f944e2-3bc5-4358-a98d-a6cef19e9402",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6867153-da43-479b-8def-8ef39f4babab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edbdfa9-54c1-4c9f-9ccc-b347f106ba74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c485d351-3471-4f68-8383-53a53235234d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e80f4-2103-4853-af66-8c0e8f07709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23425947-0e5a-41f1-a4fb-4267a776a71c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff37abc3-a232-441a-9da5-fa8d55b30d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983e55e7-5eec-4669-a3d4-28e4f61cef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b5eb4-9014-4847-8d37-c5a993d78858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41f9b5c-f9a1-4c19-a5c3-b2d551c62939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edec87e1-bdc0-455f-a5bd-a153859d6786",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffca0dca-23bf-4b85-bfb4-5ab393c59506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10ce834-85a6-4508-a027-5a583abf42b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f43df29-8716-46a8-95a4-86bbc563147f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4627c834-fab8-409f-8864-083ba3141c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632dd99d-68ff-432d-9173-ede0242c0d42",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d5baed-7dff-45e4-8017-4c879edf41dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15cfe8e-d631-479c-aba9-c430b56f34d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb299b65-0726-429c-b6d5-19465a73382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef63c592-ee2a-4b76-8751-bd864947e9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0471fd-62d7-4b55-b7ae-025bc5f8e731",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b0c9b7-fb23-4910-acce-258fd9a4273c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1e3843-9360-47ce-94c0-a72f925700f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df31923-e04c-4756-882b-c14ccfb48ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb51292-ce24-4f50-a853-7ebfa0663c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c285cb50-9e87-4c8e-937d-902dd38f8745",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5593d593-1f78-440b-b479-3dbed6af3eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaaa9cf5-e03d-41d8-8ad2-e431b4770d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eca41f-fd6f-4edf-b1fc-8becf507d3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db412023-9b48-4707-aeb4-34f4a503ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec54247-7065-4d39-af2b-8da07bc42c07",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3725823-709b-4116-90f5-c27dc55a8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1f33cb-d976-45f9-a536-9cd71e3fa5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4187d06a-fbe1-4ce3-8677-b8d0c7086ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d762227-d57e-4183-a9d2-c7c2d9ab9077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e0e97-dc7d-4e6a-b9bf-65ccc2dad5c8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8bb3bc-299e-45b7-9787-74a0b546ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89b6fcf-8b56-4b0a-9c0f-c0ca3f539ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252d8cf0-078a-4e9e-91c6-8639d8af0dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1a602f-d493-4200-b3ea-4a5c727fbf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de93d404-e60b-4459-b94d-46167de3a098",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e6414d-cc2d-4c78-95eb-3ab2180bb48a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd44a99-d80a-47eb-be32-545e26e1349d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50e86c2-ecb7-4021-9d41-1f863629459e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01193d47-d2af-428f-a61d-9581ec64738c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65c0e17-34bd-4a04-a0ee-7490732b36b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e33627-be38-4508-a102-2c6031fcad0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b577616b-52c4-43f2-95f6-1d6697ab3866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4799415a-c4d9-438a-a0f7-c88c0fb61610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8ae59d-b25e-4bc2-a6e6-e770385031da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b349ac6e-3a82-4286-9b5b-5286b5f3c7f5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e465c370-a4eb-4d8a-a43d-97f3a05c127e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044725cb-96ad-4ccf-979c-9aa4989aa0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97e6baf-5494-4449-b888-32146c9fb6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17679ec-43c0-4bbc-ab1f-ef84f885e450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68085d4-2a1a-4186-915c-0807718008b9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd40e85f-681e-4a3c-bf6b-6924a48863d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c134e40-944c-409b-93b2-378e594b2deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32d14ad-e47a-49f9-93ed-59e67abe4d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fe0dc4-2476-4eec-95e0-e71b607b4269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d623ef1d-e1fc-43ba-96af-add3d32df18d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c374d00f-f027-45ef-a5d5-8e100a0cfbf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c72a3b-d69e-4505-872f-8365c53687fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760a77a1-c07f-4a98-b931-17a0ff09d2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd72d8ed-9ec9-4ec4-bfee-866897120eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa02d9-8bf9-4323-94c4-567d39c39c80",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb447742-a512-4582-937e-086bd7d83107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a6c30f-489f-49a3-9bee-010ea8497d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75a0e51-c313-4710-a615-23867ea1e7e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4c965a-206f-4406-b219-5948ffebdef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d798367-9d68-42b1-8532-061819715db1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bbe879-8e6b-42ca-959a-0eb642ce2c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb35bf95-6913-4976-b6c7-a2c46a888f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632009ed-011f-40ce-b14b-a3a7fd40c0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c51afd-bb53-4eec-b3b9-0bbf564eb70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fa1a51-8541-471a-b6b6-76226b3707d8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b9e7f8-24df-4ddc-858a-372fc185a01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eeb9808-f1a8-48a4-8419-42c4a5c38a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb27df3b-0846-44ea-acea-bc4ad815569e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2585e6-486c-4a23-9b17-061342c9f908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b659e7-bd00-43d0-abf7-d02689851eaa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc2b711-ffaf-489a-b017-3de6cc234771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d197b44-f54d-4c41-9d8a-c044343cb60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5886edd-d546-4175-b748-4ae11aa4570b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d7313e-781a-4abe-a2e9-df08cbabf616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab2b041-1eb7-4cfd-af43-7d380cfa321e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbf75a8-7157-487c-9645-32399a8ecc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf324cb-8625-42f9-995e-73b14328b94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503d329-1dcb-45ec-9902-3e07eefc7b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1757383-abc5-44d8-a1e2-f369ffe04755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d69d1e-e5f7-446a-9a44-d44cca75d404",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5713623e-5292-4819-a984-075fe9822cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69440568-e81b-4691-a467-b16362160ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed5b0b4-a2cc-4433-9635-dc8c27a8d240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc799eb-959c-4815-b1be-de87b1661ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c3b4fd-b5c5-4166-8451-c339ded1b01d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3afc9f9-7874-41ad-8bf0-29ea621dfa3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a1445b-86fe-4b23-9774-962cec72eacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c633ebe-208e-4706-a683-b21aa22f94a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11b4b1a-692c-4968-a97f-36e7f6ba35c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3039a6-5355-4ba0-911f-ab8f02e5e00f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef03db-0a10-4cea-9a67-2aa8562b19ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc11f06-76c5-40f4-a530-e91a39951d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04f3330-5213-4d08-99bc-aa99595b4419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4a47aa-e7d9-4b10-971e-c3b48e60f317"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9294e173-fb4e-4878-8cc7-72e141bf3950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55d4e0b5-1c93-4f8c-9d6e-d69930df2580"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "280e7540-d3da-48da-a1d5-1ff597b8df94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd5ba084-e8b4-4ce7-a60c-2213a2701d44"
                    }
                  }
                ]
              },
              {
                "id": "3da1a9b4-27c4-4d9e-be9e-619a8208c465",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbebcfbf-065a-4c0c-8ebf-cc51146b3bab",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2874f46e-5dc7-48ac-8c32-cf2e028cd62f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a7881b18-80d1-4dca-be7a-42f3a7cb03d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a61b64-6dc0-4762-83db-097a1a379426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8d0e931-7cbf-4785-8e56-44f2d2a2a8ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "424eb88e-ecb9-4388-909f-601dff58c5a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04a690df-a2aa-46a6-ab81-e38809666ed7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9362359-656c-4852-b9b4-c33a36696f7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35012e2c-23cc-4a9a-a4f2-89eb0731f4b4"
                    }
                  }
                ]
              },
              {
                "id": "efec95d4-9867-48b5-86f2-d54f9fb3d610",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9ef7095f-1c90-4279-9a38-81ce17d67b6a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4f1ab8-57ab-4eb6-8fe4-387900c631a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "082cdf7a-7292-49b1-928c-0f518405bdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e866401-d70c-4d5a-8655-bba05c1b3da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784194fb-6255-4407-be56-97f524ed7bd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1130d1ab-66e9-4ab2-a8f9-c515916f7b6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e5d5ce9-6cd9-44c1-972b-e377fd697fe4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ff6e0cd-1925-41ef-b067-27010ffe92c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11902ba5-d662-4e5e-a2e8-94308e4b17be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ca8b217-fcfc-4d99-b2aa-bdcb6f3b5b0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d32f74ef-dcf4-4f42-89fc-7342b5347fb5"
                    }
                  }
                ]
              },
              {
                "id": "a26473e6-569b-464a-965e-52cd5f87a5d1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "963197e2-b8d2-48fd-aa69-cce84466b303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18c6c7df-259d-4fa2-b15b-cb54d3a500d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b60039-b6cf-4621-a051-592af8f59656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b85b4388-aa76-402d-811f-9c0e690ecc22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75dd2600-ed27-45b3-8f55-326d06da212c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2b3d5351-9600-4ed3-8d12-ffb93d984d05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8fd3722-f956-4acc-825e-d820f619d373",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f754694-342e-4bf3-b0df-4fd75f5066de"
            }
          }
        ]
      },
      {
        "id": "a369266a-b479-4d61-aa35-1016e7ed0cb8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1c2b1339-3d26-4a6c-b156-ab2913d74290",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1c8ba23-36c2-4d97-89ed-53d2173ec997",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f75e4a9-b07c-4dc7-8fd4-73c3d84d27d7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be5ea07-30f9-452a-abfe-eb3df8731849",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81197e84-46c4-4c2d-968d-430a7472815f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc4e9fe-32e2-44d3-ae57-f2f8b8214f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48cb1409-e35b-49ea-a3d2-f0b4d23e9913"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd9081a8-5991-4d40-8cff-2e661ca229eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee1b905-a1bf-4685-86dd-a5f422ba780a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7ddb0f5-0fce-43ba-917b-7ef7ae4ddd9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3b970c4-0954-44cf-8ef4-14809ef70a43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d87b311-e7b9-4269-9265-d9347f94e1bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83b9d881-ba16-4f4c-9e90-a5ec2b219b02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06a4be8d-909c-4d46-b965-61f18748552a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f271a51f-be9c-4a0b-8923-369cc99c2780"
            }
          }
        ]
      },
      {
        "id": "0f7d968f-40b8-48e1-a8ff-c2842da33fa6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "78b733b4-3041-452e-bc87-09e1dba611da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28e1edce-b897-4a8c-bba0-7e112a153805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58e1a980-b281-4588-ac3c-46b362aad75a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ed8c83-2742-4e18-a0a4-9322b2fff2c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfed25f2-e764-4538-8d5b-de7cd1ea942e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e80304-9692-4678-adac-5792a2e3395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b891f2-f8c3-407d-b2f3-f064a5d25a22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82307dd9-ed81-42d1-a851-55eabf08bc5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41b91d6b-fd13-4354-949b-e09aced672d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e0966c-5b59-49d1-adfe-b9328ab5d987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06764eee-9170-4d88-bd91-5dc810cff5a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "918cded1-90be-4266-b432-1a55bb77ee1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c426cde-2b9c-48e8-a59e-754080e66ea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "379046ef-9067-4268-8ad2-11bb235f6bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2670d99e-c960-45d4-8e3f-4794ec33e346"
            }
          }
        ]
      },
      {
        "id": "49c64492-b0e8-4f2b-8404-a381b73a9986",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e171b56c-0806-4ad3-a815-d3709bfcd148",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95eba8c6-2693-4c3a-8baa-0706609b72a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e17d03e-423a-48d5-abdc-1a39d9becc7a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db19417a-3aef-4c0e-866f-26427ba06d91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78781775-0ff3-4893-9e78-6457f89fec5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52359212-a63e-4c69-863f-2b5efcea9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d56f2b71-b814-4a5b-825c-ab5adbbfa753"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "023ed070-413d-4062-b288-1a1f7f1f07c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "121b62d8-08e6-40d1-a90f-bc7bb00150df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc40f7ae-16f1-4325-9049-63ef560b5fa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6decc02-6ee9-4ad5-aad7-7ee0adb64ae3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ca21680-4830-4537-b9cf-3ff9a5d7306a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69de7d5b-776d-4609-b4d3-52ba575f160f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c570ae8-977a-4463-9abe-c87b44a981d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "479ecfa3-42af-4d43-b170-d764031f3479"
            }
          }
        ]
      },
      {
        "id": "67846a7e-8462-4bde-9179-c1f8dfbc2dbb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbc23f61-50bf-4b23-b505-a6be8d3f988b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02fea0ba-af9f-4e6c-9bb3-f5fa4622fa6c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "66e6297a-38f4-4634-a77b-150e725a3d5b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64603bdf-fe41-4df0-aa83-a60e24692625",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "833579bd-050b-4df8-8c6b-e2bfbdc7af77",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 75.4070175438597,
      "responseMin": 4,
      "responseMax": 5169,
      "responseSd": 400.64226851291556,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709944366079,
      "completed": 1709944396548
    },
    "executions": [
      {
        "id": "d158c293-be6a-4600-8197-adf6d51c081a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ecfd7b22-44ac-4cd4-a467-bf2d3fdf816a",
          "httpRequestId": "ff5e9cb3-3e52-46a2-b1d5-0adfae307379"
        },
        "item": {
          "id": "d158c293-be6a-4600-8197-adf6d51c081a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "74bd4497-c40a-488c-b5dd-ac10592d5144",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "02b07b14-53e3-4864-b7be-0bb9dc1c8faa",
        "cursor": {
          "ref": "d131e1a5-3ba1-496b-8609-14b0ea6c2b1b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c328cf9-d935-429d-a9e5-09dcdb3d185e"
        },
        "item": {
          "id": "02b07b14-53e3-4864-b7be-0bb9dc1c8faa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52fd88e2-b07b-4ff3-a00a-52f2fc4496d5",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "8616e144-568b-479d-af4a-5f318f6b0cf6",
        "cursor": {
          "ref": "4bbec7a3-5acc-426d-8142-edf0df30e2a7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ee1a3123-60dc-4cf1-bf47-8587df013156"
        },
        "item": {
          "id": "8616e144-568b-479d-af4a-5f318f6b0cf6",
          "name": "did_json"
        },
        "response": {
          "id": "8c19fb5a-4e05-4eed-9935-5c2ab17cd592",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc2139f-cade-4c5a-9b8f-b3e26b786019",
        "cursor": {
          "ref": "2ce4952e-5f33-4173-8d7d-90eafd50349f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c418626-7003-43cb-8749-f69608e5f9be"
        },
        "item": {
          "id": "8fc2139f-cade-4c5a-9b8f-b3e26b786019",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf454a98-f0fa-4c59-9093-5acfd2d1a25a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1084,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc2139f-cade-4c5a-9b8f-b3e26b786019",
        "cursor": {
          "ref": "2ce4952e-5f33-4173-8d7d-90eafd50349f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c418626-7003-43cb-8749-f69608e5f9be"
        },
        "item": {
          "id": "8fc2139f-cade-4c5a-9b8f-b3e26b786019",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf454a98-f0fa-4c59-9093-5acfd2d1a25a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1084,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a9a79-1b97-461f-82af-18d0e302c33a",
        "cursor": {
          "ref": "ca709dda-029c-4139-bfb4-9937bd76d3f2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e340f75-bc80-49f1-9db0-5df6235f3515"
        },
        "item": {
          "id": "886a9a79-1b97-461f-82af-18d0e302c33a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "56ca6bd8-a383-44f2-a013-b0404cce0edc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887f0a52-fd0f-4696-a862-3f95188d150b",
        "cursor": {
          "ref": "cf1042c3-663c-435a-bfef-19571da354fc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42e27446-ea8a-445d-a4ad-ca3f33c3e21d"
        },
        "item": {
          "id": "887f0a52-fd0f-4696-a862-3f95188d150b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8f081ed0-3688-4d31-b9d1-444bfdecc92a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 18,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c4a8b2-96ab-44b5-b759-3c0a5cc089e4",
        "cursor": {
          "ref": "15b8db06-064c-4119-911e-960829561d35",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "17047310-9901-4faf-b1dc-06cc30228d6a"
        },
        "item": {
          "id": "e3c4a8b2-96ab-44b5-b759-3c0a5cc089e4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "442b0f0e-ac96-46ee-8229-3c26365e740b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 196,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a299ad4a-2cba-4d40-b590-e7eaa8abdce9",
        "cursor": {
          "ref": "ecc11f70-7a0a-4147-912e-1f6551d3e6ee",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5ea3376f-373b-4950-b295-80243189edc6"
        },
        "item": {
          "id": "a299ad4a-2cba-4d40-b590-e7eaa8abdce9",
          "name": "identifiers"
        },
        "response": {
          "id": "e292bbb9-80bb-40da-b5f7-aeb5e08674ac",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3126d-cabf-4bed-9d38-ab596e0505fa",
        "cursor": {
          "ref": "86b70175-46f6-4bcf-82e8-c981c1bc2027",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "749b9a9c-dd12-48e1-b6e4-f15c9ddbe1e7"
        },
        "item": {
          "id": "8ab3126d-cabf-4bed-9d38-ab596e0505fa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "15473ae2-02b1-4ae5-a8c2-d49c9d97df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de21ab81-474a-4c0f-bbc2-25a308dd9e74",
        "cursor": {
          "ref": "d7c5547d-415b-4961-a176-94c5dc89625a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "05637640-cc26-4b58-a9da-52c7a0fb1427"
        },
        "item": {
          "id": "de21ab81-474a-4c0f-bbc2-25a308dd9e74",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6cc57d43-59df-413f-9745-3c4937619341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c06a59-6d6f-4f83-a278-e9ccef504c10",
        "cursor": {
          "ref": "b540e225-29e4-42cd-b9b4-3f2d565593da",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b991f29b-6ffc-4f73-9762-6ccff33763b9"
        },
        "item": {
          "id": "e5c06a59-6d6f-4f83-a278-e9ccef504c10",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "85e29dc2-d329-4029-bf23-e0d7b69bea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d9c80e-f0c3-4dbb-b3c1-045eb8b400f2",
        "cursor": {
          "ref": "af8fdcfb-2ca6-45ba-a845-07d4f70dbf1b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f9bef496-5868-4a1c-a214-85a885db5d36"
        },
        "item": {
          "id": "53d9c80e-f0c3-4dbb-b3c1-045eb8b400f2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "47385381-d16e-4e5e-b3b9-21db1ca49f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f5ed45-97fd-4a75-975b-ba5a4a019c40",
        "cursor": {
          "ref": "4dd424a1-fa31-4a86-9070-dbf3498efffa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d8ba9c52-bcac-41b6-a3db-69752433bcd6"
        },
        "item": {
          "id": "66f5ed45-97fd-4a75-975b-ba5a4a019c40",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a742c9e6-8225-4c6b-8c98-f865b4d149a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142a0e4e-c41c-4ff9-9a23-18a6ef50b76c",
        "cursor": {
          "ref": "7b2bb770-fbf8-4a59-993d-0f0cf284aa02",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5247b677-bab0-46d4-99be-07cda2624f87"
        },
        "item": {
          "id": "142a0e4e-c41c-4ff9-9a23-18a6ef50b76c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cd48ce6d-4eab-4e6b-99cc-7cfb7a8a7b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b052d3fd-4ae9-4c83-bfed-cc268e37b7c0",
        "cursor": {
          "ref": "1dca7e4b-ca1a-47cf-882b-0265b38ab046",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0b8d7ba6-4252-460e-b170-9984e2918ebf"
        },
        "item": {
          "id": "b052d3fd-4ae9-4c83-bfed-cc268e37b7c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "96d9ab30-da41-4274-89e7-23e3d219ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0fed0-6a7b-411b-942a-1188bbf021a5",
        "cursor": {
          "ref": "3a45a5d8-64f1-4947-8586-5a3292ca9397",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "67a7e7d0-622e-4848-870e-5ca3b111138d"
        },
        "item": {
          "id": "c8d0fed0-6a7b-411b-942a-1188bbf021a5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f4ba63f3-2afe-4d16-92f5-bd22fd86f875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632d4e27-6218-4d3f-bb27-f8b184fc9987",
        "cursor": {
          "ref": "b3320663-3dff-4e62-b33b-1ca154a7e6e5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0f099f4d-8d98-445f-b1aa-9d31746d0171"
        },
        "item": {
          "id": "632d4e27-6218-4d3f-bb27-f8b184fc9987",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3a4717c1-6a6d-4fb1-b39f-094a40d87dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d4d6c4-b8cd-4d39-a771-9f4d187e9677",
        "cursor": {
          "ref": "7c4f07aa-012b-4723-9a2b-3fa93bf31a1c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19e9f58c-7ff3-4d85-88d4-443f45f16146"
        },
        "item": {
          "id": "67d4d6c4-b8cd-4d39-a771-9f4d187e9677",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1ad901ba-d134-4b3a-afc2-2442532e81b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd347ad-ec8d-4da4-827d-7eb05fb9e445",
        "cursor": {
          "ref": "9c219d5d-2233-4c1c-8d17-99e1c7ab50b7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f45fc06-bb95-441b-9c2c-d22c0b2e25bd"
        },
        "item": {
          "id": "8dd347ad-ec8d-4da4-827d-7eb05fb9e445",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "805cbaec-4f15-4905-8051-b749daa02b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0ff7be-e469-4021-8eb5-b989caa77d70",
        "cursor": {
          "ref": "6892524a-ee40-4f11-95a5-9a118c3a8eb9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c34908b2-e158-4f31-991e-57c1c9fac616"
        },
        "item": {
          "id": "ec0ff7be-e469-4021-8eb5-b989caa77d70",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d0efd227-d2cf-4b3f-af68-5df246459ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbdc83d-4979-4e67-ada8-11c7a553f2d3",
        "cursor": {
          "ref": "1c8a4ca4-1bb2-4a5a-aa40-c856235935f1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7e622b4-4c8b-4aec-af94-8cd2ee859966"
        },
        "item": {
          "id": "4fbdc83d-4979-4e67-ada8-11c7a553f2d3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5c1e7024-f7ec-4503-a014-7739c54276d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd0c073-8b27-43db-845a-6a0b3e971dac",
        "cursor": {
          "ref": "d6f83e8f-d10a-482f-aa55-ce04aaded96a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6374bcf7-f194-4718-9c25-10e1b5bbbf3f"
        },
        "item": {
          "id": "fcd0c073-8b27-43db-845a-6a0b3e971dac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d3a36e8-1c05-4f79-800f-42803db7b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144d9e05-4faa-4a93-afa7-e3c389227db1",
        "cursor": {
          "ref": "2cad9335-68ac-45e5-b8d5-a370c5b4fc25",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bb34e5fb-9cc3-48b0-bbe4-a63380d42b3e"
        },
        "item": {
          "id": "144d9e05-4faa-4a93-afa7-e3c389227db1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "acc4f23e-9b85-4847-b331-5ea82b9f7f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0060d83c-8916-4bff-805e-c6fce42b8cbf",
        "cursor": {
          "ref": "2fe39ed8-75f4-4176-b1db-e5850968e202",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bd08a124-a340-4521-b582-12ee4de5fe8d"
        },
        "item": {
          "id": "0060d83c-8916-4bff-805e-c6fce42b8cbf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "79d6966b-8200-4d46-b26a-8e5ff52ee0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c5f5d-5e8c-4e5f-8010-dd009d65fd9c",
        "cursor": {
          "ref": "21b941b6-441c-45dc-9346-531349a9c28c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "93a028f6-a3c5-4f43-a77a-b601a8df1bfa"
        },
        "item": {
          "id": "a07c5f5d-5e8c-4e5f-8010-dd009d65fd9c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a99a7f6f-ebe2-48a9-9ab4-ca95ab92bbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf23b80-1a24-41a0-a140-e8be33823752",
        "cursor": {
          "ref": "70011695-cf32-42fb-8dc9-c78a88788372",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9b97e9e9-a6f1-473f-9a93-14ac2014d100"
        },
        "item": {
          "id": "3cf23b80-1a24-41a0-a140-e8be33823752",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2e4e6c47-5540-4428-bc67-39f12526b858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511fe7b-03c6-4657-aa81-3a3ab47775b9",
        "cursor": {
          "ref": "cf4042c2-1c2d-43f5-a541-423c1cd995e4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d97867c6-666c-4c56-9b58-a03e5107c2b4"
        },
        "item": {
          "id": "2511fe7b-03c6-4657-aa81-3a3ab47775b9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3f1656e6-0e8a-4cdb-b99d-cc15832d1308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1eced-08da-4131-b829-580d6358a5af",
        "cursor": {
          "ref": "ded55821-8549-4f3d-b1e7-5173a7684fdb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e9ebb3c-6a54-4e5b-86c4-0e598fb8a469"
        },
        "item": {
          "id": "d3f1eced-08da-4131-b829-580d6358a5af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "46624da2-fc0d-4400-b84c-cce69124b4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373f225-1886-4963-8342-2165304cd86c",
        "cursor": {
          "ref": "82e1f560-c6d6-4426-961e-2f6c4f080344",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8a882450-6ad2-44f8-8e43-8a2b7114919a"
        },
        "item": {
          "id": "2373f225-1886-4963-8342-2165304cd86c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c673221-b142-4730-bb6f-940bce5abb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48786400-e117-42cc-8862-3617f48dc00d",
        "cursor": {
          "ref": "aee82a78-3aa7-4d4c-afc5-aa01bdb4e06b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0c8cd53a-055b-425f-b71a-41f2055623a9"
        },
        "item": {
          "id": "48786400-e117-42cc-8862-3617f48dc00d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e404edd-4e5a-4a0b-b8e0-ea54153ab90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e256f6-fddc-4680-aca7-e2e9d97536c4",
        "cursor": {
          "ref": "d5fa5906-4238-4798-bca3-49509fbd646e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "01be8200-c3ce-4f5a-864e-0600035efd42"
        },
        "item": {
          "id": "29e256f6-fddc-4680-aca7-e2e9d97536c4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9d9983f9-2637-4443-b193-f02fc6707b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4310b20d-4337-40fd-a100-7cb62d4753eb",
        "cursor": {
          "ref": "2552b049-0c6b-438e-806a-bd883d476a48",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3e4de50b-97bf-4655-b9f4-55ade864617c"
        },
        "item": {
          "id": "4310b20d-4337-40fd-a100-7cb62d4753eb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9a6e3c29-9ea8-49a2-8584-a7655a64d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec678596-ec8a-4d5a-9c29-bc838ab6396b",
        "cursor": {
          "ref": "ef416212-162f-4350-988d-e227ec69a0f3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da18fb6e-5422-4cf7-bece-f0186aa55133"
        },
        "item": {
          "id": "ec678596-ec8a-4d5a-9c29-bc838ab6396b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4ca0b504-a1ba-471c-a154-62050852b8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad4e8c-5332-400d-b0c3-8b880e96f55f",
        "cursor": {
          "ref": "c94445e5-bc97-4efe-be5c-a03a2a31c995",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "15a40248-cfb0-41ed-aac0-06fa44f53e7c"
        },
        "item": {
          "id": "16ad4e8c-5332-400d-b0c3-8b880e96f55f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "33b5c9d7-f2bb-484b-851d-d80da329e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f1ea86-29f6-46fe-a05a-efa69fbeeea7",
        "cursor": {
          "ref": "14fcea60-faa2-4108-8f68-06d717365bb6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b97db4d-2d97-4e98-b82c-90e6b12dff91"
        },
        "item": {
          "id": "37f1ea86-29f6-46fe-a05a-efa69fbeeea7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1c6168e-e374-4992-afcc-5aa3e2f14440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e035548-a438-43e9-a6bc-6fa689540734",
        "cursor": {
          "ref": "32cd8a5c-a854-4ed6-879d-d6aee5a16479",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e8cb08c6-9520-4054-9d4f-d0f11a5fd54f"
        },
        "item": {
          "id": "9e035548-a438-43e9-a6bc-6fa689540734",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5187464f-6822-4f44-b023-ee7ec1b75b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416038ca-f4b5-4558-87c4-f5b9a6e4d192",
        "cursor": {
          "ref": "4d000046-fd25-4813-82ab-82f036c3909f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "68aa423a-2b0f-4871-b2de-52f9b972dbc8"
        },
        "item": {
          "id": "416038ca-f4b5-4558-87c4-f5b9a6e4d192",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a616961d-37b1-4f3a-b5a8-b7cc8d278dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93885554-202c-45f8-8d70-682c1297f61a",
        "cursor": {
          "ref": "4bad2def-7d3b-40ab-a4c2-55369ba35cec",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6ce99c06-241e-4c8f-be0c-1ec26eefded0"
        },
        "item": {
          "id": "93885554-202c-45f8-8d70-682c1297f61a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f8ab23fc-59d4-4861-8344-bc1e401f2767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e0f57f-739f-4572-939f-35cacc9a43ec",
        "cursor": {
          "ref": "e31f8ea1-bbc4-4cb3-b143-4afd6e694a1d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "78232bf1-98b0-44ae-8cfe-65472a1ccf7c"
        },
        "item": {
          "id": "54e0f57f-739f-4572-939f-35cacc9a43ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bf39655c-3275-4bdd-895f-8718a9714025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7e3db1-2a0c-43ca-b2d5-3003d246018f",
        "cursor": {
          "ref": "3a8d14c3-b58b-4ace-b7ba-5122bcb262d3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8855638c-e64f-40ee-97ff-2915f39c40f3"
        },
        "item": {
          "id": "1a7e3db1-2a0c-43ca-b2d5-3003d246018f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "84471d29-0a6b-432f-aba2-1b401bd23e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50891c4f-2f89-458d-9f2b-69d5bb17411c",
        "cursor": {
          "ref": "f26c58ef-398b-48fa-85fc-b0f7ddadc8a3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c036e83b-aa97-4db3-8a30-e06b6858ba49"
        },
        "item": {
          "id": "50891c4f-2f89-458d-9f2b-69d5bb17411c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30ca817d-8bfa-4131-adf3-467f6e0c6cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b70a7d-55bb-412c-949f-63be512ebf3a",
        "cursor": {
          "ref": "ba9998ee-5314-4381-9e14-2901a1a21c8b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "10cb6cc8-7a45-4971-8604-7bc2ad34ad61"
        },
        "item": {
          "id": "81b70a7d-55bb-412c-949f-63be512ebf3a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "81b06bae-7390-4e4b-ba57-7fc93d38fe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e9011-624a-448c-a7d9-06ddf4a4326d",
        "cursor": {
          "ref": "44363330-16db-46b3-9a05-0d8c57f7d893",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac5435cb-178a-4ffe-84ef-532e12e1220f"
        },
        "item": {
          "id": "9c7e9011-624a-448c-a7d9-06ddf4a4326d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4fd04b56-52dd-49bc-98b8-cf6e884f3c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51007c84-79a8-4526-bc4f-10262eb70762",
        "cursor": {
          "ref": "39941d27-dd04-4041-bfd3-53575e364d9b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "40579dd7-d0ce-4a3d-a7c3-11aaa9a13aef"
        },
        "item": {
          "id": "51007c84-79a8-4526-bc4f-10262eb70762",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "16a07132-a6bc-4078-b5aa-d0473c68cfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54970106-b1f6-40cb-9e2b-80ea3f4eb2da",
        "cursor": {
          "ref": "fdaebb67-aad2-4cf2-aa9e-168beaf5f5e2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "742822c7-406b-4b23-96e1-ef1bdf9122fc"
        },
        "item": {
          "id": "54970106-b1f6-40cb-9e2b-80ea3f4eb2da",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "507b50cb-1b37-45a5-9736-77d5d6e7c416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e82d992-a5f2-49f6-b353-4e207adbd2ca",
        "cursor": {
          "ref": "7bb9e1f8-c76e-4404-bf0a-1ab1b0ccc5ed",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "653b506b-1695-43ac-8548-b238560fe4b0"
        },
        "item": {
          "id": "2e82d992-a5f2-49f6-b353-4e207adbd2ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c38d38d-1c8f-49d4-9a87-f4f155596826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed72673-ba24-4f9c-8400-e9c96b6063a0",
        "cursor": {
          "ref": "3e3aab58-ca40-49a1-aa10-1efa1b09206b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "04db65ae-1850-41ee-b885-0d528b736fdd"
        },
        "item": {
          "id": "aed72673-ba24-4f9c-8400-e9c96b6063a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "88013655-ab4d-404a-aed9-32a123d65005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee259dc1-6653-4819-802e-92c2c5e1f1d3",
        "cursor": {
          "ref": "77778939-ce69-474c-b25f-9f82ca57ebc9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20be80a4-9ab9-473f-a8ab-4a121283ae3b"
        },
        "item": {
          "id": "ee259dc1-6653-4819-802e-92c2c5e1f1d3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d8241032-b081-4d2c-94d4-de60b7eaad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab2c231-7162-44cc-acf5-bfc68369308a",
        "cursor": {
          "ref": "e11de066-c949-41fc-a1a9-491a5f05c21a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2609b931-4e5d-4fd1-87b7-086cc402aa31"
        },
        "item": {
          "id": "dab2c231-7162-44cc-acf5-bfc68369308a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "29a435ed-d165-4554-8f2b-eaecef40bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c346ffb-007b-48e5-9ebe-92ad27f1a85d",
        "cursor": {
          "ref": "221c5574-8d38-4bf9-b98c-97785e745b58",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7a41dc32-3784-4bc1-bf8e-ab2106109626"
        },
        "item": {
          "id": "6c346ffb-007b-48e5-9ebe-92ad27f1a85d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "895dc868-f617-4e95-b6b5-609d79bedef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c6800e-d6e3-46e0-b8ac-983eca1f0095",
        "cursor": {
          "ref": "622fdaae-5397-4b31-83df-f5de7c7c3c36",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3592c69c-920c-409d-a1ec-15c4502e4429"
        },
        "item": {
          "id": "14c6800e-d6e3-46e0-b8ac-983eca1f0095",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b193c74b-23f7-4e3d-8908-b769af200c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b0ad3-ee2e-4ebd-bf75-3b2b617a1710",
        "cursor": {
          "ref": "1d8ea6ae-8c66-4a39-8749-552f35cdd559",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5f22eebf-7166-4c87-9cdd-8b09b5b81d80"
        },
        "item": {
          "id": "e55b0ad3-ee2e-4ebd-bf75-3b2b617a1710",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "035884b3-97b2-4528-bc3b-1e471197bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b823e1-1fff-4826-a2e6-846c7c972934",
        "cursor": {
          "ref": "6f3f6d59-1a78-4587-816c-c914d4e98fcb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "965b5dcb-f1b2-4f13-9104-b061b72c8ed4"
        },
        "item": {
          "id": "b6b823e1-1fff-4826-a2e6-846c7c972934",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e1f15ded-f193-48c8-a2d7-a76596c6ba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058072bc-0205-48ed-ba9e-0e48db5a7d39",
        "cursor": {
          "ref": "8b32dfff-06d2-4398-bded-47dc7bb7f7c6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "412eb638-15a2-4899-9b98-1e0e8579997b"
        },
        "item": {
          "id": "058072bc-0205-48ed-ba9e-0e48db5a7d39",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6f453845-cc71-49b5-932a-f5e225690b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5305ce-5924-4a88-81d2-a4de5798c2dc",
        "cursor": {
          "ref": "a8ed07fd-92e9-4d38-8ee4-3e61efaba5c7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ae7d1baf-3f3b-4156-af6b-1e4183d64925"
        },
        "item": {
          "id": "0a5305ce-5924-4a88-81d2-a4de5798c2dc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bc7491f5-3e51-4043-a076-1bd731b85cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842190de-8009-430a-bf76-3d2f59c29cfe",
        "cursor": {
          "ref": "7ac26570-42e6-4ab4-a8dc-804fec8a3ddb",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7696ef84-1aeb-4b94-a1d9-88a54301573e"
        },
        "item": {
          "id": "842190de-8009-430a-bf76-3d2f59c29cfe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5cf685f3-04b6-4f2a-9fa8-675ca3c00cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c323e-4681-4039-bc16-8cf7c15496c9",
        "cursor": {
          "ref": "cfa0d45e-b2db-4cb0-9e03-eb82733f74b2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0c72af4-334a-4a9b-8bd8-1717151d9749"
        },
        "item": {
          "id": "a72c323e-4681-4039-bc16-8cf7c15496c9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37f40851-1bd9-4110-8d9a-a0f6ef0cf0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e09ab9-492e-42e5-a9da-7f4fc1d1c705",
        "cursor": {
          "ref": "0fa062a0-34be-4b42-9a0c-19961c44c94f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ab526f0-74eb-490c-88f8-59821d2f5e71"
        },
        "item": {
          "id": "60e09ab9-492e-42e5-a9da-7f4fc1d1c705",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b17d1cb-6bc0-4500-a5eb-56a1cebf3dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1f96fd-8d9d-4f1f-990b-19ca91881b6f",
        "cursor": {
          "ref": "ffe0477b-39f2-4397-8f26-a0ab9b3f57ad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "da01e2d7-e8a9-4359-9023-5007f7bf48f7"
        },
        "item": {
          "id": "ed1f96fd-8d9d-4f1f-990b-19ca91881b6f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b3233593-8a9e-4f94-8d83-46746c88d78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d3b0d8-7bf3-4d1a-ac24-2c319b451c18",
        "cursor": {
          "ref": "281d622e-818c-441c-8570-f1a0256591ca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d81694f2-7964-403f-988e-ad416a65c963"
        },
        "item": {
          "id": "b8d3b0d8-7bf3-4d1a-ac24-2c319b451c18",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2099d1f8-2381-41f8-8806-a0ebb9248c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5221ba-d81f-448a-8cc5-27def5e069ad",
        "cursor": {
          "ref": "d3cc382a-2acf-464c-a5b4-650733f94eca",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "82699508-8d52-451c-92e3-f10ef4fcb098"
        },
        "item": {
          "id": "8f5221ba-d81f-448a-8cc5-27def5e069ad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "28a04597-d660-46af-b5a6-a8c77bbc9170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf03705-7142-46e3-9ef5-7e507aa18671",
        "cursor": {
          "ref": "ec87179c-a448-4ab5-93fe-d669cd7807a0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2e340ae6-ea3a-4ae4-bbe1-526c35423ec5"
        },
        "item": {
          "id": "6cf03705-7142-46e3-9ef5-7e507aa18671",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5548f65b-f097-449d-820b-04087f16827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5471415a-989a-4948-af6f-615cf0825c5f",
        "cursor": {
          "ref": "c33a1174-e5c8-4f1e-a58c-ff15197e1e47",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f09361c-12b3-4915-878c-5e0b6c8e31eb"
        },
        "item": {
          "id": "5471415a-989a-4948-af6f-615cf0825c5f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4993473d-c008-4843-aea3-f5f366f0ef52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc645de-7fd3-4a4d-bf6f-dffb7c1b25e9",
        "cursor": {
          "ref": "a9d69193-d45c-4626-9b0a-353179323de3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "db848dc2-4674-4dad-8b60-9b929ec7eeb8"
        },
        "item": {
          "id": "bcc645de-7fd3-4a4d-bf6f-dffb7c1b25e9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a648a547-a49c-4ffe-8566-5ceca6b4a930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ed6a83-55a5-4e22-90e3-c41e550dd457",
        "cursor": {
          "ref": "fa85da92-5d09-4fb3-84aa-668009dce031",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f5d87f9-185e-4ee8-aff7-9349d6c96bb9"
        },
        "item": {
          "id": "81ed6a83-55a5-4e22-90e3-c41e550dd457",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "82c1dfe1-9144-404b-899a-a5fcf9501b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ad36b-e961-4473-8fdf-b5df3d31a0a7",
        "cursor": {
          "ref": "e3dd863f-44ee-4fb0-ac84-dd638fab8edf",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a91d8ddb-1f0b-4625-827a-634698a364ab"
        },
        "item": {
          "id": "f36ad36b-e961-4473-8fdf-b5df3d31a0a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08d2a7fd-349b-4666-baea-b99a3bb002d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf240d49-b052-47ca-8d40-8a9063010248",
        "cursor": {
          "ref": "4073ff49-df75-481b-b258-584c8db54405",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1ecc48e6-5fb5-4816-be02-95b0298fea70"
        },
        "item": {
          "id": "bf240d49-b052-47ca-8d40-8a9063010248",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d9e83598-742d-49ec-b58b-23514a78320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e61080-3d94-4b4f-ab81-4a6301bd881e",
        "cursor": {
          "ref": "626eb36e-0181-402c-82e1-875cd16cf25c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "551f334c-a84a-4b3a-804a-cf43a8572213"
        },
        "item": {
          "id": "65e61080-3d94-4b4f-ab81-4a6301bd881e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "177d3461-ae39-4daa-8b0d-d1ba97e39d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfda1b5e-1f83-4f20-8272-2e5a1ffeb964",
        "cursor": {
          "ref": "7158a8fb-ef0f-41fc-9a2e-4a0b6af7f20e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c7fd1dfd-a5a9-4e81-8b55-2e9024212581"
        },
        "item": {
          "id": "cfda1b5e-1f83-4f20-8272-2e5a1ffeb964",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "417d26ec-4968-4be2-8e4e-7bbf06cf80a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd694e51-6ee8-47c8-b75d-214f43eab743",
        "cursor": {
          "ref": "742051ce-942f-417d-a14b-6ac9b4452038",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ec239af-08ca-421f-a1c0-9c7b625568ba"
        },
        "item": {
          "id": "fd694e51-6ee8-47c8-b75d-214f43eab743",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "44e5af28-9f11-4336-90d7-5dce134f8487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57c946c-e091-449b-89e4-485cc514c00e",
        "cursor": {
          "ref": "e8941d1c-be30-4947-8519-b1aef16b3a67",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0f14786c-d43b-4a66-a3da-d09939a7a58a"
        },
        "item": {
          "id": "f57c946c-e091-449b-89e4-485cc514c00e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "10798920-b5ad-409d-82d9-579f9a97223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb6f20d-846b-4f43-958b-528af6b3b8f3",
        "cursor": {
          "ref": "1b605b0f-99b0-4378-9219-76a27e4c3d47",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5517df56-b1b6-4527-bf07-4cfb7f8ece01"
        },
        "item": {
          "id": "1bb6f20d-846b-4f43-958b-528af6b3b8f3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9d9ac5dc-4d30-44e1-b804-3a6825a7cfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee37252-67cf-4f87-90dc-b8770a6f9aef",
        "cursor": {
          "ref": "0eff8654-ba2b-417e-80e3-589a8278ade8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "64cabc1e-ab2f-416b-8747-4a138cabb119"
        },
        "item": {
          "id": "dee37252-67cf-4f87-90dc-b8770a6f9aef",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "30a60126-a63a-44d3-91a3-d25167708ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df07e2a-0075-4600-8f2c-9e3e416f1085",
        "cursor": {
          "ref": "b2e134b4-14a3-4420-87c0-c55dce7b12b8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e77523fa-3625-4ddf-9ecb-3e19a80beba6"
        },
        "item": {
          "id": "4df07e2a-0075-4600-8f2c-9e3e416f1085",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33a6eebe-5912-4c6b-9ba5-371daef82c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bbe58a-748a-4689-b300-9d28a91f6a2d",
        "cursor": {
          "ref": "f2bbdc17-3fe1-4f2f-a269-9fd48a04d437",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dac79ce0-0d6a-417f-95d7-e8ed371939cc"
        },
        "item": {
          "id": "74bbe58a-748a-4689-b300-9d28a91f6a2d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c731baf5-8726-47f2-ac93-1815e8fb2d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91803612-2ca2-4cfb-984e-d43d9b572b56",
        "cursor": {
          "ref": "c3bff0d4-c78c-4ed8-a692-af883212c63a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "09526086-05b6-4fb6-b2f1-57d919afb1dc"
        },
        "item": {
          "id": "91803612-2ca2-4cfb-984e-d43d9b572b56",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "800ec31c-139d-44d2-9526-1dccb6d6ce79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32488d04-3f9f-494e-bd82-3927dcac5653",
        "cursor": {
          "ref": "35f685d7-2e1f-4f4a-987f-a6095fb9f9ae",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cc19acdb-d463-4e03-b441-9c7ae4a2998c"
        },
        "item": {
          "id": "32488d04-3f9f-494e-bd82-3927dcac5653",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b2d506e-1a76-4a53-9f0a-191b4e1aac27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af527751-2485-452a-813c-1d7ae0ae3957",
        "cursor": {
          "ref": "b225f67d-1682-42b1-970a-4be5bb4cdbb0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "00082632-f1aa-437a-bb71-b03b978d80b0"
        },
        "item": {
          "id": "af527751-2485-452a-813c-1d7ae0ae3957",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e7232c6c-6243-4534-a5d0-23aebea14f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28fb740-c491-4691-8f3f-b89275a36b64",
        "cursor": {
          "ref": "f719fbd5-25a9-4bd2-b260-e12ecb19ff2d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a29e2b48-ac2a-4649-999c-8184b608a4f9"
        },
        "item": {
          "id": "b28fb740-c491-4691-8f3f-b89275a36b64",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccf17feb-26b5-481a-886c-beed5e6cb986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390767f9-37c0-48a7-9085-04d40512fa6e",
        "cursor": {
          "ref": "3a3d3b26-cf4e-434b-99cb-2fd74d040da8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7301f93d-3a36-4268-ae1e-2837a611e999"
        },
        "item": {
          "id": "390767f9-37c0-48a7-9085-04d40512fa6e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82b90e18-729a-4a93-a748-f70462250148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3e072-30ff-4c77-aa81-094b55462047",
        "cursor": {
          "ref": "cf3bd313-5468-4112-b9a4-9819b1f0a6dd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "456ff0c3-b107-4484-8add-6253adecb4b1"
        },
        "item": {
          "id": "82f3e072-30ff-4c77-aa81-094b55462047",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2ecb6e2e-ee44-454f-bd4d-76ba524ceae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faff6b8-3e53-4c60-9b08-514bf911302a",
        "cursor": {
          "ref": "f82d7a17-2bc5-4907-ab97-0b0b0109e5ac",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "945738cb-8988-422c-b60a-199bc986c670"
        },
        "item": {
          "id": "6faff6b8-3e53-4c60-9b08-514bf911302a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d655354f-60dc-468a-82eb-69d4d1bf6c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35661198-71d6-464a-aa42-4eff4c0224dc",
        "cursor": {
          "ref": "78056bd2-0880-4088-8708-125f0edb106d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3f94bc61-8b49-4451-92e4-d922426c698f"
        },
        "item": {
          "id": "35661198-71d6-464a-aa42-4eff4c0224dc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "826a4800-5cd8-4f2d-a3d1-9c404de22733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3bb298-f9df-4e90-83cf-8e64890272ba",
        "cursor": {
          "ref": "90e16f54-af28-426a-95ee-1a1e13051bf0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b230a0e1-c1d1-47ed-8549-37451f335d87"
        },
        "item": {
          "id": "2f3bb298-f9df-4e90-83cf-8e64890272ba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4ffd36b1-7960-4eb2-b975-6a1d623babe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfc86f-59b3-4c44-863f-a84c602fcd60",
        "cursor": {
          "ref": "b82f2225-6b7f-4d5a-a411-b18a7aaedc8f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "51be8352-03b1-4dc9-a785-50f96c47e90d"
        },
        "item": {
          "id": "46dfc86f-59b3-4c44-863f-a84c602fcd60",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c9c6badb-a24d-40a8-aee6-3a7cdb58b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea2c6a-88e8-495f-94d4-013c01f40bf6",
        "cursor": {
          "ref": "c3a39cbf-e8c7-425b-aa35-79e71159438d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "95a330f4-2462-4666-b24e-8ce9a51ea0fa"
        },
        "item": {
          "id": "31ea2c6a-88e8-495f-94d4-013c01f40bf6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "27f1d2b6-404f-4384-9c8c-33fde78207cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e010440-1030-4f6b-99fb-ae269520fb8e",
        "cursor": {
          "ref": "b69a7832-e5af-4ab5-a21a-2fbd608283db",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1c818100-6445-4d1e-a5f3-9fb176782a38"
        },
        "item": {
          "id": "7e010440-1030-4f6b-99fb-ae269520fb8e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "06714e1d-3190-44c6-af91-c567b573373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e7b5c4-aa7c-4504-8b81-b1b89a233118",
        "cursor": {
          "ref": "334f37f6-afd2-4df3-a693-2959c9a7c369",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "30c87a2a-1b23-49bd-a68e-fe0e0efd7248"
        },
        "item": {
          "id": "a7e7b5c4-aa7c-4504-8b81-b1b89a233118",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f19deca0-0bdc-465a-812b-4e235f482654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3157d4-7023-4076-914c-66fa49270a57",
        "cursor": {
          "ref": "e7f23222-b121-4588-a0ad-5e9d8024edbd",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "45150ea5-e681-4f22-9f64-b102167c86c6"
        },
        "item": {
          "id": "af3157d4-7023-4076-914c-66fa49270a57",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f38ec859-2109-427f-96a9-125be8f08c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71e4f94-cddf-4816-8a8e-c6aa131105fa",
        "cursor": {
          "ref": "bd0df7bb-4bc8-4997-8396-ddeb632506fa",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0f83f4ab-4cc8-4495-9074-8a32b4ca02d3"
        },
        "item": {
          "id": "a71e4f94-cddf-4816-8a8e-c6aa131105fa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "87275667-1794-45c0-beaf-837fcba9aa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a1e9e-7ee3-436d-a103-ca6f9a772b2b",
        "cursor": {
          "ref": "7a0b979c-70c3-4008-9625-09915290725f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2229dac6-4001-4aef-9d2d-ae67acef880c"
        },
        "item": {
          "id": "419a1e9e-7ee3-436d-a103-ca6f9a772b2b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a24f407c-9334-47d5-8def-4b50061c9f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eb4bb3-7492-4ddf-bbbe-2e5b37f00866",
        "cursor": {
          "ref": "13b50861-9725-4849-9fc9-e182c94d8ffa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "df881bcd-251c-4825-8ab1-ab75eff6f9e6"
        },
        "item": {
          "id": "96eb4bb3-7492-4ddf-bbbe-2e5b37f00866",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e705d970-41c0-48e4-bae2-12cee2793910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66a5417-9055-4b1d-95d5-940a42da7f8c",
        "cursor": {
          "ref": "86c94b6b-1f0d-4b9d-acde-34663ae4ec6b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b8958c44-291f-4a52-9839-f7ed8f9aabc3"
        },
        "item": {
          "id": "b66a5417-9055-4b1d-95d5-940a42da7f8c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d0082b6d-db1c-46d8-91d4-7af058fa7624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d7580-df80-4c45-863c-97140b00e618",
        "cursor": {
          "ref": "46809cfd-8fcd-4c5e-994b-b86bfb653584",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b4c1c274-db6a-4045-83c2-462f5aeeeff2"
        },
        "item": {
          "id": "773d7580-df80-4c45-863c-97140b00e618",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ddb73079-0738-4de4-825d-9dc5c9dc49b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0025bc-4f81-471b-85e8-a70775bba006",
        "cursor": {
          "ref": "a0c8f139-362e-431d-8cbf-36a6389f5848",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a73b6465-60b0-412c-b383-6b77ce06c058"
        },
        "item": {
          "id": "7f0025bc-4f81-471b-85e8-a70775bba006",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d8c41d39-a2ce-479f-a70e-91ba267d51c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898d440a-d4af-45a6-8686-b7d2ec26464a",
        "cursor": {
          "ref": "64caad65-b480-44a6-9c2e-c87dcc47e143",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db62f5dd-171a-439f-beb3-4e9f5e1c6a82"
        },
        "item": {
          "id": "898d440a-d4af-45a6-8686-b7d2ec26464a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aad6f85c-0fb2-4d4f-b70c-ce937dcfc1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ae4b2f-93f2-4fce-8678-75166d742088",
        "cursor": {
          "ref": "88f517e7-0955-41b1-a1fa-31cf897aebf6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6a3532b8-a7de-4a47-a73e-1c48c7de9c3b"
        },
        "item": {
          "id": "c4ae4b2f-93f2-4fce-8678-75166d742088",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "280f441a-151a-4481-b932-06e65406f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeb1caf-fceb-493c-ad93-b0f44628c452",
        "cursor": {
          "ref": "df2aba78-67bd-4570-94aa-c1b67337d1fc",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6c76271c-cfbc-4fb0-a965-bb9e9e381ae7"
        },
        "item": {
          "id": "caeb1caf-fceb-493c-ad93-b0f44628c452",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4f82091d-61b6-4f91-94bf-24c6f7b29495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998cc13b-3a9d-4664-be84-e676d57d5f77",
        "cursor": {
          "ref": "79973442-9a58-4b83-904e-ec3de7c054d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "814e46e1-93dd-43f6-af9e-2e56cc5d6876"
        },
        "item": {
          "id": "998cc13b-3a9d-4664-be84-e676d57d5f77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "352e842e-16bf-45c4-8c38-23dc32de42f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db05dbe-6611-4184-80ed-c7066f0b92ea",
        "cursor": {
          "ref": "ec1a4e37-29e4-43ff-8bc1-5252e9651988",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2c379dbf-020c-493e-8154-0100a298b556"
        },
        "item": {
          "id": "3db05dbe-6611-4184-80ed-c7066f0b92ea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e49fed3-672a-46cd-b21b-d8b85a4b82fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a902fa6-72f2-419b-b4c9-24cfe2607300",
        "cursor": {
          "ref": "f694ff0e-95c7-48dc-a91e-c2247830a1ab",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "38401cfd-bc89-4f61-b022-14d100df3ce8"
        },
        "item": {
          "id": "5a902fa6-72f2-419b-b4c9-24cfe2607300",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "721e12b0-bd2e-4fd3-a146-53e5fc444f38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c646aa-b0bc-4658-afdb-2a0bf7a16512",
        "cursor": {
          "ref": "3b0b9146-5444-4715-be69-cd8f9184bda5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "450d7be1-ce0f-477f-befd-093a6bc42fb2"
        },
        "item": {
          "id": "a5c646aa-b0bc-4658-afdb-2a0bf7a16512",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c9294176-0472-47a3-832f-b39c472cdd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ae9f06ad-bf3b-45b7-99d4-fd770458bc61",
        "cursor": {
          "ref": "67de9699-19bb-4b47-a3ae-374fc39b1411",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9fec9f75-7c44-4656-b2b9-6ec1653945f8"
        },
        "item": {
          "id": "ae9f06ad-bf3b-45b7-99d4-fd770458bc61",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9d458b68-206d-4a33-9ab2-da7ff9f9465e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4979e8c1-93d2-4bc0-b1ea-17ac62453b1f",
        "cursor": {
          "ref": "966cf656-2d0a-4148-9b81-02814c8e2e92",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "19c13a88-4545-4ce7-bd50-23ac2ca001ff"
        },
        "item": {
          "id": "4979e8c1-93d2-4bc0-b1ea-17ac62453b1f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1db11a25-88a8-4ce1-b42a-bb23911878e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c629e6f6-1734-4a2f-877e-42899920474f",
        "cursor": {
          "ref": "984ef351-1ce3-4224-968d-de2e70346b74",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f73f703e-5a23-4373-a8bf-fc40e980f6f8"
        },
        "item": {
          "id": "c629e6f6-1734-4a2f-877e-42899920474f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f8c7340-3096-4bf6-8eb3-b9e2f7212cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e631bf5c-44de-4422-9d03-751c7cb1d5f4",
        "cursor": {
          "ref": "b2ac66a5-75cc-481f-abd1-50a0a082ebf9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a2d068d-89d1-47a3-b153-8815451e806b"
        },
        "item": {
          "id": "e631bf5c-44de-4422-9d03-751c7cb1d5f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ab29ffd-e157-4e05-a79f-df49ca588a9d",
          "status": "Created",
          "code": 201,
          "responseTime": 5169,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42267ec6-f6ac-450f-9487-adc0292fe121",
        "cursor": {
          "ref": "b8e66ed7-184b-4347-9039-ad6c4137b698",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ab4da656-0bb6-4ce6-a300-bba2892126d8"
        },
        "item": {
          "id": "42267ec6-f6ac-450f-9487-adc0292fe121",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "99c17590-f3f6-4955-b7a3-03dc25ee17a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4778d15f-cdf3-4638-8718-128684817518",
        "cursor": {
          "ref": "a77dd54d-fb9f-40fd-b3a8-ed7c3b19b9a4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5865695a-d817-4ea6-b04c-6c5a8fa7adba"
        },
        "item": {
          "id": "4778d15f-cdf3-4638-8718-128684817518",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "387bdc25-18d3-438f-9279-1db807926ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "64c74199-117a-40b8-920f-87162889d232",
        "cursor": {
          "ref": "5437c23c-19e8-49e5-82ec-e47cd99892ba",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c4807265-ef02-4a80-b2be-56d06f638d1c"
        },
        "item": {
          "id": "64c74199-117a-40b8-920f-87162889d232",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0589871f-b3fd-4b6c-96ba-463c3f45b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b0b0c0-44c8-47df-8ea6-30bf9b182006",
        "cursor": {
          "ref": "989fed95-102e-4762-b2b7-03e1d3df0137",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc159852-08a5-4f88-9d6a-93a00df43d19"
        },
        "item": {
          "id": "93b0b0c0-44c8-47df-8ea6-30bf9b182006",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4cbb4cb2-f9f8-4ce3-bb4f-69c8b8d32d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1504c3-05f8-4f64-b7b5-09470e9b557c",
        "cursor": {
          "ref": "3284f3af-9dff-43ad-8247-79851be47def",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a87ea581-a350-4d5e-b291-d9fd015cb5f9"
        },
        "item": {
          "id": "2d1504c3-05f8-4f64-b7b5-09470e9b557c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "236b4069-500b-4fe5-b148-00b7c19e3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4074b2-b3a8-4f3b-9c94-88a59371b57e",
        "cursor": {
          "ref": "a0b11807-c303-4786-b734-6bb61f08208e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6cb2ed46-260c-40fb-bfaa-b4951b143960"
        },
        "item": {
          "id": "ab4074b2-b3a8-4f3b-9c94-88a59371b57e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "806acdc1-c5b9-44df-9794-32e9b003e8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d423b31-915a-4251-a287-b6759a6a54e7",
        "cursor": {
          "ref": "39eb6e5c-d957-4182-aa63-5276a65de030",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f450ac0f-2830-476e-85c0-156aed10ff6a"
        },
        "item": {
          "id": "4d423b31-915a-4251-a287-b6759a6a54e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3821bed2-0d7a-424f-97cd-438fc3714a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8ba3b9-c1b2-4de4-9080-aba47308894f",
        "cursor": {
          "ref": "37a2d26e-f5a3-4887-a674-b66693d058a1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9fe92cd5-b5fa-4be7-b269-938e6fc2ac5e"
        },
        "item": {
          "id": "0f8ba3b9-c1b2-4de4-9080-aba47308894f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "127e3712-a39e-4722-b4cf-485d339b4664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851314d4-8dc8-40fe-91ca-894191d3cd4b",
        "cursor": {
          "ref": "9c5572c2-0756-4210-b5d1-06824a3198e8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "665f1323-9a7b-4557-b203-e4867371a808"
        },
        "item": {
          "id": "851314d4-8dc8-40fe-91ca-894191d3cd4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c499cb6-1800-460f-8e16-e175c5c94b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1654c30a-0e7c-49f7-8b46-4f9b9136cf7b",
        "cursor": {
          "ref": "5e01b01c-56a2-41fc-8d76-d1cd812d7a2f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c2b3894-d77e-4f61-88f0-600a28f16c1c"
        },
        "item": {
          "id": "1654c30a-0e7c-49f7-8b46-4f9b9136cf7b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b1e19bd5-89d0-4e58-a0ea-8ac318c167d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a587898c-803d-4496-b525-d1fc6fab18c0",
        "cursor": {
          "ref": "7327bf33-71e8-4b6c-a0d4-a6dd9e05b9ae",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a5bb1482-44bb-45bd-b0c7-894950254856"
        },
        "item": {
          "id": "a587898c-803d-4496-b525-d1fc6fab18c0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7563fb2c-02ae-4fba-9ec5-99fb0c14328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a759b5-0eb2-4d54-a615-2130bec18384",
        "cursor": {
          "ref": "618185f6-7543-4ba2-87e3-620e238625d2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dac56b24-b479-4159-a7c7-5cbf968c03da"
        },
        "item": {
          "id": "e3a759b5-0eb2-4d54-a615-2130bec18384",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a24a120f-8603-48c1-a2c3-dd8fa6cf9921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc9073-d96f-4341-bb9b-01e649e6d95a",
        "cursor": {
          "ref": "39aa193a-e601-4638-9289-1435edc6c35f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b75eaa4b-d2be-47cf-8087-939b990f494d"
        },
        "item": {
          "id": "00dc9073-d96f-4341-bb9b-01e649e6d95a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96fc6ab0-06e2-4962-84ab-751857865cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7049a-c127-4430-9ae0-875626330a4b",
        "cursor": {
          "ref": "62a29129-a737-4e3b-bdd2-07f90668ae33",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "67e69ad2-6a0f-4d2a-86ab-c2d890c89d8a"
        },
        "item": {
          "id": "9cb7049a-c127-4430-9ae0-875626330a4b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87599587-38ba-4b7a-924b-567081c664ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3cf824-6ce1-49ef-99b5-0ecb3777f1fe",
        "cursor": {
          "ref": "cc35c5f0-7502-44f4-b25f-165e170b4fd4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cf28f1bd-5df6-4e21-927d-e9ee76f0203c"
        },
        "item": {
          "id": "8d3cf824-6ce1-49ef-99b5-0ecb3777f1fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc656f9e-2fbb-47be-9171-fa10d2162124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c41738c-13d0-4311-a4d9-8ba98ded54bd",
        "cursor": {
          "ref": "0877082e-34b2-40eb-b8f9-f076a0fc6735",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1a856ce5-8c43-4055-9ebe-0bba1001e253"
        },
        "item": {
          "id": "7c41738c-13d0-4311-a4d9-8ba98ded54bd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c80e31dc-8254-47d3-8b9d-47117ac1526a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4534e1c-f75e-4920-85f4-51a72a6b7b33",
        "cursor": {
          "ref": "6edc1ee1-9ba7-4248-b114-1f0d89ccc47d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "63901e47-c469-4018-acc9-55aac6308460"
        },
        "item": {
          "id": "a4534e1c-f75e-4920-85f4-51a72a6b7b33",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27ae97d9-c6c7-4fa9-87c5-0b959f236dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6b84e4-0ce0-4d94-8bfb-536f185e2170",
        "cursor": {
          "ref": "7f6b2a04-365a-4d32-8b32-ac82193703b2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24385954-3571-4a59-8017-3841b26a27a9"
        },
        "item": {
          "id": "cc6b84e4-0ce0-4d94-8bfb-536f185e2170",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a0e9dd4-c8e1-4469-9442-0b4b335ee418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f9a3e-9139-4193-907f-59f1e6e5f690",
        "cursor": {
          "ref": "b32d5d80-c8e8-489a-b74e-d447e8465a1b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "295558f4-7278-44bb-9ba3-9abc2d6b7da0"
        },
        "item": {
          "id": "7a4f9a3e-9139-4193-907f-59f1e6e5f690",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "783b7d00-1f9c-47ed-a373-df71d6e69c71",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8bc03bb7-f4de-4616-842e-55ffeff8ecdc",
        "cursor": {
          "ref": "2c0ae76f-c8f7-4266-bfe8-49434ba22af4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e6141fe0-ca43-47fa-9795-58815b658260"
        },
        "item": {
          "id": "8bc03bb7-f4de-4616-842e-55ffeff8ecdc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0a8c20d2-aa7c-4fb1-bc3d-72513c6444f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c731560-d4f8-4250-ae9a-71e2d94c201d",
        "cursor": {
          "ref": "f48f0016-07c6-48fb-b343-27f52d5418f6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd449c86-d7fd-41f8-ad25-ee423d928be7"
        },
        "item": {
          "id": "1c731560-d4f8-4250-ae9a-71e2d94c201d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8eb407f-decb-4b66-b645-f2423168fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704f77d0-488e-468d-b61c-eafd90324e3f",
        "cursor": {
          "ref": "eee789c0-9af4-4311-b58e-23f7128a6862",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "519c9bb1-b01c-4d78-8c6b-7c268838ef15"
        },
        "item": {
          "id": "704f77d0-488e-468d-b61c-eafd90324e3f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "025852d7-75e2-4dab-988b-5223caeb74f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de3e438-4e70-4a91-8d2e-3daa5b1bb355",
        "cursor": {
          "ref": "6bd456b1-25aa-463d-b0e4-13b72e9665cf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42110c04-f380-411d-b6dd-ab63bf6756ff"
        },
        "item": {
          "id": "8de3e438-4e70-4a91-8d2e-3daa5b1bb355",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6dc6ec2b-0f4f-4297-8bdc-8edf111923fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f22260-67d1-48be-a694-a0adc33b71c3",
        "cursor": {
          "ref": "3f47985d-5f2c-4ef2-9b88-687ed90cb076",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c4cc6082-5966-47c8-9bb2-c9d3a3f27a6c"
        },
        "item": {
          "id": "72f22260-67d1-48be-a694-a0adc33b71c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "08e630c5-ac0c-408a-bab7-acddf5bc522f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e730a85-f706-4eec-9792-54bb52bd155d",
        "cursor": {
          "ref": "cb327e01-9838-42e0-be0d-42e994c36dc5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afde7783-25f2-4f3d-b8ad-130b0a01f50f"
        },
        "item": {
          "id": "9e730a85-f706-4eec-9792-54bb52bd155d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5f58d0c6-10f3-4d5a-beba-9010e4cb4b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f765fba2-3e4b-41d5-98a4-86b0a6a39091",
        "cursor": {
          "ref": "65c6be6a-413c-407b-9a51-bb667c6763ef",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b2610dd4-1b23-4eb7-809f-2c76d9e7862b"
        },
        "item": {
          "id": "f765fba2-3e4b-41d5-98a4-86b0a6a39091",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea68c749-94e4-43b3-b122-5ded78a2f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dc64d8-b6c2-431b-84ac-6506351f8042",
        "cursor": {
          "ref": "4549c5c6-4b14-4b53-981c-7b857659046c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1875b114-b011-433d-92a4-03bdb40dc554"
        },
        "item": {
          "id": "29dc64d8-b6c2-431b-84ac-6506351f8042",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "83e6b48f-f36b-48ce-b217-66902335cc52",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c676486f-00ae-40eb-9452-64e4d78ffbf5",
        "cursor": {
          "ref": "fc0da097-6833-478c-a76c-3d24ba4ba862",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b1663336-88e6-4866-a635-9b27e4ee21c8"
        },
        "item": {
          "id": "c676486f-00ae-40eb-9452-64e4d78ffbf5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5dca7493-8677-48be-8ee7-ae53bf8b9223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df1bb2e-2646-46a4-9bb3-6befbd81f3bb",
        "cursor": {
          "ref": "49b95e6a-e2df-424a-a0ff-67b2ade0d547",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "411768d4-2275-481e-b995-e79bb1cc9e7c"
        },
        "item": {
          "id": "1df1bb2e-2646-46a4-9bb3-6befbd81f3bb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1a0ad4b-4135-4f26-bd3d-ade26a3d5e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8847196a-9556-45ae-b2ec-caada8965f7c",
        "cursor": {
          "ref": "25ef3730-678a-48aa-af30-53e3fa43b3ae",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b00ba28-56d8-4266-a0c7-7a4ed3112f57"
        },
        "item": {
          "id": "8847196a-9556-45ae-b2ec-caada8965f7c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e1198f77-42f4-4832-b3b7-8c4aa07977d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693f7503-bbbe-41c7-9652-4695785dc635",
        "cursor": {
          "ref": "4c941813-041f-4737-a7c9-93dbfa119f33",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2126c097-1557-4112-91a6-1798c9c5417f"
        },
        "item": {
          "id": "693f7503-bbbe-41c7-9652-4695785dc635",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0da978c4-c104-4d75-b3b4-c72400808610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd9802-6249-49e5-a6e3-2236e00b6876",
        "cursor": {
          "ref": "a967e871-68dc-45e8-9fa6-4bf52dc0f3ad",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "01d807de-a7ee-4753-b8d0-d99b7037bb83"
        },
        "item": {
          "id": "1ccd9802-6249-49e5-a6e3-2236e00b6876",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e925d373-3d94-4bfd-aa30-bf69a4179cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7331d3-7fe8-4f16-8426-20eb55d811d0",
        "cursor": {
          "ref": "3a4d2ccd-d848-4938-b743-e8813fb243ba",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "96085372-8a29-4d21-9760-6baf7fc6dbe7"
        },
        "item": {
          "id": "1f7331d3-7fe8-4f16-8426-20eb55d811d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d9419d25-c2cf-47f7-9d55-bdf2c3df8f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db905c68-72c3-4f26-9376-a24c8059de61",
        "cursor": {
          "ref": "062f02e5-c922-4953-ae0f-7e6aa2b62467",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "772aa940-9a68-4b7e-a727-1ea18645812b"
        },
        "item": {
          "id": "db905c68-72c3-4f26-9376-a24c8059de61",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a0814149-9eaf-40e6-8433-ab8c35001cae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 123,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "826282cf-8d34-4ff5-b8f1-840e75c21a0d",
        "cursor": {
          "ref": "b84d4c68-d0ce-450d-ad4d-93d546592b1b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2243b198-0c11-48e5-87bc-06d597c706dd"
        },
        "item": {
          "id": "826282cf-8d34-4ff5-b8f1-840e75c21a0d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1323c204-6327-45f9-b643-3dcb8a2de1d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370b64f3-213d-4ad4-b8df-56fae0b0bc35",
        "cursor": {
          "ref": "98501314-2e76-4ecc-b7fc-984bb75027b4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "892faf54-9016-44f6-b12d-1fb45c36c8c2"
        },
        "item": {
          "id": "370b64f3-213d-4ad4-b8df-56fae0b0bc35",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd76aaed-1881-4b94-b6cb-a411a76275bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d324b5d8-72c6-4a13-aea7-3a39f7738169",
        "cursor": {
          "ref": "ba3b1d86-d7c5-4019-83f3-cd8e8d3ac7ed",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "657a1b50-1a48-4e72-af02-a98a9c25ff0d"
        },
        "item": {
          "id": "d324b5d8-72c6-4a13-aea7-3a39f7738169",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f4f4a72-4f81-403e-a0a8-80a3a1b73dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ee11e-6fa5-4330-9a03-1535fca2db23",
        "cursor": {
          "ref": "41cde92b-6652-4464-9bf1-58566c9544c7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "52b2366e-e0df-43a5-b432-7a871fd1b972"
        },
        "item": {
          "id": "aa9ee11e-6fa5-4330-9a03-1535fca2db23",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9225576a-9867-46cf-bd8a-05031c41b6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38037397-84e3-46e1-b725-665ba01e1454",
        "cursor": {
          "ref": "733b13f0-d07d-4ed9-900d-abb5ef240dfd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1c1cf2c2-3ec1-4c1e-9c21-0aa5226ba95a"
        },
        "item": {
          "id": "38037397-84e3-46e1-b725-665ba01e1454",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9d2f636b-8f47-4f64-a6ae-68b6b1104727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36778247-940a-43b2-b39a-8a98dccd1643",
        "cursor": {
          "ref": "92bd5bfd-6671-4015-9e80-9d630b7995a1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b49b16c4-84b0-4f03-939c-ca87cca8d858"
        },
        "item": {
          "id": "36778247-940a-43b2-b39a-8a98dccd1643",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fff3a635-0d95-44f7-bfb4-562e596e6432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2814244-f6b6-4d40-97a1-9cda9255f91b",
        "cursor": {
          "ref": "07d30536-5b4a-4984-a142-d72762ea9d9f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "15b42ad9-bbfd-4a52-94a4-283498d1977c"
        },
        "item": {
          "id": "c2814244-f6b6-4d40-97a1-9cda9255f91b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7114748e-afa9-42b7-ae64-7d23ccbdeca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694cf1a-0d76-481a-a01f-5e8da644fef2",
        "cursor": {
          "ref": "a7716420-021d-41d4-8bb2-7acefd5a6809",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1f7f6852-acf8-4caa-8b27-80071afd33f1"
        },
        "item": {
          "id": "c694cf1a-0d76-481a-a01f-5e8da644fef2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "04cec0fb-47a3-4cb1-b12b-ef25f71a0930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565533f2-efeb-4fc9-b11e-66633674ff7c",
        "cursor": {
          "ref": "f22b23e6-24f6-47de-9ba7-d3f570f1d1fc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "69927983-c973-414a-b06a-ef91d61c22e7"
        },
        "item": {
          "id": "565533f2-efeb-4fc9-b11e-66633674ff7c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2135cbad-b572-4033-9a29-6da43858eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c1a448-2f64-4e93-904a-b821b51c5852",
        "cursor": {
          "ref": "a3e88c10-33d5-4ed1-b6ca-2358959b31f0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fdfd03ec-d892-4dd8-89e2-510f2332639d"
        },
        "item": {
          "id": "78c1a448-2f64-4e93-904a-b821b51c5852",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d87894b-eacc-43a1-b935-de7f22a123a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4673f0-582d-4aed-9578-e3e92f0cdb34",
        "cursor": {
          "ref": "e06b4d33-6b0b-4d48-b3d3-fb2cf285fc38",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "22560260-b07b-4ba5-bb46-b353132b8b47"
        },
        "item": {
          "id": "8f4673f0-582d-4aed-9578-e3e92f0cdb34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "abfd7f20-4754-4999-9da4-420b037bf230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af338e-a632-4199-9b7c-caaf6210b0be",
        "cursor": {
          "ref": "458ad160-01fd-45d6-9660-b92ac1422221",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ca5aaba2-609e-4aff-8763-e8dcd81e71ab"
        },
        "item": {
          "id": "31af338e-a632-4199-9b7c-caaf6210b0be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8312b1c5-e59b-4c2f-956e-27689c4b2846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade1d717-e6c9-4dab-99d0-7478c38468bb",
        "cursor": {
          "ref": "ac3b8e2f-f50b-4e79-8aec-268c9753da10",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e249a99-b2be-4866-8c81-41c2f9803983"
        },
        "item": {
          "id": "ade1d717-e6c9-4dab-99d0-7478c38468bb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d93be0a8-823d-476a-80ea-4ae45accced2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99551bc4-1ece-42a8-bce3-4856ad66b37f",
        "cursor": {
          "ref": "2a2ddd7f-827b-45b5-80a0-3dfaebd37bf8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e0e28b1-1db8-41a4-9801-f50950c54bc2"
        },
        "item": {
          "id": "99551bc4-1ece-42a8-bce3-4856ad66b37f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "31431afb-f95e-4397-9913-c304b86a39c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06249437-3291-4c98-8efd-2eb6ab3aa3b8",
        "cursor": {
          "ref": "d6218438-a162-4c4d-a7af-7ca31fef9d3d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6363354a-89ee-4208-a0e9-bb7664168e15"
        },
        "item": {
          "id": "06249437-3291-4c98-8efd-2eb6ab3aa3b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "64e37308-be85-4c59-a222-25c5a201719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f289bd7-8c58-4285-be8e-7998bc5a0720",
        "cursor": {
          "ref": "0651c19a-7581-429c-89eb-b42a12b1402c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e997cacd-2381-4ea2-ba81-749f92c52f29"
        },
        "item": {
          "id": "7f289bd7-8c58-4285-be8e-7998bc5a0720",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b511ebee-40cf-4038-a05f-4ffcc5ee2047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b095db69-21ad-4177-9e94-d41eb9936151",
        "cursor": {
          "ref": "9f535bf9-0959-488c-b680-059424d96959",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0eeb86f8-75de-4ff9-acbf-84798034e65f"
        },
        "item": {
          "id": "b095db69-21ad-4177-9e94-d41eb9936151",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4ef2ddda-4210-46b1-9a71-28d358e0d2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44657599-4eb4-442f-be0e-408552e1a201",
        "cursor": {
          "ref": "3aac3242-9f16-4e08-aee3-96a18edec113",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "185124c4-3fd5-440e-b8ab-636c219b067b"
        },
        "item": {
          "id": "44657599-4eb4-442f-be0e-408552e1a201",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa5418f6-775f-477c-85f9-28eec059b975",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "661f2b94-baca-4b3a-9570-3f6415e82d74",
        "cursor": {
          "ref": "48bdb3a2-d35d-4aea-a2bd-23298a572d26",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "36a92eb7-cea2-4944-b6f8-7b6ce86e292f"
        },
        "item": {
          "id": "661f2b94-baca-4b3a-9570-3f6415e82d74",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0e31b8c4-17c9-40d0-940a-d26633708165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5676048-4e57-47ec-9720-33b8a097dd3d",
        "cursor": {
          "ref": "e33b43c3-4c43-4f53-9710-fcbaf96b6871",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "86f51951-8a2d-40ee-8382-810de95dbaf8"
        },
        "item": {
          "id": "d5676048-4e57-47ec-9720-33b8a097dd3d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa213305-d149-44b6-bf3a-790542da5b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa9d4bd-6190-4ad5-bd6f-1bd0f28833ed",
        "cursor": {
          "ref": "d4fbc9fb-ac22-4181-a93d-0c2949317324",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6fada12c-bf66-46d8-8c13-1342782c9bfc"
        },
        "item": {
          "id": "2fa9d4bd-6190-4ad5-bd6f-1bd0f28833ed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "138c3b8b-02f6-40d3-98e4-fac0af1322bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d71087-340c-4ae8-bb67-7da9628e23b6",
        "cursor": {
          "ref": "59b88e72-2c84-4229-ac0e-642f5711864a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fbf94c7c-046d-491d-a51f-7ab8353dd68e"
        },
        "item": {
          "id": "79d71087-340c-4ae8-bb67-7da9628e23b6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c1375176-3f09-416f-9b20-d7fe27a684aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdafcce-5dd0-4121-a8aa-677f3fcf4513",
        "cursor": {
          "ref": "a66da6f5-e1f0-4b57-81fe-744be180cbd9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eb57a491-8c5a-4c70-804f-b6955c26a9af"
        },
        "item": {
          "id": "8cdafcce-5dd0-4121-a8aa-677f3fcf4513",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c39f6606-f310-4b0c-a8ec-321c5d0bccc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b14a98-5b3f-4ee5-ba66-f000ec899c16",
        "cursor": {
          "ref": "6336f9d8-f0c7-4b29-8624-02f2a1dcac8d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "88b6c861-6455-4dd3-85ff-0873999d69f1"
        },
        "item": {
          "id": "25b14a98-5b3f-4ee5-ba66-f000ec899c16",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23598e8b-79c8-4c32-8c93-8667827e0cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb952b-8199-448a-92cf-f663e506fdd4",
        "cursor": {
          "ref": "c73259b2-90e4-40ae-b968-0a1ffb6005c3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e8ba1b0-aefb-43c1-8151-23db812456cf"
        },
        "item": {
          "id": "84cb952b-8199-448a-92cf-f663e506fdd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4fc8e896-003c-4988-beb0-8ab9f051b290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dafed9a-d316-4441-ab25-acf98d96ac43",
        "cursor": {
          "ref": "d0b0e353-5f32-43c8-a81e-df500d808856",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cdc4cdbb-8f4e-4a13-b023-8760d75e6884"
        },
        "item": {
          "id": "1dafed9a-d316-4441-ab25-acf98d96ac43",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31262c73-6a3a-4241-a71c-10bfdd7d0475",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "d313c415-cbd7-4cdb-8dda-19d8f7d95b56",
        "cursor": {
          "ref": "d6c67e72-d79a-4d08-8ca3-0727ac245830",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "26fbf4bb-b025-40ea-9b5e-092426826a14"
        },
        "item": {
          "id": "d313c415-cbd7-4cdb-8dda-19d8f7d95b56",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0f542c16-c3fc-410a-9275-6e2f6c632e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6da863-ef76-4ec9-abaf-2620d4d7cb35",
        "cursor": {
          "ref": "8425f456-04ef-4cf1-b5a1-27c9d96aa204",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "87e9e22a-6e53-4728-af5f-5476a5dfa605"
        },
        "item": {
          "id": "0a6da863-ef76-4ec9-abaf-2620d4d7cb35",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd0a8350-9cab-404a-9188-efa7f88e040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b21119b-e047-4f42-bfee-9740f8967a51",
        "cursor": {
          "ref": "20004c66-146f-424d-8dc6-a41b2b3bf4e4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b63ce13e-813d-4181-a436-b3a0b374d974"
        },
        "item": {
          "id": "0b21119b-e047-4f42-bfee-9740f8967a51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "703273d5-0d8d-43f5-961d-87ced6082256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8845a3-42e2-4653-9852-7a34cb61d4cc",
        "cursor": {
          "ref": "6f6c0e7e-34d9-43f6-82c7-cf27f60f5a26",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b218b860-1947-488d-b792-664762e19736"
        },
        "item": {
          "id": "8b8845a3-42e2-4653-9852-7a34cb61d4cc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b39e4eb8-1955-48cf-9376-6a51befd464c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931371e5-e2d5-471f-bd97-9af2744dc05e",
        "cursor": {
          "ref": "a2b37ac9-4597-49b7-9392-cb6f428e973b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "46c7bd38-b929-4603-b346-5d45d4521e1a"
        },
        "item": {
          "id": "931371e5-e2d5-471f-bd97-9af2744dc05e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d514e95a-a4a1-4d8e-ad31-4fe8ac9a3add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea0e199-05f8-4422-bb51-f5473379ed86",
        "cursor": {
          "ref": "50c4e3cc-67fd-4d3d-b213-18e2d3f0463c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0e48fb20-e4cb-4aee-ade9-7935c91f4e71"
        },
        "item": {
          "id": "5ea0e199-05f8-4422-bb51-f5473379ed86",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ddfe5ead-7b6f-47e3-b95f-a789681a8a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5734334-b1f5-4471-a163-05839aa64c0f",
        "cursor": {
          "ref": "9530e7e9-c1bc-42b5-8c61-6bb410d8f696",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5c1bec82-3f64-413e-8ca0-fb8cb811ee1f"
        },
        "item": {
          "id": "f5734334-b1f5-4471-a163-05839aa64c0f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "537858dc-eb8d-4dad-b3b0-1b661581fb98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "934787bb-58fd-49a8-8b2d-a0608c1b0659",
        "cursor": {
          "ref": "d1214f9d-bdbf-4f45-a30a-479b81cd2add",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dae4539f-e192-4f87-98d9-1628e31dea9e"
        },
        "item": {
          "id": "934787bb-58fd-49a8-8b2d-a0608c1b0659",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f7b7eb38-c42a-4572-bfab-a16e1482d681",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "80de94b5-7e3f-4d52-a247-9ec2a5d4f579",
        "cursor": {
          "ref": "d30401f6-97b6-4d39-8d51-88a6ee8ea83c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "30338feb-b4f6-4488-9681-02199c17b3fc"
        },
        "item": {
          "id": "80de94b5-7e3f-4d52-a247-9ec2a5d4f579",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d70b5254-d006-4794-99e3-6306e8df5028",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "741692de-180c-42b7-ae41-cc649028652a",
        "cursor": {
          "ref": "ca165812-c64e-4350-ac17-f81665f4dec9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "57dc02eb-fdef-46b8-8532-08cf0450052c"
        },
        "item": {
          "id": "741692de-180c-42b7-ae41-cc649028652a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6e1697e-63d5-403a-a109-506a7d5620de",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "db9d7af1-0996-4b2c-8d56-5b22c5bfed4f",
        "cursor": {
          "ref": "ac693823-8067-4a7c-818f-f2c391af34dc",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3e88910d-6e2d-4974-a75e-d67d2a8aad52"
        },
        "item": {
          "id": "db9d7af1-0996-4b2c-8d56-5b22c5bfed4f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5ed89d97-69f7-433d-a11d-08c6075f7547",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "dfb423ef-f1fa-4ddc-b4c9-595e005f83bf",
        "cursor": {
          "ref": "c0d445f1-ac1a-45f9-b3ee-34d6fb70a61e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f13873ff-361e-4de8-b2ad-c6bea3551a5d"
        },
        "item": {
          "id": "dfb423ef-f1fa-4ddc-b4c9-595e005f83bf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2cc64c1d-02db-4022-95f8-02315ab5e486",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "f6dc98b6-32d6-4000-be5c-7a7a0b5c9a86",
        "cursor": {
          "ref": "0da7db26-5a8a-4e21-9c2e-2f68ebb80b25",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b3007018-7c70-4ced-a0f8-87d53096753a"
        },
        "item": {
          "id": "f6dc98b6-32d6-4000-be5c-7a7a0b5c9a86",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "55261bfd-9cf7-407c-bfec-a0a4f01f634f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2127e5-a871-4c18-9c20-b8f631820012",
        "cursor": {
          "ref": "99e7a375-e4e3-433b-9147-3c3b3e8bd634",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ca15806f-87b7-4d88-85b5-7c322c5d3fb8"
        },
        "item": {
          "id": "4c2127e5-a871-4c18-9c20-b8f631820012",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a17cd49-6b0b-408c-a2a0-6c7ac537ab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd9264-2677-482b-adbf-671c7e9a1ad6",
        "cursor": {
          "ref": "767caeb0-3f24-447c-b1d2-1e4e68129841",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6b55d690-32dd-4b19-ba49-1c7764c96686"
        },
        "item": {
          "id": "27cd9264-2677-482b-adbf-671c7e9a1ad6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a49a7a79-5a78-41c5-b714-6ebd2a9754ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0a3244-7360-47b8-88b0-27b4724a1132",
        "cursor": {
          "ref": "b7569d0b-2d60-4eb7-98a4-72fbd6fd778b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d1113b0f-85ce-4509-aa1a-aee1f8c68131"
        },
        "item": {
          "id": "ee0a3244-7360-47b8-88b0-27b4724a1132",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1346ada1-75c9-4107-bc7c-37dd1137cc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a647f0-c306-4e7f-a598-c1f2a2eb7b05",
        "cursor": {
          "ref": "41d0ec90-c44c-4ae2-9f8e-ee2c075cbdaf",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b99b1f4b-aaab-4896-a752-748fb4940cf8"
        },
        "item": {
          "id": "a5a647f0-c306-4e7f-a598-c1f2a2eb7b05",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4c20c5c-3f86-400a-8b33-e6d3cac00d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8fab4c-3fac-4434-9c08-d18ab34a96ed",
        "cursor": {
          "ref": "a1a9ad27-b76b-4338-a636-ea38d0d9b55e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0c7efc3d-0444-4705-b87e-5b14a88a2d59"
        },
        "item": {
          "id": "1e8fab4c-3fac-4434-9c08-d18ab34a96ed",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "773ed223-f353-4650-9470-2fa25fb36d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f7656-0918-42b2-8c38-0efa4175e456",
        "cursor": {
          "ref": "adafd60a-361f-413e-b7c5-cbd3a6ba2e40",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "84e6d45e-6e94-4fe0-bbf0-3bfe1b349ba6"
        },
        "item": {
          "id": "027f7656-0918-42b2-8c38-0efa4175e456",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8968fddf-b6d0-47f2-b068-7574423f7005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105aab2-16f0-4c72-b79a-7de4cdb90956",
        "cursor": {
          "ref": "175aa670-155b-4564-8a64-1420e50d2f80",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b6abc6c6-8edb-46a2-b7ac-1ca23a8011b6"
        },
        "item": {
          "id": "f105aab2-16f0-4c72-b79a-7de4cdb90956",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0713870f-2c06-440f-b489-9fcf36542b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206f0d29-938e-4421-bbd9-4125625fa952",
        "cursor": {
          "ref": "af962762-92b6-45c4-82c3-dcab3521d7a5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "03d339c9-df5b-42f6-b062-5fdf917d082d"
        },
        "item": {
          "id": "206f0d29-938e-4421-bbd9-4125625fa952",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fb1425f3-1012-41ff-9142-a658a5ac9f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd346b-3a37-4e77-8adf-7012256090c7",
        "cursor": {
          "ref": "3755d761-6514-401b-930f-7cfac0198871",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2eb80a03-4c8f-4762-acbe-7cd496171b0b"
        },
        "item": {
          "id": "cacd346b-3a37-4e77-8adf-7012256090c7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9300440e-fd6d-40cb-aaec-688ae834cbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6b3ff8-dbee-47ef-ae6a-1884116df746",
        "cursor": {
          "ref": "786bf225-950e-41e6-9e95-d4c46c096a46",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "83032996-1a1d-4798-8b94-e0d454361710"
        },
        "item": {
          "id": "4f6b3ff8-dbee-47ef-ae6a-1884116df746",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d3b4835-b6a8-4051-aa29-f280f67e8b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697b9105-aeb9-4602-a7f8-30c976a3c584",
        "cursor": {
          "ref": "3c5c7dcb-b304-4440-81e2-72ea8e02fde2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "07ed0968-8a00-4492-9a39-90c9e4c4163d"
        },
        "item": {
          "id": "697b9105-aeb9-4602-a7f8-30c976a3c584",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c349c9e0-93a9-437c-895a-eddb25b14246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16233d1-7ad8-474f-94ca-6dca771747f8",
        "cursor": {
          "ref": "205aede9-5dd1-4411-9273-88ec0bd3cf74",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "08f1912b-a317-41ab-8734-643044e552c3"
        },
        "item": {
          "id": "f16233d1-7ad8-474f-94ca-6dca771747f8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1acde79f-bb0a-4276-b6e6-b30c3fc9db4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71b5905-d862-4d7c-a67e-26ce51bb4dcd",
        "cursor": {
          "ref": "bf029ab1-42bc-42b0-8369-a996d18f7302",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "27d4d789-05d0-4ae1-aaf1-af986c1e6e34"
        },
        "item": {
          "id": "c71b5905-d862-4d7c-a67e-26ce51bb4dcd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "213571cd-b126-442d-88c4-edf9916835ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d692c61-41b1-4894-bc83-50cb6032f635",
        "cursor": {
          "ref": "51f4375c-21b7-43c1-912c-ae6326deabda",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98c2ad0e-448d-4806-b934-3155d1a975af"
        },
        "item": {
          "id": "7d692c61-41b1-4894-bc83-50cb6032f635",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0fba2caa-53c0-40e7-8f0a-2cd998fbe011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb26911-8457-4a18-b817-ec4f59dd4285",
        "cursor": {
          "ref": "911be1d6-411a-4a8a-8b30-8a54f6637fe4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a1e7ae0a-c5b2-4845-ae8d-d2ff8c6854cb"
        },
        "item": {
          "id": "bdb26911-8457-4a18-b817-ec4f59dd4285",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8b6a2eae-d039-4d97-af25-d49a772a3310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb1659-c334-4cca-af24-1b1f676653eb",
        "cursor": {
          "ref": "5c3a1e78-257f-4eed-a9f9-cbbd616a7899",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "322e3cb4-2509-412a-a7a8-a5446b345243"
        },
        "item": {
          "id": "dfeb1659-c334-4cca-af24-1b1f676653eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e95cfd9d-0753-497f-aece-6e9afaae9699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cba704-fe2a-4452-863f-b2638e7e4760",
        "cursor": {
          "ref": "df207926-cdd5-4289-b316-2b37d5894d66",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "457a2481-b4e0-4625-8512-8ab768f16a4e"
        },
        "item": {
          "id": "12cba704-fe2a-4452-863f-b2638e7e4760",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "525b53d4-b5dc-4ee5-8833-5db6c0f59547",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "590bfd07-bab5-4685-bade-a890e3e06949",
        "cursor": {
          "ref": "3ce04389-eb47-408d-b715-06549bc08850",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3e296de7-10e3-4705-bd67-589372e5579c"
        },
        "item": {
          "id": "590bfd07-bab5-4685-bade-a890e3e06949",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "657d2053-eee7-483b-9a68-545181301662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebeb0ee-3bf3-4c23-940b-872d6e0708aa",
        "cursor": {
          "ref": "ea94cc81-8f43-46b3-9c66-2de0d0d85332",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15579557-5bdc-42b1-9201-06d5f176c06f"
        },
        "item": {
          "id": "0ebeb0ee-3bf3-4c23-940b-872d6e0708aa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "576262de-4acb-4a86-b9f7-6b124981bd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a538a933-4594-4213-9995-16227a1157d8",
        "cursor": {
          "ref": "ce26dabe-6eec-4f21-b303-d27f2c5dcf8b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a26e9727-6abe-488a-9f57-aa435ef42381"
        },
        "item": {
          "id": "a538a933-4594-4213-9995-16227a1157d8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "13638631-8010-4ba2-8cff-aaee46d629cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdadf6a-04a5-4a04-9ef9-81cea5802d2d",
        "cursor": {
          "ref": "bcbab674-5274-4855-adcd-eaafde78762b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ae1f5d1d-804b-48a9-b0a2-d33807458dc2"
        },
        "item": {
          "id": "5fdadf6a-04a5-4a04-9ef9-81cea5802d2d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2d8d834-b59d-4e4d-868a-972c0f915258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab8373d-3781-4979-b39f-52056e11ec99",
        "cursor": {
          "ref": "ca535bf3-1996-40e7-a3e1-70d6393bfb63",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1306ced0-c73c-4d44-b55f-93c7ad1f4a3e"
        },
        "item": {
          "id": "eab8373d-3781-4979-b39f-52056e11ec99",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6c40258c-172d-4197-86a3-f1709f4d337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e20e7fe-265a-4060-bf13-1088bbb18969",
        "cursor": {
          "ref": "c7069688-d6c7-4b99-9c27-6182744ebe19",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b5686fc6-751a-4d3d-96f8-9f7d07b0de42"
        },
        "item": {
          "id": "6e20e7fe-265a-4060-bf13-1088bbb18969",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7e43fd4e-aafb-4003-8775-618806a7e8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3f7b81-36db-42fb-a912-a3563e3ed45b",
        "cursor": {
          "ref": "ddae8656-9e1a-4b63-9610-6c28d83fb8ea",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cd75e0c3-a787-4407-8b38-65c9e3041645"
        },
        "item": {
          "id": "1c3f7b81-36db-42fb-a912-a3563e3ed45b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d4d739b6-3c11-417b-be73-06fefff25c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a7276e-b814-4aa9-9724-9c4aa06a330b",
        "cursor": {
          "ref": "2b5aed96-9ecf-4584-8228-fbc0aaa99267",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9e7ee19b-1fe4-406e-b9ce-053a6fe92b7a"
        },
        "item": {
          "id": "d2a7276e-b814-4aa9-9724-9c4aa06a330b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9bcdb7c3-575c-40f2-832d-a873a57775fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee700a0-66dd-4bad-b236-569ba08da045",
        "cursor": {
          "ref": "3aac7409-d255-4ac3-9e93-9c1af61a5ba2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f508953e-1957-42ce-851b-2988e66b6873"
        },
        "item": {
          "id": "cee700a0-66dd-4bad-b236-569ba08da045",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7d79003-e9f7-4339-ba01-6a64caee723b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a673a80-562c-4607-bab8-d6d78ef0643b",
        "cursor": {
          "ref": "c4c57474-010a-4b8c-8ba9-90bdf4708f66",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ed7925e9-f828-4ca0-afb8-6a182874dfda"
        },
        "item": {
          "id": "9a673a80-562c-4607-bab8-d6d78ef0643b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2380be69-f8fa-4df5-aab1-c537b9c4fd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8545934e-e0fb-4a3d-8d21-01909193b513",
        "cursor": {
          "ref": "13b40271-f2a4-43f2-8b3e-005464694290",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fdaaa055-8788-4480-9c13-e372dff98250"
        },
        "item": {
          "id": "8545934e-e0fb-4a3d-8d21-01909193b513",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8928f61d-ed2d-4117-b3ab-5ad771be6108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218e08aa-6ba6-4cf0-8357-deefe0b045aa",
        "cursor": {
          "ref": "d039d2e9-da34-4bb1-a0db-b8e101ebb1ef",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "95b15791-670f-4404-b628-c4e3b69e6c81"
        },
        "item": {
          "id": "218e08aa-6ba6-4cf0-8357-deefe0b045aa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e5644673-3923-4e74-a819-9db8f4ca9409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b995efa0-0311-439a-982c-10b02c4482f0",
        "cursor": {
          "ref": "ed5c2a0f-bbcd-466d-bf90-58e69570d565",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c202a587-4c3f-4b96-8a89-8888334bb1e6"
        },
        "item": {
          "id": "b995efa0-0311-439a-982c-10b02c4482f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "755ea08f-afb4-4924-aba1-68f34351d4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3437b94-7325-4a56-a9e9-aa8ed126ce14",
        "cursor": {
          "ref": "758cefdb-e4bd-4aed-ac4b-af71179665f9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa2bac2c-0e3d-4c65-bb0d-e7cd281662e6"
        },
        "item": {
          "id": "f3437b94-7325-4a56-a9e9-aa8ed126ce14",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "91f1e8e4-b5d2-4cc3-b63f-411541bc716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb0d583-1ff6-41fb-890c-9c9e41689500",
        "cursor": {
          "ref": "26d6e7d2-a06f-499f-aa9b-4ba8d47b92b7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "484e97cd-2f8f-4afb-bc9f-47386d430112"
        },
        "item": {
          "id": "2eb0d583-1ff6-41fb-890c-9c9e41689500",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "41b8e70b-13a0-4d1b-9dc1-95ff8d91afc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe0a4be-7b64-4866-a284-052760037657",
        "cursor": {
          "ref": "b0c9bce1-ea5f-4df8-8f47-b15e3ec9292f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9185ffc6-04e7-40c8-8cb0-027b6bc1f1fb"
        },
        "item": {
          "id": "8fe0a4be-7b64-4866-a284-052760037657",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b2d1725e-bd8f-421f-b3b4-0914710e4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89fff68-b939-40e9-8832-032999bd7d6e",
        "cursor": {
          "ref": "b3424a85-9243-441d-81ce-2fdf21cf32b1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8de7c2d2-5fd1-423c-92fe-adc62dee46fa"
        },
        "item": {
          "id": "d89fff68-b939-40e9-8832-032999bd7d6e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "946cb59a-2bff-40cc-9f09-14e3a5912fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be34c60-e653-4f76-9ca6-4c3d56b8a45d",
        "cursor": {
          "ref": "6f955e44-fdda-4448-b0b3-509d30b42511",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "835f79da-6fad-418d-a088-2001181b3510"
        },
        "item": {
          "id": "1be34c60-e653-4f76-9ca6-4c3d56b8a45d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ab4055cd-0828-465c-b4e2-428e118c5bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be23557b-4bd3-4425-a847-cf2844b1f74f",
        "cursor": {
          "ref": "649f5329-5dd9-43dd-b2c4-323391a15453",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5e56399a-9276-4c1e-98b7-05ad5b92c24f"
        },
        "item": {
          "id": "be23557b-4bd3-4425-a847-cf2844b1f74f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9690ccfc-91ae-40b1-b92f-c94f5b04bd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e3ff59-dedb-40f5-ade9-9e54e80c8773",
        "cursor": {
          "ref": "e435ed19-64bb-4f69-8074-812cf05b6be5",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b4fac28-0510-4e24-a6fa-4493fac4cb94"
        },
        "item": {
          "id": "38e3ff59-dedb-40f5-ade9-9e54e80c8773",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "313cd124-c57c-40d4-b8c5-eb46d8d02c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba474046-0be2-45f0-a562-f0210a00a076",
        "cursor": {
          "ref": "dc3f23bd-e423-4af7-8f94-614cd8489b62",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "feb6a754-6a15-4d43-b1df-a878c39759db"
        },
        "item": {
          "id": "ba474046-0be2-45f0-a562-f0210a00a076",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1e871412-5373-4b73-b82e-09a442d166f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e0222b-1f97-4632-8eba-752df67c6fc7",
        "cursor": {
          "ref": "6304aba5-8860-4b19-957a-e96f23e69e12",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "acc0c012-5f71-4839-848d-18ab717deb2f"
        },
        "item": {
          "id": "e1e0222b-1f97-4632-8eba-752df67c6fc7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6310cb75-7da8-47a1-b886-231d01044b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2bcfb5-0c74-4070-b5c2-03b0919a61be",
        "cursor": {
          "ref": "82084728-3975-4906-952d-6563c5a7d620",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6c6d9294-81ad-40be-90d9-c818bfb06954"
        },
        "item": {
          "id": "fc2bcfb5-0c74-4070-b5c2-03b0919a61be",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "583a7791-73e7-4b78-a932-559ca91615c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e18c66-83d8-487d-a82c-ff1a13a48079",
        "cursor": {
          "ref": "ee9e3acb-9aa2-41be-9ac3-f5c7dffd74c6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "69959f07-47cf-4e5a-993c-28b67f027b0f"
        },
        "item": {
          "id": "d6e18c66-83d8-487d-a82c-ff1a13a48079",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54ba25ce-acba-4145-9a2e-006f4c8aee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e33eba0-89d3-48da-b733-59a0bb57d632",
        "cursor": {
          "ref": "52dda3a4-3399-40bd-8f33-c82f78e8e211",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a618b71b-8f22-44e6-89d0-a2afb9030b2d"
        },
        "item": {
          "id": "0e33eba0-89d3-48da-b733-59a0bb57d632",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5925d7c0-1e56-4645-89b7-fea4b2885461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9bf370-7a22-4ab1-a33d-48fa0b048a40",
        "cursor": {
          "ref": "0bd7193f-e016-4d60-8ed9-7717c9478b13",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9869581-0708-43d1-a710-4120e154881c"
        },
        "item": {
          "id": "bc9bf370-7a22-4ab1-a33d-48fa0b048a40",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c846f0ce-bcae-42a8-ae6e-5c1e123d26d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54eeefa-5b4f-4f9e-8e4d-23f5012ceb1f",
        "cursor": {
          "ref": "09a038b1-553a-47ab-a7ea-a3f1fc9e4542",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "565b2dd9-a59a-4a13-95a3-b672f58527a2"
        },
        "item": {
          "id": "f54eeefa-5b4f-4f9e-8e4d-23f5012ceb1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56e2e2cd-1293-4ac6-976b-c2809daf86da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cab87e-1cf6-4a20-aaa4-1cd66d018264",
        "cursor": {
          "ref": "4790e570-4122-40bd-9cc3-db040bb5c433",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f1b6a52a-5ab6-414f-9084-fc3fda27f3ff"
        },
        "item": {
          "id": "b3cab87e-1cf6-4a20-aaa4-1cd66d018264",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4ea706eb-6173-471f-8771-7075108be878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9602fd33-51e0-466a-87ea-61538db9965c",
        "cursor": {
          "ref": "8de1c7be-3aba-4412-88bb-4c5dcd681e98",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fc9aed36-85be-4143-a047-4c231d1c9f62"
        },
        "item": {
          "id": "9602fd33-51e0-466a-87ea-61538db9965c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b7c1dc8-ab0f-40f8-a289-f68a27353822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999a7c44-84b2-45d1-a76a-4cf6529daa43",
        "cursor": {
          "ref": "a96b07dd-8a32-4001-ba45-03e711fabd1a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a5aa6933-4400-4601-9fd1-62140fffae6c"
        },
        "item": {
          "id": "999a7c44-84b2-45d1-a76a-4cf6529daa43",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3d5796a0-e1c4-407b-a21d-5ef0c89bd6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c9731-7374-4e41-8421-145c2d24715b",
        "cursor": {
          "ref": "2b3947fa-64df-40df-bd78-fee3ceb93f7f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a62112aa-844e-485c-8499-893dc6c81f93"
        },
        "item": {
          "id": "a18c9731-7374-4e41-8421-145c2d24715b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a7271153-c116-4857-8191-30b97e985d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95f4469-b6d7-4011-99df-a77a7d03149a",
        "cursor": {
          "ref": "56c93413-664c-4f5a-b8a1-65aaabcec68a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2f8aaa7f-7c25-4ff8-8f09-b14b9d40f9e0"
        },
        "item": {
          "id": "c95f4469-b6d7-4011-99df-a77a7d03149a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d3321556-ad8c-4fc2-bd24-75a01b17181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec913730-c44b-4409-b293-4ecdad95c915",
        "cursor": {
          "ref": "d6964027-0b9f-4ebc-b09b-1355f773a7af",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "37f01279-d8eb-4344-ab5f-fddd840a4e0e"
        },
        "item": {
          "id": "ec913730-c44b-4409-b293-4ecdad95c915",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b591b20-0d80-4b18-b8b5-155ec3721419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca49e7-8366-4e79-add6-d9952bd0dc0e",
        "cursor": {
          "ref": "86952cc1-f159-4004-ad19-32ec6b910e5b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2cd0233d-2af6-43d7-9dc7-19da5252f4b5"
        },
        "item": {
          "id": "7eca49e7-8366-4e79-add6-d9952bd0dc0e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "96875cbb-75ce-4ba6-9fa6-f48067b023f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dce4fa-587a-43df-8120-bf5f9a2d5b5c",
        "cursor": {
          "ref": "7248f324-994a-4547-a647-7df1c23470ac",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8dfccb28-c5ef-4ff2-918f-9e6e7588b95e"
        },
        "item": {
          "id": "87dce4fa-587a-43df-8120-bf5f9a2d5b5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "185b00e6-9b64-471d-b22d-ebf7af3294d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfdd046-7eba-486f-9c9c-0f3769468d1d",
        "cursor": {
          "ref": "347084fa-f351-4ffc-a64a-3eac36399eeb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7be76d7e-310f-4f52-9d77-92fc124e0647"
        },
        "item": {
          "id": "2dfdd046-7eba-486f-9c9c-0f3769468d1d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dc36a2b3-aebe-4b41-b2d2-5d54cd65d8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098fe386-2046-44a6-9c99-811a070e73c8",
        "cursor": {
          "ref": "01df654b-f40b-4a75-a2c7-1b368eb55b75",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "10468ba3-738f-49f5-aa1b-4bf3b70f883f"
        },
        "item": {
          "id": "098fe386-2046-44a6-9c99-811a070e73c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5148ed35-3939-47ef-bb72-910a2ad5e526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192d91b-2267-4a3e-9c6f-d8f84d67a2e9",
        "cursor": {
          "ref": "876036ab-418f-4675-a177-a3f55e308521",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f97be065-6d6f-47ec-99fa-40bd0f970ac4"
        },
        "item": {
          "id": "d192d91b-2267-4a3e-9c6f-d8f84d67a2e9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "70934e04-9606-4a4e-9d1a-a3a5315659dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c294c8-a62e-4efc-bfa9-7f8a24d28be1",
        "cursor": {
          "ref": "15d8a16a-e18b-4346-9e65-51e181453718",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fff72e1f-0a0e-402f-97a8-21a30eb80e96"
        },
        "item": {
          "id": "86c294c8-a62e-4efc-bfa9-7f8a24d28be1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bee6ed86-50d5-4135-ac59-261dca8f92eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090564f3-8c74-4c0a-8c67-3a5471778f83",
        "cursor": {
          "ref": "065cd65a-bb9c-47b8-862c-72776c30c736",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3204b65b-9eeb-4167-8257-2964b2eab685"
        },
        "item": {
          "id": "090564f3-8c74-4c0a-8c67-3a5471778f83",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2917500-eb15-406d-bc20-6338a4f6bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61e8567-83e8-4135-897d-e5a18d99fa6a",
        "cursor": {
          "ref": "3f2377a9-3f0e-463d-88c1-ca3df8129f86",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d1b322a1-b6f0-4a27-b938-325f096b7e48"
        },
        "item": {
          "id": "f61e8567-83e8-4135-897d-e5a18d99fa6a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7ce6875-85db-48be-a17c-ef718d5cce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36df8beb-d17f-4c88-81b6-a5799f47955a",
        "cursor": {
          "ref": "0258546b-e7b9-460e-8f0f-96b06c7e804c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b7d68953-4cd8-4168-807b-8867fed08c88"
        },
        "item": {
          "id": "36df8beb-d17f-4c88-81b6-a5799f47955a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a1e47e8-1df9-499e-ac7f-b5f305afb363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9fc392-9027-4df8-ad0c-8a9efeac25d1",
        "cursor": {
          "ref": "7d972542-6df8-4443-8d75-8c01bf15ad79",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e10d399-d9ba-4846-8ab2-df78063e855c"
        },
        "item": {
          "id": "ea9fc392-9027-4df8-ad0c-8a9efeac25d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a82d8d4c-bb48-4bc0-a564-f12e3db752bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea24b60a-79ac-41cd-85d9-413a2f233fa7",
        "cursor": {
          "ref": "b7fcfad1-1a3d-4b5e-904d-db7f9d3ccf62",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8c225b4-5473-4bd3-8a4c-318232c01c03"
        },
        "item": {
          "id": "ea24b60a-79ac-41cd-85d9-413a2f233fa7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "384e79b0-0156-48eb-9d67-6b4c03185f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d3f53-88c1-42fd-8ec7-435c86b4dcc6",
        "cursor": {
          "ref": "3914bd94-b70e-4b86-a76c-6c58549c7fea",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1356934d-4f8b-4201-afef-3c3dbb47d9dd"
        },
        "item": {
          "id": "090d3f53-88c1-42fd-8ec7-435c86b4dcc6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6254f4a1-06d6-499b-a519-df23f8165f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e233957-dcf7-4fd1-a505-874fee2f1b32",
        "cursor": {
          "ref": "e36bcdca-7055-4841-84a0-63247f9762b3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9e261a27-d3dc-4ec4-ac72-212600240474"
        },
        "item": {
          "id": "0e233957-dcf7-4fd1-a505-874fee2f1b32",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dea89a8c-c64e-4562-85b9-e2b35ee0e7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d7ef66-1584-43c3-902a-4723ab45561e",
        "cursor": {
          "ref": "f19c0be7-ef3c-4a82-a3c6-12520fb9dd9f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e2248d85-97f4-4e5f-97e2-ecc3062bdab2"
        },
        "item": {
          "id": "c6d7ef66-1584-43c3-902a-4723ab45561e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5b6e548a-686e-42aa-a85e-fd89dd5c11f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c400b5-7d09-43a9-89eb-70d217cdac74",
        "cursor": {
          "ref": "7cf3ee62-3d6f-4c31-980c-284692114eec",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "579a2846-73c7-406a-ab28-04083ddbc826"
        },
        "item": {
          "id": "e4c400b5-7d09-43a9-89eb-70d217cdac74",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "11c4d7d6-129f-4ab1-a127-eda470f91b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbffbafd-1766-453d-a694-3ba25863b4aa",
        "cursor": {
          "ref": "3e1cf32e-b6fa-43ad-b7ed-1877d8592332",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b89b882-2db4-4496-b36f-6c0a8ff6cba5"
        },
        "item": {
          "id": "dbffbafd-1766-453d-a694-3ba25863b4aa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ac7279f-f4d3-4ab0-84d0-93796cb95c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c990d8-1648-4c0e-a1aa-f8f62be48fa3",
        "cursor": {
          "ref": "2d6bf403-9302-4d0b-9987-a73a67041bc8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f7028bf1-dd62-4f1f-8786-b94e7b32e06d"
        },
        "item": {
          "id": "00c990d8-1648-4c0e-a1aa-f8f62be48fa3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4533fcbe-200f-43aa-b54d-f0d96d3f8ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7368aa54-046e-42e7-982a-31a254f1128f",
        "cursor": {
          "ref": "811d0f4b-5cac-46a8-9b65-48e9b364d725",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "516ecef4-deb7-4727-b4bf-9c24fb1440e2"
        },
        "item": {
          "id": "7368aa54-046e-42e7-982a-31a254f1128f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c7970aca-2922-441b-9f13-2f10db589562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83feac5a-6502-4aa7-8886-a5ddf47d7c92",
        "cursor": {
          "ref": "dc012b60-b756-403b-947d-00d5ad8b9059",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1159fc62-dbf3-4bc6-a1e9-7fd94e7e5dde"
        },
        "item": {
          "id": "83feac5a-6502-4aa7-8886-a5ddf47d7c92",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db85878b-0cda-47d5-95fa-61924978b4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bbf13e-3c09-43c1-b8b0-9911d98b04ce",
        "cursor": {
          "ref": "60f93ed7-76e1-4724-a9a2-46772dae713f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20ffd08e-f441-4fc8-91ee-324487230466"
        },
        "item": {
          "id": "b8bbf13e-3c09-43c1-b8b0-9911d98b04ce",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bffe1f6c-323c-4b99-870b-a2e8a5e96302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c084565f-686f-4182-98d1-b2a0685b0943",
        "cursor": {
          "ref": "06240349-303e-46ee-8fa2-714e1f018e1f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "17c25b01-e030-447c-b998-7da04303e7ad"
        },
        "item": {
          "id": "c084565f-686f-4182-98d1-b2a0685b0943",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "922fff11-7f6e-451c-9865-15689513b433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6147bb23-6cba-44b5-b659-c8b38611e71c",
        "cursor": {
          "ref": "2ba7eb05-20c8-4f48-8d64-603611a3d9b3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5ac47241-fd20-421e-89f2-bbcde99b5a54"
        },
        "item": {
          "id": "6147bb23-6cba-44b5-b659-c8b38611e71c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2abbfd17-873a-4050-be2a-f77d21063a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ac6af-01dd-4152-b4f9-bb8d57bf0816",
        "cursor": {
          "ref": "445cd397-9d51-4a8c-8723-d13943f22266",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ec01bd2b-dd4c-441c-95e0-6232b7c5df37"
        },
        "item": {
          "id": "720ac6af-01dd-4152-b4f9-bb8d57bf0816",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e091824d-cdd7-4c8a-b0b6-294a44f8992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7b091a-37e9-4a5f-8a5e-4072f75873f8",
        "cursor": {
          "ref": "e3481ef9-98c2-44e5-9a0b-2783872e69c0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "03a65c41-676c-44fd-845f-b8d0ce5639fb"
        },
        "item": {
          "id": "fe7b091a-37e9-4a5f-8a5e-4072f75873f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ced71b16-6ed3-4bb1-96fe-0b22d08f0fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa2d05-c94c-4054-8a90-e6702dbe7c9d",
        "cursor": {
          "ref": "1eec62b7-288b-4edc-a1ff-e299eee07237",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "98e8f530-8a3e-4570-bd25-bf770d7025ba"
        },
        "item": {
          "id": "88aa2d05-c94c-4054-8a90-e6702dbe7c9d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8fb3ea6a-79af-42ff-a337-0970008b913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387c0049-7b6b-4fe6-98bd-3f318a4c2a60",
        "cursor": {
          "ref": "bc286486-bde7-4217-a8ef-470e26ec06a3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b7b60dc3-aa84-4afa-81f4-6ead05d79d35"
        },
        "item": {
          "id": "387c0049-7b6b-4fe6-98bd-3f318a4c2a60",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73391cb4-0522-4a44-b013-d4a1bdb4ce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f944e2-3bc5-4358-a98d-a6cef19e9402",
        "cursor": {
          "ref": "5759a0f3-409d-4b14-ba00-fa69a21fbc3d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d01222c2-fcf4-45b0-84d2-aafdb8e9e1b4"
        },
        "item": {
          "id": "d3f944e2-3bc5-4358-a98d-a6cef19e9402",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae4e99cc-4c5c-437c-b7fb-4558bad8d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23425947-0e5a-41f1-a4fb-4267a776a71c",
        "cursor": {
          "ref": "b23d740a-2d95-4b34-afb6-69df61009ecd",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7370c22f-4bfd-490b-9308-0a17b0b7d884"
        },
        "item": {
          "id": "23425947-0e5a-41f1-a4fb-4267a776a71c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ab2d3276-4d5b-4ce3-940d-cc66c7fee2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edec87e1-bdc0-455f-a5bd-a153859d6786",
        "cursor": {
          "ref": "cd96a0f7-7e48-4751-b43d-6d7b27dc4c55",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d6f49844-ef7c-4ade-82d3-560c8166db55"
        },
        "item": {
          "id": "edec87e1-bdc0-455f-a5bd-a153859d6786",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a19ba63-f3af-4c03-b169-a78c2a9cb150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632dd99d-68ff-432d-9173-ede0242c0d42",
        "cursor": {
          "ref": "4c353591-1d2c-4b2e-9f7b-d4713c512e29",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9965f3f0-0344-48d6-b867-3d3402337126"
        },
        "item": {
          "id": "632dd99d-68ff-432d-9173-ede0242c0d42",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d7088dae-8504-4acd-9735-8da0a2c228a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0471fd-62d7-4b55-b7ae-025bc5f8e731",
        "cursor": {
          "ref": "b5865ac6-7e44-4b81-89b7-890b03631a4f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "184d1b2b-54e3-4a42-ad5c-6e761e5cf0f7"
        },
        "item": {
          "id": "aa0471fd-62d7-4b55-b7ae-025bc5f8e731",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2677bc93-4d48-48b2-98e7-2998c5c9713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c285cb50-9e87-4c8e-937d-902dd38f8745",
        "cursor": {
          "ref": "c7d20c64-5c50-4986-b1a1-b700a57a0812",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "35c37262-db37-4c84-94b4-b22da80b8757"
        },
        "item": {
          "id": "c285cb50-9e87-4c8e-937d-902dd38f8745",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ca8bd0c-387c-403f-acef-ad3a77760302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec54247-7065-4d39-af2b-8da07bc42c07",
        "cursor": {
          "ref": "c8239fe8-b624-4a73-908e-2bd8f9096aab",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a54ce933-1adf-4bbc-92ab-76a4f3e7551b"
        },
        "item": {
          "id": "eec54247-7065-4d39-af2b-8da07bc42c07",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dfa83591-ae99-42b0-97bc-6efc6a65e080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e0e97-dc7d-4e6a-b9bf-65ccc2dad5c8",
        "cursor": {
          "ref": "95dbd41e-5135-413a-ab09-41a38836ddf0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2ebb51f5-2b33-4d22-a878-7a9a8b518e63"
        },
        "item": {
          "id": "4c9e0e97-dc7d-4e6a-b9bf-65ccc2dad5c8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29e55bf3-3c52-4ad0-b289-1e7615154797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de93d404-e60b-4459-b94d-46167de3a098",
        "cursor": {
          "ref": "44ee7296-10be-47da-8c8f-8e9a52d71320",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3601aaec-2366-4d7a-9fe8-a1eb1c3b4661"
        },
        "item": {
          "id": "de93d404-e60b-4459-b94d-46167de3a098",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bdaafed0-18b0-4977-a8ff-cc16f0d38d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65c0e17-34bd-4a04-a0ee-7490732b36b7",
        "cursor": {
          "ref": "4815122e-19e6-48df-8d4d-5cac87e673d0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bb844ac5-3275-43f0-a97e-de12d3f708e8"
        },
        "item": {
          "id": "a65c0e17-34bd-4a04-a0ee-7490732b36b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fc773ba4-b012-41c4-8c75-cbde6eb4e946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b349ac6e-3a82-4286-9b5b-5286b5f3c7f5",
        "cursor": {
          "ref": "1e9cc512-1124-48e8-a633-c779d6973423",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9bfdec2e-c5f1-40e7-8685-0b2d140c90e3"
        },
        "item": {
          "id": "b349ac6e-3a82-4286-9b5b-5286b5f3c7f5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b7703f3c-8c8a-476c-82d7-92eda76cb6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68085d4-2a1a-4186-915c-0807718008b9",
        "cursor": {
          "ref": "043b7509-bd20-43c2-af48-12adcc327a45",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5aa0b978-18ad-435e-b9ee-1a26d618e777"
        },
        "item": {
          "id": "d68085d4-2a1a-4186-915c-0807718008b9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9b03d923-fe23-47fe-93e6-6a024461ebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d623ef1d-e1fc-43ba-96af-add3d32df18d",
        "cursor": {
          "ref": "e4f894a8-c289-4d2b-97ba-add43a846daa",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fbf26e56-a158-4b6b-837e-d4df8be80915"
        },
        "item": {
          "id": "d623ef1d-e1fc-43ba-96af-add3d32df18d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ea8f69b8-1639-4dd2-a578-8809453a8501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa02d9-8bf9-4323-94c4-567d39c39c80",
        "cursor": {
          "ref": "e7c00d2c-b2cc-49bd-9b11-d7611bddf346",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a33fb894-5738-40bc-9a8a-a3020330b2fe"
        },
        "item": {
          "id": "eafa02d9-8bf9-4323-94c4-567d39c39c80",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8dbeae17-43d0-444d-b1ca-cc03aa4192f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d798367-9d68-42b1-8532-061819715db1",
        "cursor": {
          "ref": "d4e7f0e7-bb4f-4316-940f-ed938185e9b2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8671a2bf-ac63-4b0e-aa14-b59a238ee892"
        },
        "item": {
          "id": "4d798367-9d68-42b1-8532-061819715db1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "34816fc7-3315-4cc8-8175-7370cc6058e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa1a51-8541-471a-b6b6-76226b3707d8",
        "cursor": {
          "ref": "5f06055b-1af7-4cbf-aeae-24813db33fd9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "38efdc94-3501-474d-95fa-434d5d9d4a8f"
        },
        "item": {
          "id": "65fa1a51-8541-471a-b6b6-76226b3707d8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f5f9f11-fb0d-4725-93b6-09a0f0fad6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b659e7-bd00-43d0-abf7-d02689851eaa",
        "cursor": {
          "ref": "66669763-2342-4a99-a194-ceb5742a4a86",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6d2876f3-be4f-45af-92df-cba85a807ec3"
        },
        "item": {
          "id": "03b659e7-bd00-43d0-abf7-d02689851eaa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "29b420e8-99da-48d6-a9c0-e94f1c466404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab2b041-1eb7-4cfd-af43-7d380cfa321e",
        "cursor": {
          "ref": "be09f0ca-22b9-4d51-a369-96f51f909b41",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ecb51d7f-9041-4f61-a6b3-fe3661483c0c"
        },
        "item": {
          "id": "4ab2b041-1eb7-4cfd-af43-7d380cfa321e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3e5d6d41-adbe-4eae-96b8-a51ac18ff870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d69d1e-e5f7-446a-9a44-d44cca75d404",
        "cursor": {
          "ref": "5bd094fd-2340-43cf-9a3a-6df681ef47ae",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "90cbb59f-f569-4184-b5be-f217544389b4"
        },
        "item": {
          "id": "e4d69d1e-e5f7-446a-9a44-d44cca75d404",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3fdfe047-d135-49cc-80bb-54e59cb4ae38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c3b4fd-b5c5-4166-8451-c339ded1b01d",
        "cursor": {
          "ref": "03cc9be6-ed81-44cb-b208-74c2edeaa9bd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "da450604-8391-4441-b1a6-b609a6d54f87"
        },
        "item": {
          "id": "40c3b4fd-b5c5-4166-8451-c339ded1b01d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f5911bf2-5bc5-4b89-9db9-45cf081dab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3039a6-5355-4ba0-911f-ab8f02e5e00f",
        "cursor": {
          "ref": "2206aa3a-3997-47e7-ac83-c03ea788a909",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "867754d8-aacc-498c-b0ad-c0ae157a7b43"
        },
        "item": {
          "id": "3d3039a6-5355-4ba0-911f-ab8f02e5e00f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f359165d-7eee-4fcd-89a9-26c75f6eadfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbebcfbf-065a-4c0c-8ebf-cc51146b3bab",
        "cursor": {
          "ref": "824f6acb-63b9-4d42-aca2-b9322ddfee07",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c13ea051-49b3-4920-9ad3-d9eb4f065f99"
        },
        "item": {
          "id": "cbebcfbf-065a-4c0c-8ebf-cc51146b3bab",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89096e34-7009-4bba-ad6a-5ffca03cbea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef7095f-1c90-4279-9a38-81ce17d67b6a",
        "cursor": {
          "ref": "87170f92-0540-4650-b2c2-f5689e54cc73",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b64b5f38-d8c6-4432-a554-a76c12a39fe9"
        },
        "item": {
          "id": "9ef7095f-1c90-4279-9a38-81ce17d67b6a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "40a3a064-d22e-44aa-a920-d635366c0b35",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5d5ce9-6cd9-44c1-972b-e377fd697fe4",
        "cursor": {
          "ref": "8dcbf837-db42-4d91-a7da-61f89c636c8f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b51c3385-0c40-4d81-b048-ca31d339371d"
        },
        "item": {
          "id": "7e5d5ce9-6cd9-44c1-972b-e377fd697fe4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cffbf624-e6e2-4baa-bd65-ea71db34674a",
          "status": "OK",
          "code": 200,
          "responseTime": 2616,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26473e6-569b-464a-965e-52cd5f87a5d1",
        "cursor": {
          "ref": "bc516c83-947f-40da-a75d-d2611dc7388a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "47ec0f98-9c3a-4bc6-bd81-4c507b069bd7"
        },
        "item": {
          "id": "a26473e6-569b-464a-965e-52cd5f87a5d1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b2cf815-c1d2-409f-8a1e-9d9a35c0f5e0",
          "status": "OK",
          "code": 200,
          "responseTime": 2581,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75e4a9-b07c-4dc7-8fd4-73c3d84d27d7",
        "cursor": {
          "ref": "aa776d02-70a1-4543-9e77-1177969a45e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "39aacbb8-4e6c-4b77-a368-beb157bf38ec"
        },
        "item": {
          "id": "1f75e4a9-b07c-4dc7-8fd4-73c3d84d27d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac4f17a8-dcb6-45db-a9a6-c8affc3d313e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75e4a9-b07c-4dc7-8fd4-73c3d84d27d7",
        "cursor": {
          "ref": "aa776d02-70a1-4543-9e77-1177969a45e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "39aacbb8-4e6c-4b77-a368-beb157bf38ec"
        },
        "item": {
          "id": "1f75e4a9-b07c-4dc7-8fd4-73c3d84d27d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac4f17a8-dcb6-45db-a9a6-c8affc3d313e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e1a980-b281-4588-ac3c-46b362aad75a",
        "cursor": {
          "ref": "d4d1bf3f-1bf0-4da3-ab16-c6ccc819e17b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "da071faf-fab3-46e1-b4a1-d766c3a91bde"
        },
        "item": {
          "id": "58e1a980-b281-4588-ac3c-46b362aad75a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d26f6ce3-1645-4861-aafd-ad810659d0d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e17d03e-423a-48d5-abdc-1a39d9becc7a",
        "cursor": {
          "ref": "09ebe552-5550-460d-b975-5d73b687e3e4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cb21aba1-ee22-4a59-8586-d0fc7ba4adfa"
        },
        "item": {
          "id": "0e17d03e-423a-48d5-abdc-1a39d9becc7a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "75d9fe54-dfb8-4f79-a65a-c56770adb70b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}