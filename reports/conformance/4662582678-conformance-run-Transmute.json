{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2851e671-a7af-4b92-85ff-c76351d0b8ac",
        "name": "Clear Cache",
        "item": [
          {
            "id": "053865ca-1d50-47a0-b133-d6bead48c974",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90d69534-c71b-4723-907b-ca176b8ffe8d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e01ffe3-7a48-4f6f-a275-8cb8188e7fe5"
                }
              }
            ]
          },
          {
            "id": "ff59cac8-286a-46c4-b1ed-28ee66a3d3e4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b72f6869-c9f0-4a6d-b61f-a85e1cee3d36",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "310308e6-a148-4e9b-9197-a47eddbe9f70"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "01e74f78-75c1-4ee4-b0e7-3e05b7fee32a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e46bb17a-8338-4794-a920-e52266aff37e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "064e1fd2-52c0-46b6-bb76-0378d8907332",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a1e3e3-1d94-4cc4-a6af-c5c1454b2c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d9a596a-f534-4d91-8c98-16f32890a256"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30d2cf1a-e112-442f-99a2-08c2de12e81d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3d6f334-7fe4-4409-b429-300409b15d69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f4c5acf-81c3-4080-ab24-bdb0e3222a5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3095de45-83a5-462a-a39c-8271557da388"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a24fa8-4e26-4b66-9710-fb5f6373c55e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df4fffa1-8a02-4e19-8c99-2c29ec0c2167"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bfd804f-2a3c-4eb3-a876-c25da210b153",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4eb3822d-d100-4b40-974e-87f8f9419a6e"
            }
          }
        ]
      },
      {
        "id": "eeacab8d-72b1-415e-843a-ddd2afbd9701",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a823118e-5723-4ca9-a4de-8b576de78a32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79efe8d3-722b-48d7-bf87-6f5c4c0f8438",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6349f203-c4d1-44df-9503-fd34745bddb8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba15c3c-ac35-43af-9c4f-6b862046d744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ad52a50-7046-42be-9e7f-4647499484e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfcafc7-a5b9-4439-be59-251ba523e6ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f26011-4188-4182-a501-84ce21d4d6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e77fd7e1-169e-4f80-9abe-443340aae861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a6602c-4cb3-42ed-88f8-903ca9a2b28e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cabb24-0046-4007-a969-aac1d632eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e438bfa-3515-4cc2-b4a8-aefd0fd85535"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27be289e-8f6b-4d3a-9c2b-623218fb49e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b95d7d1b-d52d-4479-8c42-e4a58819f3cd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e2b273-e3d3-43d7-a3c9-f71fec212c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f3510fe-246a-4a6e-80c8-1a3e11ec06e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f8a7fd-3323-4b63-917e-855d6a57d6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b997e5c-87b7-4c15-ab12-17ce7643b5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0884cc-3e28-40c8-b5b9-b401860999b2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e29a5-5363-412e-a0a2-bc5c2cb2e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37ebc235-e7a8-4b3d-b53b-2d623aaea42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcfdd46-e7b5-4d77-8e59-0c773a128225",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d9d2346c-56e6-45da-9fa7-fbae94d081e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "756971d6-7769-407d-8991-5003bfe89b52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f724a6a-b6dc-455c-8c24-0e7d68675c79",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2abfea16-db44-4aee-aaf2-8b59cb88f83a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a25aacc3-af13-4e2d-bb08-d7c0dad3386e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c272c51a-6db8-4030-b2d4-ff118f446e6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f0098a60-bd15-475d-95df-7e745f88544c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c9a7da4-c59a-476f-84a3-96651b32c5d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "054e2354-94ce-47b0-abf6-90899566e3b4"
            }
          }
        ]
      },
      {
        "id": "bcf3956e-1357-4f44-9ec4-45f9aca7e738",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f3a068ba-69e8-43ed-8a2d-86d93c93f906",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e0b2817-77de-406f-b021-778e921d4aac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "162fbd5b-a4df-48a2-bdc8-c5f4e182dc6b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ae9c1-bcfb-4a52-8fa5-928f25cd214e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037804db-4928-4f0a-8654-07354f761b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e15c84d-a888-4f8c-9585-9f475c77f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1487eae8-6d0e-4524-88b8-bb342fbb2090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e11663-fa98-4b79-a332-86c01068a292",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414b5d9-a754-4da8-9437-a932079c82ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a5b7d7-d61d-4bc6-a653-389ad5e6ba38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a4c7e4-2675-46da-917b-ba209388a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "852ec3cf-2a76-48b0-a71d-a6a202c68a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284d8a37-9e59-4643-8564-e7e9f4d52196",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1373b2-c43d-4278-9ea2-a71e22e7cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d696e05-3c5b-4a6a-8640-cf782827e969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5806352-2576-4f0f-bf58-212776146271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aee95da-c952-45a4-bcb0-5bc9bddb293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc8340-9a6b-4ba1-935a-5947d267a89c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8db98d-509f-4f4c-b738-03c0339c6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54d0bb0-2ff2-4ac9-8f4f-c95ec56b2cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5fedfd-923d-4912-85b3-112b419e2af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ffba1a5-cb86-4655-86a2-cf7112b6ffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5fc3a0-b588-4742-93b2-bb814f6bdfef",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d579b19-e6e7-48c1-b381-115baa6c4c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e87d978-f02b-447b-8033-5bfaec5865a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab11f7ba-d363-4a05-b98a-ce4160aff01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d950ff-3179-4704-952f-1c3e8d34883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c850313-4871-4d3e-b615-b4c3699ce514",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329cfd9f-e070-4342-b11b-596a9f3b3b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0665d8-07a1-4785-90dd-82a4a2b6ef66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcdca64-3735-4361-bc27-7d1217005b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3b9d7e-02ea-47fd-bdf4-cf9d900a2e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4b182f-60ed-41ca-a7e9-11ceb603bf47",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6fcc86-a923-4420-966a-7a6f0fb186f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368bb169-2d79-4ab1-b19b-4aae372652bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbedf80-fbe2-4c5a-859f-99093cd83a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4abcee11-0b73-45eb-81e7-8ccf2ffc569c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e527f8-1b44-4693-8848-e7b267aa723e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7009495a-ab42-40cb-90ab-7e3c38894d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac5fec6-f68d-4133-af6a-4d585cbea0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9555b3a7-5b30-4b36-8ae5-720c13682df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff5a5ff-a7cc-4349-a1c0-3434eda5eae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4658d82-9de8-495d-85bf-070fd13ad719",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe1ad6c-1efb-4415-a53f-fdaad95990c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76368057-5b8e-45dc-9a2b-debdf7bbcc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94e3ca-bf3a-4ad5-8cb1-ebfed0be10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc494966-73e3-4c6b-bdbc-25f35c4cf999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4248c8fd-958e-436e-a175-eba36bab1158",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c2509f-3195-4120-94e2-f83a51176c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e09087-3538-4196-ab27-c5a4cb6b79a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c55da-f97f-480e-a891-75e39768eff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e7d643-2e47-4a7a-84d0-d799bdee3434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdefde6-3a5a-4b8b-b76f-117c780c208c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f4b34a-4540-44de-9998-d63e64312768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8214ecc9-fed9-41ff-9ab3-8641c89de182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131ffb1c-8b3b-4da3-8fe8-287bafe70c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8759cc3-e307-45cc-92fb-4ca1e08b8c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72fe2b9-a014-4f86-83af-fed458da2d49",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024fa25-0a5f-47c5-8889-e1080d651a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6037bd5d-34ec-445c-b64b-be094bc534f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cbb105-c216-46ea-b0ee-53f64222354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32bfeacc-26ed-4cc6-89cf-adc80dfeaabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a194eb49-11df-49fb-b543-6b0e5820f055",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73e1c29-c953-4fd7-843d-fa067712ed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb2e8ed-4a66-490c-ab6c-0b3c2019b575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307ce85c-6785-472c-b491-07db639a0eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4159b211-09c9-4527-8bae-26f052b8a858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88d6444-0941-484f-9023-9240533c7032",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e9d2ca-bb59-4517-bcf9-b33cf9b976e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684f9c4c-459a-40c0-83ad-3c946168a8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202efaf9-3451-41cc-9ac9-3a4dc6a290e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "599d4a13-f87b-4ca1-8a25-e7ef54d03ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79975582-0fdd-47ba-9538-ee1f1c7f83be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1a0d0e-1206-42ca-acb0-56b9c25cb177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ef9d39-9d6f-4e68-b4f4-007ee2a0eb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6ba7da-c3f3-4688-86e4-a05691af067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25802964-e42e-42ff-b653-ef27d023914c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dccf2ce-ce8a-4aec-b77f-9b51ff0e4a4f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bb0ad9-11b4-4574-8aac-9e529da57dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddce9a1a-ddb5-4be0-a559-bdc8966f4b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51dbb91-a42a-4cdb-854c-4c00a28bd676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "153144b3-62ae-4c02-9e3b-1c0c87e229ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a566c5-f5f0-4057-be8e-e83f8acd8dc7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64873d68-926a-4e22-a7b1-203235e88bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a32160f-810a-439f-9745-ed4ae846509d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3f4f50-b304-48e8-9d76-1ba0ae10e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da16894b-5ac8-45e3-a33b-bd2fa329a22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ef23c-a9f9-44dc-83a9-2bf2afa8b80f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaa3152-f485-4e9c-a32d-55f23698b5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f6a622-3748-4e3a-a604-eda6b58ad39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f949307-b207-42c9-90eb-b4d3257ed06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dacdbe08-8f1f-48b3-bfb1-82e71be1beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49202cb6-54cb-4dfa-8bb1-916167a462be",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76deac46-6bf1-4e97-8bd4-3f38c4e13da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b559f6d2-8c2e-4b40-8fc1-cda43769146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b99bd8-6844-40f7-be31-3eb88e42f1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3155d7-8a87-4fe8-b53e-53b5771dc8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca95f67c-7aef-45b6-99d8-f65817f91ff2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a2798d-df6c-4d00-8416-cb8fdc50d81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4633bce2-6a95-476c-bb16-2e5fc84ebead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e50ae96-df99-43c0-b66e-4be867b7989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c6b3e0-3e60-4145-9c83-d8844c79bf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf163e02-3340-45a8-b091-4488070e00e8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2116b3d0-89aa-402d-a2d1-127c3c64341d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e6185b-de1b-460e-ba76-1a665c3bb629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be268d3c-3b07-4b0c-a187-ee10e7bc4c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f53f10-90e9-45b5-8657-0096f638b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e326781-0b55-49e0-95d9-fda8186b94ca",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d5c2c-1f32-4771-bf13-276d3860b2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f495d1-f207-48e3-a55a-00f86afeb36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c7ebfd-b687-425d-87dc-275e2920c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9492c693-eb61-43c1-b9fa-9359d9ac8faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b21cc4-35ee-4ccb-88f4-4f70b23dd83f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9722068-b59d-4eac-b7ba-82327166cfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55915d5-5ca2-4207-9230-6345610defcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d958cd84-57df-46de-93c5-f4ea0438bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d99cb8b0-af85-42e6-84dc-627c6719f933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febd8a29-b13c-4676-9d72-f1333e210d57",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280cae02-a491-4722-8eff-0e0c432a6c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc0ad4f-8381-4561-a052-347f9d0f4611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecdfff4-294e-41c6-8215-0a2049b1f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a336ec-2711-4293-8e20-df2852cc4b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f689ac8b-da35-4fb5-bf89-17a4541b539f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89e01ed-0106-4a55-bc17-0dfdb6a330d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9ce55f-b9c1-4320-b9ca-f0114d8880e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2b79b2-8668-417c-990b-1ea85ba84b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57149bb5-c3a9-48a8-9217-d065f7aaf7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14516021-d510-4ab4-8f9b-7e3d179bd5e1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be72f10-8485-4dbf-befb-143380f45956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88edd068-67f7-4fb4-a43f-a34d9cfd26b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce61497-3267-4e4b-9133-e927129945e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21bdc51a-9e2d-43ef-8fe7-15e31c11a887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380b49d-f335-4230-8928-1a599d53cb81",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea822d-40af-44c5-a996-bf2dd907be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f061d94-64e4-4c4f-b233-1d034624c472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac20b823-8dc2-4ce7-a5d8-1e64e4a28467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1036ce-7446-40e7-9448-c4bd4ea9def9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac64472-811e-4ab7-8153-2b47854e99c5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc823d0c-20b6-46fe-99da-3a846cc83da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff97be95-54ab-41a2-ad9d-d48dd0283380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a5a097-6f44-403b-93ab-e57120e21c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecfaa67-0a28-4a86-bbe6-b2aa963a7404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5233278c-c4e8-48b6-8277-3bf74aca97ea",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7f49c3-40ba-4fa8-a8cd-80d1b32c059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beacc01-8743-442e-a4f8-b110c6ca4218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db04f8ee-9211-4f76-8a1b-29b35ea726f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e8cb17-2e9e-4513-bcbe-d5d85acc1ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862a45e-5112-43bb-8072-5df63dfda8a5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1fcd54-2f4c-46ca-9fbe-9403605845ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310b4c9e-9f01-4330-8b70-d584893bc959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71b4805-f013-426b-9c0b-c3005a30c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa37b835-24d7-42a4-933b-403188cff088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6337ca-db0b-4bff-9449-c2f59dcb872e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa22b490-fd00-4d62-81d8-d0a0dd4d3c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb4ed15-c67e-49af-abc1-0ba6ac184eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab09846-2d15-40a8-9145-6bb32b9466d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a1267d-5d16-4b1a-956a-1d75a3e10eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6311f122-ba4d-4a86-af53-884366d1c226",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e787c-ce0a-47dc-96e0-13b9585d4034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c44f985-2ba6-4ea2-9d37-d2c6440fc8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec9f6a-eefc-46a7-914f-0676dba0b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc07e5e-c6b7-437e-b1a0-75f4dded5530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e952a98b-5cb0-4547-ba97-a9ed6dd5312f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6985402c-b25c-4665-b6c8-95c3643e648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad56ba9-c322-4c40-97bb-56919a51f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9795518-a15f-4514-b230-d012726b9de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a91472-ef5f-42a2-a5ac-874045db9764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc560a-8a36-4e99-ab1e-bd007c01c8c9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a23caad-cfae-460c-ae8c-6607d788a6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb955032-558c-485d-a4e4-40b2ff154e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab583b3-8a86-48e0-8c6c-a3a9a71ac4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "511cc5cf-74be-4494-9c6b-0c58b81a44d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de18c3b-6707-4c73-ac6f-f50f9d04c3a1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dfd095-5151-4276-b68c-a34b9775b101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cb5128-4a5a-465e-86e8-1707b1cedba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3733cb-30f7-400c-97c7-a071f01c3acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cacbc084-981d-4524-91c5-bbfce606ec40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7768382c-7f68-407f-b8ad-643be4a64433",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a736ac-237f-4595-82f9-5f1d61c785e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92c97c82-9062-475a-a83a-04dc4cc151b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274fa1b-6be3-4b57-b527-3eabff21ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73c16833-a661-48c7-8d9a-3564f17309bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93490f42-8135-4846-b26f-f8a5b3890e9b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb802997-bcf9-48c8-9ce0-93b7135737f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9d4de5-bc8f-4fca-908b-b040e41fcd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5297a-3f9b-4891-a6cd-ade93ab613bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b183e35c-733b-463e-a922-1f71eeec6104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab1c9c2-9ef3-4d2f-aaec-a27ed89f22a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1506b7-fa06-4f7e-9b70-b71fd06624f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355e51b6-54d8-46cc-b898-f19763f57abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c75d863-f315-4174-a172-0880645c8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae649771-b0c5-4f4b-8d11-514f579fb3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57382f75-4942-4db5-9ba5-870aaab1da8e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78473b2d-b5d2-4af4-b9ce-8e9f9f4c286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fd2d79-5866-4729-b9e2-00b53e3ed744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da16b93-9dbd-4075-88f4-e433e0cfbbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60dbdf75-4a50-4d2a-8bf4-36be518df4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9135d7-25dc-409f-a717-3e1d3fabc9a4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c85947d-bf5d-405f-8e65-f88bb382e0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d40e72-c9f0-418e-83b8-bfe4812c630c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c93299-3256-406c-acac-b435fabb1784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4548a089-6738-4916-b432-e22e92b4c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85e28ef-b560-4c26-94ac-eb0a5186276f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1faca7-3846-4546-8964-8a699a4e0d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f8bf7c-4b0c-42e9-bf92-9220f845dd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e669ee2d-f026-400f-a608-e8127addcca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebd91e8-cd28-42be-9465-b0e15c8e5e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f883f4-fbb2-4651-badc-5c2128e07201",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2f78e6-42d1-412c-becb-4acefac40730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b902d028-6d58-4fe0-86a5-b04aedcf2355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9ae978-8dd3-4bd3-8d6b-f094ff0a5df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6688f0b2-b142-4123-9436-16885501cc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e7bb03-8f1f-4b2f-9fbb-157e37e55d02",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7e647b-d6ef-481d-9eb8-af2d39ecdb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb5d044-dce9-47ff-8d7f-2d85d9ac951c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be5cf77-12a5-4c88-892f-2fc84fbc75f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59188ea9-cc7c-45b3-93bf-4fc662d3bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9426bf-7c55-4be3-b355-aeae296a358b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7870bac-0b8c-4b25-b877-1754d2f0b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1c519d-1d40-4b5c-bb63-ab846b4f0e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781415ea-68a0-44fc-abb3-d27cf326dfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "063c02b7-f437-4e55-ac47-b766ff2b6459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc335cfa-e6eb-4fcd-bbb0-af5ff4ea3ab4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f340935-8635-470e-8a08-e32100276a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11cf1f9-6b0c-4882-baf5-d36c5e647aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841f2ce1-8c93-46b5-9b56-35d4e4d3472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6020d2f8-1cd5-4fdb-8d3e-1aa9168bd9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f280bf-0bc2-414d-a9ae-c095be735ce2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2cad00-b1cb-4be0-8961-ca60c677cd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cc23ef-035e-4ae3-b448-538b8bdd9e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecff76c-f544-404b-9d49-b95fe386667d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2bce94-402f-421e-b4bf-a3a47ca1d6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0ec925-7371-46fb-85fb-b595d02c596e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deb8cb5-5b18-4251-a22a-e24b5a543ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec0c534-2efe-4922-9d69-4ab99d9126e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce9f8e9-aeef-4ea9-9c8f-463c8e647e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b428dab-40fa-4a56-867f-efb5786e2f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67db4961-3830-43ca-9e77-bd7332a0d954",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2421286-48ad-41d0-8914-5a804da44291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b8b7e6-b05f-4a61-81e8-6b23ee2946c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfcb514-4565-4959-8bbc-1e2a9ef51ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e336da-b0ba-4f64-8834-a24dfc14ffa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d163d-14b0-4876-806e-e2d339df5536",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b0e881-d8d4-4afc-a502-84655ad947fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a5db5e-3802-457b-9a41-f163e883e4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0885f049-b597-4540-8329-cd27c006aa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94af15a-8ad4-41eb-809c-6aebc020d548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc02b499-74e8-4c35-bc4d-592c9d7a32af",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4add365b-4fc2-4a74-a07f-2e650d8dc5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e587d7-6ff2-464a-a8aa-de4674cc9e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d7dc28-a5db-42b2-8ba8-5d854712b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c447f9b6-67d3-4411-9607-478428aaf633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c020f3-668d-43a5-8de5-00298e05345b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a38ab6a-f224-4877-b9dc-5fabacaa4ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f32e770-4aba-485a-8bb1-259a615745e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e45fd2-6aa8-4ea1-9d80-cb8b7170e04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a8a8ac-22f6-4985-98b3-64a6cbea72dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43706df3-f620-4d53-b6bd-8b29a924b3ae",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e544d5-7ee6-4050-94cb-1efaccbf17eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b11720-8def-4add-aeca-5f3c7468f3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518f7e6e-5d74-4beb-b732-842acd832c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8124a468-431d-4fc9-b2ef-7dd291e3a3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be0cca6-bf9d-487d-b10e-f3be3922b580",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204016fc-488f-4fb6-aae5-59b011112221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fa9a8f-a16e-4876-83db-300d362b0308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4428a48f-09c3-42d2-9954-b6e7cb0f5d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3fff22-e0aa-4e7f-810a-4406ed537998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b78c89-8016-44b5-bd31-70a16ac5d620",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8d0a92-ae58-4a44-a02d-1129ed2089ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ba4d18-ac52-41b3-9188-9ddb22c8fe6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914060d7-49b8-4043-b1e7-3d708bf5ddc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "307ef253-3b36-47ed-b2e0-886af50cae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7934aa3d-83ad-4118-a40b-9bca75da9ce8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f107895b-1446-445c-a230-ac48dd5f7f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a311b6-6be2-458b-b1d8-fab44313175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f54706-4888-4034-9fce-1d1632f63f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d30582-f8db-4858-8655-2ce59467cc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb17381-229f-4ce6-bb20-bb0634a7fd92",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda09f05-e8f9-4413-879d-df9f4b641421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ce064d-0dee-4712-9704-8927a60b4654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3fbf2d-5692-4e7b-b47a-de4b845ebead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cf3a6b-8bb8-4e6e-9787-9e88f635483c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92530f7f-d821-40dc-90c2-db8e36a3f63b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e5324b-d94f-4cd7-b44f-8304737b70c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08be7ca-2a29-4107-9916-8358266efe83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17efb013-34e8-4b6b-910f-8d23b48bbb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1359cd04-e1c1-4518-8923-cf1fc4acfe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804b7ad7-e970-42f4-80c4-9c775e576bb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552a026d-ce7c-48da-9a11-6732689206c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43609e4-d11b-46e9-8c70-fadde66d7a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcbd858-9169-46d7-971a-54b8dd44ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d762ef8-aa1d-465a-8bd2-771ed64076e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4d96da-f4da-4f7d-8a78-bcaa204e36bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa64f8dc-709d-4b7e-8f2a-ebda4b700fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b46ac5e-96f8-429c-a70f-5027bd15b592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c2e266-d719-4740-b3b5-6b2c945e9bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "394d0140-acbd-4cbe-b128-9aaf611cbebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97aedc-123c-4b86-900b-fd9702ef2897",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acad0f5-fce3-4b61-844f-61cf7ca60385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40cee1a-759d-47fb-b6d7-8ace11016f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36312b1a-8b7d-451e-ab5c-f17e55e849b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1176be9-4743-4f11-880d-d47435b206b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f6c362-8641-4f67-90a6-202cee63ed39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aef2e98-7cfe-4426-add2-b94d4223faae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532fcd5d-8b34-462b-9447-c93d34924eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafb3ae0-7728-4753-9d2f-4087e21b958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d409731b-a978-49cf-87c7-fff6fe3384c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf805ba-3c31-4032-8716-fd63a9cc6efc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4a346-5aa1-49d5-87e4-da7aacd0f001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb24d59-0bde-49dc-abee-c4c92daeb87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81db604f-c00c-49a4-a161-1def2f5af9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "230b5dce-dc0a-4154-a2ad-25f90c6ecb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f106ee41-68e8-4c37-9710-37bd96b523ca",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6330d1-91f3-426b-a12d-f51d958f153e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e599a1-f6d6-46fc-b41a-1538b2de8529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7822fcf0-910b-477d-8a51-fcca37fe9587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9005681e-78c3-401c-927a-1a34c5e77541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177df767-c9bd-45e6-b861-3fda322fccda",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd78ca3-7ebc-4c56-8f32-c86e683afa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f72e14-0ca4-46e9-9f5c-7adacde1fa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0db15e9-8ff1-4e39-b189-5c3c4653f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1680f247-728a-4327-afee-a73d43ad4089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6894b151-1924-46f3-b6c7-2d462ca733e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa4a72c-632f-4baf-85d4-bccd7698e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d6ec1f-acea-4230-ba17-c2ac390c86f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69a588-f393-499c-9471-bd3b64321d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5b55dc-f1e3-479f-a1f3-d4d5995f3155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6201a8ff-526e-4025-82ba-ef160ea06d4f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b76c823-b8fd-4ab9-9145-df9e653c5228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148b301b-d084-48d3-a24a-25c75e5630d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bb185-62e5-4174-8bca-b218b95e6743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "012d1f79-8042-49bc-89e9-9691cb2b89cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ee7a2-26b4-437b-9d3c-b80723702be7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b053665-6291-47bc-a985-ae89b592a1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c1f2cc-bc69-43b9-bae5-1f7665fbfd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f26812-815f-4bd3-a92c-f9fd1bbb2352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45e47146-e67e-4408-8602-49f65f89d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58a532b-0577-484d-bd55-1b08faa2acca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f35e0-a34e-437e-b038-fbce417cf29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0181816-228a-4366-a9af-e3978621b710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa09642-8b66-4f79-94e3-c44a4ed6fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03fb544-cf33-4abe-80be-425479d2a2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b2e291-f600-423f-bb73-0364784126f8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db54e18-c7fa-4db6-b22a-12e54711d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d88f972-ed0d-4aef-a1d8-dd3ae59df5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf3a3fa-b6d5-4cc2-80f5-aee05ab310ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4466cd-da27-4250-9a66-40af5b7c9d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1127c0e9-dcf2-46fa-a6be-df287b81cece",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f2cf17-14ba-420b-869f-5c4f59df6a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb8e910-5c1b-4506-a95d-43df371c47ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd680e0-99ea-4d1e-9caf-dae771e7f74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4e9d0c-8644-4de2-8d19-a72737341f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e21a1de-9e9e-4cc2-8b5a-ba4d8a315f96",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a913503-eb86-46c4-bdd8-722b37fe40f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1a027c-918b-4367-8fb3-f835a4baf361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c96123-2c7e-4589-869a-84c226f94f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "234a2ba3-3b78-42b0-98dc-09db6e698b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257fb7c8-147a-4209-85ce-df8a0e3c844a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a329bbaa-b738-4e90-93b7-aac4cbb9ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eafe85f-3fab-448b-ba11-3da5784002c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67ef5b1-d3da-4820-90e5-4b8f553db43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92c9216-e263-442d-9e77-a8c865d663b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbdad45-a410-4745-8bfe-f7a9ca6dc080",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbd4540-28c7-41ea-a6f4-1d668f6bcd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a013dd54-cef6-4934-baf2-55a7c46d12df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2e45a1-899c-4207-8584-2a57e1be02b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbf39d9-bea7-4350-9bbc-90e50d897844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2e246-d360-4dfb-b269-c36dac2f9f52",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27599399-11ee-4c55-a5ad-0f14ccc12a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fcb21c-55c8-4828-9560-fc410dad8f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227e3709-3086-46e7-b61d-6e0733563a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64418a98-b7d9-4aef-a522-e067b019fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f433c179-72eb-4ca3-94a7-ebee608788a4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dd337d-195b-4eb6-943e-c4f2c5fd4bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9730b129-cd36-4af1-90d6-2301e2092c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68348c4-9e43-4bff-b671-6c42496b37ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbbfb50-afb9-4924-9e99-e92251014e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d8ed0-99c5-4fec-ba5d-e572a0595dae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18810459-f783-4c93-8ec7-1963e335f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241501ca-ab35-4160-8449-40692fc6c00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b101d0df-a6b7-42be-8b69-e68847871fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bea3f63-83f1-4147-b112-4b658935b3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8debc3-be9e-47a2-be8a-8503fa720772",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0e0a5d-5413-4f46-a8d7-f78c400b6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f75226-bc19-470b-92a2-e20781b1c98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ac493-a499-4e0e-9f7e-8e9170dba6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f16593-71bf-4601-8cac-630df211e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886cbd5f-5760-44ca-b0a1-d2ba84a429a4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d20a4-81a1-4102-ac75-a732cbba8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee1d9f9-6dec-4995-b0c6-e386872565e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb4c5d3-f49d-454b-ac61-e70937dc1bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "011d6c44-f3ee-443a-b0b8-3d97dd831844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bfc2fb-0a48-46cf-9b9c-c584ea8664d0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd97d522-d319-46e4-a228-3c98889b0254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d99a1e6-38a3-45cc-91d5-79a979d80641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c2582-2e88-449f-bd8d-63a47312f9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b52fd172-6689-4a09-9294-9c8e388620b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cb6870-eb9f-437f-80df-e43036e8ea07",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddea532-99be-4057-9f2f-d91b0c7d79b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b0925c-a422-4302-b8bc-2cb79532fb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68120643-79c7-4deb-a701-d7c035f42f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae3f246-82ed-4453-9dfc-88bae3ba9a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e6388e-3683-47e3-9a7f-493619b0ebb7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a418279e-1c19-4da0-b4de-9bc8ac69d32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45edb95a-49b7-4d8c-9cf3-8ad6f5a491e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc7078-97d0-4800-bd29-07af15394d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e070904d-470d-4692-8d41-7e7e681054ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b707b224-8077-47a4-9313-123bbdb6bf97",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a16496-65b3-42c9-86ff-4818037973d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95df1f4d-f96b-4e78-a808-e20510c0d4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b214c2f2-0600-4c8e-a8a7-755b427aa5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb36453-cb3f-44bd-9de1-5cd4784b1e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3589e-bb77-4cd7-a3c9-0f6960d5556a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db237af-629c-4545-95b3-410106abb3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09977d28-7746-4a14-8029-98b176ce7379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e9feee-9385-4c14-92c5-7dc1b363ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd2d20c-e949-4834-9551-c92fe435c33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47baf8f-0d91-437f-b670-e05b47938554",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4b88e-d055-42fe-bdfc-8f0050575fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bf1b84-da6d-4525-a2db-f3c71e0a4e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00609247-314e-4808-bb88-7171d5dd9dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b09fd5d-c19c-47ab-9138-6114b20e0860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253d9518-6305-428e-9204-55cd80c7f824",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27ec549-cdfb-476a-8915-963a03825bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf38b90d-ff86-4b2d-9da8-10ade45be61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facfdffa-2924-4bc6-813d-edf296ee7baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9e06ab-13cb-4ba4-a8eb-c038d3a497dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9db4eff-3166-4556-957f-fbf682a217f8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25619767-b5c1-4d5a-aed9-a15cf7d65cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072e2ffd-239a-48b6-bcc7-0e7a98a912f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17483cf7-59ce-46bd-b5cb-2e4de98a6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f82f86fc-2993-4bc6-bfa8-da36eb6c8fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702749be-822d-4cb9-bae7-fe3f1ddb16fa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222649b6-1e0c-48a7-8b25-e39834aa0ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9ed9a8-be92-4e85-b5ed-661b4a7c5a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e12c34c-b90b-48ba-ab07-f227d71b7909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a31610-f2b8-4810-944f-d30db37e708d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a77b02-d65b-4410-b67c-650222c9f1d9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67acc167-2d52-4faa-be68-553f7e8f5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9132be84-e325-4ec3-9937-7f657690d46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8235a15-1764-4a80-a9a2-b0b59d7e1cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9ed678-12fb-414b-9212-18e3d184b7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7089b70a-dad3-4df2-9dd5-47662b0c2ccb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27987f-0a25-4b72-9aa5-b50e0540e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675974ef-8661-4ba8-85b2-13aff256cb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a447c-d6f4-400d-96c0-efa0a3655060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "739669f7-fae7-4cdd-b256-1b2ba0e8c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c6eaf2-9947-4335-aa80-05c4691703ea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66380a2b-5755-4c61-84f4-25df50fb9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b300689-8c3b-469d-9473-035686bbb7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a955f72-6015-44e8-85c6-f9f2c6c9e3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7730cd1f-4f3b-4da9-84c2-2b47e123274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d5add0-484c-449b-83fb-fb77060a2c45",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e6161f-c386-4a23-85e8-947806574d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb31161-0b64-4f29-a703-c7d3023b840f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bf58b9-0f0b-4ee1-aa49-19f4897fd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b9c2fc-57d4-463c-88bf-36c641911d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66832d4-a7e4-497b-aa5a-d2a80c281153",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3059b7-95f4-4633-a2e4-8b166b5c8ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1fd534c2-6c5a-49bb-86cc-a4621703550f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5364b25b-2a46-4ef2-b90b-d6874f1028ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eb860c-c498-48e5-89ea-2ed812d6e514"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7a36abb-f333-4c9d-8e62-eab10c5a7cf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96b8073d-840d-4220-a4a8-f08bd8bfde8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14dc95e-faff-40d6-8aad-b69516b69b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb47de3a-ec7e-4c14-8a8a-395600baae32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dc206b-9b51-40bd-98a8-cbc2c07b3c69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0304bdd5-42e1-4ae0-8841-cdaff1960fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d3c094-d967-4897-be6c-1da418edcf51",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6243468b-56e6-419c-a64b-695db5616ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f658b26-911e-4a62-be4e-7366b6046ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc5586d-1148-4e79-a00b-efec26e06333",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d7cf7a8-3c00-46a6-9616-18d1271ebc31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69ba18b0-d570-4fff-8e27-d3d5fff1bfc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f0d4b5d-c1c4-4503-83ac-49f944e4b16e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28164d39-0319-4dd1-b9e2-0af9d1b8b365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25e8ce9-1c81-4be4-b2e4-91bd937c1dda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40965426-f3d6-456c-84a5-556668f361a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28cdd9cb-cb61-4cdd-8725-0fcffc236b15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2baa7978-2558-4431-8ba5-32ce533de90d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "692bcc56-c8f5-4c8f-bfa0-f15d6080ebcf"
                }
              }
            ]
          },
          {
            "id": "a4b96bce-3406-4731-b803-9e1eff545a56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfb845af-2c5c-49df-9df7-5bd534b8941b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c96c839-3baa-4c7a-a218-288ca85858dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45ea03e1-cdb5-4bdc-8c68-4d96b838c8ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6daa2c9-795c-4bd9-a256-0d0baada5861",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3418fac1-00f3-4236-af6b-2d04258d7bf5"
                    }
                  }
                ]
              },
              {
                "id": "04b330b2-66ad-4750-b0b9-9d56feeba25c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64a9cec8-616c-468f-b604-31993c9969f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "503fd2ba-06c0-4ab5-bf9b-db331eceeb0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e72762e2-352b-4057-a84c-97ef088f09c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92904ce3-6753-4e04-b1af-26b423814432"
                    }
                  }
                ]
              },
              {
                "id": "2bcbfd3e-2ed2-4db7-b400-13b98d75325d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50947eec-10ad-4dfb-84c1-32e2118fbc3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ea73b50-c578-440a-8a96-9280709a0b3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0566a40-6a7c-46f2-af3e-b80935e73113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c73897fb-fd23-4a88-b526-18f3d552d3dd"
                    }
                  }
                ]
              },
              {
                "id": "cc2de7fa-efab-42b3-b90d-0819aa0c545d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f994a955-54ec-4ac8-8a1a-34f865d76f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26c3eca6-dded-4ef9-9ad7-8bcf1f9f90f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee1f5b18-9acf-4d97-b465-b1b890fea02e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ac05f31e-8f4d-4bb8-95b3-9f22e40251ae"
                    }
                  }
                ]
              },
              {
                "id": "aa2fb2e9-efff-47dc-a170-ed92d75aa2d6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca78b2e-b9eb-4974-95f0-b4e36b2ef378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db402eb0-0c2c-4197-8b5c-3322932efb6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4379401-adb7-48c3-aeb7-25d307502d6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "256e560e-5cbb-4979-acf5-2b56c197085d"
                    }
                  }
                ]
              },
              {
                "id": "56ffd112-1000-456f-9284-f866671890c5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2e33b91-8800-417d-a05c-de64d3173793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74288560-a6a9-4467-af45-b0e98bd59b8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e78b84ea-fc77-47f1-913a-a061cbca8b13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee7c0a4c-6303-4147-80f8-1c1b386a3bd6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adc5b8cd-4d9e-4458-886a-a73a147ca113",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47bc4b53-ab21-4a89-b261-56554b18ce2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea1b86f7-33d7-469a-ab40-16e367e62ca6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e1d11df-9a57-4d90-91a9-0b297044cfd8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "004fcb80-db36-419a-84f0-a3a55053d931",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d346dfb0-6e70-48e4-873d-67bf57f372de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba10d27-97cb-420d-99d3-2ce1b9ee1605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7024725-5e72-425c-8be1-e78a26ec32fe"
            }
          }
        ]
      },
      {
        "id": "9f12e715-654f-46fe-aedd-fc870517ffc8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b1cbb022-425f-4947-8c81-70458e3439db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d241ac9-5a51-4f91-8b06-7d074cc08522",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "320d4c72-fa5b-45c8-81c0-2b050fc070e1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f1832f-d0cd-43f7-a099-5cd1a5cfbd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac06e9f1-1227-4078-b3b4-209fab16f96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0dfe1b-46af-4c8b-8d83-b811e861bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "20da96f9-bf49-4a02-bef3-fb2dbcab7c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb3ed4e-1621-4d7d-928a-bc64bd6dfb28",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b440e20b-4029-4e48-882b-5413d69d6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358432bf-2f75-4fa7-9d3b-6180bb311b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d175fa-5d19-4e03-aeed-7e4fad920832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b1bec5-f7df-4461-8900-0e12bb4a878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168c798d-c15f-40fe-a6fb-7789e9657dd3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec8b8b9-d37d-4955-afb2-cbd3554a1495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3653fb6f-9830-48c4-8e1d-f15351da77c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdae3e9-06e9-4451-9248-afa16e286aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ed3120-aeb0-43e3-9d0d-9184274759f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2bd430-3d66-48e5-b703-0b8d4447ad4c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ecc7f5-391c-45c9-8424-ace1f29fd4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c428a9-afdb-4974-9958-9dac0c1bdd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56186319-943a-405b-b3bf-080f0082bc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b8dcf5-b25b-4a68-bcff-83968150fdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df7ef89-03fa-4c3d-a829-22c3d80e9089",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7231feef-7dff-45d8-8ea7-0da419089432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc71c9c-aa60-4011-a1b2-c506e79813a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62c6756-9895-48fb-9112-93641ab05dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9858bf89-1247-4af4-9f89-254b77cbfb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a15e2e9-9a04-4f77-98e8-1dcc0ba678bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d214d8-d737-427f-8b1f-da5e550f3896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d3cc61-2b43-4baf-8376-8cce877ac988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca31ec8f-bf61-43d5-916e-104bf2a85567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9e6d18-e1ff-448a-b2df-f86a8dcde813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5780415-6761-416e-8258-2e43eeaf831f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49186a20-b250-4965-8789-7e1767a31e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f0ae5d-b0e2-4f17-8863-40ed3259c477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530445f9-ac23-40a7-ad82-43d5c41fe7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0801e67d-a137-4e4e-96ab-ceac43cb16a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b126b6a-9942-4b4d-a644-fb350e1163f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b7cbc5-f85d-41d6-95db-157f8aa7b01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6e89d7-5ced-49b0-9fb8-2887836b2b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e7f81-cfae-4dd8-9f7b-0989c8f4210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "443ed6b8-4f40-4374-80f3-13e46cdab265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98f5f26-4920-4310-95db-cfadc79179d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6534b8a-d276-4261-abb3-eb6392a133ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dd517e-0533-4ba4-92e3-5909c29c0320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439d0692-827d-42b9-8f2c-820b0001c6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8b3860-969a-47ab-89e0-cfcc77576abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189b2a69-e5e2-4ad2-88a2-76a258a3ad38",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a0ebf-db12-4fc1-9d65-afa6ae904ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74903fd-56d4-48d0-aa1d-4308c522a404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cd4c28-4287-4876-a930-9ea04cc582c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc9028c-2a47-4a77-abef-c94ae1a88fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c6078-2c8a-4b2e-aa57-8d3c4ae8d0b0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c772b13-ab4f-4d16-93ba-9f66bff1851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26521822-3ab4-4d86-baef-8f667ef541fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069f92e5-a470-4bd6-aae2-e047ebc4e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3101fb8-074d-4cde-9123-a1b16673cfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89a1c0d-71d2-4da7-9f05-924a0f6622c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243478c0-abbc-4492-84c3-eeb95fcf9f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9ef3a9-6429-41fe-bd27-df03b82f7937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad64508-b796-4f3a-ad62-339385fb8893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea38341-3625-4682-865e-7d1264e3cdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae622723-6ff0-4452-83c6-40d421463be4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46344f9-5d52-49ba-b762-ac2ac7b6e04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad92acc3-c132-40f6-81b9-3112aa6876b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e887c1f-e0da-41fc-af22-0907d9e527b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e4cc25-8c29-42c5-b795-159b0b04cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727e55d5-89c9-481c-abfa-a14e719a3022",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f916ec-528a-44ed-a48a-ed3dae5e2815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0204a941-94e0-4df2-b866-d596d41b4c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68f218a-2b82-4d1f-b110-cc6830c7f02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffcbb84-82e8-4e86-af9e-e02b03cebe5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caa7284-c223-4c09-b5b0-989f259fa587",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c87016-e186-4558-9ba7-be5d371bbcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21b1bd6-34c7-4dc9-b12c-a0d246f1c2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5719ad-6167-41de-8de5-dcf207d34196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c6452f-f5f0-44c5-aadb-d489f4042764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc30ad8b-0ff0-4e40-8863-9d8ba5f927ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ea2f4-456e-487e-bdec-f9a249dd3424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82558f86-b1bc-40ab-ace0-5e433b581a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca1b213-01d5-4645-9864-a44457252c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e56fb7-6fbb-47b4-9e70-b2278fe2bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec55004-6702-490a-8f89-377f426d38f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e27b02-89ac-4892-825a-446fe0b145d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0930ee95-7003-420c-95b1-29eeaa418e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743a6be8-3fc5-4932-94e3-281e277eca50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2ce427-3757-49cd-aaa2-895adbb453a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e865c-a904-40f6-87d2-990f314ce7e0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7e72b7-29e0-4a4d-ba6a-43bd1eed0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596adbc0-8f3c-4ed8-9340-21805ff97796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b3a7f2-f659-4177-9231-a42dcda7afb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58fd3a2-99db-40b6-be85-f23fd74fafa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9542a46b-b4c0-45e6-98b6-1088f569880f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06d06c7-37a3-4694-8708-7ab36522b311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a86e298-1948-4338-b504-e634b6ed295a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c74532-98e6-45c7-b2f9-fbca0760b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ee6bc7-d38d-4565-b6b7-21b1b1fcda47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63300c3-1add-482f-9807-338a0e231f1e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed035d9d-e1bf-4b09-95da-20517748b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bd6186-02a8-412c-b202-e6e2765e734f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be09a7-30eb-4f73-8fe8-8b0c40fb928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3694315f-6cb1-4a21-8034-453add38258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4af5d2-dfd4-46bf-9252-146a87354911",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7954d-6954-4add-810a-da834d1ba888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34709ea6-b3b6-4a8e-ab3e-e846862190b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f38a983-cdee-4ae0-9a5d-0b4cd3e9f61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b413a13-9834-4fd4-bce8-b825b4bbc21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2115d701-a638-4e8f-8da3-47ab85910b0a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141544b8-677e-4815-bdd3-d103aa1e6ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919fbc99-0037-4eba-a5a8-369dce11d9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5849f9-8bdf-4c39-8f67-d76a92c9f6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c33e414-5a7d-45da-9c7d-42031e6226f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce4bcbb-29e6-450f-80e1-b39bbb3e0e7c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ca6374-7a77-4c7c-8020-ca594f45b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8d38d9-1386-4acd-8a84-4d5608c98ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09d298-99ff-4def-8d74-663bf357beb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd080744-834d-4ba2-8faa-b3a91f326227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a75c4c-19b1-4f87-a304-ee0416690281",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee637d17-a2d1-4b37-b526-bd669810e9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc642ca-2ac1-431b-955c-bad32f2dc933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807cee0c-fe6e-45b5-8573-ae86b6704368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f4a858-110e-4e06-abc2-e590197bca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5afbf8-cc62-4fde-85ba-d7c8f1259cf3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f52aab-b1f2-4160-a1ba-2e2cd85552a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a244cbc6-18cc-4587-abb3-d0f0f268a755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142eb9c4-a5a4-4d30-ba71-0d8f1fe07af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46466b1b-644a-422b-8b64-4debd9db2028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d33cb5-ea1b-4f07-b7b5-ec75c682e9f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04affa81-90d4-40d0-b194-ee0f6dd5d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf3eb47-ab4e-4ed4-b4ec-ece6571af6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa846772-9d82-4567-b9a2-d1553e71c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a338979-1663-4ba8-ac47-42589cdc89cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476701a4-a100-4162-a7df-e2c971fa53de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5183d2fb-0239-46a4-aade-0379cba8be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3807949c-e121-485a-9b00-9ae48e782621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29edaf80-689c-4a0e-8a35-cb8a6be5d214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6204b3-e72c-4d8c-bb19-dbd760ef62c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1490de-b61f-4d3a-8f0b-40ee11a2f209",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855576cc-ab08-44bd-bd72-639aa131ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465501be-b997-4fff-88b9-21bddf47a7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799d7cf8-c26b-48c2-b394-5ad3d4b5f6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8140d063-8850-4d40-9568-ac6640b83cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99431bee-b391-45ae-b95d-57bdf81214d6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf1b1b3-283c-4c49-8347-f682fbea1b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45acee37-7687-4035-b85d-1be784778174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a0b15c-d719-4904-9fde-ffaaa1dd9dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee295a9f-9a25-4510-8288-b80a65235c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0089c4-9690-4928-b1d1-cc0bd4778a8d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f213b1-eccf-4f91-bbb6-1eb5df700793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f387d0-4abe-4b33-bf6f-1bdb38ea6add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465e0c21-d581-4efb-9e79-02d0afd8428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fbde66-72bf-4a57-b9de-fe2ec60b7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd46f6f-f214-424d-9143-25d10729dc49",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7546ad-33dd-476f-a6f3-557b0891ac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0a12b7-aa7a-4d0c-8331-7b98ed4d4627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf1381e-638b-43a6-b416-7f44cf3d2012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0ced22-9d8d-4b0e-a3f0-5e484ec0f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f84de0-d4fc-49f0-bedf-2bac13410828",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfb9cf3-5018-4f51-bf95-e54315a8a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f9160e-2296-42da-a999-1eb472150455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef1fd7-c6a4-4dc7-9f25-7735ebf4c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7b5517-b995-4830-842f-f1de2bf16a8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccd7b369-3ca0-40d0-8bbe-8731599a0f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43306dc1-5fd8-4829-91b7-9110e07ddafe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1795ab-7fa8-4557-bcb5-adda1b89273f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23a5c192-7867-4b99-88a0-8ae9d4fdf7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0390a1a1-0b66-42fc-b57a-4390b2a09826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f953cf14-0b5c-4af1-950a-cb758fe12ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96d8e6-f805-4fae-b7eb-ae45cdd81c66",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c002a9-8169-4a31-877b-f5ab7cd0ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2ab87a-c611-4e34-8dda-1439c8d2a636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b5e430-e289-4f12-928c-b930f1b9f296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f4f7917-2c96-48e8-85cc-d95af5d6c972"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10daf286-53cd-42f1-bbfc-76039c98dfc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f2970aa-9bf7-460a-b8e1-59201251ee01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65f0767e-9554-44ac-a71a-13380f889fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "234a3713-b5f8-48cc-b405-085ab5d4fb95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25b30507-a148-40bd-aeeb-e13543a6b7fa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90b5394d-9137-43ad-8207-3c12e777fc6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc99538c-f742-4aec-9920-cf523631502d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5412c71-f306-43af-a971-9d5e5389cb23"
            }
          }
        ]
      },
      {
        "id": "d84d9adc-1f9e-4db7-9696-4079194d23cb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd0571a5-b2a6-4844-8a1b-474c2e363c09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7c94b37-61fc-480e-b306-c62db0177028",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4295ed88-4d1b-4325-a64d-64a6d8ed8922",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d759af-fe4d-40b9-9c7c-5aa208634d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df96cbaf-0202-4274-9e6d-d9a1d7145114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc6d9e-8c73-4fc4-8d65-0cb86d139278",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8d54cd-1965-43d2-9bb0-465b225c492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54deca7c-6ad2-4aba-8a2b-39492bab1bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab43c5e-19cc-4ead-a1b3-2b3589aba811",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e1a089-4ace-4391-89a5-3bc8827399d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81585c4-b04e-485e-b4ae-d4b0793883e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912c0c19-f0d5-4250-8055-7cf10c1155a6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03f92d6-c6f7-4b23-bdcc-ef01ecf31310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca69262-3771-47c8-8e51-5efbe29dfda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb7e116-d8ef-4d62-b486-e9e756a16822",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afaeceb-dafc-440d-aa35-52ffe606e74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07237f7-03de-4cde-90e0-09e79e9a0e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b832f64-5c73-4a10-bc6f-8241421e4db4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64dfddd-0bff-4fca-9d57-1137453f4b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f02bd17-18df-452d-a7f2-6e098fef1903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15abbb8e-94a7-4745-bc70-5a3e1956049d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffaf6fe-a997-4c38-93aa-f95d956a33ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e364d849-c2eb-49fd-9f6f-2dbdb96f4975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ebdea0-8a2d-4f72-a9ff-5895fb3bfa0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d56eb9-537e-4a11-8eb2-2e806cdfff40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f99702-4db5-4720-b8a9-18e8fe74104c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad75503-1f2b-4814-889a-833f6e9d661b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490f168e-8692-4169-ab20-73faa95603c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add58c29-3e3f-41ea-93e1-58f50827ddcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb233fe-c69d-4658-9f3c-3f49bf67b8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cada1a-7821-4c7e-93b0-b247f36dfac7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de21850d-69b8-402c-99c3-2ae51aa79666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bbac53-b462-4c3a-8efa-af3f99dd02c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce428f46-cf5b-408d-ac66-a4207a191470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf20ab1-4249-4a54-adf6-d65ca568e81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bab587-f5da-4ff8-b3e9-46e78b7b6126",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d6ce3d-cc22-4a7f-a9a6-16b514185144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06dec0c-504d-4b35-839c-26405398165f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dcafd9-d7e2-412d-8f8f-962d083c4046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4778034f-0d66-4c76-952b-59febb341187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ec32ce-41ee-4ae5-aee7-e8dc25a7901c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdb8f48-4ce5-42d9-9022-d2a4517dfa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc06a004-6409-4e4b-853b-fa69bd774858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df168f2d-84c4-427a-8667-1241ce5aaa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7059e7-8390-4679-a504-afe254cc58cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abc2bca-66f6-46b2-8e8f-aeb734bef0ce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f1ed0c-7fdd-47cc-950f-0838a33441d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fce4d7-1cf9-448e-b49d-7b84f482b831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9691480c-8004-4a19-b4bc-b41b65b9905f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b380b66a-b5a5-4782-b9bd-9fd39a2b58ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8de182e-1c5a-4a57-bd03-3e659dbe2974",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9649fcb-5071-4b91-880e-9500a0367b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492282ef-96ea-4fa4-a77e-aa87dac74763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8ed51-b262-4103-9ff7-990cca70797e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1f5f63-1a1d-4150-9ef1-aa9730ea9f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb4b225-20d5-4ba2-afc8-5c0fa517c517",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b12585-98ea-4c1b-9cd4-7536a70e001f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d635e5-59c9-4320-934e-b0f6de977b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89f166a-61df-4b62-860e-0ab2f8579692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3141952-49ee-48bd-aa4f-ec3549f6a4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095feb08-1431-4a04-9301-dd84dc7da6d5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236a7023-d05f-4032-8acf-64e5b79308ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4641dd28-81a7-42af-975f-1e12167252cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82edddb-c06b-4fb8-a89e-f196376ec71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0a17cb-92ab-4a47-b035-4fc46d243263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b91488c-8e64-4c12-b1b1-40be58194f3f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b39858-bc3f-4f79-b6c9-6a150e813e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09363e4a-3bfb-4f7b-8bf1-f6bdf6ee371e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ad9576-8f63-402f-9ac7-9e8498e33c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86672341-f9cc-4639-8711-cd5d6c793fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34f8530-928e-4521-8ebc-1277e2dfc5ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b8508b-1e80-4fd2-b5ee-c69c1b248d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733d0744-412b-4659-b11c-147e01b36527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2d595a-6468-4fe8-88bb-eb3b4ba47e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c820f0-cc39-4bcd-b578-67c0db418f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba70cbb-1b2a-4f98-bf03-ec98d6719c32",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f57108-5fc2-460c-afd0-b6eb21d2e4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efd5ed1-1fdd-409f-9611-17512a8e937a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4aee78-c961-4531-a981-759c6a2d5c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b99862c-8e44-457b-b411-7acd2ba0d008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3955fd9f-8502-40b5-bc31-c6ee41742c18",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a86abf2-c1c0-4b2d-a8d5-931a8bfc0306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb46e13-57cf-4b4f-94b5-6bb9ec33e99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a79f64-1092-4d57-8cbf-39657c6b62a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e482f0-9876-4427-b35a-34b6398de92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1127bd0-f508-41fc-8dc2-fa6505e30461",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b4896d-3c94-4bb3-9584-bb6fd21d3edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f444a-e353-48b8-9ac9-c73bb2002dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd12e86-91e9-45c7-937b-a09e68a4623e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d48b00-4447-41c0-b6cf-de55f5d820c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472fbfe4-90cf-4492-8566-d9edf877c9af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65481c7-7d20-44ac-9d76-77f347ca21b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7326bb2b-2384-4741-9ec1-25f95e57d68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a5b007-778d-4ba2-b3e0-8860bc5991e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59870e25-f57c-4437-ad5a-7085714f1bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92f1b8a-39fd-4bcc-bb36-ae1cf8bf714b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be92ff7-b743-4ec9-a1f9-1c5ebd8b1d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e37132-6b96-4fd9-a048-c2f08427aadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231f489c-62e0-4d9d-84ad-327af8675e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63e602a-1ab9-4962-9f4b-a17d1b40b235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9894ec2-b034-423f-bbcb-70fa09460f2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479de47a-0fe8-4fd3-898d-5714f5cf25be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249d6b45-035a-488e-bf92-a106bcfd252c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30905452-c4c8-4295-b590-71daa29a15e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edac422-e952-44b9-8c9e-90a831247377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eea140-974e-4fa0-aae9-17f3a11ca80f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204c9528-8291-4e12-b5d5-c42423b8f8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d2ae36-354f-472b-b5c5-cccf3358b94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0983779-09eb-4b34-a3f0-8f77765cbecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8766f1-b979-4f0b-bae7-41082ea37961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49200c32-ce21-494e-bb59-8759f9426419",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243fa50-f50c-45e6-bd57-f7966a74c657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f33a1b-8a5a-44cd-a258-3b2abfd060a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd214767-64ff-4bb0-afbe-b86e9decebea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43037cdd-b093-46e6-8073-6bfdfa29a3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44622f4-d4e2-40cd-a455-2f401d0270e3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fc7c29-69ac-426c-a747-651eed4c547c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2666b63a-20cb-497c-9e16-7a52cad0b201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516d7448-389c-4956-876a-02307be030d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a90840-fe37-4ce9-a118-f9f49d277d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91abcf80-1488-405e-a30d-ec557808afc6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329fc51e-2139-4b70-89c0-0b5af081b79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414390f2-542b-47d6-8921-d005ec192671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd6b923-9059-4803-909c-d4bb435a422c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f8a252-99cc-4e6e-90b6-1ca0b206e704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfdaf48-0d19-4f94-8bb6-66a22822fd53",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a80640-2085-4d5c-8c38-5444d3961887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689dcc2f-92d6-4c45-9dc2-e4d5e8beacc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db43b1bc-412b-4e99-ac49-d7f886e1d4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0761f7d-f1ef-46b0-88b6-61ce769100c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f57f9-7c48-497b-9963-5e1ab5f5aaf8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26f32c2-9769-4992-8875-a27aa8377d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c581e25-d05a-4b2d-89ac-dbb594176836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e500cb39-64cf-46db-83d2-aa72bac3f9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161165de-e88a-45fc-ae91-f027d5cd742e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be948e4-0b01-48fe-916c-60428123033e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17450e82-41ee-4bc0-9163-b3ce1dbe056c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0690ff49-140b-4db2-a251-bf57a3d9f865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1e0da1-a15e-4968-a99b-7c1c93e42678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c64368-0f50-4ac6-90cb-a3c16a05ac5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a86dc44-1e2f-40db-a1e1-62849f449173",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74655ab1-1183-4ea0-a0ef-08fbc0e86ab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d8979ab-1239-4963-a609-218874b3013a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea22c394-adf3-4bd3-8e90-6361efeb16af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d99c51-c758-45d3-81ef-869828145631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad51e8f-6272-402c-89eb-11f227d5e2d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805779d0-df18-43ea-839c-811a9f28be74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7419e063-c80e-432d-ad42-625c4d9aadbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7843465a-1d62-4db1-ad1c-6558aee58d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbe60af-2bdf-4f55-b7b6-28f21b312d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06397557-2757-4d39-a6a4-0e893d27898f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0389b53b-247d-4367-9397-607c32c91950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a287a45a-01e0-40d5-9c53-3be5c0e0f394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc94e80-f32c-43d4-bb8d-79a2f454bade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbabc445-9323-489f-8321-b2827f28a9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc97914f-26f5-4023-88bd-6b662c80014e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5228b5d-c14a-4419-9c6e-8285aefb8723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fbda35-d5fc-4738-929f-8ed3d00fd6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be0b482-15b3-4c7d-b559-8c96d3e6af6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b3c591-8959-4dff-a5c6-eb8d65f76cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df10887c-ea3f-440f-b7d7-f3da57ed1605",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f162221b-d229-4b96-a7c6-8beec06cc334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0819d7f7-b19d-4385-a2fc-5c1e7432548e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78793152-b722-4bdc-99d5-da250ff31fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb721c6-cf5a-413e-9b9f-b2c6b40e88ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec874a88-a5b2-475f-bc0c-8f131267d4b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a81e7d-b13e-448e-86f3-79186a4b7a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5bc06b-d6d8-4601-9b3b-2bbcd32aa2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d2cc2f-d5a9-4ceb-a03d-ba5633446fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0bc2e-2ff6-4e35-8558-7452cc9d5bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c3df6-8d9e-4129-97e3-db603295cf80",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988f92cc-c272-4dc2-90aa-cb2e55d4ca96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e95a9fa-368b-4862-a6e2-d3eece24ec62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b715ba31-d57f-4975-ac8f-d86784bb547f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd2243b-9c0e-4249-a73e-50e6f702cef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9df5c26-0919-492b-8cb1-32325edfbfb3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c852acc5-c674-40df-a421-195d198fa7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5e5730-23f7-422a-b859-ed9ac3120005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2fb8ea-a8ac-474e-9fbc-47442b17a0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b64218e-ec7b-450c-9381-e9f3f989518d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68d5dfe-1052-46a6-b87f-ba4ced2f630c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8334b2d1-45b1-461c-9082-40ec9ce46148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99adabd-05d6-4c5e-99be-598c33b184fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f177a853-42ee-4390-89d6-0640548811fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cacca12-0e3b-47c5-b2ef-e15fe2ec85ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be04edb5-6e6a-4433-8f1d-e712c266bb75",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63502d4-5ede-4a0e-bf9d-dece144be38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74b5851-deaa-443c-aed4-19d25ede587d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d166ad9-7223-447d-bb87-4b7ec8220a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e95329a-8107-45a0-a8c4-c31ae9970bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1b721a-e11e-47dc-888f-6e6b7cad1694",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd69d7e9-6121-4e5d-9881-2a4405b412d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a825ed6c-468b-447a-bdff-28ad1b735226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db02285-c67a-4a51-b790-e2ba40a2a821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda2ec40-eaee-4c86-8d08-a7929ee54af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffd16fc-fbf9-41b9-a308-1f4efe0e485f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce2e0f0-bb6d-4bd1-8ec5-ec376301127e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c71e9e-83ff-41b2-8a17-d26271a5d68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa6c140-5af0-4f71-bbf9-ade1c17d99e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590e9114-777d-4c3d-bebf-2c923b997dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6766493f-c9b5-4143-98ac-3c41104c5a4a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078c83d5-1e36-4a3d-b810-c7a87977d8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02e4008-2d5b-4c6c-ac40-682be09f52c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1983b79-86a9-4c36-8ae3-c8ba1873c73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3493eec-5760-4734-bcea-e1dd0431e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d514f19d-569e-4a82-a87b-310c4975e5fb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20608d96-02c3-4147-a73a-e4ec55776353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d5d6fa-62ce-4ad6-9e1a-5f3bbd609a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c2ae10-64d0-4c31-99fa-5a1865fc1995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d271cf0-04da-4ce4-8b42-7faf9b1dd7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9c5533-e491-478c-95e3-35537f7f42dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5e886e-ef1a-40dd-8fb2-876d91526f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caab094b-6259-4cce-9623-2965a84d6b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f3c33-7a3b-4f90-8424-dfe97488451d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c5e09-ef03-49f5-9b9f-8b1d5e3a309c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf19abd-d58d-4f2d-99c0-bcfb2c56841c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b8415e-c61e-40d5-8887-0e7f96f3a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092db24a-ef4c-471d-93c5-aca209e26b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47528c-aede-4191-bbc6-9d674ac42283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574495c3-b564-4460-a2f5-a68e45a43377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f682ccbf-f2a3-4251-8b40-853d40cbb079",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8241ee-ea7c-49c0-b8e9-bb210a389810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8755f4-995f-412e-9c53-5f783ece35e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d8ad02-37f8-46bc-a9bf-81a07bf2f25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd9afb-3d48-44ac-83e7-52d25935dc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2549e2eb-a7ae-46c6-8ac8-467c9c633cdd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dfeb27-13fb-4e4b-b8e4-19abaf831570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43026413-b857-41e5-896f-a73a17337e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d711d5-464c-49d0-9135-e4d069ea30cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af2a5d-2583-4241-9b68-236d6b68661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c95633c-d0ef-4627-846f-74e3126a8ad4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a9d5b5-70d7-40b7-80ab-373c5085d568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e65272-2ac0-4f77-a77c-e2ee6ef42705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e0f855-d792-498b-adf3-dbea8d7cd78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f2bcc-7b95-4384-8a33-3d4334d95791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6e53ca-ac3f-4364-8bf0-04d33cf9e32b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e179c0-ae4b-4d86-9fcb-f5327f750d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d68450-e028-47b5-b4e3-7914ca781573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67a9ac7-3f43-442a-9b2f-3a59382a0b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbad429-488c-4d5f-8a90-81db55a584eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab6d09b-6007-458e-816f-7ddac47eb0ad",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107d1dd4-c7c8-4350-a908-670ea7f56f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4de1c9-8b6b-4271-b526-57bae512bf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851ba03e-ce86-4c86-b779-6677790983de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523dbbf8-947d-43f3-9151-69c774b17d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35ab7c5-5df9-4f65-9feb-43615f523459",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974d9c4-fe7e-4b1e-9569-42c681d83811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c106802-fdd9-4f94-b8d7-5af99a8c66c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd5839-1f62-459c-9ad0-d93ed70b7672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a06528-3ed5-45dd-a088-6136e491d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f988f8-c5ee-4a7e-9bfb-3c73f9d5e5bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dad469-1d61-46b4-b458-e45ac9e9fcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d605b5d8-4a8b-4bd4-8bac-02897a27e19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9664341-e587-4b7a-a89b-a1cbfd48bb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba68e70-1773-4c13-b4ca-b468b7283502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e390759-136c-4c01-ab6e-e985f7004c5a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da4680b-48d7-43d2-b615-ac250d6085d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4429ba-727e-43fd-85b0-de9c3930afba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ad705-edea-4027-a571-37f2f3c0ca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e319a5fe-5c79-408d-b3c2-f23a6db62189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c575f71b-3bd0-4e7b-be1a-a8b65b68da4f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdb57a1-0c69-422b-acd1-3562ee273cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cccbd5-c4ed-416c-ad99-5b34515257d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badb7b7c-1552-4700-8a32-afdc4f95653b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6090d92-f76c-4bc5-8f40-0c269637224d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69e93d9-d56e-469b-8628-aaeedbc1881e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d618f6fe-736a-4dba-8d37-9da9af194cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e994ccb2-7153-40c0-b075-c095d4d7b61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44ded95-4a72-44ed-9db4-7fb12e4a30ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e523cb1-94cd-4995-bd9f-ca76c3dc62ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670a9c8e-c21a-45df-8fc7-f20323b401a4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ba77ed-68f8-4acf-8d28-042efd3a2ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056fab06-081c-4355-b2cb-0a94541d1a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72f467d-aca3-41f1-bbb3-c1066dffa926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cabe52-7476-48db-916e-eb87285098f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa7d87a-2c3a-4ad3-a9fc-3f2234cad094",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3263740a-2a28-4880-b169-f1c208894c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be13c001-dd81-4d4b-b0cf-d5417ecb61c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0721b9-fc4e-4506-a428-352007d5440d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c852829f-5ff5-467e-a3a0-d72b553e6cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c4d543-786d-4306-b7ef-c83ac8c5fd01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb79e41-e006-4ea0-bb1b-0060f05552b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379bcbba-69b8-4a4f-a408-7950b7266ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb67a9fc-f757-47c1-9168-79dcd95cd914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7feb32-7def-4b08-b93b-9eb8a43e00ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5c799f-d0e3-4e32-9426-b73460885faf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e07c2f2-a5b4-41bf-9f75-bcba81fa840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ae5cac-bcd8-417c-853f-f827dcb129d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b37109-307d-4e91-8d3f-b933098a7229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7160edeb-113a-433c-8d2d-c6e99cef94f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09601223-3de2-4aae-a02c-189a396e2000",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543df85b-ec54-4c7a-9c43-ea0e67c3cdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86de34c-be70-4509-a271-2fa53d42051a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588cf8b6-2519-4ae3-942c-d15898319a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9906f275-29ce-4732-813e-2cd2433a9dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8281539c-a005-4460-a858-c5a50788c8f4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883826a-d7b2-4d7e-a6e1-889d93d1ac51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec058a56-a309-4a93-a03b-1fc23bac9857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa84ed-bf32-495a-b307-5c31d87bfe78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69a354f-057d-47d6-8590-78848cf42cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0464cf83-339d-498e-8b82-8093733cc0bd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a2f426-88a2-4940-839a-5d693551de45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ae9cb6-4a52-4f7a-a53a-70af678556f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1983cd1c-49b4-4e87-9235-b38cac6cedee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1ac436-f83b-4dbe-a3b2-002bccf424cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a602d6d3-d5fe-497f-be27-da950f2c76cd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f191a9-96b5-4382-99d5-16ec065f9c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4942eb-3d34-4b0f-a59f-8483d5f8bbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f20454-b2b3-4334-aa25-6d1708dc12ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d977a3-75a8-4121-9cb4-bb0c829b07bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa395b5-9bc9-4e70-91f0-be7c2a5ecaf0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa99a71a-02e0-4b27-ba59-150941fcda5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b5a59c-08fb-4a76-87d3-a3e49712ec92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a990aa-3af4-4879-b3c9-54533b22a7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc851a12-6d4a-4a4d-95e8-d2d96f57fad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dda9b67-c1f3-4c3f-9fd5-526304403c66",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fef954-9764-472e-8e1d-8aed7c5a96bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497ed9ea-f5c5-451d-a974-33e5a4360a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da55c0-f188-4e63-8af7-816126a264c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e01eb6c-135c-4a6f-98e2-e0bfc4a2346d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be8d2a0-c954-4ee7-9b76-dd844e4980ee",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c49d14f-31bf-447d-b2bc-5fe1318c98af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945890b3-6835-4bed-9c1b-59c3f1dfa30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af49b7d-6811-4bee-afb3-17f473515344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f855a6e8-d016-4173-9ab3-11adaaa06a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94b4691-6d42-4066-bfdc-57f5438fe1a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a621d5-f6ba-4690-82e7-044ff309f125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5e422b-4ebc-4f2f-b9cc-243545acbba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3405f6d4-b3d5-429d-bdae-b51b075804f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37212d58-8d53-4a2d-8598-6ad461ac4ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab9743a-7115-4b7c-a50b-77c3644716dc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808088ca-8a5b-464e-93d4-ad5cc26a6e12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb344dd5-f108-4ad2-b538-124c86bbc7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c29bf-6171-45ee-a637-72eee92b999a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8c128f-eea9-4271-8fe6-761b791b656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b4b8f-845f-4c1e-88b9-5bbe131301a0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7efa897-68ef-409d-9535-899123aa5376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a088a923-2044-474d-84c2-08c7f6e72215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7df46f-f20c-4c90-88eb-9153251f5d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f512e334-2764-4fec-9f96-99d99240fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ed7d2a-ae82-4f3a-8ac3-4ff27f6a0160",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68889cc2-42bb-492f-af75-6fceb70af831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2cbed1-dcac-4e06-be88-3937aa093ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843f81f8-0922-4c9e-9815-5d1d4a1a79ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf33fe1-7476-42b5-b2ed-1d2f76146424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7dab30-a1e9-4d70-b9d7-65189a8ea5a1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6147f3d0-bf46-481e-bd5c-d933ec9fac97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9e1315-24c2-4029-8f59-90bb5b6956bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45e5d6e-ebdb-4eb8-8182-e2f354cd07fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daaaf54-e2f1-4f19-a2b8-351d3524452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc3dc88-bd92-4e06-9b5e-57c004dd7b20",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f9e29c-a35e-4ab3-a750-f704a2bb8be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1910cc9-d6ac-4678-b43d-8c084f00ccec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38108a39-7584-421d-bde6-1edd9c7d9ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb6fa7-f748-4da3-9825-4d0b9a93a2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464243fa-7e8c-4a45-9dd3-3a581e413ee9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de43734-cb97-471f-b07d-92c6474950bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9bb37b0-4e03-4e5d-b7e4-f7f0f6a4d165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e69c780-dc08-4e6d-b02e-71baa5bc471b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc140b0a-d82b-4cf1-8625-9aaff9e61c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f72a20-8774-4c9a-a9e7-a21fad7da452",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb00fe8e-cae6-49f9-b0ac-0259a8112592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90024727-fb62-4127-8583-ef4eedd671f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e8e0a2-2eed-4a30-ab90-4dbd9c1a6ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cf8296-0d6e-4571-9771-c4eb8b8cba5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621bcde6-e758-472f-aa1c-f0eced249c58",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8febbd7-40ba-469b-843e-a3523d9b5461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88be21bb-f473-4d33-9ea9-3e5d66baf34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed3f258-75be-44b4-bda7-bd4db9bc6a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55266301-9ffd-433b-ac6b-4498362da0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c6988d-b3cf-41f6-899d-c2fa39d69ad1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fc72ae-0024-4d23-8cb5-85a16ae8da1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3362c352-584c-4078-8e7a-762fdfe0b516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb25be-5c9e-4ca7-af7c-34dcac57b1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0224288-aec4-4555-908b-5a4400644fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7633e4-fe39-42ef-a048-3c12788caf73",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd127583-739f-47e7-89bd-a44898b529ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999e4bd3-9771-4b3d-a9f3-a6aed22cb605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7c5497-cf9e-4902-acdf-88147301528d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b110fbf-65cc-49bc-9308-1ddbddd79909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e602f6-b495-4544-800c-ed2a9b564997",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bad369-fa71-48f7-ad64-da634e048cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf60a9a-c6d5-415e-8020-ba713ab5ad56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d69d54-5859-46d6-807d-e1f5584d04f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa108086-4fee-42db-b6b0-2b9e6ec84f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca859a33-a5ad-4f95-8482-8fa2daeb886d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d291842a-7152-4126-8d91-74e16cbc5a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3431cdfe-3721-44fc-af75-f7b44c92b6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a5d2a4-8487-409c-b75f-39ac3d614d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ef0ca5-9026-4beb-bfca-c49ced73107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44357572-1bfd-4012-be69-799b2628c6ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902571e5-780f-4a89-8e27-5d9638691d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711848a8-4a21-47ff-8d0f-11e71b0d3c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373c302f-c212-4d9b-82b2-3c22ec7035df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e805e-b805-4e07-9a7b-b4f7d5bdcf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb9527-7d23-4017-a998-6c8d56bebc4b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cd2145-061f-4c35-85c1-1ead0a810b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d12f2cd-129b-419f-88d9-f700fac40677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3d8467-304f-4ffe-a6c6-92aa38d00313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2558bc19-81aa-4729-be16-e72f24ae2a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d39c762-568c-48c0-a8fc-0a48edb7229d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2cf92-fa2b-4dcb-bfda-0b436bf19d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3c2b7d-f1ac-4b94-b824-4b65ba82749b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26c5bc-7683-4979-8afc-e331f062b660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2375268c-806b-4555-a839-80db52b4de62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083704fe-7eb5-4dd0-99ba-5e539ff2dd81",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df0dcf6-b104-45d1-9ff8-d9cad4723bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceecd4be-c876-4984-9f0e-26677c1856bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e59073-8ac1-478e-88b3-1194b42e179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d06b799-f7d6-44aa-9ba2-fe9c0937b9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2535f7-28dd-4b83-9a9c-b95edb7be4b2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681d27a7-2331-45a8-bdd6-2324451b8a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d575244b-5e3d-4032-8b7b-e1760f2cfb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce1a58c-f8d3-4156-8b02-187eb2d153c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b512cf5-8442-408d-963d-eb94a5b49f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb35acc2-2ca1-40d8-b9cf-c141c0cef7fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a578c2df-d02a-4a30-869e-50de95cf7b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7fdd9c-8fc1-438e-9b1a-e74a57043aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65807d4d-e5b6-4ad5-b8f9-5ad750097bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701f2725-f023-4c19-b2ee-6de807ab94f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f713be0-e03c-46a5-8ff0-1db701988f0b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a5d25-265c-4204-a420-d4b02781dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8aa80a-4416-4de2-83a9-f28174c52342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcca51ef-4d3d-4bcf-b38d-3504c8010114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7829c3-7c8d-4c0d-a33f-f5db23df49e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa704a0-316c-4296-a4a5-3890fc8b599d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ced3bdc-8b58-44f4-acb5-51d8e9796d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996e6a34-c3bb-403a-99a9-17e459129895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47931a15-435f-48fc-bc94-7260f1ec197d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c094e4d-5c82-4a81-9daf-26d9949a1c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19991ca6-63a5-4f2c-8c97-fc9f1d2bb5a4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9114306-bbdb-414b-b6a2-5e48af41c41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc639e4e-1322-4a1e-b0c4-35e131b79e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f26d1d-3690-41de-bf82-87c5b8543fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdf9aa3-3370-4a5e-9614-b00eb705eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f788cf-7f6c-4f63-9cea-ac08509d2b2b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070512ca-70d1-4924-a835-57b288106fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35143dfb-bae7-4501-a818-975d5f82c66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109b2cf1-aba2-427f-acf5-179d262cb6f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4fa65e-03e3-4573-818f-7b2f2ab03b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe76e5-5f2f-4080-9b8b-279b38fb0d20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6b717-408b-42f2-ba57-c2244b4fe90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d7058b-2957-4a4d-af93-bbe2c1777662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d2002-e4aa-498c-aca7-23040a9254fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30630990-52e3-432b-b613-58ed74cfaebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d36dc5e-dce7-41b1-a2a7-b764449ce799",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8d0c52-3329-4513-b20d-5dc3445fc572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a49df1d-6b1c-473b-b1d3-96c5fd2438e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37be28ca-131a-49e0-bfed-c128b7595563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb39275-e05a-4fbf-81fe-70412dd0b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b15e82a-b318-466e-9086-9433db63daba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e382f67-4066-481f-960e-8fa78b8018ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554a79c5-7dcd-4d1a-9fed-085414bb3942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f61e83-d270-4fac-826f-dc35cc9e1776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65edae88-e068-421f-ad8b-2cd876e8a112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e885a90-af01-4b35-9dfb-ea19d96b6dfb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c268c31-ad5c-48a5-9ff1-23ac00acdfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507ef228-2386-4191-9946-6a24af526252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b215ef5-3b50-411d-824c-74b2d75934b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4318a9e-f824-45c9-9303-e3bb2e92ee0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb05eca-f7ee-40b4-93f4-8d19f576f7a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c209545a-34fc-4996-8194-f01cd261e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e322755-2acf-4541-b014-f3ae443901b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a26e8-939d-4150-83be-082753f8670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2035749a-20f0-4ecf-886c-e6f7da0b186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3325da-424d-43ac-9691-eaefbfc35d5d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a75f26-644b-4443-aad3-db54e085541f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9571ccec-fe43-4f0e-8bac-cdc09cd1d600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a7a8ee-7eac-4bfe-9647-39936194810d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df33184-e403-4fcd-aac4-66cf9ce63cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39b07f3-5c88-4314-b43b-f9a5d66606a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abcf95a-dc89-4174-b457-c7b17b7750ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae23b78-48fd-41ef-80c8-ed4d43209742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770f3a6b-8414-4843-a569-1f6551beff82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a848402-851f-49c9-81cb-7864c7b438e4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bd0419a-4d09-47cb-986f-97b799b2d092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d562b7c-9b14-4574-8ff4-6865bdf8eb17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2990c08-7260-43c0-921b-1018a6a6cf94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ed419e7-4662-43c4-9ac2-95ab8c1d7fb8"
                    }
                  }
                ]
              },
              {
                "id": "edd29351-134d-4f74-8570-1f445f2da487",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecd436b9-9df5-46aa-bb00-0896787d3e1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5878a92-7164-4cb5-821f-c2f47a50cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "742512cf-12e7-47c9-bde0-a8a3a34c55c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e0fd2c-240b-4bcf-b825-5777311df236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7c1c166-e1e7-4fb6-9676-fb4dbea8288a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20a8cfc-db06-4831-9f8e-95af4eec9dec",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d63c52c-9dc9-44fc-badd-f86808929ba5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "071262f5-bb6a-4f8d-a63c-70d15597e054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68e8532-d219-4461-b3a9-43faa03a1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f9f6218-94ab-439e-944c-ce75a4b78db0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "727118ad-339d-4e6d-acfb-69403b10f25a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee1570b-687d-440e-bcbc-3f6dd1087682"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4bfe207-6926-4bcb-abdc-e5de0d8a30c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc660705-7c82-4e51-9a04-c270a4cabfaf"
                    }
                  }
                ]
              },
              {
                "id": "7978eb4e-b1f5-400e-af2a-250ae0b3b4b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "411756af-69bc-4568-b511-43fd3c80853f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd9d984-72a8-40aa-ae90-34f69d2baa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b2b48426-3c10-4791-935f-e627d905bd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e97537-0f23-4da8-ad2a-2aaae0efd96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b39ac2-543d-447c-9802-40b864a23a70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06403b06-d9ae-4f00-ba75-35f7190858aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1c3cf92-5977-4a4a-a387-87a9d2cf062e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28fab32d-5957-483c-a9cd-e5b6ced676e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b92d8a5c-b1f1-42d8-8905-83fa7112a278"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14616b62-19ff-4fae-af80-e2765f7c8780",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2051f730-669f-4b50-9cd8-26b9df2cb5ae"
                    }
                  }
                ]
              },
              {
                "id": "dbdc9aec-490f-4380-a392-c45940f69218",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a8b89c-9afd-45df-b5b0-ff881a51b057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e92d4c5-35ca-42fd-b127-b88655afba47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5009add-0388-4f42-a862-77798b14b4ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6dd9cb9-7ecf-4d21-b63c-1f81bc016f8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75384ef7-b76e-4a0c-a73d-68b6950b1621",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1b2676ba-ea96-4a30-8617-807761ce4cff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26ee03cd-31d6-4a42-9fc6-1d4c78642c48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0adf0ac9-5198-400f-97dc-350fb0fb1bef"
            }
          }
        ]
      },
      {
        "id": "412edec7-049d-4b8e-a680-adb12df73af5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4be2bc56-f681-4909-ad15-d91cb3649bbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81c59837-4c6c-4bed-9b30-44d289fd77b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26409fa4-c28c-4fab-a3d0-6b7f8d688e23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "928125c7-e821-48d7-bb44-1cb1474bb611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e78efcf-cb99-4e8a-a35d-2535b96dd1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0844e6bd-b12c-494d-a4c1-c07d0fec3456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539920b-e7fa-4f7f-8015-b8940f8e9863",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d7166-efaa-4294-bfb0-69590369593f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d2480a7d-ffc1-49c5-9890-d8fdc5ab1a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3106b26-e78c-4d0e-bdeb-9c17cad7746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d74dc8a-b595-4c36-8f0c-9305edb822cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "accd7c71-08bf-4935-9da3-906b2dda0217",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bf91edf-1636-4732-b865-1c7252c8fdaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5daf173-0ca5-495f-ac2d-6f8934388df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb8c97df-fd01-4b9b-a5c9-fa370073f60e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "856a72d6-285b-4b1d-a355-abaf00e18c69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4dcccbfa-6be2-4f70-855c-e08a5a7bdb71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1897da8a-8b8f-466f-bc8f-fa9beda5095d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "785ba095-3b0c-4a95-8f7f-f5e063b3670f"
            }
          }
        ]
      },
      {
        "id": "120fdb66-b92c-49a2-b04d-28fdba71dfab",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be5e1c69-8218-43c8-8e53-5dcd3af581d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3893a574-22fd-4d2d-86d5-8fecd8e1cb76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22185545-23ce-4689-8367-dfaac0889dd7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ddfac-26fa-43c5-9188-9294ff8845a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa53005d-25e0-457a-b1cc-c84bcce43a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a1cfa4-55fc-41d7-aa1f-371e6fee6d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86569fc8-0dc9-46ff-8821-0181ef630ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3ef52-118b-4344-a3f0-b2236d7be797",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c3e78-85c2-4e59-b19b-5b6378446620",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5003694a-bb75-4b70-aec8-ce36e88d0a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac967f-e145-4025-a578-5ce52b39e6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68a0b601-466f-456d-a594-118b054665d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6985fc8-608b-4d47-9fdf-e74dbfadd447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8aea1fe5-6522-4878-9939-9f46a6cde1e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b22eafa0-cf17-4a0b-ba6f-9e4a883805f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7144475a-9ee3-450d-83ab-4253d2725d48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5006603-59b5-4929-8b31-e3f5b6c27a33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e9760df-be7d-47ac-8349-5c352f1bb200"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bee0779d-1992-43ac-b6a9-3447efe2f649",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "742d6b04-72f7-48aa-8921-2b4510d60eae"
            }
          }
        ]
      },
      {
        "id": "b3cf118b-36d6-4e6c-9eeb-65106b73f5c3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "838ed95d-3074-481b-afa5-902f1e1aa302",
            "name": "Negative Testing",
            "item": [
              {
                "id": "644eca5e-ec12-4835-b505-235f14a578e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee07535e-54c4-49ff-ad51-b51e82e11d9f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011b333a-4f67-400c-9cdb-1ae9276a3c3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40cf8049-4e8c-4aaf-9145-83854849fc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e217d8d-6fbf-42bf-aeac-46e550c36b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6ca65a-cda2-4bb0-aa8e-1e1461de4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cea0326-fbe6-4f63-9bd2-9ea00ec3db11",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74ccf78-6095-4f88-9f2f-2eb54bbd4ead",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8e4c49-6caf-4147-b029-39b2a101bd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c3c9d-2620-47f4-8530-14b12629c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d2a67b-85c5-4416-a704-a36566595385"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f87fb26d-883f-46f2-9f4f-0e27fbffdbf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5b9651c-aff5-4661-85ae-a3393dc80307"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d6270be-ec1a-485a-bcc4-4b8b97fad842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d067bf8c-d48a-4710-beb1-6e0a5de5a6e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8843294e-f1e9-45e2-bf46-2eab540c17ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13c2640c-8550-4931-b52c-d0bf951ef42d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41b863c1-5e6a-4019-852f-d30dcd917d70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7ce86c4-f52e-4cff-9f0b-e0f9287bfdad"
            }
          }
        ]
      },
      {
        "id": "98f715f6-5932-4d05-803d-99d4d3f59302",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35eef293-6f5a-477d-92d5-76c3d8b82aad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48420709-03e7-4db8-b2bf-9b0303e0e004",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "792ddc4c-cfb6-457d-95d8-abc4b1280ddd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcbf83e5-a8a7-429d-bbd0-760b39d4736e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1afd27a3-7393-41b1-9e63-d83535a7d652",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 764.7538461538461,
      "responseMin": 10,
      "responseMax": 10205,
      "responseSd": 1114.7808240017987,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681173453775,
      "completed": 1681173665265
    },
    "executions": [
      {
        "id": "053865ca-1d50-47a0-b133-d6bead48c974",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "10afc8b8-af42-4b03-a736-f38244ef584d",
          "httpRequestId": "79f61be3-3073-4902-9611-7da395ad70ca"
        },
        "item": {
          "id": "053865ca-1d50-47a0-b133-d6bead48c974",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c4a8fc98-e6cd-4d8c-b968-bffaacfcffbb",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "ff59cac8-286a-46c4-b1ed-28ee66a3d3e4",
        "cursor": {
          "ref": "a38d1a46-266d-4987-9bd1-235428bfe8f4",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5a6c5cc9-25f6-4922-b52a-bc350d1dd338"
        },
        "item": {
          "id": "ff59cac8-286a-46c4-b1ed-28ee66a3d3e4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f678b4f3-3c36-4110-8159-ee4caf817a6e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "064e1fd2-52c0-46b6-bb76-0378d8907332",
        "cursor": {
          "ref": "dde3e954-8548-4c29-b0d8-fee453d2254f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6697afe7-7d8d-4f6a-bf27-c5fc808538df"
        },
        "item": {
          "id": "064e1fd2-52c0-46b6-bb76-0378d8907332",
          "name": "did_json"
        },
        "response": {
          "id": "200a11ca-bd72-4492-b140-8cafed2e56a5",
          "status": "OK",
          "code": 200,
          "responseTime": 1006,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6349f203-c4d1-44df-9503-fd34745bddb8",
        "cursor": {
          "ref": "df30f8f7-ce03-4003-ad83-59d430da9fc6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3060ebc-27e8-4c18-b895-676a9bcc33f6"
        },
        "item": {
          "id": "6349f203-c4d1-44df-9503-fd34745bddb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8bc1583c-ed3a-4cf8-9421-1eff10328488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1310,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6349f203-c4d1-44df-9503-fd34745bddb8",
        "cursor": {
          "ref": "df30f8f7-ce03-4003-ad83-59d430da9fc6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3060ebc-27e8-4c18-b895-676a9bcc33f6"
        },
        "item": {
          "id": "6349f203-c4d1-44df-9503-fd34745bddb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8bc1583c-ed3a-4cf8-9421-1eff10328488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1310,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfcafc7-a5b9-4439-be59-251ba523e6ea",
        "cursor": {
          "ref": "fc369025-eefe-4b07-8df6-b0691f519744",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "28507164-4d7d-4621-85bb-16d165550ea9"
        },
        "item": {
          "id": "3bfcafc7-a5b9-4439-be59-251ba523e6ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32bcf2d2-ddc8-430f-b3d8-2023d247c4dd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 769,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a6602c-4cb3-42ed-88f8-903ca9a2b28e",
        "cursor": {
          "ref": "b21537bf-5a03-4d14-9c6a-8cc2c39c0203",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "58a5b94b-089f-4f1b-9249-24afda8fa7df"
        },
        "item": {
          "id": "36a6602c-4cb3-42ed-88f8-903ca9a2b28e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "56b6c5e2-3ba4-490d-988a-732dd76f6070",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1174,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95d7d1b-d52d-4479-8c42-e4a58819f3cd",
        "cursor": {
          "ref": "b6dc2d6d-6869-4d2a-b877-06d9ee73bd40",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb702ddc-ae47-4778-ab9c-810b4b52c25a"
        },
        "item": {
          "id": "b95d7d1b-d52d-4479-8c42-e4a58819f3cd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8ddf9b1f-1bb5-4bc3-8b35-e501fd9f2871",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0884cc-3e28-40c8-b5b9-b401860999b2",
        "cursor": {
          "ref": "94cc003b-0cae-43ff-a053-a133160215b6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7e487371-a569-4d14-8dd9-4a5b9ed52ccc"
        },
        "item": {
          "id": "de0884cc-3e28-40c8-b5b9-b401860999b2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ef823fa8-7e0a-4e10-bf99-0dfde32f8d34",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 660,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0884cc-3e28-40c8-b5b9-b401860999b2",
        "cursor": {
          "ref": "94cc003b-0cae-43ff-a053-a133160215b6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7e487371-a569-4d14-8dd9-4a5b9ed52ccc"
        },
        "item": {
          "id": "de0884cc-3e28-40c8-b5b9-b401860999b2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ef823fa8-7e0a-4e10-bf99-0dfde32f8d34",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 660,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f724a6a-b6dc-455c-8c24-0e7d68675c79",
        "cursor": {
          "ref": "97aaddeb-72ff-4c47-a003-7cb68b2ac70b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "15ca0304-1646-4aa3-8799-38ffbeb926b8"
        },
        "item": {
          "id": "3f724a6a-b6dc-455c-8c24-0e7d68675c79",
          "name": "identifiers"
        },
        "response": {
          "id": "2704e105-f566-411d-aa92-ddd888826d15",
          "status": "OK",
          "code": 200,
          "responseTime": 1181,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162fbd5b-a4df-48a2-bdc8-c5f4e182dc6b",
        "cursor": {
          "ref": "52ee5b9f-4ef2-4585-9990-6d2b6db5d795",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a696cbc1-cf65-40bd-b132-174d0ea047f4"
        },
        "item": {
          "id": "162fbd5b-a4df-48a2-bdc8-c5f4e182dc6b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d3ae82a-75b1-48a6-9473-33dd1aeb31f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162fbd5b-a4df-48a2-bdc8-c5f4e182dc6b",
        "cursor": {
          "ref": "52ee5b9f-4ef2-4585-9990-6d2b6db5d795",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a696cbc1-cf65-40bd-b132-174d0ea047f4"
        },
        "item": {
          "id": "162fbd5b-a4df-48a2-bdc8-c5f4e182dc6b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d3ae82a-75b1-48a6-9473-33dd1aeb31f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e11663-fa98-4b79-a332-86c01068a292",
        "cursor": {
          "ref": "a035b97f-e956-4195-a344-a2b2a75ba248",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bdc1c34a-b71b-4ada-a83a-b768821ee102"
        },
        "item": {
          "id": "f7e11663-fa98-4b79-a332-86c01068a292",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e5894991-f5a4-4a7c-8c37-bba84e3ef6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284d8a37-9e59-4643-8564-e7e9f4d52196",
        "cursor": {
          "ref": "0c0b3b5c-841e-4eda-8e1e-5a24e7a6e443",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "afb479af-4b1e-494a-bea1-d9c421a1f081"
        },
        "item": {
          "id": "284d8a37-9e59-4643-8564-e7e9f4d52196",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "571d6072-5566-4aa1-bfd9-e155cccb9c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc8340-9a6b-4ba1-935a-5947d267a89c",
        "cursor": {
          "ref": "2186ca82-e16d-40e3-a54e-ae05f1f52aa9",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0158190c-7c1e-4319-bc0f-4d215762ffb8"
        },
        "item": {
          "id": "20dc8340-9a6b-4ba1-935a-5947d267a89c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e45486b2-30e4-4ba4-b125-7b17d728d097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5fc3a0-b588-4742-93b2-bb814f6bdfef",
        "cursor": {
          "ref": "b682b256-686d-4dc8-9625-5af6d872f80c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bed04102-29a7-46ce-9655-48eb81aadc8c"
        },
        "item": {
          "id": "ec5fc3a0-b588-4742-93b2-bb814f6bdfef",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a9541b8-34b1-41b7-979b-e8cbdf4ce03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c850313-4871-4d3e-b615-b4c3699ce514",
        "cursor": {
          "ref": "2bb4a1b7-0846-4272-a801-4d33237227d3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9b4c07e6-2817-4e58-ae56-28f60c703f44"
        },
        "item": {
          "id": "6c850313-4871-4d3e-b615-b4c3699ce514",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "889b1bfe-da3c-4967-8b4a-6c73b0ac59f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b182f-60ed-41ca-a7e9-11ceb603bf47",
        "cursor": {
          "ref": "6cd5f5b8-0f4f-4356-a7e8-326d56dc4ac4",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a0bd0568-b6ff-4ce2-a910-b7137f2655ed"
        },
        "item": {
          "id": "7e4b182f-60ed-41ca-a7e9-11ceb603bf47",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1982adfb-74c8-4cca-aec1-add0f2e6beb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e527f8-1b44-4693-8848-e7b267aa723e",
        "cursor": {
          "ref": "4b121014-0336-4e39-98c4-7ebf988614a5",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b856dd9-edc4-4564-a45e-8ac401f3321f"
        },
        "item": {
          "id": "a5e527f8-1b44-4693-8848-e7b267aa723e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5f7f8ab3-fd11-4d18-951b-fdb68b306a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4658d82-9de8-495d-85bf-070fd13ad719",
        "cursor": {
          "ref": "029b2753-14d9-4dd2-aeac-b29fda4cabac",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "56c4c3c9-b022-4a0e-95b4-00508b521a25"
        },
        "item": {
          "id": "f4658d82-9de8-495d-85bf-070fd13ad719",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b66d8854-8942-4a39-a901-1c20d515232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4248c8fd-958e-436e-a175-eba36bab1158",
        "cursor": {
          "ref": "4b6b3518-862e-45ef-b155-bccb5f6c4000",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4ff48b83-4a83-495d-8bad-07ebad7e0f98"
        },
        "item": {
          "id": "4248c8fd-958e-436e-a175-eba36bab1158",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c1cea98e-59e5-4e8e-b293-162157a86ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdefde6-3a5a-4b8b-b76f-117c780c208c",
        "cursor": {
          "ref": "c4daaf36-518f-4f3d-b613-c8b1cce57ae4",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "444ab4a0-fe27-465d-bacc-eefbbb9c1c16"
        },
        "item": {
          "id": "2bdefde6-3a5a-4b8b-b76f-117c780c208c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84466c9c-d986-4cda-849c-0da9e71d6fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72fe2b9-a014-4f86-83af-fed458da2d49",
        "cursor": {
          "ref": "b6b6e2ba-9c7f-4624-b5c4-261cac8e96d7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52c9568a-0cf1-4415-b634-922996a87999"
        },
        "item": {
          "id": "d72fe2b9-a014-4f86-83af-fed458da2d49",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08a72a96-96bb-4a88-be0e-397c6304cd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a194eb49-11df-49fb-b543-6b0e5820f055",
        "cursor": {
          "ref": "ed8593d5-809b-475d-b735-ab91a139c64a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dc86ea4e-1824-4031-89a7-74bb1139cd7d"
        },
        "item": {
          "id": "a194eb49-11df-49fb-b543-6b0e5820f055",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c6ad4c9-01e7-47b5-8296-840d50c74c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88d6444-0941-484f-9023-9240533c7032",
        "cursor": {
          "ref": "77a9d3c6-8870-4b82-9d66-5ccb01720d9d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d14afd0-cda5-4887-91f4-9565120c2c5e"
        },
        "item": {
          "id": "a88d6444-0941-484f-9023-9240533c7032",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8eea20fc-e306-4929-8747-7f8f77a1c665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79975582-0fdd-47ba-9538-ee1f1c7f83be",
        "cursor": {
          "ref": "875f5deb-6fc2-4252-876f-8a074d1afedc",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4ddb8ded-f86a-4a47-9d6e-69c3bc75711c"
        },
        "item": {
          "id": "79975582-0fdd-47ba-9538-ee1f1c7f83be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6d8ff822-4fd6-424d-b206-aa59f16b1963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dccf2ce-ce8a-4aec-b77f-9b51ff0e4a4f",
        "cursor": {
          "ref": "ae24912f-626c-4fce-90b0-2f96314921e3",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9f324a4b-b0a7-441f-bc83-2afc71634649"
        },
        "item": {
          "id": "1dccf2ce-ce8a-4aec-b77f-9b51ff0e4a4f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3292dac2-177e-471d-9aa1-aa938efd8c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a566c5-f5f0-4057-be8e-e83f8acd8dc7",
        "cursor": {
          "ref": "9fefa1ba-c320-4767-8adf-c50e3c3a7a2c",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "801e3410-1fc5-48d4-995d-db91c1441018"
        },
        "item": {
          "id": "16a566c5-f5f0-4057-be8e-e83f8acd8dc7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "54b418cf-5846-492c-b59a-a7cdb1afe7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ef23c-a9f9-44dc-83a9-2bf2afa8b80f",
        "cursor": {
          "ref": "ae28be6e-c70c-4435-ba6e-e9a122c130e7",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "954895a6-5b9d-4f3d-8431-ebc533837359"
        },
        "item": {
          "id": "f87ef23c-a9f9-44dc-83a9-2bf2afa8b80f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e80c036a-6d34-4cb1-8385-33bc25633bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49202cb6-54cb-4dfa-8bb1-916167a462be",
        "cursor": {
          "ref": "0dd0acb7-0846-4cda-b4b0-cfa6a7d97026",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d5e521cf-4dc5-462b-8a73-79ab686d067c"
        },
        "item": {
          "id": "49202cb6-54cb-4dfa-8bb1-916167a462be",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b9f9107c-85c4-4588-b572-2b8bbc42fed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca95f67c-7aef-45b6-99d8-f65817f91ff2",
        "cursor": {
          "ref": "a98d781c-fb39-471c-93c7-566628f5d96d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2c0723a1-d447-4b8a-b001-07652e172d35"
        },
        "item": {
          "id": "ca95f67c-7aef-45b6-99d8-f65817f91ff2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "28a9b21a-9fe8-40ce-94e9-9e7074040c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf163e02-3340-45a8-b091-4488070e00e8",
        "cursor": {
          "ref": "9961c581-07fb-41ab-806e-ea7ed22561e6",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c37212e0-1668-48b4-bca3-4bbbd437c477"
        },
        "item": {
          "id": "bf163e02-3340-45a8-b091-4488070e00e8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a2190371-7824-4cee-9340-6a965c05ead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e326781-0b55-49e0-95d9-fda8186b94ca",
        "cursor": {
          "ref": "4a00f45d-c3ee-4bf7-9bdd-0bb0844cac5b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9b55c420-7d5f-4f15-96b7-400f57241c0a"
        },
        "item": {
          "id": "1e326781-0b55-49e0-95d9-fda8186b94ca",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a0355ff-30b4-4037-b9a4-1a3595a46bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b21cc4-35ee-4ccb-88f4-4f70b23dd83f",
        "cursor": {
          "ref": "f14fdc78-01f5-47b0-9076-826a44cd0e20",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9c3db044-9c15-41a2-85b0-4482ac68749b"
        },
        "item": {
          "id": "d0b21cc4-35ee-4ccb-88f4-4f70b23dd83f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7758f36e-e36d-4286-94fd-8df79f3a498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febd8a29-b13c-4676-9d72-f1333e210d57",
        "cursor": {
          "ref": "c6868813-cc10-4b84-a2d2-5ee018b22eea",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a7151489-bb9e-4c0c-b446-cdce2d098a1a"
        },
        "item": {
          "id": "febd8a29-b13c-4676-9d72-f1333e210d57",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1ed76f92-2d41-4651-99a6-f2e55bd852f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f689ac8b-da35-4fb5-bf89-17a4541b539f",
        "cursor": {
          "ref": "7873b1ad-7334-4322-9b53-a25516331cf0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab933b36-4578-441c-85db-36c57931c2b1"
        },
        "item": {
          "id": "f689ac8b-da35-4fb5-bf89-17a4541b539f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "096d4e00-9007-4176-9b9d-38ea8a6ffaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14516021-d510-4ab4-8f9b-7e3d179bd5e1",
        "cursor": {
          "ref": "e72dc056-7b72-4d71-a8ae-8403326b9734",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db8ad5ee-0f77-46b2-aae8-96eb1f4f05fe"
        },
        "item": {
          "id": "14516021-d510-4ab4-8f9b-7e3d179bd5e1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2810d553-4cc2-4fb8-9118-1ed6f9f8e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380b49d-f335-4230-8928-1a599d53cb81",
        "cursor": {
          "ref": "64daa3f1-2070-46cb-a615-5abbab642816",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "56a253e2-ca54-41b6-ae74-32ebdecc3ab2"
        },
        "item": {
          "id": "3380b49d-f335-4230-8928-1a599d53cb81",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c0db138c-0be5-4a67-b458-4655ea86a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac64472-811e-4ab7-8153-2b47854e99c5",
        "cursor": {
          "ref": "96978119-2f16-46c3-9381-2582ddbfd85d",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "241544ef-180e-4781-ae46-055b36df5e8a"
        },
        "item": {
          "id": "cac64472-811e-4ab7-8153-2b47854e99c5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2060f444-074a-4289-b232-3ad7e6b4577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5233278c-c4e8-48b6-8277-3bf74aca97ea",
        "cursor": {
          "ref": "9a3a1cc3-1c6c-431b-ad7e-47e83fa4e5e5",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e37c2a61-657e-494b-b9b7-6d049b28d0a9"
        },
        "item": {
          "id": "5233278c-c4e8-48b6-8277-3bf74aca97ea",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "39c26969-5e93-4a2d-8fc2-0065b117b746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1266,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862a45e-5112-43bb-8072-5df63dfda8a5",
        "cursor": {
          "ref": "c1fd8037-6d70-4d8a-9193-f640da741263",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0106512e-0b01-44d1-a7ec-863d7e576f6c"
        },
        "item": {
          "id": "c862a45e-5112-43bb-8072-5df63dfda8a5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69d07438-64a6-4558-b38f-aa2b84101706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1185,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6337ca-db0b-4bff-9449-c2f59dcb872e",
        "cursor": {
          "ref": "5652b294-db72-44f6-9df9-eca63570178e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c7d4d9fa-aad5-44d3-b371-f8e1c5e84c56"
        },
        "item": {
          "id": "3e6337ca-db0b-4bff-9449-c2f59dcb872e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "439a2181-7982-4f68-b491-8006dc96fb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1373,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6311f122-ba4d-4a86-af53-884366d1c226",
        "cursor": {
          "ref": "33a23cfc-5997-40ce-983d-81e2a31e78c5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ccf5317f-1f62-4c4f-9fc2-d43a962ba0a2"
        },
        "item": {
          "id": "6311f122-ba4d-4a86-af53-884366d1c226",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c090a776-c42c-4261-9ada-68261a782655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1426,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e952a98b-5cb0-4547-ba97-a9ed6dd5312f",
        "cursor": {
          "ref": "c44ba6fe-3117-49ea-b9c5-eb5b869bac99",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5a1bc640-b204-40a2-be18-82508f5157ac"
        },
        "item": {
          "id": "e952a98b-5cb0-4547-ba97-a9ed6dd5312f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8ccfdb6b-3f55-4d55-bddf-154831ece979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1829,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc560a-8a36-4e99-ab1e-bd007c01c8c9",
        "cursor": {
          "ref": "19df8186-390a-4023-bad4-7257814e34d5",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2d45d69e-a928-4920-9e1a-68ccf7311fff"
        },
        "item": {
          "id": "3dcc560a-8a36-4e99-ab1e-bd007c01c8c9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d50306c6-861c-424d-b75d-19856e5dfff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1491,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de18c3b-6707-4c73-ac6f-f50f9d04c3a1",
        "cursor": {
          "ref": "94b24b8f-7873-43a9-8c3d-66d77b77141e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d5207e52-0965-4159-a24a-0438175f2116"
        },
        "item": {
          "id": "3de18c3b-6707-4c73-ac6f-f50f9d04c3a1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "14ce7faa-c994-4a03-aae6-40e8573ef25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1551,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7768382c-7f68-407f-b8ad-643be4a64433",
        "cursor": {
          "ref": "7733cbc5-7535-427b-8f63-9cce7d69b3db",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d20ecd5c-1324-4160-9b4b-fd9613e48791"
        },
        "item": {
          "id": "7768382c-7f68-407f-b8ad-643be4a64433",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d0ab9bb-10b3-4c2f-8bfd-d040f571e81f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1192,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93490f42-8135-4846-b26f-f8a5b3890e9b",
        "cursor": {
          "ref": "e4f76a49-27a6-4f5c-b6ef-46eefac9cde0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a483858f-59b3-48ad-aef6-f0025c343d17"
        },
        "item": {
          "id": "93490f42-8135-4846-b26f-f8a5b3890e9b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cfa22171-636a-4878-b98d-5e8ec83101a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab1c9c2-9ef3-4d2f-aaec-a27ed89f22a5",
        "cursor": {
          "ref": "a1bd68a6-272a-49e7-a21b-bba651767449",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c3a2a8b8-3be4-4e1f-a1c8-56a5231e0615"
        },
        "item": {
          "id": "eab1c9c2-9ef3-4d2f-aaec-a27ed89f22a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e669115f-174d-4235-943b-4256ee8d1661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57382f75-4942-4db5-9ba5-870aaab1da8e",
        "cursor": {
          "ref": "da6624a2-7411-46a6-945a-55fc22d98b83",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "79c52218-7141-4fc2-a56e-7f84fdb029fb"
        },
        "item": {
          "id": "57382f75-4942-4db5-9ba5-870aaab1da8e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1359dd0f-614f-4630-8a3c-65fa7e41cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9135d7-25dc-409f-a717-3e1d3fabc9a4",
        "cursor": {
          "ref": "01ee6c89-4e6a-4c3c-a1df-e56b9c47947d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0cb5e38e-c1e0-4288-b795-68c8be4df872"
        },
        "item": {
          "id": "1a9135d7-25dc-409f-a717-3e1d3fabc9a4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "56b5f225-a5d1-4242-9320-1913ae5d83fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85e28ef-b560-4c26-94ac-eb0a5186276f",
        "cursor": {
          "ref": "b30af97e-3923-4b34-9e8e-7048e07699c0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d4c84fda-8174-406c-a64a-f63ca6a0928f"
        },
        "item": {
          "id": "e85e28ef-b560-4c26-94ac-eb0a5186276f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3e7e7fde-a978-48d4-8773-df50aa50f4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f883f4-fbb2-4651-badc-5c2128e07201",
        "cursor": {
          "ref": "9c9f9b8b-25d3-4213-94d4-f8f9d7f1e95e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7198250c-1072-4a28-b00e-39f307705a2f"
        },
        "item": {
          "id": "d6f883f4-fbb2-4651-badc-5c2128e07201",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "18a0d922-b2fd-4d46-886b-f6ca1f0f68ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e7bb03-8f1f-4b2f-9fbb-157e37e55d02",
        "cursor": {
          "ref": "eebb3ab5-8267-4a5e-ab22-58ef08aeda06",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "de7f6b10-bff2-49c6-833b-1757bc59c066"
        },
        "item": {
          "id": "c7e7bb03-8f1f-4b2f-9fbb-157e37e55d02",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "41a6a7bb-b8e0-4c2a-b85b-0f45d7ec1f5e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 795,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9426bf-7c55-4be3-b355-aeae296a358b",
        "cursor": {
          "ref": "b97a96b0-f08c-41f0-990f-4669561895b7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72b034e5-4a74-4b5b-a7be-51894a84915c"
        },
        "item": {
          "id": "ff9426bf-7c55-4be3-b355-aeae296a358b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d68b5bc1-f31d-419b-9bbf-ba15156bba4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc335cfa-e6eb-4fcd-bbb0-af5ff4ea3ab4",
        "cursor": {
          "ref": "e10bef73-4060-42cc-8bf5-d9eb36c65589",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "01f4afbc-38fc-449a-9bb8-b5f98daf00da"
        },
        "item": {
          "id": "cc335cfa-e6eb-4fcd-bbb0-af5ff4ea3ab4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "033347c1-7022-4143-af52-c3a1af3e1b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f280bf-0bc2-414d-a9ae-c095be735ce2",
        "cursor": {
          "ref": "af569ad6-4959-4957-abbc-429d1cfdf14d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "55f7454a-c3a8-4271-8a9e-1d7edcfadcc5"
        },
        "item": {
          "id": "69f280bf-0bc2-414d-a9ae-c095be735ce2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee0dae0c-b251-46b0-bd13-8f49e4a9176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0ec925-7371-46fb-85fb-b595d02c596e",
        "cursor": {
          "ref": "5f1d0940-a8b8-43b1-8318-3e9de0601550",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d332f764-09d2-4e69-926a-df71f2e02574"
        },
        "item": {
          "id": "1d0ec925-7371-46fb-85fb-b595d02c596e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "75d0e1e4-fb20-4a38-b624-237942a65020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67db4961-3830-43ca-9e77-bd7332a0d954",
        "cursor": {
          "ref": "a75e08ec-a2b8-4717-a36b-60c23153c18e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2a5b5a25-f725-45d6-ba5d-983b9e1a8a2a"
        },
        "item": {
          "id": "67db4961-3830-43ca-9e77-bd7332a0d954",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "097d306e-76a3-4575-96e4-a50faaf7e637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d163d-14b0-4876-806e-e2d339df5536",
        "cursor": {
          "ref": "88728493-493c-42b9-8560-bd3f4fd39be9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aee18263-6e57-4fbf-aab6-1b5ce97a553c"
        },
        "item": {
          "id": "ad2d163d-14b0-4876-806e-e2d339df5536",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9fe1d7d5-2026-476d-bbc5-dbcea677a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc02b499-74e8-4c35-bc4d-592c9d7a32af",
        "cursor": {
          "ref": "1a8b5f19-3931-45e7-bbda-ca53520af069",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a279d288-6662-436f-9c09-7efcd16f738d"
        },
        "item": {
          "id": "bc02b499-74e8-4c35-bc4d-592c9d7a32af",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10e13a3e-74c9-4184-8cae-59b383fb33f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c020f3-668d-43a5-8de5-00298e05345b",
        "cursor": {
          "ref": "b3763e72-4dc2-4883-9570-cb55c8660c12",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c096b4c9-ad86-40b6-8b1a-e83e9f9df2fa"
        },
        "item": {
          "id": "15c020f3-668d-43a5-8de5-00298e05345b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2b92f70e-1612-45d6-bf36-de8f9ccbd8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43706df3-f620-4d53-b6bd-8b29a924b3ae",
        "cursor": {
          "ref": "b3fb082d-5921-4837-95c0-deae007c265d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f10ec228-8ff0-4296-bc09-bbbd4d6a4994"
        },
        "item": {
          "id": "43706df3-f620-4d53-b6bd-8b29a924b3ae",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1541765a-cd12-4e1e-9879-1bea113ac0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be0cca6-bf9d-487d-b10e-f3be3922b580",
        "cursor": {
          "ref": "9384e2d5-39b1-4153-938d-b5a4214bb409",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5a000497-40ea-4cd1-a4fe-408c5b195f01"
        },
        "item": {
          "id": "5be0cca6-bf9d-487d-b10e-f3be3922b580",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f7fc944-3b37-4ab4-a2a7-420d90faafec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b78c89-8016-44b5-bd31-70a16ac5d620",
        "cursor": {
          "ref": "f9124d67-5f04-4d42-b3f3-ff448a2287e1",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46dccf76-a62f-4681-b8ef-1411dd260cc1"
        },
        "item": {
          "id": "89b78c89-8016-44b5-bd31-70a16ac5d620",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c21ad0fa-a987-4fe0-a2d8-4ab957145826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7934aa3d-83ad-4118-a40b-9bca75da9ce8",
        "cursor": {
          "ref": "09a64c63-033c-49a9-9003-a0940a960dfb",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7237a1e7-6d53-448b-8a51-2f29a872b7bb"
        },
        "item": {
          "id": "7934aa3d-83ad-4118-a40b-9bca75da9ce8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b377c56-30e9-4cf0-be1a-cda13cd058fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb17381-229f-4ce6-bb20-bb0634a7fd92",
        "cursor": {
          "ref": "629b6421-efaa-4b6a-8628-12cb58a8c229",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c73312c0-8824-4f69-a32e-2d5fd8696a29"
        },
        "item": {
          "id": "bdb17381-229f-4ce6-bb20-bb0634a7fd92",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4c70ef90-dd98-4517-a529-9adc9cfe82e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92530f7f-d821-40dc-90c2-db8e36a3f63b",
        "cursor": {
          "ref": "4218bc1f-2b5c-425e-a46e-57aa7082c534",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "329a9b46-f8f4-4cb2-91a0-5219fe7280b2"
        },
        "item": {
          "id": "92530f7f-d821-40dc-90c2-db8e36a3f63b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "db5df7f1-6743-4887-b58f-b1121bb175d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804b7ad7-e970-42f4-80c4-9c775e576bb2",
        "cursor": {
          "ref": "21f11a16-99b6-4b0b-9081-4704a73d56dc",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "09787a0d-45e5-42ff-b007-2e91bac5ea69"
        },
        "item": {
          "id": "804b7ad7-e970-42f4-80c4-9c775e576bb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c5329a7c-716f-4f6d-8fa4-7610c2e08d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4d96da-f4da-4f7d-8a78-bcaa204e36bc",
        "cursor": {
          "ref": "be83cb9d-c518-414b-b984-28dc6670a5e0",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e8120ae-ea2d-4086-8f47-c46b03059f1f"
        },
        "item": {
          "id": "cf4d96da-f4da-4f7d-8a78-bcaa204e36bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9b56c84a-50ed-4319-ab68-8aea36d16565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97aedc-123c-4b86-900b-fd9702ef2897",
        "cursor": {
          "ref": "259c1b51-45c7-4f18-88b5-e37f7803370b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "da6b5a9b-3c90-43a5-94db-d2d5957a9fa6"
        },
        "item": {
          "id": "6e97aedc-123c-4b86-900b-fd9702ef2897",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "19f555f1-101e-4f3f-ae49-7140317e8d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f6c362-8641-4f67-90a6-202cee63ed39",
        "cursor": {
          "ref": "f38d1e82-b254-459b-b95d-f54899cf92bb",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "69c760b0-2d73-478e-aa43-79bc4af8fbd5"
        },
        "item": {
          "id": "e1f6c362-8641-4f67-90a6-202cee63ed39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ab270b90-49e9-4c17-a16c-f6ee597a018c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf805ba-3c31-4032-8716-fd63a9cc6efc",
        "cursor": {
          "ref": "4bb1aef4-46e8-41f8-914b-41daf1f37ee7",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d5bf2912-eb4a-43df-93c7-45396fd34939"
        },
        "item": {
          "id": "ecf805ba-3c31-4032-8716-fd63a9cc6efc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "273a98fe-777c-4927-940e-7588528d6dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f106ee41-68e8-4c37-9710-37bd96b523ca",
        "cursor": {
          "ref": "7254dea5-831c-4524-b114-907718e30e3c",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a7deea8-2ca3-4615-b020-cb41bcf17b35"
        },
        "item": {
          "id": "f106ee41-68e8-4c37-9710-37bd96b523ca",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "080a0061-421c-41f9-8d94-b1fd835b5d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177df767-c9bd-45e6-b861-3fda322fccda",
        "cursor": {
          "ref": "934b2a64-2487-4b46-b03d-b30b92072411",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff75697f-e9d9-4b34-9645-8493fba0b260"
        },
        "item": {
          "id": "177df767-c9bd-45e6-b861-3fda322fccda",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2874dff3-5747-4953-a8e8-745dce6cdec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6894b151-1924-46f3-b6c7-2d462ca733e4",
        "cursor": {
          "ref": "21aca776-c4ea-4e3a-863c-eaf173def07b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ed615c4d-8f5c-4fb5-9098-3d2bdd8f24ca"
        },
        "item": {
          "id": "6894b151-1924-46f3-b6c7-2d462ca733e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6c15886f-ccde-427b-b181-0348f4d3b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6201a8ff-526e-4025-82ba-ef160ea06d4f",
        "cursor": {
          "ref": "b171782f-acd9-409d-b16d-458143b8a3b6",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dc168b91-04ca-4826-b481-b85790f7906c"
        },
        "item": {
          "id": "6201a8ff-526e-4025-82ba-ef160ea06d4f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea1494a3-8fa6-4a2d-bcc0-c181ba429b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ee7a2-26b4-437b-9d3c-b80723702be7",
        "cursor": {
          "ref": "1e2f34af-6cb3-434b-9a03-c89477318436",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2cbb7bd2-7aa5-413b-953a-ae53cd27fdb2"
        },
        "item": {
          "id": "1b0ee7a2-26b4-437b-9d3c-b80723702be7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0375955a-dc92-4129-a1c7-1919ffaec292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58a532b-0577-484d-bd55-1b08faa2acca",
        "cursor": {
          "ref": "58ed7341-a15c-4793-9e81-6312d21931a1",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "293e3639-c572-45ec-8121-46b9a00c4e40"
        },
        "item": {
          "id": "b58a532b-0577-484d-bd55-1b08faa2acca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c1e8deb-6dee-450b-9019-0a0dc37bf745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b2e291-f600-423f-bb73-0364784126f8",
        "cursor": {
          "ref": "6bad0d15-b80c-4cfc-aeb7-1472742e56b4",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26534059-61e8-49a1-869c-9f0ba854c9d9"
        },
        "item": {
          "id": "57b2e291-f600-423f-bb73-0364784126f8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "592154a0-bc3f-4c14-a150-d44b5512270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1127c0e9-dcf2-46fa-a6be-df287b81cece",
        "cursor": {
          "ref": "9fc3e03c-bbe9-4c56-8c69-b7700c1f3f34",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "72db8af0-1406-4dd7-80d1-49c9a7c65490"
        },
        "item": {
          "id": "1127c0e9-dcf2-46fa-a6be-df287b81cece",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e47aca04-6d3f-4d55-b287-1dfaa05107fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e21a1de-9e9e-4cc2-8b5a-ba4d8a315f96",
        "cursor": {
          "ref": "6f109067-2d01-4973-b2cb-f69edb2e9aa4",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b543d89b-c6b4-4ad1-84eb-4be07e442d63"
        },
        "item": {
          "id": "4e21a1de-9e9e-4cc2-8b5a-ba4d8a315f96",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f080fd69-9480-425c-af49-9d2ae3720249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257fb7c8-147a-4209-85ce-df8a0e3c844a",
        "cursor": {
          "ref": "c89e8c71-409d-4330-b66b-5dd78dbd89e3",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0ec54497-7580-4fcd-8122-a4f2b4b6e763"
        },
        "item": {
          "id": "257fb7c8-147a-4209-85ce-df8a0e3c844a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f2aedd3d-ab9b-48eb-a11c-e2567cca7a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbdad45-a410-4745-8bfe-f7a9ca6dc080",
        "cursor": {
          "ref": "b68841b8-46a7-47ba-95ca-e5af13230964",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74d7ff95-839e-4d8b-9aef-e06248551784"
        },
        "item": {
          "id": "3fbdad45-a410-4745-8bfe-f7a9ca6dc080",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "232c0697-4ced-435f-9c16-2dbb23dd2388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2e246-d360-4dfb-b269-c36dac2f9f52",
        "cursor": {
          "ref": "16dcff18-b2fe-441f-a873-cfa6654c1ca2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ba04b4e5-1e8f-4df5-8ab3-40cf7af1bb83"
        },
        "item": {
          "id": "7bb2e246-d360-4dfb-b269-c36dac2f9f52",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f8a3b565-5ff6-4af8-8dc2-6bb7e6e1091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f433c179-72eb-4ca3-94a7-ebee608788a4",
        "cursor": {
          "ref": "40492adc-735e-42f7-88b9-7e6c742ab451",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1091158f-3785-494c-ba1b-49d435ab8541"
        },
        "item": {
          "id": "f433c179-72eb-4ca3-94a7-ebee608788a4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "26353f17-f803-43fa-b3e3-22676a98983c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d8ed0-99c5-4fec-ba5d-e572a0595dae",
        "cursor": {
          "ref": "7528b91a-a012-4b7f-8b36-bed1edb0f097",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb5f9811-8d2e-4022-92be-747d5e1a5d49"
        },
        "item": {
          "id": "ae1d8ed0-99c5-4fec-ba5d-e572a0595dae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5b8f5acf-46c8-43c9-a3aa-950753aa5299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8debc3-be9e-47a2-be8a-8503fa720772",
        "cursor": {
          "ref": "0019ed09-eed4-4349-8c0a-de29d2d3810f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "165dbf1f-6e67-49e2-8bf0-62dc80e1186d"
        },
        "item": {
          "id": "2f8debc3-be9e-47a2-be8a-8503fa720772",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "643dac6e-0e2f-4a63-9d1d-95f942f96d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886cbd5f-5760-44ca-b0a1-d2ba84a429a4",
        "cursor": {
          "ref": "c5753760-3a66-48fc-8bac-293832ecd43c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c23e6224-7c42-4ef3-b9fe-97caf151b322"
        },
        "item": {
          "id": "886cbd5f-5760-44ca-b0a1-d2ba84a429a4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e1cd370d-3390-4397-9c34-cede2e98ce38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bfc2fb-0a48-46cf-9b9c-c584ea8664d0",
        "cursor": {
          "ref": "cb0e66a6-39bc-4cb1-942c-1d0218f58cdf",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb0214f9-e6d4-4615-a135-cb50102c6d22"
        },
        "item": {
          "id": "15bfc2fb-0a48-46cf-9b9c-c584ea8664d0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf6d6d0a-cca5-4a04-8e62-52e48b3756cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cb6870-eb9f-437f-80df-e43036e8ea07",
        "cursor": {
          "ref": "b0318e85-eb11-4b06-a469-0ee7b51a529a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf53a169-ee27-49b2-b77b-6ce0551e5ce6"
        },
        "item": {
          "id": "a4cb6870-eb9f-437f-80df-e43036e8ea07",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8559e603-accb-4ff4-b849-6533342f71e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e6388e-3683-47e3-9a7f-493619b0ebb7",
        "cursor": {
          "ref": "230f2bea-d626-41ae-acbe-2a0102f0dbe3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fdb00952-2a9d-4015-8b08-a7a121e734f2"
        },
        "item": {
          "id": "f7e6388e-3683-47e3-9a7f-493619b0ebb7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "805ca2a3-cf92-4811-b5b9-b7eaa9b19a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b707b224-8077-47a4-9313-123bbdb6bf97",
        "cursor": {
          "ref": "535102be-fc80-4525-9824-5e26a6c01097",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "20329aaa-a4d1-462c-8bcb-f4b90c650b01"
        },
        "item": {
          "id": "b707b224-8077-47a4-9313-123bbdb6bf97",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a465d64-487b-49d4-ad52-0e37b787f4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3589e-bb77-4cd7-a3c9-0f6960d5556a",
        "cursor": {
          "ref": "da043ac7-c7c4-441d-91c9-e8f21df4abd6",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae018f05-fbb1-4c71-8d40-63c471c84467"
        },
        "item": {
          "id": "8cd3589e-bb77-4cd7-a3c9-0f6960d5556a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b15f117-4ce7-4eda-870d-a7ab588d204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47baf8f-0d91-437f-b670-e05b47938554",
        "cursor": {
          "ref": "5c3a88ca-daa2-4e30-bd71-122ccfe4dc71",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "54e842fa-82dd-4138-8c8d-d65ef5041704"
        },
        "item": {
          "id": "b47baf8f-0d91-437f-b670-e05b47938554",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a452ab6e-1ece-4245-bad6-e926e38c0a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253d9518-6305-428e-9204-55cd80c7f824",
        "cursor": {
          "ref": "2da7dd4f-aef7-4f0a-b46b-5f5d5c04ea94",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0f5834e3-8717-432a-a6a7-0182ba8e5fd4"
        },
        "item": {
          "id": "253d9518-6305-428e-9204-55cd80c7f824",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "037cbce5-4990-46ff-8c7c-2016a27175f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9db4eff-3166-4556-957f-fbf682a217f8",
        "cursor": {
          "ref": "6a78136f-72b2-4fdd-bbee-48782e5d2d39",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "05b0f217-cdb5-409c-8416-500b30a8dbc5"
        },
        "item": {
          "id": "b9db4eff-3166-4556-957f-fbf682a217f8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cce8174f-c9e8-43ca-97a0-7ce8947df754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702749be-822d-4cb9-bae7-fe3f1ddb16fa",
        "cursor": {
          "ref": "a8eaec6f-b5e6-4b44-b0bc-4aba4defb89a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f4cddb3f-f9c1-46cc-b99f-fe7df73543c5"
        },
        "item": {
          "id": "702749be-822d-4cb9-bae7-fe3f1ddb16fa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "881bff16-d880-42fe-942e-8b2f031c253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a77b02-d65b-4410-b67c-650222c9f1d9",
        "cursor": {
          "ref": "70039438-7400-4742-8428-068b9051088d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce28f1b2-1a7c-4023-a00b-4e4689e78d81"
        },
        "item": {
          "id": "c7a77b02-d65b-4410-b67c-650222c9f1d9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6c292114-8485-4f8a-9962-ed29447cab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7089b70a-dad3-4df2-9dd5-47662b0c2ccb",
        "cursor": {
          "ref": "a01e225c-829a-48d2-b617-904f91ec180f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17b95184-c33e-4697-a3fe-ba782ac35b94"
        },
        "item": {
          "id": "7089b70a-dad3-4df2-9dd5-47662b0c2ccb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b98995a-6d27-4a11-a513-f648acba51d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c6eaf2-9947-4335-aa80-05c4691703ea",
        "cursor": {
          "ref": "db3032f2-acbd-4c25-90be-4e16490dc3da",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "20a3404c-ade7-4371-b14a-927edd45ce73"
        },
        "item": {
          "id": "c5c6eaf2-9947-4335-aa80-05c4691703ea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e6c47577-a0b5-4d82-9be6-79a03619d73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d5add0-484c-449b-83fb-fb77060a2c45",
        "cursor": {
          "ref": "230a6ed5-9bea-454d-9fde-4d971e50520b",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "433a6640-5f59-4986-8799-37c6f6fc9a3e"
        },
        "item": {
          "id": "04d5add0-484c-449b-83fb-fb77060a2c45",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b6de55a3-ab96-454a-8358-493d0af8967f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66832d4-a7e4-497b-aa5a-d2a80c281153",
        "cursor": {
          "ref": "296b9d5f-9278-4c55-a800-590351c128b6",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78833ef9-d83a-4f93-9b1e-18a1bea4b70b"
        },
        "item": {
          "id": "f66832d4-a7e4-497b-aa5a-d2a80c281153",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5dfeb021-a23a-47a5-a6b8-61dd10b99da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b8073d-840d-4220-a4a8-f08bd8bfde8d",
        "cursor": {
          "ref": "aa545e73-df79-468b-bb81-833d1c9299b8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6f856cfb-8ac2-4635-8f6e-f9ef93ce0d48"
        },
        "item": {
          "id": "96b8073d-840d-4220-a4a8-f08bd8bfde8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "08c27f5b-f1bc-408a-8cc7-d35876f8343c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d3c094-d967-4897-be6c-1da418edcf51",
        "cursor": {
          "ref": "5d00ea9b-7e47-42b1-8dbd-fc82f52b8932",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "432c3b4a-9cdc-493b-b150-22d3650c3f85"
        },
        "item": {
          "id": "f4d3c094-d967-4897-be6c-1da418edcf51",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f6915bf6-6993-49eb-9fbf-aa7ac8f364d5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 649,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb845af-2c5c-49df-9df7-5bd534b8941b",
        "cursor": {
          "ref": "485f25ca-fff2-43e9-8836-3520bd5aea73",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cda3e5ea-4c5f-4d6c-a180-c7881cbddba7"
        },
        "item": {
          "id": "dfb845af-2c5c-49df-9df7-5bd534b8941b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa765b0b-5698-462d-aa2b-5ace8858bbaf",
          "status": "Created",
          "code": 201,
          "responseTime": 7749,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b330b2-66ad-4750-b0b9-9d56feeba25c",
        "cursor": {
          "ref": "bee5c1c4-eed8-4841-b545-dd58dae6f2d2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0550fb88-fcc8-4e78-bb23-4bc412905347"
        },
        "item": {
          "id": "04b330b2-66ad-4750-b0b9-9d56feeba25c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea8cd691-2458-4b6f-8e8a-614390f93f78",
          "status": "Created",
          "code": 201,
          "responseTime": 7715,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcbfd3e-2ed2-4db7-b400-13b98d75325d",
        "cursor": {
          "ref": "b06e3bf1-ff9f-45b6-8966-29978f6b5f13",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc39b292-c4f7-4bfc-9fa4-0cf0631d8846"
        },
        "item": {
          "id": "2bcbfd3e-2ed2-4db7-b400-13b98d75325d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "81337e78-07be-45b8-ae2f-a57fb4d39004",
          "status": "Created",
          "code": 201,
          "responseTime": 10205,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2de7fa-efab-42b3-b90d-0819aa0c545d",
        "cursor": {
          "ref": "be467c3c-5ef6-453e-9742-43f1e6ff71e7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "604f3f50-743e-43bb-a3a8-125c58d2171c"
        },
        "item": {
          "id": "cc2de7fa-efab-42b3-b90d-0819aa0c545d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2fe7f590-f71f-47e2-9f58-c0ad32bd9583",
          "status": "Created",
          "code": 201,
          "responseTime": 7770,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fb2e9-efff-47dc-a170-ed92d75aa2d6",
        "cursor": {
          "ref": "4e42d882-6cf8-42b7-95d2-51b2a54792d0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fdc60de9-5e09-4255-859d-979573be2fb9"
        },
        "item": {
          "id": "aa2fb2e9-efff-47dc-a170-ed92d75aa2d6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "36fc5b1b-5e9f-4cee-bcb7-8bbc526ec55f",
          "status": "Created",
          "code": 201,
          "responseTime": 5397,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ffd112-1000-456f-9284-f866671890c5",
        "cursor": {
          "ref": "17583ea2-6699-46f0-b156-0eeedb3a61f6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ee79943c-da44-43e3-bf07-4a1b4002f44d"
        },
        "item": {
          "id": "56ffd112-1000-456f-9284-f866671890c5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8464a599-784d-49ca-aa42-c1d478bab9ba",
          "status": "Created",
          "code": 201,
          "responseTime": 7094,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320d4c72-fa5b-45c8-81c0-2b050fc070e1",
        "cursor": {
          "ref": "af71fd8a-1661-40d2-ae51-66bc49fc0c17",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bca85cbd-cae1-409c-8b50-ec12c9be4b6e"
        },
        "item": {
          "id": "320d4c72-fa5b-45c8-81c0-2b050fc070e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c607b13e-281b-4d24-91ca-11281a764569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320d4c72-fa5b-45c8-81c0-2b050fc070e1",
        "cursor": {
          "ref": "af71fd8a-1661-40d2-ae51-66bc49fc0c17",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bca85cbd-cae1-409c-8b50-ec12c9be4b6e"
        },
        "item": {
          "id": "320d4c72-fa5b-45c8-81c0-2b050fc070e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c607b13e-281b-4d24-91ca-11281a764569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb3ed4e-1621-4d7d-928a-bc64bd6dfb28",
        "cursor": {
          "ref": "deb6a824-1fab-41e0-be84-ae378dbb1614",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "52ce6dfb-2ba4-4ed3-b1aa-fb13b626536f"
        },
        "item": {
          "id": "9eb3ed4e-1621-4d7d-928a-bc64bd6dfb28",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "911bf2df-13e2-485b-9168-05023fecdf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c798d-c15f-40fe-a6fb-7789e9657dd3",
        "cursor": {
          "ref": "2a6afbc7-52b1-4e4c-b84e-5fe89fbcfe24",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "902b2845-c7c7-4f69-962a-316afab865a4"
        },
        "item": {
          "id": "168c798d-c15f-40fe-a6fb-7789e9657dd3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "07f201b3-3a4a-4489-afdb-7adc5ab323c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2bd430-3d66-48e5-b703-0b8d4447ad4c",
        "cursor": {
          "ref": "5edd4034-c144-4ec0-b429-1b97e5b3ba64",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6d7d79f9-60c6-453b-8c47-8fb17a9641de"
        },
        "item": {
          "id": "df2bd430-3d66-48e5-b703-0b8d4447ad4c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "baa6907c-051f-45c4-96fe-823131858d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df7ef89-03fa-4c3d-a829-22c3d80e9089",
        "cursor": {
          "ref": "80cfb34d-8bbf-4dbd-84bd-2922e1c6e535",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1b2a9a3-3f29-402b-9e8c-c472b8729209"
        },
        "item": {
          "id": "8df7ef89-03fa-4c3d-a829-22c3d80e9089",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e98a4ef5-157a-4427-a535-93ed6ced115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a15e2e9-9a04-4f77-98e8-1dcc0ba678bd",
        "cursor": {
          "ref": "9daf9efc-710c-498b-91eb-d14d62369201",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6f06cd35-9dc8-4f3b-a9d8-b36735e148d6"
        },
        "item": {
          "id": "8a15e2e9-9a04-4f77-98e8-1dcc0ba678bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bc78ae35-abab-4042-acf8-ab4233f9be8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5780415-6761-416e-8258-2e43eeaf831f",
        "cursor": {
          "ref": "54c8b4cf-b61e-4744-af67-7cd549aa59f9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "30049377-b22c-440b-96bb-109e8feea6a0"
        },
        "item": {
          "id": "b5780415-6761-416e-8258-2e43eeaf831f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3eb1bc4c-2782-439f-a7b3-3423ec621df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b126b6a-9942-4b4d-a644-fb350e1163f0",
        "cursor": {
          "ref": "79d48f8f-46f6-4a73-94f0-935c9695a825",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "77668645-6656-4b02-8aae-bf906c6c93db"
        },
        "item": {
          "id": "7b126b6a-9942-4b4d-a644-fb350e1163f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c3b9537-f52d-4ff1-bab7-b30a800525db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98f5f26-4920-4310-95db-cfadc79179d9",
        "cursor": {
          "ref": "4410eb4c-f548-499b-95d4-2351bf55ed80",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9fb7655d-c8c9-48bd-a413-ead7ce229f71"
        },
        "item": {
          "id": "a98f5f26-4920-4310-95db-cfadc79179d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "28a463e8-9b7b-4c19-832a-492750a11596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189b2a69-e5e2-4ad2-88a2-76a258a3ad38",
        "cursor": {
          "ref": "9d6aa943-9d05-4c77-9c0d-47e86d9fd4a7",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "81effadb-a339-4d47-b038-2e0da428562b"
        },
        "item": {
          "id": "189b2a69-e5e2-4ad2-88a2-76a258a3ad38",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ecace45f-f738-4a59-b4f2-6fe525027b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c6078-2c8a-4b2e-aa57-8d3c4ae8d0b0",
        "cursor": {
          "ref": "c32b06f6-39ef-4e9c-a65d-eee845d0d709",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bc0e1a2e-8d04-476d-85ca-369e4a85dc48"
        },
        "item": {
          "id": "ba8c6078-2c8a-4b2e-aa57-8d3c4ae8d0b0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f66ffa9-7fc5-4700-bab8-b554cee8e610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89a1c0d-71d2-4da7-9f05-924a0f6622c9",
        "cursor": {
          "ref": "e45a908b-0a6a-4fb8-946e-8f8842b89780",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "691f5e79-19d8-4484-a353-1ef4844a0fb4"
        },
        "item": {
          "id": "d89a1c0d-71d2-4da7-9f05-924a0f6622c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e335c86-d2fd-4891-9a39-6e22cff29081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae622723-6ff0-4452-83c6-40d421463be4",
        "cursor": {
          "ref": "20446b3d-ab4f-4255-b97f-ad324db6ae35",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2559165f-ae81-410b-8266-31729e0372c9"
        },
        "item": {
          "id": "ae622723-6ff0-4452-83c6-40d421463be4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aeab8bef-fe92-4617-bbe0-9c01a025037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727e55d5-89c9-481c-abfa-a14e719a3022",
        "cursor": {
          "ref": "e8c6b6cb-c99a-4581-8b97-4bbdb01bb7d8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6b2fdd30-614f-46ec-ab3a-7f9a05ddc4ba"
        },
        "item": {
          "id": "727e55d5-89c9-481c-abfa-a14e719a3022",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "042210a6-dfa7-4ad0-924d-7e0b9077c5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caa7284-c223-4c09-b5b0-989f259fa587",
        "cursor": {
          "ref": "3199fc4a-d508-405e-925e-3b8b8f467bc6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd1bfa81-00e9-426d-9ddd-bbcaf0324619"
        },
        "item": {
          "id": "7caa7284-c223-4c09-b5b0-989f259fa587",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "128b7fec-a907-441d-8d56-f3cb3dfc5265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc30ad8b-0ff0-4e40-8863-9d8ba5f927ac",
        "cursor": {
          "ref": "976fe9ca-1f28-441f-b2b6-76203f126723",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8e386481-9a27-43f4-9e0f-70426ab7d5bf"
        },
        "item": {
          "id": "fc30ad8b-0ff0-4e40-8863-9d8ba5f927ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a238e2ca-1570-4b13-af52-f292bc65e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec55004-6702-490a-8f89-377f426d38f3",
        "cursor": {
          "ref": "0bb711dc-0fe7-4ee3-a5c3-33e61cfd5da8",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a305b4d-ff9a-46e8-a33f-3ff6a867afee"
        },
        "item": {
          "id": "dec55004-6702-490a-8f89-377f426d38f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7db8e359-e5a2-4906-8008-e0f676e7ce99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e865c-a904-40f6-87d2-990f314ce7e0",
        "cursor": {
          "ref": "cca75103-a1ec-414a-aded-7ff6fa774c4e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55574508-18fc-480b-9901-f1a7b68753f8"
        },
        "item": {
          "id": "402e865c-a904-40f6-87d2-990f314ce7e0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ffecc7a-18cc-48f5-8010-324ad987fd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9542a46b-b4c0-45e6-98b6-1088f569880f",
        "cursor": {
          "ref": "9b83fcbe-0193-4cc9-beb2-c58df3f414d1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "035f633e-b422-4192-92ee-9741165446f1"
        },
        "item": {
          "id": "9542a46b-b4c0-45e6-98b6-1088f569880f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fff73fa1-e0ff-4158-b2e7-0387c3f066db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63300c3-1add-482f-9807-338a0e231f1e",
        "cursor": {
          "ref": "55e53d1d-07ef-4374-8939-e680a707859d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ccaf571-ba69-4c28-a3db-e9f38fcfdfde"
        },
        "item": {
          "id": "f63300c3-1add-482f-9807-338a0e231f1e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "791acb84-737e-4a3f-bcf6-3868025fa2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4af5d2-dfd4-46bf-9252-146a87354911",
        "cursor": {
          "ref": "34dac45a-4a37-4751-876d-7d21fe739381",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bc503d8b-271d-4b05-9532-f1e965084f37"
        },
        "item": {
          "id": "ea4af5d2-dfd4-46bf-9252-146a87354911",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58c6126d-d574-4e60-ab14-3ea3ed6564b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2115d701-a638-4e8f-8da3-47ab85910b0a",
        "cursor": {
          "ref": "b9c9eb14-b91a-4ab9-a98e-e0bdc38cea51",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8f18f95a-6d4d-44ba-852a-cf0a737de7a4"
        },
        "item": {
          "id": "2115d701-a638-4e8f-8da3-47ab85910b0a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "273ead2a-78c9-4dc9-ba44-3a87e407cd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce4bcbb-29e6-450f-80e1-b39bbb3e0e7c",
        "cursor": {
          "ref": "3637cad8-4271-413e-9aad-4934e88cd658",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f53c3b46-2477-4a68-9004-da25725ff1e7"
        },
        "item": {
          "id": "bce4bcbb-29e6-450f-80e1-b39bbb3e0e7c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44af596c-eda5-40c3-b262-9957490d41dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a75c4c-19b1-4f87-a304-ee0416690281",
        "cursor": {
          "ref": "d5f59e6d-5451-4148-bba5-c75de2af3ef0",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2fb34e2-0ef9-4d18-b769-38f1bceafe21"
        },
        "item": {
          "id": "38a75c4c-19b1-4f87-a304-ee0416690281",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "efb18a03-7741-4705-a76c-089d56963060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5afbf8-cc62-4fde-85ba-d7c8f1259cf3",
        "cursor": {
          "ref": "0548fa8d-c5ed-429d-b1d3-f3426c6c2473",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "899abec7-d129-4a2f-827c-f1c3222e8fd8"
        },
        "item": {
          "id": "6c5afbf8-cc62-4fde-85ba-d7c8f1259cf3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "efc7d6b6-9b29-4c63-8207-14e2705bc233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d33cb5-ea1b-4f07-b7b5-ec75c682e9f5",
        "cursor": {
          "ref": "a64192ee-cce5-4d5c-8ad9-cdef9d1eb2b7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c915c31-4646-4d7e-b32f-0c1f39d304ec"
        },
        "item": {
          "id": "b8d33cb5-ea1b-4f07-b7b5-ec75c682e9f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1951d8b0-e68d-4aac-bc99-e78dce071c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476701a4-a100-4162-a7df-e2c971fa53de",
        "cursor": {
          "ref": "33d0a962-7e31-4b76-8ece-a7523bf6cc26",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8dd85685-8876-4863-9e24-3617ed96f4bd"
        },
        "item": {
          "id": "476701a4-a100-4162-a7df-e2c971fa53de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "66834670-af36-453e-b4dc-44d7843d7836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1490de-b61f-4d3a-8f0b-40ee11a2f209",
        "cursor": {
          "ref": "2c69f53f-38d5-4b02-b0bf-b973362e4186",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fb4b7b6b-e954-46b1-8f70-caed5eb9668c"
        },
        "item": {
          "id": "6d1490de-b61f-4d3a-8f0b-40ee11a2f209",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c30f56fc-dd99-4b81-bfc7-14f8d5c9a604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99431bee-b391-45ae-b95d-57bdf81214d6",
        "cursor": {
          "ref": "ebd1a87b-8ae2-4bd4-9142-497efd42dc34",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f493003-72eb-4ab9-8b3a-6a77fd114fc1"
        },
        "item": {
          "id": "99431bee-b391-45ae-b95d-57bdf81214d6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "484c23ca-3b4d-4adc-ad57-55841fcf7fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0089c4-9690-4928-b1d1-cc0bd4778a8d",
        "cursor": {
          "ref": "42ec21c7-6e21-4553-9734-9d03259ed5e9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2702db61-7864-40ef-81d6-ab24eb522aa5"
        },
        "item": {
          "id": "2a0089c4-9690-4928-b1d1-cc0bd4778a8d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6dce5d79-8968-41e1-84a5-c7532eaf9426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd46f6f-f214-424d-9143-25d10729dc49",
        "cursor": {
          "ref": "57fca85a-8217-4ae3-9ede-c758d2e57760",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "285f5911-d36f-4fd5-919e-e17805c749ee"
        },
        "item": {
          "id": "1fd46f6f-f214-424d-9143-25d10729dc49",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b45025df-5311-46c0-8034-ff09c32cf324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f84de0-d4fc-49f0-bedf-2bac13410828",
        "cursor": {
          "ref": "b98cdfa2-35a3-4364-9267-9e982d62d91b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23dfe9a6-6612-497f-91ad-836273a209d6"
        },
        "item": {
          "id": "17f84de0-d4fc-49f0-bedf-2bac13410828",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "38b629df-f1a8-4a7b-a320-fe1fc3cc616e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43306dc1-5fd8-4829-91b7-9110e07ddafe",
        "cursor": {
          "ref": "8576a31c-ea92-47e9-8934-5b442b3e8df7",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2884a88a-1aec-4e81-b28f-a8df16c90aa0"
        },
        "item": {
          "id": "43306dc1-5fd8-4829-91b7-9110e07ddafe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9098cc4-2844-42bb-949b-8790c045fdd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96d8e6-f805-4fae-b7eb-ae45cdd81c66",
        "cursor": {
          "ref": "2cef69d1-27f3-472c-953e-48a1c2527151",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7989fd94-c408-413a-8c6a-b91343a8ac7b"
        },
        "item": {
          "id": "8b96d8e6-f805-4fae-b7eb-ae45cdd81c66",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3880d4d8-cf9d-4042-9a67-764ac637b371",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 671,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4295ed88-4d1b-4325-a64d-64a6d8ed8922",
        "cursor": {
          "ref": "e8730006-23b3-4c10-80ab-563e92cb2adf",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2340511-4202-492b-844a-abc08843e05d"
        },
        "item": {
          "id": "4295ed88-4d1b-4325-a64d-64a6d8ed8922",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26f839e2-6724-4ade-8bf1-8d7964c082f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4295ed88-4d1b-4325-a64d-64a6d8ed8922",
        "cursor": {
          "ref": "e8730006-23b3-4c10-80ab-563e92cb2adf",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2340511-4202-492b-844a-abc08843e05d"
        },
        "item": {
          "id": "4295ed88-4d1b-4325-a64d-64a6d8ed8922",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26f839e2-6724-4ade-8bf1-8d7964c082f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fc6d9e-8c73-4fc4-8d65-0cb86d139278",
        "cursor": {
          "ref": "573051f7-afe6-454e-93f7-1b810dd52660",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "441c89cb-3915-495d-a550-41c0e066301f"
        },
        "item": {
          "id": "51fc6d9e-8c73-4fc4-8d65-0cb86d139278",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a71530dc-dda5-4699-9e5e-b1f2457a75a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab43c5e-19cc-4ead-a1b3-2b3589aba811",
        "cursor": {
          "ref": "6aba2798-34a6-4494-87a0-d4ef9b4732cf",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3b001fcf-cf7f-4b26-abbf-5f4395d7e466"
        },
        "item": {
          "id": "9ab43c5e-19cc-4ead-a1b3-2b3589aba811",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12ac980c-de29-4049-bd4a-b72aa32ae560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912c0c19-f0d5-4250-8055-7cf10c1155a6",
        "cursor": {
          "ref": "2d20abe8-27c1-483b-af65-294756948c7d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f7e63e69-7277-4896-97f3-f40c95f32811"
        },
        "item": {
          "id": "912c0c19-f0d5-4250-8055-7cf10c1155a6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d8ba03b5-72fa-4c57-af7d-0c33f05d8b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb7e116-d8ef-4d62-b486-e9e756a16822",
        "cursor": {
          "ref": "f05844de-a9ab-4736-8233-7273dfd73b54",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa051e2c-935d-4496-a74b-4dfb872707cf"
        },
        "item": {
          "id": "cbb7e116-d8ef-4d62-b486-e9e756a16822",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c09f80f-8f87-4807-8129-f3515443554a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b832f64-5c73-4a10-bc6f-8241421e4db4",
        "cursor": {
          "ref": "e691cf99-1de2-4da0-8307-8dee5b29d366",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7aa4be88-c4d3-476c-ba0d-949a2e77c1dc"
        },
        "item": {
          "id": "3b832f64-5c73-4a10-bc6f-8241421e4db4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed6bfdb8-b64f-4d5f-ab85-93a4a354dcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15abbb8e-94a7-4745-bc70-5a3e1956049d",
        "cursor": {
          "ref": "3c337a9d-d626-43b0-98da-16dbabc0ff69",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "df23cb66-99b7-4a5a-9d77-cdec967e9e36"
        },
        "item": {
          "id": "15abbb8e-94a7-4745-bc70-5a3e1956049d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e3c5ed6-997e-428c-9c1e-0f08b8faa34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f99702-4db5-4720-b8a9-18e8fe74104c",
        "cursor": {
          "ref": "0a081fc4-4bba-433f-96ed-c0def9560cd4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cee5fa7f-cc75-4fdd-8227-ecfd844a598a"
        },
        "item": {
          "id": "f6f99702-4db5-4720-b8a9-18e8fe74104c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fb927619-7860-4d32-bdf7-80a79fa0c2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cada1a-7821-4c7e-93b0-b247f36dfac7",
        "cursor": {
          "ref": "a74364ea-c41b-4f1f-90bb-ec39016866bf",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49d7f024-e6d9-440e-aa52-1c1cf53e5faa"
        },
        "item": {
          "id": "c7cada1a-7821-4c7e-93b0-b247f36dfac7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0ed8075a-c12c-47c2-8ad7-6334a6c4b9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bab587-f5da-4ff8-b3e9-46e78b7b6126",
        "cursor": {
          "ref": "f5ee4e3d-589a-48f9-be91-21a9283750d7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d86148dc-ed20-45f3-838c-2a2814acddca"
        },
        "item": {
          "id": "f5bab587-f5da-4ff8-b3e9-46e78b7b6126",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "61bd1666-7ecd-4f6e-836a-2374c6c7c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ec32ce-41ee-4ae5-aee7-e8dc25a7901c",
        "cursor": {
          "ref": "520729c5-cac6-436c-9621-67226c170273",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "82f7403c-2926-4138-b7c1-e8c8fce321fb"
        },
        "item": {
          "id": "69ec32ce-41ee-4ae5-aee7-e8dc25a7901c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ad10e984-3c23-4c5d-9755-3c094ce3ac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abc2bca-66f6-46b2-8e8f-aeb734bef0ce",
        "cursor": {
          "ref": "824caa78-d421-4585-85b6-9c76df5c7129",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "37306350-d181-40e0-b022-def859b6f74f"
        },
        "item": {
          "id": "6abc2bca-66f6-46b2-8e8f-aeb734bef0ce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8baf3798-785c-4367-96fd-0c1d57ff8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8de182e-1c5a-4a57-bd03-3e659dbe2974",
        "cursor": {
          "ref": "f9f66493-2540-4aaa-916a-8dd7a35e4d9c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "42282c88-60ee-40cc-894d-3434f0400d70"
        },
        "item": {
          "id": "b8de182e-1c5a-4a57-bd03-3e659dbe2974",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba7c5ee2-1dcf-4395-b75a-3e7dc351a885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb4b225-20d5-4ba2-afc8-5c0fa517c517",
        "cursor": {
          "ref": "ed392f10-d15b-48a4-8ae5-bb48bafa3c13",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd8462f9-124e-4a86-a1ef-4eeca59dbba8"
        },
        "item": {
          "id": "3cb4b225-20d5-4ba2-afc8-5c0fa517c517",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c9a24eba-6073-47a4-8a32-68960e788f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095feb08-1431-4a04-9301-dd84dc7da6d5",
        "cursor": {
          "ref": "fa47b5eb-a9ad-4995-a07c-0bdbbe23925a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e36b38e-7c22-4557-9f55-c5b0cb4b5e18"
        },
        "item": {
          "id": "095feb08-1431-4a04-9301-dd84dc7da6d5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0f6569d6-9f08-4c94-80b0-9930dc00bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b91488c-8e64-4c12-b1b1-40be58194f3f",
        "cursor": {
          "ref": "8104abb3-1d09-4986-b369-6f6ed9f0eac8",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c5fcae8d-7261-41ee-bf13-7c127dcbbecc"
        },
        "item": {
          "id": "2b91488c-8e64-4c12-b1b1-40be58194f3f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2d13f5e4-7ee8-4e96-b302-9f651f3ebfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34f8530-928e-4521-8ebc-1277e2dfc5ff",
        "cursor": {
          "ref": "6f166124-53ea-4083-a913-4936399ac815",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "395a01b8-909a-41f6-a664-456c581803e3"
        },
        "item": {
          "id": "c34f8530-928e-4521-8ebc-1277e2dfc5ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "41168cda-4660-4dba-820f-72ee467d9de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba70cbb-1b2a-4f98-bf03-ec98d6719c32",
        "cursor": {
          "ref": "7822cba0-731d-4c39-8d50-e0ad1ed8fe79",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dfcd74ff-f8d6-4a5b-8f46-f35758aaca8f"
        },
        "item": {
          "id": "9ba70cbb-1b2a-4f98-bf03-ec98d6719c32",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eff0fc1a-651b-40ad-a3ee-08ef4202ef95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3955fd9f-8502-40b5-bc31-c6ee41742c18",
        "cursor": {
          "ref": "af1573b3-8fed-4029-aa19-6538fda48755",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae1246af-2757-49cf-9d5b-333ce1d783ad"
        },
        "item": {
          "id": "3955fd9f-8502-40b5-bc31-c6ee41742c18",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c5fe1609-ac67-4318-8c34-b2698267662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1127bd0-f508-41fc-8dc2-fa6505e30461",
        "cursor": {
          "ref": "26b598dd-b1e1-4308-b214-4453526ff02a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "29b9e2aa-6b3a-47a1-935e-d97e875b55be"
        },
        "item": {
          "id": "d1127bd0-f508-41fc-8dc2-fa6505e30461",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7e4da0fd-23fd-453b-960e-e654aa29a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472fbfe4-90cf-4492-8566-d9edf877c9af",
        "cursor": {
          "ref": "762cca04-9255-43e2-8762-24500e20faa5",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4b1e120-e7f4-4c57-8b05-40ceaf0038cd"
        },
        "item": {
          "id": "472fbfe4-90cf-4492-8566-d9edf877c9af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1f8cc5ef-976b-46e1-b7bf-dbe6cfb4666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92f1b8a-39fd-4bcc-bb36-ae1cf8bf714b",
        "cursor": {
          "ref": "3966dd78-fbd3-41a1-821e-422e8f28e8dd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "66754314-ebb5-423c-8728-77f4623ad860"
        },
        "item": {
          "id": "a92f1b8a-39fd-4bcc-bb36-ae1cf8bf714b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e5426dc-9a07-4441-9cdb-c7bf5dd74495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9894ec2-b034-423f-bbcb-70fa09460f2e",
        "cursor": {
          "ref": "9ad9d685-980c-41f7-9334-571bdf86fa95",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0ad85384-e808-4f1d-bc07-3ff7aeae8d99"
        },
        "item": {
          "id": "c9894ec2-b034-423f-bbcb-70fa09460f2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5a05697-0ecd-49d7-9723-11dbca2f6c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eea140-974e-4fa0-aae9-17f3a11ca80f",
        "cursor": {
          "ref": "89c6bc37-e97d-4799-91bb-4f89f4c2320c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3117fc5e-7dc0-401c-b99c-74d125011f81"
        },
        "item": {
          "id": "01eea140-974e-4fa0-aae9-17f3a11ca80f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54378996-de43-463c-9b62-c054d1dd4475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49200c32-ce21-494e-bb59-8759f9426419",
        "cursor": {
          "ref": "78aee0f3-6920-40be-96df-76819a275816",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8be1f14e-4987-4a52-81ca-593b1b8bffbe"
        },
        "item": {
          "id": "49200c32-ce21-494e-bb59-8759f9426419",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "65456f6e-8557-475e-8592-0afb9f919edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44622f4-d4e2-40cd-a455-2f401d0270e3",
        "cursor": {
          "ref": "7027ec27-04aa-4988-8ff4-bbf04ba81235",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "27aac91c-51b8-403e-9a7f-19fbf8f2b479"
        },
        "item": {
          "id": "f44622f4-d4e2-40cd-a455-2f401d0270e3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ca8b25ac-ac15-4563-b7de-2147d198d766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91abcf80-1488-405e-a30d-ec557808afc6",
        "cursor": {
          "ref": "0b6fc7b5-07ba-45d8-87a7-74dd745d54a9",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9f416e7e-6bd6-4c2a-aa6c-f0445da23b72"
        },
        "item": {
          "id": "91abcf80-1488-405e-a30d-ec557808afc6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3832a98b-b283-4563-af38-f3768ce0887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfdaf48-0d19-4f94-8bb6-66a22822fd53",
        "cursor": {
          "ref": "255a9284-e464-41af-86d4-9070f46c5e51",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "15ede586-cee9-4e52-96b7-5c8126654508"
        },
        "item": {
          "id": "0bfdaf48-0d19-4f94-8bb6-66a22822fd53",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "653e5a1b-341f-4cd8-aea3-874adfd8ef5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f57f9-7c48-497b-9963-5e1ab5f5aaf8",
        "cursor": {
          "ref": "20497f44-272b-46c9-a9b3-694f56498d8a",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e53a0887-0a3f-479c-867f-6e3a93600cf6"
        },
        "item": {
          "id": "da6f57f9-7c48-497b-9963-5e1ab5f5aaf8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7ee78f90-8a1d-4e8e-ae22-d04efc5b7e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be948e4-0b01-48fe-916c-60428123033e",
        "cursor": {
          "ref": "c6f6bbef-daf5-4190-a30d-86caee44f129",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b2f5936b-eba8-4434-8ad4-43e8b645385d"
        },
        "item": {
          "id": "7be948e4-0b01-48fe-916c-60428123033e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1decc68-2f83-483e-bc01-2761c038ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a86dc44-1e2f-40db-a1e1-62849f449173",
        "cursor": {
          "ref": "b0891bdb-5883-4d61-9788-7102f67d0d4a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "96d695be-3e07-443a-a973-3913bacb8b75"
        },
        "item": {
          "id": "9a86dc44-1e2f-40db-a1e1-62849f449173",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f95027cc-1964-42d5-a0d9-cfc51cf67e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad51e8f-6272-402c-89eb-11f227d5e2d0",
        "cursor": {
          "ref": "a02cdaff-34d0-4b91-a5a8-a1049466f488",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "25bb44e6-ec69-4ea8-a08c-1b23ddc6842c"
        },
        "item": {
          "id": "bad51e8f-6272-402c-89eb-11f227d5e2d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7515123a-aa30-4c6c-85c2-9bd3a30e428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06397557-2757-4d39-a6a4-0e893d27898f",
        "cursor": {
          "ref": "d3fc3cd6-96a1-4a31-a815-0f954d0638c7",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e894a856-1998-48be-b92e-e8805d515c84"
        },
        "item": {
          "id": "06397557-2757-4d39-a6a4-0e893d27898f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b84a872f-45f8-4748-9026-d4dcc15732c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc97914f-26f5-4023-88bd-6b662c80014e",
        "cursor": {
          "ref": "c548accb-216b-4e56-b0f5-677d5d9b5b50",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b9e7bcac-bb4a-47f6-97cc-6ddc637b6483"
        },
        "item": {
          "id": "fc97914f-26f5-4023-88bd-6b662c80014e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b2eaef1-37ad-4c49-8af5-c5213639dbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df10887c-ea3f-440f-b7d7-f3da57ed1605",
        "cursor": {
          "ref": "d5bb6ff0-e443-4535-989b-af47455eaa74",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a64d9d6b-0d75-4645-baed-33b8aab47d3f"
        },
        "item": {
          "id": "df10887c-ea3f-440f-b7d7-f3da57ed1605",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ede865e9-be1a-4a64-b22c-cbb6af7b32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec874a88-a5b2-475f-bc0c-8f131267d4b7",
        "cursor": {
          "ref": "d98bd973-e9b8-41d9-b601-590a3287e6c0",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "72b59fe3-5fc2-4c41-afe4-f898259d9341"
        },
        "item": {
          "id": "ec874a88-a5b2-475f-bc0c-8f131267d4b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cba8a09f-e91d-4f5d-a795-2ba9e4a43fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c3df6-8d9e-4129-97e3-db603295cf80",
        "cursor": {
          "ref": "4c38a6da-f92b-4804-8130-1f985198da95",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "328276db-91f8-4f0b-9674-76aa07ebf209"
        },
        "item": {
          "id": "c22c3df6-8d9e-4129-97e3-db603295cf80",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f3195db4-d01c-4d32-9347-b9a11a2dfce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9df5c26-0919-492b-8cb1-32325edfbfb3",
        "cursor": {
          "ref": "e91c1415-d100-4418-9660-1df8df444b16",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d957d383-6ce4-40ab-92f4-21ecdf8e53ec"
        },
        "item": {
          "id": "c9df5c26-0919-492b-8cb1-32325edfbfb3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d8656d99-57ef-426e-b2d8-c7b5d49a9613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68d5dfe-1052-46a6-b87f-ba4ced2f630c",
        "cursor": {
          "ref": "7475fd82-8294-424b-92e3-4ebffd40a858",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cc410a2b-ba6b-4cd0-b876-193f3b018b0d"
        },
        "item": {
          "id": "f68d5dfe-1052-46a6-b87f-ba4ced2f630c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8d9c1155-ce61-4726-b704-8f43df291d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be04edb5-6e6a-4433-8f1d-e712c266bb75",
        "cursor": {
          "ref": "398d47d8-ac6d-4a03-805c-ac87ad4756db",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "105edd69-a133-424f-b0af-6c9f030ffd83"
        },
        "item": {
          "id": "be04edb5-6e6a-4433-8f1d-e712c266bb75",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0141645a-c1bc-42ad-9021-48aac73eedc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b721a-e11e-47dc-888f-6e6b7cad1694",
        "cursor": {
          "ref": "37e84153-a779-469b-aa19-6a83625e80b0",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b2977cf-8a3c-48e4-90a8-dd244c025775"
        },
        "item": {
          "id": "8f1b721a-e11e-47dc-888f-6e6b7cad1694",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "32258941-d8a7-4b50-b4a6-b8b608dd2975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffd16fc-fbf9-41b9-a308-1f4efe0e485f",
        "cursor": {
          "ref": "cc4bd702-df87-4bc9-8008-ed9588772e9d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "333b6aa0-9e6e-4aa9-9850-50f8a2a46182"
        },
        "item": {
          "id": "dffd16fc-fbf9-41b9-a308-1f4efe0e485f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7544cdcc-d31d-439c-8b4f-51a14ccc69e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6766493f-c9b5-4143-98ac-3c41104c5a4a",
        "cursor": {
          "ref": "a959b2ae-5cd2-4c1e-981f-d9aca2633d86",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "61eb2cf2-6c1f-46bc-99a8-46728beb49f8"
        },
        "item": {
          "id": "6766493f-c9b5-4143-98ac-3c41104c5a4a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3287d193-dbc5-4b37-8a5d-b4a49a7018b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d514f19d-569e-4a82-a87b-310c4975e5fb",
        "cursor": {
          "ref": "d8dc1535-7fd2-4173-bc8f-49e8c6bc99c5",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2fb025b4-8f06-472b-9cc8-1b97db6f3b7e"
        },
        "item": {
          "id": "d514f19d-569e-4a82-a87b-310c4975e5fb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ddc24b0f-2447-46e6-91b2-4c77c2ebe0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9c5533-e491-478c-95e3-35537f7f42dc",
        "cursor": {
          "ref": "d655281c-28c4-44c9-ad30-97289350ffa7",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "09358a28-df5f-4de0-970d-25d4510aea4d"
        },
        "item": {
          "id": "8b9c5533-e491-478c-95e3-35537f7f42dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d6d3e46a-14ea-46bc-b49e-d841fe44f7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf19abd-d58d-4f2d-99c0-bcfb2c56841c",
        "cursor": {
          "ref": "e9feca12-ebaa-496c-87ea-a82ae6ed7ed3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5bafd095-9067-4f4f-983e-8020ffa81f40"
        },
        "item": {
          "id": "2bf19abd-d58d-4f2d-99c0-bcfb2c56841c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7dbcf5ce-7ffc-4feb-af07-0518e104572e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f682ccbf-f2a3-4251-8b40-853d40cbb079",
        "cursor": {
          "ref": "be187f8c-688d-458f-9ab2-39609ecdb4c5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b6402911-acd4-44c6-961d-13e7c51bcd21"
        },
        "item": {
          "id": "f682ccbf-f2a3-4251-8b40-853d40cbb079",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9673a805-803a-4359-b5c1-76b9416b0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2549e2eb-a7ae-46c6-8ac8-467c9c633cdd",
        "cursor": {
          "ref": "e274be8e-b80f-4201-b35c-c737035d2a20",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c6bda9d-e381-4986-9939-53578b92eb55"
        },
        "item": {
          "id": "2549e2eb-a7ae-46c6-8ac8-467c9c633cdd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0904ff07-a128-495d-8b59-e1def4dd7ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c95633c-d0ef-4627-846f-74e3126a8ad4",
        "cursor": {
          "ref": "f07022b4-ee55-4417-b271-2a4fc4e43751",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8892e695-20f7-48e7-a2e7-6d9076e263af"
        },
        "item": {
          "id": "4c95633c-d0ef-4627-846f-74e3126a8ad4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e158c386-d8fb-468c-8d73-818e51b27d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6e53ca-ac3f-4364-8bf0-04d33cf9e32b",
        "cursor": {
          "ref": "3d61ab60-49f0-41fc-a692-9c112fd1f592",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e742127d-dec0-4fe1-ba40-6cd6d2ba2d0a"
        },
        "item": {
          "id": "8d6e53ca-ac3f-4364-8bf0-04d33cf9e32b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b196e8f-69b3-4f50-b410-30106613e8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab6d09b-6007-458e-816f-7ddac47eb0ad",
        "cursor": {
          "ref": "141c901f-45f7-42a9-92a0-5e5d9c540066",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "56ed7418-8c9f-40f0-a570-f07ebb731e5e"
        },
        "item": {
          "id": "8ab6d09b-6007-458e-816f-7ddac47eb0ad",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b8bca12a-bcbd-4d36-927c-cb4ebd3f103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35ab7c5-5df9-4f65-9feb-43615f523459",
        "cursor": {
          "ref": "8c3b706e-3176-4ff4-93ef-646b3f8ff6ef",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b71a8d5f-b84a-4e19-9917-23b05c48f269"
        },
        "item": {
          "id": "d35ab7c5-5df9-4f65-9feb-43615f523459",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dac85e93-2f22-42ec-b321-88dcf08741cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f988f8-c5ee-4a7e-9bfb-3c73f9d5e5bd",
        "cursor": {
          "ref": "a0d318d1-45e0-4483-98be-4469712e3322",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7e52dc9e-57d8-45bc-81f2-0310757bd962"
        },
        "item": {
          "id": "23f988f8-c5ee-4a7e-9bfb-3c73f9d5e5bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4254aa2e-a8c6-4277-a052-b6a2a4a1605b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e390759-136c-4c01-ab6e-e985f7004c5a",
        "cursor": {
          "ref": "c0f37131-3f3b-4992-a206-c8655c697a40",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b773b88a-471c-4c96-ac92-19443e4380e2"
        },
        "item": {
          "id": "5e390759-136c-4c01-ab6e-e985f7004c5a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f60998b1-c0aa-45e0-90ee-24ebc3d58932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c575f71b-3bd0-4e7b-be1a-a8b65b68da4f",
        "cursor": {
          "ref": "67af0900-64a5-4374-8d15-0f434d300299",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf7261b7-806a-4270-a91f-1ae90b5f51d3"
        },
        "item": {
          "id": "c575f71b-3bd0-4e7b-be1a-a8b65b68da4f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b16cd80-d299-4ce7-8b87-77c9ae63c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69e93d9-d56e-469b-8628-aaeedbc1881e",
        "cursor": {
          "ref": "23b764dd-c266-4946-beef-8e64af498d6a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6cbfcb51-0574-48a8-b614-2a8eaa2651ae"
        },
        "item": {
          "id": "d69e93d9-d56e-469b-8628-aaeedbc1881e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0055aebd-ce45-49a7-97cc-e3653b9526a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670a9c8e-c21a-45df-8fc7-f20323b401a4",
        "cursor": {
          "ref": "c7d7eb81-545b-42c0-b361-8ba43f6b3d97",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a3c2c5b4-9f55-4bc7-9434-ec7b477b4f98"
        },
        "item": {
          "id": "670a9c8e-c21a-45df-8fc7-f20323b401a4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "109cc395-7e1f-4786-a7c2-9b8e7dda567b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa7d87a-2c3a-4ad3-a9fc-3f2234cad094",
        "cursor": {
          "ref": "bd3e3dab-6f37-41e3-858c-00d902d68e89",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2c0b3b14-6cbe-43cb-95a1-b5c7cf824322"
        },
        "item": {
          "id": "4fa7d87a-2c3a-4ad3-a9fc-3f2234cad094",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b3fec74-cd7b-4f3a-829a-8644a5724c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c4d543-786d-4306-b7ef-c83ac8c5fd01",
        "cursor": {
          "ref": "cc7a6308-0087-4b00-b2a5-41d663480b8b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "90c6db6b-4e64-4f04-84a3-8f9de2454dfb"
        },
        "item": {
          "id": "16c4d543-786d-4306-b7ef-c83ac8c5fd01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e15b4c4b-0a50-40c4-8cce-a4111dde0247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5c799f-d0e3-4e32-9426-b73460885faf",
        "cursor": {
          "ref": "d33b44df-6b6f-41bb-8abd-255427d32349",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "57df7e83-35e3-41c3-9a34-89aa971553c7"
        },
        "item": {
          "id": "8a5c799f-d0e3-4e32-9426-b73460885faf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5c2b4e9-1a16-40c1-9a1d-d0caff0ed731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09601223-3de2-4aae-a02c-189a396e2000",
        "cursor": {
          "ref": "bddc49b6-a916-4189-9c96-58fcff39e7bb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8df725de-ab95-429a-814a-4f0c206d6113"
        },
        "item": {
          "id": "09601223-3de2-4aae-a02c-189a396e2000",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bd661421-b215-4de1-a01f-5ac009f7ef1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8281539c-a005-4460-a858-c5a50788c8f4",
        "cursor": {
          "ref": "0875c37a-8071-42eb-a537-7bdc65b3098a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4180e647-57f0-4162-a4f2-1c2e76178940"
        },
        "item": {
          "id": "8281539c-a005-4460-a858-c5a50788c8f4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e436c876-1bdc-4ed2-a445-f385d1993e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0464cf83-339d-498e-8b82-8093733cc0bd",
        "cursor": {
          "ref": "97520eb6-9898-4e4a-8e0f-4072fa136554",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1730873-ea2f-43f4-bab4-6a55ae36a4ba"
        },
        "item": {
          "id": "0464cf83-339d-498e-8b82-8093733cc0bd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "11bb3d63-7e20-48d5-8a2e-13099e7be0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a602d6d3-d5fe-497f-be27-da950f2c76cd",
        "cursor": {
          "ref": "d619e670-01b0-45ce-b247-39483b2c2e91",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "15925aef-88b7-495f-8d68-1ba4ef599889"
        },
        "item": {
          "id": "a602d6d3-d5fe-497f-be27-da950f2c76cd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d61d3d2-59e4-43b8-a42a-7d960dc5ff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa395b5-9bc9-4e70-91f0-be7c2a5ecaf0",
        "cursor": {
          "ref": "2f814340-6610-4302-8ad4-44988c47ce34",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7a26216b-473f-408f-b28f-aa60d9293de7"
        },
        "item": {
          "id": "3fa395b5-9bc9-4e70-91f0-be7c2a5ecaf0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3b5f434c-34ca-4968-bc56-d5e231435318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dda9b67-c1f3-4c3f-9fd5-526304403c66",
        "cursor": {
          "ref": "d0023ec4-f013-43d3-83e1-4205f8385cc1",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bfa814dc-fa4a-4720-b375-5d62e8a91c76"
        },
        "item": {
          "id": "0dda9b67-c1f3-4c3f-9fd5-526304403c66",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1305ae6a-441c-4592-b2cf-5fec723e7afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be8d2a0-c954-4ee7-9b76-dd844e4980ee",
        "cursor": {
          "ref": "4c2bd675-8b5d-4d71-bfc2-fa389544e950",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "090786b2-a518-444a-91b5-b35b624e15c9"
        },
        "item": {
          "id": "6be8d2a0-c954-4ee7-9b76-dd844e4980ee",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e0815bda-6647-4ccd-a1cc-d57140d5f862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94b4691-6d42-4066-bfdc-57f5438fe1a6",
        "cursor": {
          "ref": "2295b899-d326-4f1d-9f4d-af30759e08f8",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "639f4fc4-b342-48f9-ac21-ec8462fd5744"
        },
        "item": {
          "id": "d94b4691-6d42-4066-bfdc-57f5438fe1a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f14a894-2fa9-4c10-b014-f047d34d2649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab9743a-7115-4b7c-a50b-77c3644716dc",
        "cursor": {
          "ref": "6d6bbd41-db84-4163-9991-e0b3474c1ea6",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9bc96107-89d7-46d4-972b-df0f48e40a55"
        },
        "item": {
          "id": "8ab9743a-7115-4b7c-a50b-77c3644716dc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d227b05a-e374-48cc-a023-d41fb2dd9c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b4b8f-845f-4c1e-88b9-5bbe131301a0",
        "cursor": {
          "ref": "c1ae3053-05fc-4aad-a669-14d75186799d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bfb4ec2e-f5e0-40e0-89ad-f4c80415a045"
        },
        "item": {
          "id": "e07b4b8f-845f-4c1e-88b9-5bbe131301a0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7c1bac01-7cf2-4aed-92b5-90dee88d3a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ed7d2a-ae82-4f3a-8ac3-4ff27f6a0160",
        "cursor": {
          "ref": "9e36bd87-5d1f-4d2e-bfe9-3bee48a221ff",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eefd7b09-4d39-44d1-982b-d27bb83a2c4a"
        },
        "item": {
          "id": "25ed7d2a-ae82-4f3a-8ac3-4ff27f6a0160",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1a8ad4bc-f241-4fa3-b789-562c1752f72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7dab30-a1e9-4d70-b9d7-65189a8ea5a1",
        "cursor": {
          "ref": "665473f6-b687-451f-91ee-8fac1f114345",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9bfcd0ea-9a29-4035-b7e7-3b33f34e1976"
        },
        "item": {
          "id": "5b7dab30-a1e9-4d70-b9d7-65189a8ea5a1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "713ed575-b2d7-471f-9e05-063a665be6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc3dc88-bd92-4e06-9b5e-57c004dd7b20",
        "cursor": {
          "ref": "daa8aa1e-0c19-4d33-b626-d448c6ea9422",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "abf63171-a353-4cec-bdde-566669eec282"
        },
        "item": {
          "id": "3cc3dc88-bd92-4e06-9b5e-57c004dd7b20",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "68dd07d4-ee2f-4743-838e-ca614da2fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464243fa-7e8c-4a45-9dd3-3a581e413ee9",
        "cursor": {
          "ref": "50b899a3-03a9-47c3-ae2c-e62a12ae6f20",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b93e2c59-770a-493b-92d9-6fbda24c1e55"
        },
        "item": {
          "id": "464243fa-7e8c-4a45-9dd3-3a581e413ee9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f90cf8e1-fedb-4aa1-b22e-0b55648cd9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f72a20-8774-4c9a-a9e7-a21fad7da452",
        "cursor": {
          "ref": "5c3468fa-05e6-4540-9258-0c883953776a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8e89b18e-126c-49dd-8b36-035720c098c0"
        },
        "item": {
          "id": "c9f72a20-8774-4c9a-a9e7-a21fad7da452",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "abce256a-0a8f-4ed8-b84a-79eacf4a2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621bcde6-e758-472f-aa1c-f0eced249c58",
        "cursor": {
          "ref": "e9e0918a-7010-4ab3-b313-d5496c38f90e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "273f52f0-e17d-468a-a065-27cfff266349"
        },
        "item": {
          "id": "621bcde6-e758-472f-aa1c-f0eced249c58",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "de9d4aa5-2eff-4bc9-b284-b4d17f06603a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c6988d-b3cf-41f6-899d-c2fa39d69ad1",
        "cursor": {
          "ref": "343db2e1-d31f-4ba1-8bd9-85492976f7c3",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e1f077d-65bb-4d6f-af7f-73fbdee94ecd"
        },
        "item": {
          "id": "a5c6988d-b3cf-41f6-899d-c2fa39d69ad1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6509ae33-9f93-43c9-8db9-8cbb5beb4a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7633e4-fe39-42ef-a048-3c12788caf73",
        "cursor": {
          "ref": "6a61d3fa-f4eb-41f6-9ffe-1853ce7a74be",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4625222b-23c9-4cac-b203-82261d72b7c8"
        },
        "item": {
          "id": "1c7633e4-fe39-42ef-a048-3c12788caf73",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3a0b4732-0d1d-4ea6-a4e2-b180310e2b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e602f6-b495-4544-800c-ed2a9b564997",
        "cursor": {
          "ref": "537be33d-8377-49d6-ae09-715424795c94",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8a9c712d-f9a0-41ac-8ec3-333bd7ecf310"
        },
        "item": {
          "id": "f4e602f6-b495-4544-800c-ed2a9b564997",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "76f7afed-ffb1-414a-8fd6-1855c7bc99cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca859a33-a5ad-4f95-8482-8fa2daeb886d",
        "cursor": {
          "ref": "894271a4-9e5b-4f8d-a177-5573e03a5bae",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aafc2d5d-6241-4424-b39a-a251ead56663"
        },
        "item": {
          "id": "ca859a33-a5ad-4f95-8482-8fa2daeb886d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ba3c398-2c7d-4a51-b1b9-7b4e31a374a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44357572-1bfd-4012-be69-799b2628c6ba",
        "cursor": {
          "ref": "84de4a82-bc78-4372-8ccc-7eea62e60145",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5638e5cb-0226-4946-b62c-e62ca258b509"
        },
        "item": {
          "id": "44357572-1bfd-4012-be69-799b2628c6ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "871f0d5a-487c-4b31-8bfd-f071bf4484a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb9527-7d23-4017-a998-6c8d56bebc4b",
        "cursor": {
          "ref": "a6cf7026-9c5c-4f41-8500-47b6c62f3302",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "61851a51-a426-46ee-b5b4-a6a055a9c8e5"
        },
        "item": {
          "id": "02cb9527-7d23-4017-a998-6c8d56bebc4b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c34f1f99-23a7-4ee1-a66d-48202db54b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d39c762-568c-48c0-a8fc-0a48edb7229d",
        "cursor": {
          "ref": "41d4ab2a-ff86-4f7a-b84e-61561549c9f4",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "324ac2da-4887-49a7-9fe1-ad901467b260"
        },
        "item": {
          "id": "7d39c762-568c-48c0-a8fc-0a48edb7229d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b3362489-9649-4cf8-a42c-b38869865ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083704fe-7eb5-4dd0-99ba-5e539ff2dd81",
        "cursor": {
          "ref": "b4f8ff02-36d6-4989-a3ae-8c1f509edd09",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b5aa6b09-86de-481b-a1a6-cae93cb2d6f5"
        },
        "item": {
          "id": "083704fe-7eb5-4dd0-99ba-5e539ff2dd81",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0665ba9e-3bf8-4df8-a2b4-faefea9e5ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2535f7-28dd-4b83-9a9c-b95edb7be4b2",
        "cursor": {
          "ref": "da4320e3-7f75-4bf1-92cb-795bd3e0e582",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c2daaa8-f864-47b9-ac4a-5879d02fb0f9"
        },
        "item": {
          "id": "aa2535f7-28dd-4b83-9a9c-b95edb7be4b2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "185a4e9d-5948-4955-9285-145d878d8ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb35acc2-2ca1-40d8-b9cf-c141c0cef7fc",
        "cursor": {
          "ref": "ed710b23-4e07-4dd8-9ca1-8ff20ef6e595",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d319510-9853-4826-b878-3041ca0237a5"
        },
        "item": {
          "id": "fb35acc2-2ca1-40d8-b9cf-c141c0cef7fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "79d2af5b-a62e-4032-965b-cb1df27a24aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f713be0-e03c-46a5-8ff0-1db701988f0b",
        "cursor": {
          "ref": "1bed7231-4c7a-4bb2-ae62-5ce3600f701a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3d4aefaa-5f01-4c95-924a-afea26208bb1"
        },
        "item": {
          "id": "0f713be0-e03c-46a5-8ff0-1db701988f0b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7c3bc696-4e00-4eef-aad4-7081fc5dd2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa704a0-316c-4296-a4a5-3890fc8b599d",
        "cursor": {
          "ref": "da44be51-80a8-4ee5-8081-35f40936d195",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f1a140f-94f6-423b-b742-66bddc1bcb17"
        },
        "item": {
          "id": "caa704a0-316c-4296-a4a5-3890fc8b599d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61ca6245-c88c-4044-8a9d-556fe0816f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19991ca6-63a5-4f2c-8c97-fc9f1d2bb5a4",
        "cursor": {
          "ref": "41a6f994-e685-44ad-8390-465b9397d6ac",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2c7783a-c818-4c52-baef-33ec1ac1251d"
        },
        "item": {
          "id": "19991ca6-63a5-4f2c-8c97-fc9f1d2bb5a4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a9b7774-24fe-48fc-89b0-aacda1aeb01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f788cf-7f6c-4f63-9cea-ac08509d2b2b",
        "cursor": {
          "ref": "3da0a7bc-9e5d-4853-911a-99204110c87c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6d8a0e58-c4e1-4a32-9cba-c6b12370cf15"
        },
        "item": {
          "id": "45f788cf-7f6c-4f63-9cea-ac08509d2b2b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "355e447c-4abd-4676-a8b4-d5b0f82beb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe76e5-5f2f-4080-9b8b-279b38fb0d20",
        "cursor": {
          "ref": "0e98462e-a47c-4783-b782-abcf4b0843bf",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af80e162-5f0e-48be-90b2-2930842318ac"
        },
        "item": {
          "id": "72fe76e5-5f2f-4080-9b8b-279b38fb0d20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58f687f3-8c96-44cb-bc7d-7df515032475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d36dc5e-dce7-41b1-a2a7-b764449ce799",
        "cursor": {
          "ref": "609d4d10-9c66-40e8-a1eb-95cd6b36767a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "322b7fd9-79da-4b02-ba5d-48933959c15a"
        },
        "item": {
          "id": "9d36dc5e-dce7-41b1-a2a7-b764449ce799",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25e33ca0-5739-4288-808b-833e01ba3512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b15e82a-b318-466e-9086-9433db63daba",
        "cursor": {
          "ref": "71bb5ac6-860f-4d19-aaa8-0031bc670314",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b7abc1c3-1e25-450e-b582-b7870d17b10d"
        },
        "item": {
          "id": "4b15e82a-b318-466e-9086-9433db63daba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7d110b5-bafb-4c79-bfd0-0c6b71fe8982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e885a90-af01-4b35-9dfb-ea19d96b6dfb",
        "cursor": {
          "ref": "6f7c4eac-4d3c-4e51-9df7-8e3de7aa8301",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2491af51-b330-4b86-8cbf-decacbc8269d"
        },
        "item": {
          "id": "9e885a90-af01-4b35-9dfb-ea19d96b6dfb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8e5d1cf6-ec28-4690-a2e7-9425d41efff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb05eca-f7ee-40b4-93f4-8d19f576f7a1",
        "cursor": {
          "ref": "206c2480-1abc-4698-ac84-bff36a9f88e1",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a64fb1d-4e15-49d9-8158-9f7e6c37af87"
        },
        "item": {
          "id": "5bb05eca-f7ee-40b4-93f4-8d19f576f7a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "20224c3a-41ca-433b-8e40-5dd41e126c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3325da-424d-43ac-9691-eaefbfc35d5d",
        "cursor": {
          "ref": "177e9108-309f-41d3-ba3f-630f99edf301",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "58fb12c5-5385-44fb-bec0-1eaba1429ca1"
        },
        "item": {
          "id": "ff3325da-424d-43ac-9691-eaefbfc35d5d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e4c9365-f66d-4975-b191-6138734d9113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39b07f3-5c88-4314-b43b-f9a5d66606a2",
        "cursor": {
          "ref": "2d6cc2dd-e908-46d3-9d8c-f728038b32e5",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7a3803ac-b4fc-4e0f-ab69-b7d9cf23e659"
        },
        "item": {
          "id": "b39b07f3-5c88-4314-b43b-f9a5d66606a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "88650bce-bfc5-467a-a6a8-1459ad6f2274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd436b9-9df5-46aa-bb00-0896787d3e1a",
        "cursor": {
          "ref": "8fa76675-9b88-4e2a-9462-9f3b197c99ac",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ddc31842-1945-40e2-80b4-0c19ba93897c"
        },
        "item": {
          "id": "ecd436b9-9df5-46aa-bb00-0896787d3e1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d0036e16-dd41-4052-b9dd-55ab6ac26696",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20a8cfc-db06-4831-9f8e-95af4eec9dec",
        "cursor": {
          "ref": "f7ca972e-72b0-4a03-8707-396d5631df75",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "16fe6620-c5d9-42da-a9eb-4ba0b80e6e98"
        },
        "item": {
          "id": "e20a8cfc-db06-4831-9f8e-95af4eec9dec",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "eb05d622-0825-4251-a0ef-d162a502b0b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 457,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411756af-69bc-4568-b511-43fd3c80853f",
        "cursor": {
          "ref": "bf25bfe5-95ba-4d44-b195-a6e9b5a0becf",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0982e359-f03c-4c8b-b8ec-84dfbaf82380"
        },
        "item": {
          "id": "411756af-69bc-4568-b511-43fd3c80853f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5d1e8b54-b12d-4548-aee4-14255d6fc1d2",
          "status": "OK",
          "code": 200,
          "responseTime": 554,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c3cf92-5977-4a4a-a387-87a9d2cf062e",
        "cursor": {
          "ref": "23c0b85c-998f-491a-a653-ffa358a91264",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5e55b4f-f2bd-4b7b-8e24-f037e092e819"
        },
        "item": {
          "id": "e1c3cf92-5977-4a4a-a387-87a9d2cf062e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "59421fe3-82df-46cd-91bb-c11cad1093ca",
          "status": "OK",
          "code": 200,
          "responseTime": 2039,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdc9aec-490f-4380-a392-c45940f69218",
        "cursor": {
          "ref": "ca8b64d3-9b8e-4378-86d8-a0a0547e8857",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3c1476d8-465b-420b-9d4b-3a9b03836146"
        },
        "item": {
          "id": "dbdc9aec-490f-4380-a392-c45940f69218",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9b9d14f1-9926-4c75-9b38-bb1dd8231ec0",
          "status": "OK",
          "code": 200,
          "responseTime": 2089,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
        "cursor": {
          "ref": "81a4a079-2fd7-4a6d-95b9-44d3863334d0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "08a598bf-8720-4725-93f5-357a29744c18"
        },
        "item": {
          "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58ed9d9d-6fcc-4608-a440-80a3f05aa07c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
        "cursor": {
          "ref": "81a4a079-2fd7-4a6d-95b9-44d3863334d0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "08a598bf-8720-4725-93f5-357a29744c18"
        },
        "item": {
          "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58ed9d9d-6fcc-4608-a440-80a3f05aa07c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
        "cursor": {
          "ref": "81a4a079-2fd7-4a6d-95b9-44d3863334d0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "08a598bf-8720-4725-93f5-357a29744c18"
        },
        "item": {
          "id": "4cc049fa-94dd-4ffa-b60d-ff0eda9797fc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58ed9d9d-6fcc-4608-a440-80a3f05aa07c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539920b-e7fa-4f7f-8015-b8940f8e9863",
        "cursor": {
          "ref": "3c831859-bcf4-4b8c-8125-6cc51f2cd96c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e94dda26-eca1-452c-9a3d-a46ea5f3e9a9"
        },
        "item": {
          "id": "f539920b-e7fa-4f7f-8015-b8940f8e9863",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f7528a2f-1790-48de-b829-c73a94ce6d4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 887,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22185545-23ce-4689-8367-dfaac0889dd7",
        "cursor": {
          "ref": "5e0af711-1e7c-4c0c-aa51-72cd712073ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b1dfffe2-0834-4220-99e8-c7f35f22d5e8"
        },
        "item": {
          "id": "22185545-23ce-4689-8367-dfaac0889dd7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56bcd092-b1a2-4b47-a60e-8b44a4ddc5f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22185545-23ce-4689-8367-dfaac0889dd7",
        "cursor": {
          "ref": "5e0af711-1e7c-4c0c-aa51-72cd712073ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b1dfffe2-0834-4220-99e8-c7f35f22d5e8"
        },
        "item": {
          "id": "22185545-23ce-4689-8367-dfaac0889dd7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56bcd092-b1a2-4b47-a60e-8b44a4ddc5f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3ef52-118b-4344-a3f0-b2236d7be797",
        "cursor": {
          "ref": "423a0ea6-f1a3-4e81-9f10-8f71c3d05ad2",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "60a0de74-8a23-4a7f-9e9a-710e270bd1fe"
        },
        "item": {
          "id": "78d3ef52-118b-4344-a3f0-b2236d7be797",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6f0df2b4-a249-4b34-ba38-4b7b9aca9a4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1327,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee07535e-54c4-49ff-ad51-b51e82e11d9f",
        "cursor": {
          "ref": "d4d07d36-0b77-4d9d-82c3-a58a6cdddd5e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5fb7ae30-ca61-4d09-bfe6-1ca9870b2e92"
        },
        "item": {
          "id": "ee07535e-54c4-49ff-ad51-b51e82e11d9f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "187110ba-9cd5-4c93-bd11-aa246dee4155",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee07535e-54c4-49ff-ad51-b51e82e11d9f",
        "cursor": {
          "ref": "d4d07d36-0b77-4d9d-82c3-a58a6cdddd5e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5fb7ae30-ca61-4d09-bfe6-1ca9870b2e92"
        },
        "item": {
          "id": "ee07535e-54c4-49ff-ad51-b51e82e11d9f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "187110ba-9cd5-4c93-bd11-aa246dee4155",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cea0326-fbe6-4f63-9bd2-9ea00ec3db11",
        "cursor": {
          "ref": "cfc16d3b-15d1-49cd-b5b2-efd40b282873",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4cc8208d-3727-452c-8e77-3d761cb59767"
        },
        "item": {
          "id": "6cea0326-fbe6-4f63-9bd2-9ea00ec3db11",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "929f8d22-21e8-41b2-bdc3-e01ff2383084",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 683,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}