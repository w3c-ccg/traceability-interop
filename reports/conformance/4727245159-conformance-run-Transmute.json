{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3adc2700-4b56-4da9-b3b7-4a4579a0ccf4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b43182c0-5514-4a69-8710-1bfb557e2ce9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a631521-8f0d-4b84-809b-83768d3338a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a2bedfa-6bc5-46bf-886a-53731e99581a"
                }
              }
            ]
          },
          {
            "id": "3cb31330-a636-4393-b818-34e86ed25be8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21b616ae-c3f1-4c59-a0a6-6fb0fc7548e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebbe9fa7-d0d9-4999-90c3-03d780d4897b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "539659b9-bc39-40b6-ab87-d8a5d95bc2f4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dbbcfef4-aa41-4d44-8541-2cd6352212c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e845e56-0434-458d-acab-b32ef00e0c81",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a4a5841-3f93-4de6-9f92-d53a8d803907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ebcdc33-8d57-4d2f-9338-ea569440e4ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7811fe5a-aa4e-4e80-8536-a39e9b26b6a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a862d898-bcbb-406f-8c74-ca8d8ed8abff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f965f897-c157-4a71-8078-21f406ac5661",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7631f81f-01d7-44b9-bcc5-3855e7485496"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e20c65f5-7079-435a-b0b7-6b22104a8080",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3cbbfaba-c9bb-4cab-999b-325fe8f4f5d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18c49756-f504-4998-adaa-b171d45647fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1da25a06-6592-461d-8c07-e1ebe62b327f"
            }
          }
        ]
      },
      {
        "id": "8e8cbafd-5102-47c6-bf9e-45ee70593f83",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b34b13e5-ad98-4e49-927f-acbc55cf8f10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c4821ec-b936-44e4-8d9a-cd0452ba247d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45cc2f30-5453-4f35-87f8-585521c2d3bb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e301481-a9a2-488f-a18d-55bdb44d8207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16330e75-fef8-47ad-b6cc-e95e40c3b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4c2840-8e75-4a6b-8f13-455664575c6b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99165d39-0787-4b18-9332-4043c0342ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e506d584-a98d-4597-88cf-c6a8d870bd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6456d6-df6e-421c-9388-54a04d6dd7e8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8fca8c-29fd-4bec-9171-6adfc7c913ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ece8e68-1d92-4927-8ec0-bc7de5012bbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c663d89e-9dc7-4a55-8fe9-87f795bf5d70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97f3bb46-0349-4795-89d2-1f2961233b30",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6674ee08-0012-4d14-aa3f-38fc417eb11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a51d0250-efcd-467f-a014-1af453639bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fe5340-9d46-4d1d-887d-5ab84527295a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e7f381-7fbb-486d-a62c-7e33d9d7d5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898ee76-f1e5-4e17-8ddf-e4ab4b4359d7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eae585-d70a-4e70-bb29-d8881feda822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddfeda7e-cf0c-440b-b6b2-23894d54ecba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86889913-25d4-487d-8458-96773472db57",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c02db82e-b1fc-41b1-8bcc-a342f8d23f90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d466419d-2ae5-4533-a1ce-a3a9a1dcad1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8233932-1735-4df5-812e-40fb994911b7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "283ec8e0-e129-41b5-b395-cefaa910948c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ab400229-e8f9-42d8-84c8-b33a5e28227a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b13e838-17a1-4850-b0b5-914ee2480305",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "25f68b48-140c-4674-a330-c6b307981e41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb507eb-5deb-4c0e-8bee-2cb6521b98c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d621c05-71ba-4eaa-9da7-a80239d029e4"
            }
          }
        ]
      },
      {
        "id": "4682f33e-cbae-4e88-8266-449ce5b44756",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "61185346-7e2f-43a5-962a-4da81880be3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4c5b60a-5a8a-4dae-89e0-091adbbdced8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9af43ae-b243-4e4b-bbb3-0d0fe39079b3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbd2d06-8204-4894-b123-52b6baf395ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ab23b2-7e3c-4590-9ec9-e3b4b0f384f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da1657e-72ca-44f2-91d1-853c44e39e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35c57b39-9cb2-45f7-9d02-fd6e7393a671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77166522-6fcb-4e7e-800d-8342d887fa6c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02974adc-5568-491c-a637-d6e339b0f2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770cac6b-e573-4025-b74f-6f34d453e2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5b272b-c4c8-4881-8066-de355f60e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c20ceef-689c-4a58-9678-bc53a24e0bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafa43f5-1159-46c5-8c4b-49bfa9166ca4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7abadc6-b6b1-4fcc-9597-9da3306e98c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1f1c6b-12fd-43c9-af41-61f7c2524856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f064b5-b395-4093-b863-f027ec10161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72d5061f-6c24-4efb-84e0-21c871e31a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7e960d-1dfb-4a7d-8417-65dfacd0ba48",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fae8e-51d6-4bf5-a4db-d2b841cc38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcedeab9-28da-4158-99b3-aca92e8d7698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375f6e6f-fcd3-408d-b90f-3560ceb6530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4b44430-6816-40d1-ad9e-a32fa82f5ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0ffe6f-c2db-4ad4-a895-75f36898d19a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b069cf0e-83bd-454b-a876-26b9f5f8bb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde624ca-7f03-4bbf-bef4-7f3a522fa31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b4f0f9-eba8-4d59-8af3-547b0ad4b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87d9c8e4-e312-4fa4-ae34-b02ed5a380a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975a913-279e-45a0-a8db-36b2b582260e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6e7426-78f3-45d3-ab76-210e8d004776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7068f2-222a-40d4-939a-95418d535fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183ae7ec-7059-4c57-81e1-d922170a23b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e093bed-8905-4d3d-ad7d-5c4490b13097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfb6c9b-0ab2-49e3-9b83-f9c1860ebb0f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0853b0da-6e32-418e-8db3-da4aa071b10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac1fae0-552b-4e0b-a725-97d65e1612c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a08e0c7-d716-4848-ab10-7b2a4c1e362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3260820-1089-49ac-83f1-888739249d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0cfca7-a9c3-4c3a-b0b0-ae0c6753068c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cead223-7a3d-47ef-bb34-a9201907d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d12f95-b39c-4ced-96e5-d46afdb9c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7c13d6-e1e3-4414-8e52-faa0e4a799b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4988217f-c0b2-4106-b14d-6e54b9563dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe91145f-5922-4791-be6d-83158497657a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeae7ae-7b10-450c-ade7-e59d64f84247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be4c1d0-630a-4083-8ab3-b18e1adc5deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269980c2-255e-4d82-bf8c-554d211f9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf4cbbf2-fc1f-4e13-a84a-5362fc7b702d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c241783-0e03-41e3-8dde-11a287daa15b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253b3cfe-6342-4fb8-8a9f-a699a389cd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6e3152-61b3-4172-9164-6a44814d7ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af9273-8387-405a-a308-9fbc5f69fa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c1cdea7-78b6-40a8-a9a5-1291428c6b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb20bcdc-628b-41b4-bd64-559485d610ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d071757d-d70b-4ad1-8d15-374a042f53fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45d3fea-05d7-4a88-affa-ff3fa72823aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74981d0-6624-4655-898b-372526d06280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bfbe45-4316-4691-ba53-7f610a1e49b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b37462d-eb8c-4ddb-afa9-9bb617991de2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef36b00-fa75-4369-a162-9b1ffffc5697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08651dc-9312-4aab-9d52-84f17988b016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73833f9-5494-4f4d-a6eb-8ccee73f6129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a5fb5b-c98b-4e55-ba03-f1d1c8187cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72cbf08-bcc8-4f21-91ad-170e239e96b8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94e15cc-876d-468a-a336-8bdaa94d2058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355d8446-ad01-4416-96eb-ed6ab986fc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36122c74-fc67-4d99-a7ab-75af3f7e8678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d3fdddb-ea69-4177-a37b-9e2ca032dd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e8b50c-8809-445e-b6a7-503c6e830ec8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871c1a68-d1b8-4677-8604-240941b9166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1597f4-96ee-428f-96dc-0b1c3eab6903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285d9f62-bb4d-468f-a833-1f651a4e3120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d95427-73bd-4270-9332-b6f80ab88a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a117837-b4d8-4bd5-bcec-f6c2345d1061",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8404cd59-52ac-4f6c-b158-568c64152057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d64545e-ac22-4edc-b19b-5b332205784b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124e9af0-e07c-416c-a091-248484f3aa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "659eef99-adb7-46ef-9e58-768b81c72432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81574ece-2e4e-464d-ae53-e52c89e962c7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9afb0b-6152-4296-8b7c-a242a2fa4c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65f049f-1436-4835-a5fe-8d84e00cd25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c6a497-2fca-4f1c-956b-b877fe199248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2d90efa-943a-44bc-8a1d-9d0ad7031061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c30234a-8d7e-4f5c-be1d-a41c62d759a9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77ca25-e844-41b5-9b85-a18aef2543be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d19049-cbc3-4ba6-8e25-fb7714335250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb69144-3083-4b2e-b4ee-898d1b712629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f98f4df-d904-417a-bf77-c52a02bd2439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e1c509-873f-413b-af84-a5f1a47d3ad2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae558fe-a4c6-4f12-93e9-1a761bd20fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b008690-9b61-4b29-89f0-8a7e0dfd243e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34531c82-44bc-462f-9b50-cc62ce3cb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddeac85-ef5a-44ea-b317-a6479a52b683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef671f44-3fed-4649-98f9-f8e4c5b35cae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0252cc13-2636-471a-8874-e19bc6a319d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71a77c3-d718-4565-9cc4-b9a93b4f597d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395d1513-3f62-42cd-9f00-06dcbbe82750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae871e1-9ac0-475d-a5b5-575aada92ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c57bed-0366-4a9f-bd5a-0e9668239a08",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b7353f-3ba9-4a08-b577-04bf83d2b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c44f31-1093-450c-be04-0526fdd46f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d406e3c4-3481-48b6-83d1-c94f0455ef81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9e3c00-dc4b-4d83-8e08-7818250988b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b39d2-f22f-4b47-a50a-2134fae7aece",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956766a-6059-4119-8f01-8ce928d30d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7cc0f0-19a4-472b-b089-bf230430cc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020b56a5-4217-408c-a54b-2652f4c64b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "723036f0-3263-471d-a042-457c06675341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07f7a41-6b0b-4a32-9096-589a96ee0285",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eed476-da0a-469c-a9a1-50859f4b6cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5f31fe-5f6d-4450-bc71-81ff72451829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15acee8e-9636-4e97-bf16-3f66a27d97f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1971cd0-f536-4a5f-a8cf-cdb3dc39350b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7538bba-b3c7-49e5-900a-e78282f35969",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a700edc2-321d-4871-bf9a-b6cac2648bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6038eb-2685-426f-95bb-56cf0ff464d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc32971-4cfe-4658-9bd3-f0b5f5ce26e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "307ef0dc-b473-47f6-8632-2676c9df3982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980d1e1-f4e8-48de-8b16-6334105a7d9e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6638e202-5485-4a63-a1e8-e0d510f9ca86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f001e7-bb14-4836-a471-0f62ec09d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a9ab09-60c9-44e7-a3ed-610820da4e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0caa266-c3ee-48ea-8e7b-a98c58e1e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470e4196-9b0e-4dea-91e1-f47f78affe82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e24ed8-7c95-4475-a984-f4029c503a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13465c9a-8f24-4619-8a5e-b5e4a4531479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bf61ca-409b-4fc4-a201-91b5853380da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "730a15d3-c882-44ff-be8a-ecd6c5753135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3002719b-2a9b-4419-a5aa-e1eb5da6c720",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b500ab-e5b2-4fc9-9d46-5cea1c00ace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b44c7c6-9626-4a5f-9b87-01c5395ba068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08374e86-fe93-4cc2-b769-faf01d856253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89914cc9-fc16-406b-8713-e5ba71621965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14696df6-d69a-4421-8b24-7d44282de71e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa68e96-8b30-4874-9c58-9d56e0f10337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d33e72-90cd-491e-87aa-ee52e0ae6191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454fbbca-a0e4-4dc8-b204-ea591b4e2bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51789ffb-0055-4bfc-8036-c06316d68135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0830e02-8df8-4a9e-94ef-69d88e38425e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1a1075-fa85-4215-9e09-31c6e5e0afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8bdfcb-a27f-4a32-8328-1c5f65744163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1810325-d9a6-4e0d-b31e-eab68b73c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bceb076-a7c4-4811-a2c0-1dab8217203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0204f9f6-1116-4d36-b44b-0ca1d6e51187",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afcff07-69ec-4c56-ab10-a4678b9a9005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2313ac-9d11-4b7b-bbcb-f83dd299b93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c35feb5-bc8f-481e-8745-6a31511c5713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9aac5f0-4e56-4abe-90cc-62222aacffc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8765ea-0974-4c61-b30b-466ee26d0d55",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a400278-64dd-4ba0-924f-27b859178ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d1d97d-c059-47bb-a4ee-99953a40ec10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16776a8b-c063-4826-bdd4-37e8ee2f7c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "224a3b67-c055-4126-9710-7c3d24473856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1204406d-653b-4793-bfc7-1f8972fc5fb3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b053e57a-12c3-4054-a9cc-a43097a01e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0e299d-f32c-43bb-b33c-223ab7d692d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1c9bfb-73bd-4782-9d0e-8f05f66b7deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "720bfa07-1e57-4528-a0d5-d7e831a0725c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19931ca9-b448-479d-8955-f98f5b8373dd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c6772-bef6-44fa-b05e-cbb6968623bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9d779d-01c7-475b-8a74-c4d4da3a72a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd255b46-c7bd-4087-b968-0acd506564c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80887c8f-da0c-4385-a4bf-b324f8565a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c3a6fd-0116-4f5e-afe7-ef6211eae340",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c5ab5c-941e-4682-b1c9-5dc7a328df96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77ea53a-2a5c-4cd9-a7ea-eeb783885b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c752091-c98a-4712-95e6-518ab34be804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b1f9cf-95a9-4d6d-973e-4500dea5ca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658675a-5db8-4977-8d11-86549217cce5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a2649-9512-4b10-8dde-21e90f3653f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8794c4a-7e96-4a61-975f-f54a4504510d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc2d1df-d9c0-440b-8e71-2bbe9a55fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e706eb3-e1f6-4541-a801-3e5a5f8fd86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c42ec8-5523-4c8d-ad80-330cad8693b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05da21-c04d-4d88-bae2-4829ba2bbdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c5d000-75b9-46ce-a58e-b77e24f98ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081e1f93-dc59-4987-a5b8-844192b79b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e2852828-99e6-4d30-9e5b-b4556e496497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76412ff5-4c87-4604-a3f9-8e39d237737e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df7eeec-fadf-495c-82dd-f7f650a85de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c72c76c-4cfa-4a36-bedf-dbd838cf3f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab25df9-4b6a-4745-89bf-9264c606d31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49304f48-7e52-4ff5-807d-fa67ae2db2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95692eea-bad5-42de-b72c-a8733f371310",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a76c44-4ebe-4ad7-8071-c85b2203a9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d93b62a-e311-4c7f-866a-5eb216ba6c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9084f-34f4-4248-b183-280edad20aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bac6602a-9a25-4bb7-afbb-ab3b15b11ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9641be47-e397-4624-8451-51e174410ce7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a1fba3-c901-4c42-b4f8-b9de2d669df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2130ad28-98df-4886-9255-e1158267d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0785e-e645-4f39-aa48-259dc1c02822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "493cf144-1dcf-4605-a6cd-39125e15e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5353b4af-c6bf-4dc4-86b5-d3070558a273",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0385c1d-b36a-4955-9cc0-2c60133f2bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8635a092-ab00-4bc3-a30a-14f909dc2573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9011a-05db-4bb3-a524-0c15df1c2b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d21733b-2a2c-4e60-8b34-69708527cd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68920cf8-5c1e-44bb-8673-d0bc9cf8d305",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366a4838-d6dd-438b-a8b3-899ba0ceef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da510635-739f-484f-a808-62eff7b8ff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a47a1-4f31-477d-ba52-cebbb8665ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "736225d0-ceee-46be-86df-e3c5c86306e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed7c733-7b49-4e49-b876-23b69d22b6d2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ba3b4-7585-418b-acf6-1a4c7ca288dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3bf40e-a19e-45fe-a067-63875c51d78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7a8884-325f-43d7-897c-40edbb646340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "089c2bc9-2900-4a56-b1da-4d33cdab1e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35c3336-060d-4374-9672-a931b85d75d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11983a9d-393c-4bc6-ba8d-4578bf1db1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78aa5e1f-865f-40eb-baed-f0b082e515d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6837031-327b-4b8e-88c8-3558841fed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "23b90cdd-0192-4156-871f-309dbbf7944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d49c015-6450-4954-a724-96b0daf33270",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b0ef0-6064-4ccb-a8cb-d2bdfc4a8932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91466e0-22bd-4018-993c-c6712691b15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f286ac-382e-4249-b5f2-4336e92111ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1aea22-6338-458c-8acd-14a8a4b71192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0830d473-e291-4dd9-bd79-0a62c6340375",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be142ea4-9f47-4d3a-8ce0-f7214f85fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9aefab-7045-4ffe-8e05-56caefda7840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a22223-2983-4986-b3d1-6fdd8a6e6d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6273af37-b919-4ca3-b07d-2f991d9a2767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3931e89d-9d69-4305-8f0f-19e542a1c713",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75396127-2a98-43f1-a48b-3be3fa49c024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2275fef5-af72-489f-98fa-04e9b1cf130c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41cf7c4-07c0-46e7-b06b-315820b2d741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8b004c-7399-4928-b136-ec273f926912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc658a43-6469-4b8e-b73f-18e146e93a7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca39e1d-d757-432a-9383-617c20ea31ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259b370-3bad-4841-b3d0-807c94833922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f8e798-8d47-4b8c-801b-f907a2af8b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1009bce1-fe98-49e9-980e-5ae5e6070cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f183b3e-08da-4641-a247-381d16184fa8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fad88d-379c-48e5-a373-09aac746d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7865ea25-c60a-4a02-8f7a-eeec270cc0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05a4534-020b-4e1e-8d53-4dda1b3495b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "971e7706-1066-4b61-9f77-d5cb2360d7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dee5ff-9407-486b-ab44-f1f2d0bafda3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14ccfe-78df-4c5d-93a8-c45102ff7bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91b6550-166d-46d8-b9d4-648af9d00e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda4d27d-f9fd-4d3a-b361-67237e64f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a66bb0e-3932-4882-8e12-9463f4951df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0425f747-90f8-4656-a0e6-8b2ec281652c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d4cab8-d0e6-4f3a-8c04-c2aaa6d7e95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdc8b18-b7f7-4f55-a620-4d58298db6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b618329-224f-4a6d-b6e7-9835614c4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80bba435-7b60-48fd-a323-4465b7e0aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9848dbb7-8273-4288-8456-5a0dcd3517f2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3718531-deeb-4fd9-b4eb-65cb498fd9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a43e7c-5bfd-49f8-9ebc-45eb1fb641ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cbc88-6a1b-4cd9-b668-2645b5665e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9d4342-c50c-4e9f-b751-a3a3a8c2fb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de06f0d3-36dd-4864-9e92-d5aa267aa3a5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a46627-59a0-4d7e-9c51-9675f5771347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2374642-a351-44c6-801c-1ae320345459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6611e08c-ca9b-4208-bb06-bd824af1a235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e05402d-3013-44db-a1b3-e4d0a3ffe1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82667e58-90f3-43d4-9d7a-bc1f8184cc9c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2cb3bb-d709-4325-8b54-b104449e26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3529ac8-f642-4e17-ac00-3ab9b4715b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33187d0c-96c2-4c46-8afa-cc8ce244a12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2371b891-4b33-43ea-81c3-5fa9b0096a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef66680f-2705-4ad5-a30a-e5169b86e075",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc906ce-77e4-4de8-a9ae-8323786e4fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8af4059-9552-4db4-9ffe-d90d97c56c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caccd71-97c0-41be-b5a9-31f8a543fa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c86d128-9eef-4c9f-aaa2-ae9888a6320b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c8b225-d158-4be9-bd31-b0dc6aec8eff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c0c0b-ce45-46cb-ab96-65f15824fbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de78379-6a1d-4e16-aa8b-cbf59aa3fb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d713f57-806f-4e70-9586-1612d1dc0186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f47044c-16fe-4c6d-9852-a62f201b8667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f62b03b-22cf-4bc9-b7af-2d53f311eda9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d628eea6-9b6f-49dc-a10d-c82a0e93f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5949eada-9e79-4828-a23d-37441c62d04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b4e088-1037-40d5-bb88-f7558e40e908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75092483-1d4b-4edc-b7e4-034988efaa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb46dea-772d-4530-941a-c0c8bac4ba9c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b99271-abc8-4df3-9ba8-15623f35b53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54a198a-7d32-42b8-be56-fade8b6b705d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dff5845-9a80-4ddf-8d75-fe25c35d71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fec5631f-1797-46d7-affa-ed1dd7eb94ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b733c8f-b099-4ad8-b831-f4699ef1fa89",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8094a8-9291-42b2-a921-a9401665624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e7b95f-0cf5-4dcb-b68c-5cffe5f9b817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f647b2f-89a1-4e4b-8f0d-5647f922f06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d253498-c176-4a96-b3b1-ffbad33a56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21168fd7-ce45-4a24-b222-73e6bde7b217",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e617c7e1-28d5-461c-a476-f1f2ab422adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a872ffb9-7f1b-4611-b32f-5972e5500161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f84a73c-a6ba-4956-90d3-a7be0641b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabb8843-dd74-44fe-bdc2-90a9b4f48f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098c95ba-af9e-44b1-9a61-1a468f0f8ffd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789363d6-d8e3-417b-b8ad-c38e793a24f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5c421-0fd8-4816-be29-b61583ec2be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977f8da-4e03-4b85-8f10-e5e6f0c2b6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75a26d5-ed16-4d19-bb2d-c1dda95644de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d9c4ed-5471-4c55-94f3-9354232fb58f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65b44ef-db04-4e1e-b7e3-d1a1cb7116db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a2a5e-3f07-4f6e-8091-c5d4c4951070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2dc66a-874d-45c8-94bb-427d861795aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcd735f-8d67-4342-b9c6-5da38795e561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dc8f56-f41b-4b98-97b5-b40eda8b4c03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f27641-93c1-4c6a-9a4e-af3901553b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8242d05e-cb71-41cb-9d6d-14cf66615cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc30e96c-5d53-4c23-8eba-9969093917e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84576336-1c93-4b68-88be-e2f7a2843f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c482b0-6012-4495-8b1f-9453bc6f6198",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b405da1-c896-44cc-88b0-f79dca31e785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f40b968-8708-4202-8bd4-ec6d6f9751db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baf571a-10cd-41cd-af94-e397ae392a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3126ba-4889-40a0-a5b7-b38390c14fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a491c0e-4d0b-43e7-876b-4854016af87d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6284da-eb5b-4000-b2e8-c841e4cf4b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b444d5-95fc-4701-8975-2ab0176b78d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b10c3f-1cf3-477e-ac9a-867ddd0a917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8097452d-5259-4b62-88bf-dd9ed9b17f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e52bcb0-d32b-43c9-8916-b21d020de2dd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47ad392-a041-46b4-b39b-1169bd71b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a287ed-fe65-40a1-b69e-167d247a3f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cb9cd9-5a60-4ef4-ba98-dd696a6eef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff81b60c-1729-4228-88a6-1627cd23a0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa95d077-7fc9-4123-b9bc-f2fd0f91aa4c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e259d67-0745-4a1f-8cd3-0fdf3d9ea800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed07193-02b1-434c-822f-d11092f6fc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae87937-6bf1-49c1-bfe0-5df77446e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1bd972-a8ec-408e-ae18-be5cff8fb3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0577b2da-7851-4440-b31f-305dcd0e0ce0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d90ed5c-7093-43ba-8abb-5e6c450c17f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a24b95-6f44-416b-b34e-e9d02f8fd614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3a048c-f80b-4b0e-a50f-969239894d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "910d5cbe-8d66-4de4-ad78-4a9973a8aac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410a7cf-1f85-4cd0-a27f-422b003ea221",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d896e06b-9a2e-455a-a8f6-98baaa6a688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c53bad5-6226-4d89-b27f-14408ae67316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c791132c-9330-4c60-9e86-03791118fe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e59239-8e13-47a9-94db-e4cdd28d2599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a3d219-e6c3-409a-a771-d4df486048b7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b7a183-3d98-4aa7-a882-c476ad57e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e3868c-9d6e-4532-99b6-d9e65b6a5f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc01c5a-c6f7-445f-ac17-3aaa9e4b28a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecc588a-17f6-47e2-ae58-f15bee7924d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f90768-2e72-4d43-8558-e4ff362faf3b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2004bac3-51cd-4f4d-9d38-d11c9c70b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1529378a-1f32-43bd-b883-323fb78d103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d306ef-014d-43cc-971f-04e366fc0cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "474f229c-bc05-4525-864e-5964c727e5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c337473-8b74-49ee-a568-b110598daa96",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5930392-253a-451d-9f19-e95bd4da58b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d544de-73ad-40ed-a322-8d6cdef11818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39f3853-3349-47a8-be87-05d229ee450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cea8f4-a5af-4c36-85df-e65a94a2f68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636171a6-84b8-4378-8e36-81745fc09789",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bab03f-bac4-42db-be62-a535ead735d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbb363e-01d5-47e2-8044-29a19ea56d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1975b7-8428-4b23-94a6-32e9b6128548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef0a93c-9db3-4a61-957a-6bbb26c4d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc59e95-cc99-4924-a4c4-eeb426a2d575",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d2632-5d50-4518-b313-2a709874a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34393e2-ab45-4082-ab09-10f096a2ba9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56020272-a4f1-4d22-8632-1c02644ab294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff0ba3d-93c0-4591-ba3e-7a1e489fd337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c78d6cb-313f-492b-9343-b392c8b6b2a1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91d770b-f7f4-4da5-8b2e-e3f36ccba7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061935c9-9afc-43e6-bb14-725d4a623e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b473779f-adac-42c8-ba06-316e8c7bd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c270959-ced3-4e78-9be4-4759d0483842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b64b0-c8b6-43f5-b740-54a0b18f023b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeb7e37-2fcc-490c-a325-27a03e280fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf2fc76-6a8d-4489-8f25-ad3133b432b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1866a4e6-6208-4235-95fd-ecd824b740ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed05f1bd-3838-4253-bdc0-5a997efb7212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2381bbb1-7b1d-4eab-90f2-5dbd547d4ba2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bf0df1-e44c-4958-936f-e740901b772d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096e5be5-9aaf-44e8-9c34-5e9e0730ef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae26cf6c-6ec9-4936-bb41-919fc51f0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1297f70b-37a5-4464-8792-adce690d7ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08eddfc-a628-4a87-9c3b-7a3ecd883ba2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83476211-2d5f-4125-9622-8ff027788580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55d82ff-383a-4f86-8cf8-810ec8ba1781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c701ff-ae2c-4eff-a123-306fc173ad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba20d67-04a8-4bad-87c7-dd8a7d381057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a66763-0916-4ca8-ac7f-c35307f32f55",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e7c4fe-4c2c-4f87-a745-78068bd84b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce36c27-7dff-48b2-ba53-4806088d38ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174cc403-7675-435b-be32-158ed3dfb389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c5f375-3ab4-4748-9f62-5f9a2bec7e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c27339-17f4-4754-a04c-27919f5aa1c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931202f-2a22-4a6b-a043-07061ba9d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2aa791-b8a5-4884-a871-a7325d57d2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c343f5-7c23-4968-b5b5-2bd29ddbcfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe74faf-8d4c-4c71-a98a-b2be29b24966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45775951-0277-4fff-9ff5-2119b74f1e30",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4568d8e-e66a-421c-a6fe-d37615f50a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ff0d68-03af-43bb-bfa2-c5b21a8226fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fdc03d-2820-4bec-8b8e-c40bbd29cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "788a0241-2fcb-472f-b697-995e57db2d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24044cae-95a2-4497-a6d4-a20d6ef7bb42",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e4e9ae-4cfe-49f7-9077-1b4ba21bf693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc0a945-6f90-4692-aae6-084943c94f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0370d048-70ad-4bbb-b9cc-0f9e805d6d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4c7557-3ea3-488b-856b-1ba5f898eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40266ef-8de6-422e-ada4-123480297409",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f079e0bd-20ca-402b-83e7-ded8c802518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf25b4f1-6793-48c4-b83d-8fc65eb2eb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2005ad78-e807-43a6-941f-1012734a45dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a18163-8624-492d-8c3f-adab1ef21364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa7df2c-2269-410d-8492-dbd6681e455a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa5624-0f9f-42e1-8744-6828b09d4529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4442a2-7b8e-41dd-80bd-06590bc36126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbad8cc-aaa9-4ef3-b48b-6506eaa5faf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ecded6-13ae-4fec-b4ea-56b3fcce7664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56a34d1-0d4c-4ecc-8b8a-a84e7e039c3b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f724fe3b-11b2-4861-8721-40b0f84e03d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af945e11-4a74-412e-ab09-86e45802fbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30ba98-72b0-4ab5-95bc-2a34d83dafea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48754e0-25af-4780-8c5f-b7d358a19b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedf4008-8136-423e-a742-cd16f2cbe138",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeaf639-02d3-47ea-9588-743229f82e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0679c7dd-69e4-495b-9ebb-1cc97d4e5629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e9050e-c053-4760-bbbe-0fca291a8133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db43db8e-1ac1-49a3-b37a-d8897d8462e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f3b923-f1c8-49ac-8cb6-090a532636f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36adafe-b10b-4ddf-8043-252af0f97f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda48bd0-a5ed-4fbc-b944-779278a0334a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60357a0a-f156-448f-92ec-5343cba37e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a453f19-cf69-4721-ae10-61dd66414799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b0138c-d5ac-49c5-9c83-00138ded5040",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6db1d08-2635-46b3-bfe5-8553669fa67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7cc8bb-48e8-48f1-8d0f-ed4b15346f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047a9266-947a-47ab-9388-69d8a7af26be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d941e8-5bc2-4ff8-ac1e-686ff8f48ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764925b6-abaa-4d40-9da7-05f0a51257a6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780a7a2-b1f5-4127-b8e4-444a623410a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1116cc-e3ef-42eb-b3ff-c65e4152767a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3ee28e-b9d1-4ea5-9d70-4028379e2c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47309e75-f3ce-4d37-9d4d-c7013df3d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d31d41-f6d7-4ee7-9ccf-9c4f9bd2306b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3209148b-c9e2-467a-942f-e7a9ccc89715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3174f6d2-add6-45c6-a73f-1e22cc420fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbe25b5-58f0-4816-9cd0-0ca2a05b53fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d7bd47-b7a1-4eaa-9d63-a5f48c173048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba519554-a004-4544-8f27-c600c2c474e7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15fcc2a-f38c-467a-a8f7-12ef705aaedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65582ff8-5c90-44d8-b275-98e0db76ca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5db24bd-9569-43f1-85d3-aca511147372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb7ec8c-daef-476a-b580-fb971b44f8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406f2ab1-6f2c-409e-91d2-151840f1160b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01f7ac3-ad38-47d3-8f3f-3862a5c446a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48af3ed-68b8-4d92-824a-52156df6193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5419f114-0068-4337-be31-352f0f146bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f45e552-1ed1-4c12-8ba6-17fc7d290a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b1ace9-23f2-4ed4-bcfd-1848c12400ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c1efd-f520-454b-ad12-7cb6b510f54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a510e838-1656-4bd4-8ee4-e2403e0dc2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc6af6c-6dcd-463e-b968-ea7e9dd60728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93160a4b-6536-4c5a-9c13-a96136e6b471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eebe92-d457-49cb-9b1b-8b3dc34289fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0158bcb-a5c8-4c3c-8f8e-99be2717d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a9aa119-2bb6-47b8-8e17-c85784403844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1158eb-54f2-4473-a3df-5cd5afaa8128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "290f597a-24ef-42b0-acf0-f61da716bfd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4e542bd-d302-49f7-89a7-d335470be4ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "515be12c-6fee-461f-b2c6-3d552c035745",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06446e3-e3f0-441c-ba41-1a42cbfc408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8f1b0c6-5e8a-4c8b-baab-eb701c9747ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c6e673-a54f-4a64-a4bc-711300d88722",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "180a25e5-6a50-4535-988d-a9ec5c4b6ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a357b0-a888-402d-aaee-8eea47c3f90c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bd6fe8-bac8-45c3-9f3b-8638cccbfc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "476a3cd1-caa2-492b-8710-d3c86c28b49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e51ce5-4ba7-4966-89b4-180e9efff483",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b579c263-c33e-44fa-9908-d8890d56f6f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afb1073d-70d7-46b2-a8e5-e9d071690ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdd244a5-87b0-402e-874d-7d1c3a21e0d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db777e24-5f8b-438c-8721-a2af2604423e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a0f7ea8-72e9-40bf-ba08-f105f71b6304"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e59d410-6986-40bf-937d-40d19e61c69e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6241304a-1a42-4ab0-9809-7c5f44c3a4e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c920d66-1c90-40cb-8eac-94cada2b33a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f469606b-6bca-456c-b50f-dcbc9bdb256d"
                }
              }
            ]
          },
          {
            "id": "b37cdac5-ca03-49f1-84d9-25300e57d6da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23a7d152-7bb9-4af7-8e6b-850b83561790",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f1698bf-1a08-4bec-93cb-d464b5833237",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2125ca4-382f-4e9f-8389-9d1358afe5fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21bbfe42-5ddf-4486-a835-4f65dc402e91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24460a7d-e3b9-41b5-b367-ba3e72dcea20"
                    }
                  }
                ]
              },
              {
                "id": "4527eea1-7cbb-4e08-8201-764da09ecfb1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a44cded-e8a5-420f-9bf0-48585df7d504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b2c235a-0f2f-4cd8-b5f1-c57eb28f0f22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "727077db-4f3f-4882-9d12-109147d781e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e044119-fec5-42c3-91f0-99d1700e6e31"
                    }
                  }
                ]
              },
              {
                "id": "8cfe32c7-9928-4fc0-a2e0-7b961a315d21",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "432273bb-b929-4e88-88fb-249048897810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "732ec6d1-a7a9-4a80-a369-0cc511735957"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ed02513-0afd-4ffb-b1bc-364c808290a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4739f7e2-fa14-4482-9383-25343d190175"
                    }
                  }
                ]
              },
              {
                "id": "7dac87e3-a99c-4f40-97c0-9387fcef9639",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e7db01f-1ac3-4cac-ba43-d0cb0bba928b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a4619dd-851a-4e3e-8ead-c8c03a4bad02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4bf8d3f-6e82-4d26-b3ad-267503426853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "533bad56-98c8-4aa8-80cf-6fb3b260e472"
                    }
                  }
                ]
              },
              {
                "id": "b016a89a-bb83-4ba5-8607-0139361a135f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3940b42e-8579-4663-8b02-2068c81c4233",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be54c88d-e3e8-4e8b-ab6a-e4f3257fe03f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7a6e94a-856b-41f2-b9df-67b09d408767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4755e91e-0be1-40c9-9f64-79d4097aaeae"
                    }
                  }
                ]
              },
              {
                "id": "69c418ab-4389-4e76-9762-ddb44b9fea8f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46a4d76c-7492-4866-a2f6-7fea121e1faa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc7da1d0-fe40-43a7-9c37-0b1ee8bada13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7e43f4-3a07-4fa1-8921-93dc4ae979f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b61552fc-170c-4b22-a240-d30190cc95be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3ceb83f-355d-4527-aed8-06055ab6b122",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "291783c5-f1b1-4383-8891-6c686728ed52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffc40ee6-5feb-42c8-94ed-b720cc846d2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6465efbc-6047-4e31-9c42-c5d1084575d8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f73e9d5-55f8-42d4-82ae-681fa8e4ab12",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4490021-64cb-4c27-9535-08908716b4c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef50774e-f0bd-46ae-9f55-38a0e36553f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201f658d-4573-44db-84fc-678456a16771"
            }
          }
        ]
      },
      {
        "id": "4430bcd8-784a-4230-a40b-d28fdded111f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1d397a75-63ea-4247-917f-be5ceabcab24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9f39cde-3599-478d-b5ba-b0c0f99ad615",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6691437c-4a39-4c55-a9ea-3a2bca6c3085",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f5fea9-6f83-431c-b038-2a281f198491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c8ac73-0ce0-4482-9bcb-23f2c65701b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4946c18-6c8c-40cb-a237-8d4b678dacc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1526c681-36fc-4d5c-944c-5cfb7bcb3fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227d7987-f20f-4829-accd-7768cfee39bb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293a3f54-ce92-4f2e-9158-a59a03aefb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b49732-40c5-4e6f-836d-617135c1cc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3513fa89-4816-4c56-9891-d2002d6c4ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3882505c-6df2-4621-bee8-c2adc84e1750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3700da4f-da33-4324-8a3f-160ea2d7233b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b444c-3ee6-401b-ac31-231cde825eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beea9f15-62f4-47cb-b1fb-7dacac7b6ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a739bc5-366f-49d8-80c9-853cb6bebae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "049278a8-a969-4444-9c87-a7b7819f3b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c4944-7f32-4382-943c-b68eca570b7d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227dfbd3-bd84-4287-9a35-f7eee4e74d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5808316-e1fc-4f6e-a02e-2827d0c23ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15191b29-4e1a-44b3-aae9-64ad25488e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c74845-4810-4c56-83d8-cedefe101ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65eea6-62ef-487c-a1ba-55be8552b701",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ff6b6-13d8-4228-8dd2-59fc20bafded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445f1a11-7766-4bfa-a719-2b464d2afe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbd4f51-36fd-4ba7-b47e-4f3adb7314f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7fa9bf-c9ac-41e7-b359-f3831211b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c33310-852a-47bf-a99a-dc01e6b8c7e5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6df04c-a2e8-47b6-a4b9-9b6bb4858383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd90be-e895-42b5-9772-cac1d253d889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc141e3-728e-455e-8847-0f627a11ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2915dd99-1dea-4ae2-9d5c-85a47b37b8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589efee9-4127-47ae-b7eb-94c10103d4da",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56fa139-64a2-421b-8e3f-852ca61a63bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d225f0f-7727-467d-9946-7a87579b71ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5ae563-9dba-4a94-8de2-1d8ef70336e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "35bb4c07-0cd9-4dbf-a277-64633b0d507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd9717f-e5f1-44f9-add1-13f225d0fc9a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9223b6fb-2c70-4613-a1ed-cfeb421e53a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8398558-a3af-4f7a-a06e-4f403e05d9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913fa7e8-b9b0-406a-aebe-b17510427ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce263574-f601-4d0b-8254-9c708f708252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42795428-836f-413f-b2e0-507de2db7445",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75536dbf-c6c4-419a-98a8-4ceb21fc66e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74336525-dfd4-42b3-9281-6680a1bb6835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2666e7-b239-4d31-9d61-55de515a33c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53b0a38-12b4-473b-8884-ba772891d491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6bc14-5aff-4e9e-975a-692317ce3a2d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829307a8-e732-4522-bbf6-a04e272a27bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb64188-6ee4-473f-8ddf-72dfcbae8ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1907bde-7c63-4316-8cae-35e5a3f4b4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0664b0a0-8864-4620-a0dc-7d931c193620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65ab96a-8abb-4353-a519-a1498b5d12ca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76f2b6c-1073-4d5a-8625-008fbfe39071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee82c002-d4e7-4086-b71b-39053b479ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5655e568-547f-468c-a8ca-8437f462a040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee1ca31-c945-4e32-bcce-38196638ed33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e4d929-7618-4b94-9c72-ee5c03a43f47",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aeaeae-609f-46c3-aebd-42ef8f939eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcc0c56-7a0d-46b8-8fd2-9e6b52cff8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8474ac-6b88-4d97-ba3b-05cae1d7ccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ed74b1-1fa2-43b7-97cb-4f1b231c5849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dfa077-967f-45f7-b979-a5468744ee69",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3fedd6-c36f-49f0-878f-e12530390749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b321789-2f0e-4d9a-9ef9-46d8f9e85591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e0c76-9136-4aac-8d49-e9c43c4261f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f0a7d0-265b-44dd-95ff-535e1fc74936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d51ab2a-741a-4134-b46a-7d85ddc0bd1e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9f72ac-70d9-4597-80e9-3be2e15243e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579a3558-a8d4-4f0a-a4db-40b44e11b413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a995b5bd-3959-4ad2-b8bf-41151dd0c567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2446e7ac-be12-4416-9e57-652d580f48eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca0f83c-6c7f-4af1-8a4b-884846f31032",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee34fe-9f9e-4488-a23b-5b7008eac994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ad9227-eff6-4333-86e7-c68dfb601d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145df29-0c5e-4f9b-8ea6-d7cd9cdcbbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f66b3fb-0147-45fe-9f78-80f524274647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a73bd5-cf32-431d-8e6d-b0fd6be7e79a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0abee2-6f09-4000-bce5-d7bbe0192718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de03c97e-37c4-4293-b008-317ac9ba846d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ebe596-41e0-4df6-92b0-6e612ed506d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4808ef6-7813-4ff7-8e7c-f5324a82a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c01892-1304-4be7-8fb7-dcc8465bcd2a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7195fe9-8212-42b6-a712-a9cf0d3b11f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bf3a58-0b33-41d4-9c68-ba1849c27197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119fc8c6-0940-4b01-90de-c258fe3af307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e41a33c-db76-4cd3-baf3-fa1c1ce72a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2be347-f650-49d5-8f6b-944d38807f0f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bd4cce-ddd5-49d3-a3fd-5effc0f6139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719f7f35-d3cd-4c1e-b9b2-373c5bd8e5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb4417e-e11e-492f-acc0-5efb7b209a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c3f2f4-715c-447d-bc54-9bb7e1b89040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223316a0-4dca-4952-9f9f-34ded679e20a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f3b254-0925-4623-8525-2b31215adc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7d3f40-0323-4c21-bee9-7db0187d0af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9439080d-936c-42f3-99fc-6a9b22659492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc795af-f72c-43f7-9762-9d150ffed8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c67fe-73e1-4b76-8de6-46b22de1b0e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfcbd7f-7c04-4b54-b679-5fd316eab633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5175fe-b329-4ad5-8a46-6105c62feffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1872f0c8-76d6-403c-8c7f-cc5fcfdcb570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5be9aa7-bd24-4b9f-8ca0-c3c09938825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8770e2-8232-4b3d-b6c6-6f3414f566e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06431404-e0da-4d62-b170-621d0662434e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4b615e-eca2-4321-95cb-d831cecaa8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10684d81-abf2-4503-8df4-29cc120ffa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13119db4-225c-47ec-ac04-0f44fdb3d5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895ef7cf-0a0a-4afe-88d2-77cca9b22ccf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf35c0-664b-4a31-a888-4b6b4da44ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbe2398-20d3-4987-b365-c43952ed41f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5f123-fbc9-4c57-a236-0dc9dd814e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a1074-832f-4d58-a83f-4ee88485ac4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a667711-6e78-46db-a8c0-b8106730ac58",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56a7f8d-db86-4009-9646-45adec3cd017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb4cb63-3d02-4de2-8053-059b17ab655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dd71b6-d5d1-47c7-a2ff-6ed96389406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d0930c-7dac-4ee3-b2c1-2265cac7acfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb7ee57-f884-4924-b7ff-86bf0e7c06de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5384deec-6d1b-4c32-8809-4140447df2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05565ba2-c578-4b1b-bd8c-26b05dee426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bbb7b7-1c44-4de7-bf95-165755ddf63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff1b387-5ebb-4665-bf78-e4591894720a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e805af-5a4f-46cb-a344-e22c1ec38048",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f33b8-bc53-4119-9ec3-0d40c5bac4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2fac8b-c83b-4106-898e-995b96a8f129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bff035-f395-4bf6-a8fa-d4f5c5f6e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620c05a9-3ca5-4ac5-a87e-e29f1ea29691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e6183c-997a-4870-94ac-b341d83d5ae3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c13339-49bb-4071-b94b-4acedf28bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef3de2f-57e1-40b3-8725-2e0782fbb9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16910e5f-7e02-486d-8334-23948b08bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37cbbca-fe81-41d3-ae43-df5e6a9f0387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa057840-cc38-4aae-89c9-44b93c105e97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ee18b6-41ba-43b9-97dc-9f180b0ed3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d12e593-ba18-4e42-b614-bc7758a44fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4802fd4-d21a-4edf-b3dd-1d2c34629d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d688d265-a366-4508-9c7c-5122ba6be6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46847f32-8e11-46d4-9105-164edbad1aaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8e4587-8d00-48e3-8ecf-96580ce852e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5f78a7-3c93-48ad-8f00-cd105b641494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3d8543-5ed3-4c42-a012-ccbdd9d8bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1f3e3d-908f-4e1a-b729-629d82eb1aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf02f8ab-30f1-4555-9080-57019d1de19b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c870c0-fc5e-4190-bc77-2bd68971bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b5f33e-c9d3-4a68-a8d6-ebcb27ba93bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01628c0-698d-460a-b396-4366fedef70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eacd1016-7ee8-43e3-a4d3-384ee784eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be80230-2439-40d0-ba86-15c3f9a03e90",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1387bc8-c20d-45c3-8ada-02e491442d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5920fabc-a72b-4d46-afc7-2aef51b83622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d3305-7b24-4b9d-a1c8-dcd960eeaf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e5ad9e-aa18-4e42-a5d3-d284211468e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e95baaa-139c-4689-aed0-1d6f7ec61ef8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c69ae1-021d-4dac-8258-156c2aa1b14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fd3d11-6c87-4811-87ca-582404a251b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8101f3d1-0a16-4680-85e8-e7255d943d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a49c7ad-c57a-4284-8390-96741200f394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05a9aea-8431-4462-b04e-6cb6d895aba0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127d8f2a-8e95-4fd6-8760-ff24e16394cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efdddd7-6a31-4846-978a-d44058efb22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323bed67-83e5-4aeb-a855-e08671f25a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4d4049-cb88-42bc-8ac7-0ee1d4cd955a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b79b630d-a47f-4dea-9c7e-696782ea2933",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7981a159-47b3-4fed-9724-7c919c3feb9e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa9f72d-1d20-4115-b1d5-99d51a6510cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5d6380-5705-4f5d-890a-1d919ab8d891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d0c155-fbf1-43dc-9cc8-40ebae9556ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b7055c4-cf37-426f-a2a8-8c09dcd2c123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3010d2cd-fdde-4a76-b272-bb9304594631",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e644181-febd-4d76-817a-ceedeaab7078",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bd47d2b0-907e-4efc-9047-434bde969d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe9b96-8a67-4809-aa78-ca336e23f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06c0ad6-5b92-48d5-a156-c494d8781e89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc29cce1-4bb9-47a5-b91d-72aa7969a741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2926b00d-3894-40e2-b9fc-eb4e25aec0c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1023ca1a-735d-438e-8330-c7564681ed28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a73c8499-855d-48ed-af05-24a930294a76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8ef5cad-3a03-403f-8984-cf486309d676",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4ce7aa6-4050-4c1c-aa6b-5b6eefa679bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeaa6082-10dc-4cf4-a5a3-c123f4297e72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac52fc2c-9fb9-465b-b4d7-3e072bb914c8"
            }
          }
        ]
      },
      {
        "id": "87b7232a-e6e5-4d7e-8c53-d610fd62871e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "262a3037-1686-432c-b92a-91908134b4bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03bd0654-6668-4d5e-aa0e-c7097d7735a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae543ce8-d3cb-497f-9c91-fd6d0cbed4b5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd23cac-6fd7-4229-8944-001e1296039a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b091f2b-c749-4c5f-84d8-92954e4e3784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b46038-fd49-4c84-8d50-8a68e06ee402",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c8043a-1615-47f7-8b74-b454e648ea34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bd28e1-43ff-41ae-9250-88e90148431e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df9f889-5ea9-4068-bd15-49c73f2d95c2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b0f37e-d89f-4dcd-a70e-214ca8348899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f568a292-7374-48e5-a384-6da2dbe98d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b647602-081f-46d6-bb9a-5e6caa4c9082",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc6a448-160c-4ff9-b1a7-fa18c05ad974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9715c96a-92c8-457e-a334-9be4ec76fcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f91c84-0071-41c1-8f5f-7329bb88e1cf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480f52a0-2aa4-447d-bd3a-bf13444072c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfd2d07-de4d-4709-8a69-a00d61dcdff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dc0219-db09-46bc-87c0-96d49ceb27c5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbf015c-889a-440d-9afb-e89e45f48da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68095a-b1e4-4378-8eeb-39344e75ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04649fbf-4e25-45e1-a437-d34750998703",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae93e99b-0888-40b0-b147-3e24089258bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e81f0df-1a2b-4625-b9d3-a15c01ca3d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de182a1f-cd62-4fd4-8cb3-8cd9f84fb5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7877394e-1365-44fb-9916-e31ca7721466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc3c3e-cd46-4e1f-a813-0586a2c76d35",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec2990-9ec7-4e67-b79c-2242289920e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab60993-74f6-49b6-87f8-b55d6ca4ccb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e0c12e-dc94-4bd0-b586-2b10a232d0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1709c86c-f95c-4fe5-ae2a-536efb77a00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cb3291-4f20-4736-b548-53e402f5b320",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634b585-5acc-40b2-b863-2ea5906ebe2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afa79d6-586a-4e1a-b34b-8d8217cd11dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16929e96-a639-41a0-b7a0-f1e98adc4940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f2a67f-1bbc-4f59-a7f1-c79d8dc14f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64ff307-7d55-4546-abfb-60fb5aa57d2f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ceac041-0f43-48d1-8669-5943e555c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f904ba-6014-4f17-a3a9-7c3cd16e7300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c03525-95ca-4571-9ef1-5a65b8be9ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9db7bb-abfa-44c9-bc28-3f640a5633af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b42d794-09c4-49f9-9450-d10fa48795d0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae8655-f37b-47b0-81dd-28773464f89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bd677f-582f-4130-8cee-740c01e9a775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89932f2-9355-491f-b0b6-98f93b633f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00247efb-e730-4a53-b224-7dc058ac4e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b467606e-32ce-44e0-ab60-370ca5745cc4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e7fd1-18e0-40a4-a0f6-2dbfffa8310d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ac75a8-fc71-4e29-be41-cd2c43720871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa313ca2-dbcb-4d7c-9443-8676d0869ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dca5803-f1a9-4c35-b290-c4025368e05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a05dac-1700-48dd-bc3f-cbd4f67fa4f0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9dbe48-420c-4044-9252-81d276f34eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7c290e-0c80-4b55-ad2a-355c7931849c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61acba9e-5678-4151-9474-a6c1af347760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c10df4f-2c14-4443-bc41-3980536c416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f773c236-e71a-4098-9caa-2c951539c9a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd4f04a-5ea0-4130-9981-85ba522a91cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547ca083-acfc-42e9-ae4f-239c1a7f370d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ff1cac-962b-42e0-aaa7-17f626720caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dfdd0c-f9c3-45d6-afcf-281e4ff69fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79bb9e0-777f-4022-b9a3-55c957b7f68f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc338e09-a6d4-4a58-b03a-bd17d28bd617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a261bc-271b-4f3e-b688-b6d2acf19f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d7bda9-6eee-41bb-b6a9-3efd30d08d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e9389-fcb4-47fa-ad73-3a679b94d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9df22ec-117c-4ea8-bd5c-920a517d3ab4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea3f84-94a5-48e9-a1dc-208ebcabe56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14b8527-d9f0-4e9a-9330-a24f6e1dcecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb5e1ca-cea2-49e7-96c2-39e31f5cbda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6b9c0a-a8f5-487f-a2a5-72870201d5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f889562-90d4-4182-b47b-2b3a494accdb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b6ef5-e8eb-402d-9f9a-392f45eaa484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eede9946-1823-40df-817f-920de19956e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a492b0-9059-45d9-a0f5-fcb5874eb433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082d0d34-12f3-4c5f-8dd5-edc0b050846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01748b8-31fc-4a34-a8d4-2b993e62fe74",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89124108-f3a9-4eec-a679-5cb778f28c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347b7ef7-6a32-46ca-966a-ac75d32f69a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18503d79-7987-4457-ad2e-66bff110b114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5facbe4e-1938-40d5-b734-f8eac6fa155d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8aee5c-7e9a-48df-ae9b-16ee7ce0e5fa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9070ba4-099e-4678-a516-887facb2efdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b1fb61-65ce-4a6e-b85e-0e8dba133f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b799f29-0504-44f1-b7ff-52deb89a3caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09addded-6bfd-4506-a4a2-b2bf09e9357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74825e3a-3536-4a13-aec9-bd1e64b98b8c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cc0b3d-f789-4434-8e39-2a2249240259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c36108-3c4d-41c1-b034-aafb3b04f11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa324ca0-3ca8-4bc0-ba74-f002a5afaec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d83436-d572-484d-9eb2-ed5e7194c52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a80623-326c-48c5-8e95-a181ada9e617",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3998db-f2b1-4604-af53-db1f4e1536fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d3742b-f8af-49dc-b3a9-64857a50c450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7b62d3-ae79-461f-9b74-3ce9f7f2f51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b60d96e-6b5e-4d71-8acd-afd995ce5616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edef1426-1d7e-46a0-b2a1-1e4214bfee47",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d63f6-e6e7-45f2-98ed-cfe9425ac634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be8c94a-d2fc-463a-aa74-dbef210fb486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed32bb89-dbae-4287-ac2b-266495de73a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723398b4-091d-4631-81ed-308fc9c49c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a1099-14f5-42b0-a245-ba03e71c4981",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1de598d-2dcf-4cb1-aa02-a9b38aea23ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6841ca-2eb1-4f89-994f-d245f0e889a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610e8be0-3536-45aa-bced-b7c851c91574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac5321c-4b12-4288-a181-da698cb449ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f97dad0-2b86-4f02-bc59-0444c1b4e645",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ded065d-8b09-47bd-b248-96beb2354bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759c4188-bdef-4df6-8df6-f9ea522c5118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a40b554-3c45-4880-b4c6-9493257cbeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf02c802-8fb9-4c68-8294-155f48030263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bf36eb-0f6b-4a3c-8635-b90b482f6f10",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb1214d-3554-4660-b3fc-3e1f034b0593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7695204-6938-46ff-8ede-d83771f24a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43abd81c-e04a-4d2f-8136-d7c5d932f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca424e33-7b32-464c-88e7-596ecfeb228b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d2147-8110-49b9-b8c7-e848ff502bd6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012003f-466e-458c-981f-feae9618350e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f36468-b12c-49d4-aa84-fabf33b66e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e34c2d-6ba2-4bc5-ab5b-e77a186630ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39426510-b353-453f-a9b0-cc495efc7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aa3a7d-c4a6-4734-8309-1220b38819c6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a02d2c-fb3a-4c57-b037-455ebe933708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3fa253-99d9-4cab-bae4-c7f23f79a372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3221c-f7fc-412c-82d8-a3948958f13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3972a2-96b2-4810-9d4f-ec54109a40e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53959a61-35a9-460e-bcb9-acfdc2c78313",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab39af3-b1d0-4559-bdf5-2b3780640189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b2a223-36a5-499b-848a-72fd4e794bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3373e9-f4ac-4514-adfa-6f6f4ca6792f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944d2282-a79c-4395-9a54-91b0794cccc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9429c1d9-213f-4c7e-8049-8c092e90c57b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d984b96-23b9-43b5-943e-fd74908e94f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2abcde95-917d-49ee-ae2c-94de6f5a0419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4ffe89-9cf7-4ca1-a533-fd59e2717e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705c764d-201d-4a3d-a5ad-c1cb2462f5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559244b7-8cc5-4067-8df0-9dd66ce4dcb8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a83c6-ee9c-4948-a1db-cce5b7ff9d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94a43b2-fb9b-4b1e-ae31-fe121fe837eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201ec57a-c518-410a-994a-7d202e074df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a995fa9-d0e4-4140-9ccf-aed47847bbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91967b1c-e017-4660-b440-fb417d472e35",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c920040a-59fb-4fe7-892b-6eb0a83b2fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77159482-36e2-4d71-b141-15febede2fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179035a7-c094-48e2-8430-116fe827fc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ec189b-4783-4253-9095-14f27723af90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cc18e7-330d-4caf-bb11-b8802900a5eb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f19fb2-556e-40a4-a4d9-72f7c9bc1df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba19303-e81f-463d-86e2-f6cdcbe1a76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6068275e-0ac0-4696-8f20-0fe7404ecc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf72141-5ca9-4fc9-90c6-12cf38e2723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0a4886-a2b3-4eca-8607-d3d6170ca1e7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef18521b-ce67-487b-a7eb-bf7c99f57991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1f1774-75e6-42ab-bed9-f6e913706470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae0d77a-a74f-4fb5-b9aa-dfaf4759259b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2902c8c5-f4e8-4af2-b29a-d81c2ad5565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4e6b8-e6c0-41af-8056-610eec785db8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeb22a5-21f9-4500-a6ca-ccb7eed6caad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65956985-89d5-4a39-9f10-85298301afa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f526eb4b-c4a2-4d65-ad87-d1833ab3f348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ee09e0-677b-4ca6-9ada-2f2623c12f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34c47b1-3dfc-4fc7-9f8b-46af5a80390f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5502b47-949b-4fc6-8d3f-6e70bd1f8ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d70a158-7051-48af-9373-9bdd9ef43f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8704556a-6a2c-48c5-84f4-212b480663ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514e4b61-61c9-480f-a81a-eaba9abc9a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af73dc82-87dc-46eb-9d1c-d11f05a474d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb1e20-4347-42c3-9218-a6be544f3131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0955757-7994-41c7-b47b-77c0df427a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52094fd1-362b-42a9-abff-b07f666f881c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f541f3f-eafa-40b7-88af-6ecf236936e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0594a35-c78a-47e4-b0ff-84cee358a7f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc99dc18-c518-45bf-b86f-e45c37aef38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a964165-7ffc-42f4-bb11-5181eb123132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301a35d9-6564-4933-9566-27b2187c5670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fa3d86-bfe4-4f13-8f6b-8f0d6841523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9f3d3a-1716-4cd0-8c0e-9cabda9c8fd7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2dbbff-34b3-48b7-8721-2bb8fec2b035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ee29ca-ac73-482f-b5fa-38f3a3c66c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a05a961-4a9c-42df-9c41-44632d9c0035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901f40ce-d445-4c29-8f90-ecf7502e60ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1429c7-cd47-4940-a3f3-42a4aeda8176",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe239c6-d480-4e51-b219-73626f5a7726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f017e16-fe75-4640-ae18-6705e863fbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be1f912-ef03-4997-b732-f3b5e9b746a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4084dec8-e287-4e57-9b6d-8eb9b40b556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62351454-4bf7-4dd6-8bd6-23c6f6cabb35",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6742ba-b961-4d7d-ae0d-e7cee3eee78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e907c969-5969-4785-890c-cff8e3a3f4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce07c3ee-085e-4e11-b347-7c486fc162c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9271340-5413-41d0-b874-470f2df1b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc4eb45-653b-431a-9d8d-92fcdcc99c98",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2a143-f5c6-4257-bbb2-dbca5bf7cc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af53a980-4dcc-4df4-9416-8af7444d4fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ad1d4e-16ed-44cc-8c4d-992b2d9480f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7e77d4-3310-4952-8b83-44792733ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba98d7f9-6109-4faa-b221-010553e4b37b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2d8c97-c337-468b-b20d-3e241321c435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7b6a21-8713-42de-bff8-10d99839aefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0bda42-275d-4912-bd5a-f059656caf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becbc785-5c6e-4b75-8bd6-c592fc94e903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795e237a-81e8-45f7-b051-bff5e304dd9d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e574ac-bbb3-4df7-8241-30fc5b35dd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e74e9af-df68-4e07-88ec-a58a100d330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d093b133-0654-4d84-8b57-f0b2042de8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4369a1-f501-440a-864f-bd44f10eff4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c0967-9cdd-4906-b09a-51d4a85aae27",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b58c08-5553-41c5-a5b7-e172f161b316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4b9052-c5ff-4096-806a-d3313eebd6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df00cc7f-0654-402d-842e-622b756b3578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb77bdaf-e966-416a-8fe2-6c5f624c940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941dd4eb-2469-4855-a37d-1b90dac9cf88",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945e1ac-0445-45c5-ad17-d78e3b974950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2273f6-6996-42c6-aa5e-8166586c3da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824f0548-7360-4ebc-8971-cbf5b32aa597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff8387c-a17f-4a56-8c72-25339dfb01b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228596f8-fda2-473a-ba1f-ebb639fdfe9d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699880b0-005d-40b5-83b5-dbf8de2189f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676660d6-66ba-45be-9f6c-7e59437254d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6be1e-0640-45d8-9dba-c056d7a2333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bdc0a0-6b42-401b-aadd-7927bf7ced6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8b056a-8686-48a2-be95-31ce2dd4ebaa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e594a7d-76e5-424b-b8a9-8b6feb352217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00117f00-25bc-4d78-807e-3243ea648dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c3278-abe9-4af0-97b1-8e2ac2d4a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fb7f0f-9546-4ba3-a32d-2cdbf240bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2572e4e-0f55-4495-bf02-a494953dee84",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52143119-2519-4bbf-a4f5-79863cb24885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ab91f9-57c4-49a7-b913-4266e5da78ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d4ac66-d9ae-4d1a-b3b6-68e662ff4f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17137d37-19d9-4cd5-9faa-a3a98ba43df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aab769-4e9c-4e55-a55b-f9f9efbf73d2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22e9fef-d955-4664-9d1b-cce2480779e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a4082e-1501-4301-bf0b-90383bc21974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e6a2a2-da04-4e0c-9b38-e1cb88264b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beb9d76-3de3-438f-90b7-57c2806e53a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e062f1e-9a29-41dd-9f1a-b7c4e66794be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d9d0a-57b5-45b9-9087-8e56890cded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d400e5-1202-42b3-ae04-4c4b3cc64be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da05591-baf5-41fd-99b3-088c52a09019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9955c7b4-49f7-4b63-b191-1dc9f5e4301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6326e10-220e-44d5-aeda-9fae5aed03f1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108d1058-e985-4057-ae5d-74678909b13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8256dd2b-7f2f-401e-b3de-567c9bfebafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae31ece-ccf1-449b-a40f-5aae113e124b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aa75a7-602b-45bd-9a3b-3ec81d9d23fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fd4f5d-04ac-41eb-909c-2e1c7e36efbf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43d54cd-5bc4-4f90-8cb3-0d533a863f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1a1899-545c-4c5b-bcbe-d5d611cf9ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be87dc2-d09a-4be4-8792-098ff1791c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55439f00-205e-4f1a-ab57-f6dce55b62db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6461ab-874e-4b90-aa90-3e89766286b8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827dafe7-9443-4ed1-b999-d63d9c17ad34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0b3575-dd0d-485c-a0aa-297a58b627be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98b960c-020f-462a-b66b-011147bbbda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea775804-5e23-4706-ac81-545e0bcce587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410310a9-d045-4a65-b1c6-0f7d53e10601",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b3eab9-cd58-4fd6-9ae5-cb1acf0ec034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807f0e6e-f729-4db3-b1bd-1159eb545531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922de35b-2b84-499a-97e1-e22f59ce2a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d138cdcb-eff7-44e9-81dc-5eb66fd88684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f3f97e-8e8e-40c4-a78b-dcf831ec8b8c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0458d877-99f9-4c5f-9fbb-e5abc46d40c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39015f7-5d0c-4c01-ab4c-1b25004b2826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894ac08f-cbce-4f2f-83e7-98e1f89648be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f244419-39d9-4d31-8b53-dc179857bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306a1f76-8104-41cc-bbe9-c554af7519d3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49280bc9-6f69-4032-b7f5-b2a9b5ad2248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e7d668-d169-48c6-aff5-f0027aa87f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d303c6ce-ca36-4cf0-8db2-0700de283441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bf799c-022a-429d-b802-3081d105e7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6625407a-728e-451d-ba0d-2ac80431f355",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc38633-fdca-46e0-850d-5863f79ae540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c62759-1576-476b-af2c-47aa2495de25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de043e69-308d-45b4-8eea-c179d625e080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d06edf3-cf7d-48e6-bd3d-2057eb2b80e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86686881-248c-417a-981d-aff77c2dc37b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b58670-1b82-48a2-9d18-9df797fb7430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096db8ca-0925-4fd7-8230-e0246b99f27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940ea67b-1801-4d22-9231-bd96aff04081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b46147-7d1f-4138-b030-6d0dc394c83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c253f328-ea5b-40ff-ba32-6ea30522d9f7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e313e730-6b33-49cc-b197-dcf9ba10624f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c340d19-49b8-43bc-9e41-dc3c830de99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b1271a-9b29-4407-b0e3-7d33e736efb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94eb989-53ec-471e-af1d-6fc18d1b5676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c55417f-0a6f-4a84-b509-9473bd6730f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befaa646-641e-4b9d-b7db-8eef37698b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15df1c7b-6e9f-4e96-a4f6-d54d6b5e5c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef2c144-8637-48c7-bd20-6bced7057710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b2c56-0e32-41bb-b078-3520d26f1a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21473901-433d-487d-85ff-2d8872ff8cfd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58fb919-3b96-43bb-b212-5d486a1e7c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01dbf04-389f-4ffe-8910-7e49da058671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a932a68d-e73b-4f45-adaf-35a8a14fde56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ec7374-c6ca-442a-9df6-e923da6d0233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52f9c27-8ec8-4bdb-b4af-bbd840c91d2d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20164d2-b1be-4fc7-b2e2-578bb2db488e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62a0755-4437-4ba4-a460-b62435338a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83afa28d-2dc0-4fc8-8bee-516e32faa11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee9de67-754f-4513-8a76-865551cfc6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e46af8b-ca3e-4d0f-b347-73ad807c87cc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aeb6d4-5160-40d9-8822-fa7608f25570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ed458e-e501-4a36-aab4-b2842b39cc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa49ee6-a68a-4db3-8419-c3575ba4e8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a7c657-2b55-4614-a5d8-860992976071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b86e18-ebd0-4192-b36f-a503cf5bba1b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d95d5-022e-47a8-8fc6-a03c53863e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95ecf7a-b207-44fc-ab28-95412d43f332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d79fcc-3aa0-4f53-b65f-b0c07546c40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76574652-ece2-473a-b05f-a018396ebddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708c0636-20e7-43d6-a31e-cb49a7482c68",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796a4888-2eb9-4ceb-bf80-ca4965de09ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df05c12e-d3a6-4d1d-89a0-a2d117a092b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ed35a-62d7-497d-a146-eb5c88c1dbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48129d7f-d974-4b8c-97ac-34db6249980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c05b3a-23e3-4aab-8946-2f6a569c86cf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f596508-0eb3-46b2-8d8f-e75402245af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426bc1f9-e7c3-42ab-9e77-a84e9d7cb528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c01ede-c5f5-4af9-b51b-6f9e35086e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b95afa-faf9-43ff-bfe1-95b3cac5fb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a71fb07-3da6-48cd-ab1c-0d0bad49c75c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1910c6d8-e91b-48f1-a585-af420d61eaa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b345a127-9e23-497e-9b81-d4737ccbc280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db4bf50-08c8-4656-84af-b319829524cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7853a0-a317-474c-9d3a-ce3bf30b8e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f50d5cb-97a1-4cc1-ad29-932128668512",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d4c807-cba3-47d6-84f3-7a95bffff074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90756c56-3af8-4998-ab78-efd60877b1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03845f1f-0452-4dea-abf3-4351779d6ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226d79f1-9b53-4461-bae0-4a80302181e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2818ca-b430-4682-8c9b-96edcc0e0d12",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f100cde7-7c02-4ce2-80d6-d92f40553aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c840fdf-7574-4f9d-a6d1-6a486ca9a614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25e7529-6e42-4821-be03-955ea5edbbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a20f138-f858-467f-96ba-dab978075d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a2cff7-0165-428b-8af5-4f037245d7db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d453ed-5144-4937-a3ef-abb3c4dbf13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28beaa33-f993-403b-9f90-34043d6dd625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7139e63-80eb-4514-97da-ff54decc6e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6e3723-8a6e-4da7-8398-aba70d82a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfc51df-f212-4dc2-a84e-5c6f7ef5651b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a042b47d-5c64-4f9b-a8e0-4eb56b6e13be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6dc72c8-3ada-4c84-aed9-f3308d082e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5f9c07-e33c-4571-a70c-1bc5add5a10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceda7be-00de-40cd-a214-54c3c506f31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e7d00-a368-4135-a328-dd9fba5d2dfa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfed432a-a5c6-43f6-b6df-808c7f3ad52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05bb7402-ec91-4e97-8127-4b4814ed476e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d0529b-49a4-4a03-8285-99536d7fd4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0631cadc-d9cd-4aae-9e9f-6176c7744fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f75cb5c-87c1-46cb-9b38-51298c607861",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aa0806-c65d-4515-aee2-8fc2cd5a63a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53b47a6-cd1e-4824-8609-7d02a3034549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f809f15-2bb8-4029-9f5c-86d65a6f4687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48226302-382b-49ce-bb74-cb30377ea09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d6fff7-764e-4a14-a301-c3bbad7ec1bc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d3ed80-deaa-408b-abcf-361a8a3eae00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86fbabb-3ce0-4d01-905b-9f8c5f2f1af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c296b7-ac4b-4808-a720-90ad386b4a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a435546f-0ef1-4060-8453-0bc9f9c623b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625277e4-883a-428a-a1ea-ca501db61c9e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a1b58-e6e6-4689-b0d1-372b6b875e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d472da-5a01-42f6-977a-52f82b55851a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db961a7d-2976-4a27-ba3d-f8f4eee829ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81b72fb-e83a-4a12-9f05-ef45e2dff65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc336edf-13bd-469b-ac03-7ba3b4403204",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d956adee-1d8b-446e-8691-1aede0739fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57983f18-2715-4a98-a054-19dc5908b4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af59a923-59ce-45b2-a6a2-855dc5d397bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d7c79b-688b-46ab-add9-d60aec6b0d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97706c84-779c-4c68-b92c-a18f60986b24",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3b86f3-4f6f-4aa3-ab02-2ef45d9aebce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ec5631-79f1-465a-b14d-cac05e7d8297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176f3ee-acbf-4acc-8679-4e61d778cf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8536d2b-e772-493a-ad00-d994e70a6d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db3249b-4e7b-492c-8b0d-ae19f60cfa85",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f4348f-8a87-4f84-8a07-56658eb4eca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e17a76-88e2-4de5-b0c1-34b9457c6697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5cbafc-24fa-4f3e-9bb6-c8950e72930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8791aaee-9d38-422f-b23a-99f198e01425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab2793-a56a-4436-956d-36935df5c1c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686244c9-de40-42e0-97e9-a42c04234161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3398a1-40f6-469c-b29c-310016bb296f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7671c24-c259-4f73-92af-e52fffcc6781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2b96ff-ec4a-44e2-bc46-8573b6b2e565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebe392d-2f14-4244-8dee-35417ad656ce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c21e0a-13c7-4878-ad5d-2b2b029080af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f322d36d-d9cb-4b6a-87e9-3adcc70f3ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab86633-eee0-431e-8b93-d57d442033a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb21b4a-86ac-40a8-acc5-f4495d82dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e2c337-6649-4c8d-9269-d8cf677440ff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc6ea94-82d9-4d4c-ad5a-cdb84966a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a6dd0b-7e5c-4e7d-8b05-df9d6d0b28ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59085306-f4cf-4aea-817a-f9f0d3b946ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a98996b-daf6-43a7-9452-80b20f1d4b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c283e4d-e20c-4402-95a9-ed3f0ab5ddf8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a49366-8d13-496a-9821-312c4e9afbd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8c3ad7-1bcc-4983-8092-3b0ec6223d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172da976-c764-4327-9b17-73705b42c506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fd6a61-6c4d-4b4f-85c4-6b3c70fa6efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e08e87-6f05-4077-9518-2aa81087cd61",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae8d521-835a-4cb3-b7b6-d048bce05e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb6b195-3d71-4913-aa07-38c9420e084f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef91e1a-879e-4c32-a663-e5a3882f5088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62d9b9b-7e77-4516-bbd8-0aa4b719ebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558cd59f-7c2f-4736-8fa5-91a93ecf6683",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c48cb42-faa8-4ea1-9628-9bdac2c992ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c58ae72-5fdf-4947-a25c-d652c631fc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c15024-dee8-42cc-8ac9-8f2668a2a879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9b0145-b6e9-424d-909a-1c6a51e480cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215063da-5a0c-4f21-8d1b-0b26c178a751",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d542d3-134c-477f-a59a-aa984e31f60f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e7859b-e377-4c7b-a3b0-d54a303fbc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710709bf-e702-48e2-a0a7-1b0fe815e098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f38348e-365f-4737-bdd7-e3940c7a6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d446d3-8602-471c-b4ff-c858568e0b0a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9418d2b9-490e-4e70-8f05-fdf3eb7c398d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619a064c-b2ee-4311-8e28-2c3f374e85a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca289ba-7077-4c3d-bd97-5c045b9c10ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e488ea-abb7-4403-8de5-9b30f321a3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4697d7b-3615-4a78-9a77-c23ddb519409",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4263705d-0667-460f-b585-d4c2d73a36f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d534ac39-956d-4e6e-b329-8fe5f21bec15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e46df5f-9556-46c5-ad8d-f5513a1c3f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f54784-4100-43a4-9f27-7069e68f6673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a69ad77-73ff-420a-88ff-791faf64c9b7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f4557f-df35-4573-a40f-1deb369c95d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc45147-deea-4ff2-9428-906c4f1afc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7cd493-f329-4a96-9c30-109b2ab5707a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab3b9d4-707d-4492-9a09-5fae27c97bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd430027-37ab-4545-ae71-ae3afe10370f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcf7019-1605-4b95-bf3c-590bd1944c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23f235a-6231-44ee-b861-28d688a59ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30779cc-fc4f-4316-8437-51fa6fac8f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efafbfeb-66d6-48f7-9aff-c6e03a3eec13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6c50b-3520-422e-ac69-4ab58ae60cce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8357cc-d357-40aa-bd25-c33cfa73c275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b7c2ba-2a57-4e0c-a903-d187d97c4bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6396421c-76e5-4b89-9c06-1852d572c91a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f72bc99-c0b4-498c-8296-787e6ab227fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43187f0-4386-4fd3-b5d0-0ce2453cc4bb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c567ed3-4ed2-4ccd-a9f1-89c3a28d3316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7a500e-b374-4cbd-a823-4d77efba827f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd176416-cfdf-4153-8257-e1eaabdf2c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a272d8-6b05-491f-acff-8261f275b94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae6955-6819-4164-b374-045c483f61b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e21ece6-1c65-4ec4-ad32-ea17b75c9d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ddce1d-bfa3-4a58-99ae-3bc8313ab764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db113f65-f7da-4c41-8a5a-c5d03b1addef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa461d1-bb2b-4540-aa9b-48d77d7dd9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27f292a-06b1-4498-8990-eb6ab8b98836",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a541e204-1538-497a-ab24-7c0c32a953fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6791a7-993d-43b6-b635-bcf44cd6f3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24c7435-8b2a-485b-9789-755f19473da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05881070-c192-430e-a53b-aec85d5d6b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b5144-d1fb-4876-bc54-1668a96e7b20",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdeef55-e184-4f42-a526-6e66570b15fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ea2bff-b185-4769-8107-9ec016ba4800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e50972b-67e2-4aba-aab6-fecc18939d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7131f58-a84c-4ae2-8719-8a6d1f70524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100f7a1-c3c0-49a8-ae73-dbb2d426d16f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3c40bd-d28b-4af2-a3d7-a40b1cedecd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8b0cb1-4860-4ee9-9855-d6a4a77eff4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c92fa24-645c-46c3-b646-4de880364644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec9185-9905-488b-9a7e-2f891a59ef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7f685f-fff5-4d44-a346-0dd727659708",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e544b14c-f42a-41d1-bc7e-74a7842c5ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554bef93-5d96-4a7c-87b9-eedfe35e8c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97efc099-4abe-42e6-96ba-73340b1bcb38",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9684811-1b47-475b-9da6-58b8700561d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7605d6-75ba-429a-96b1-0390d466475d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859d0a4f-14e5-4070-9859-47e1877be6fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be925f98-e69f-4499-bd87-c6ef54decd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c3418a-2265-4255-aceb-8ac1fe99a93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a00bdc-eea0-4b83-b735-83eb8b5e2447"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a72e580-880f-48a7-9373-4ed2c3873b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8d75dfd-4d8d-40c3-ac4e-2074bdb53777"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39526f1b-64af-482a-9edd-e9ad6998dae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4cafb0b-41cf-4ee3-9a62-29986b39a5c0"
                    }
                  }
                ]
              },
              {
                "id": "ffd362d8-0aec-439a-be07-6b1c9381ee98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "208927dd-46dc-47c6-8959-89b0f8cc72a4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad101e6-efa6-4230-86a1-80652a876e50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e68fb28d-ad32-4157-8ba4-1f16deb375f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d20ed8-54b8-4429-9b88-5d171a2fc939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ebe68e4-3133-4102-9fa7-2eff726bbb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47dfedd-f252-4add-9887-b143fe975625",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efc919d-4964-46dd-9dff-05a4bd4b8566",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d8b4353-84f2-45f9-8a89-8cfc2f9c4f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6dca1c-1499-4388-92c8-c27a42160a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fedc0d42-8173-4d9d-9253-bfd4acd75def"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13eeccf5-19c5-4e81-8dc0-486988db091f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4697171a-9001-469a-ad72-3e8db6fd58b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a44fbf31-466b-4d00-8317-ed3739ee21b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b598ceea-f91f-4be3-8da3-e28d64b17402"
                    }
                  }
                ]
              },
              {
                "id": "23f73be8-2292-49c0-ad91-d4fe3fc48aa6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e4d0ce03-1a81-4fab-b119-909c24826e28",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64792c2b-c1ee-4bdb-a802-e8011ecc939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "da22c53d-5a2b-4232-8b9e-93e3d859a0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb02b10-0c78-4a45-afa1-19ef7d4697f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35921ac-8a9f-4988-8559-8303f3b2e813"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6754376-323c-45c2-9bb6-1d05174129f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56c7d79d-3d01-4821-88dc-bc502163c891",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9798a36b-f06d-4be2-9a11-3248cada5d00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40c1ff59-c404-445b-8151-de9185bedaad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa54e687-91ea-4b4f-b4c9-daabf2dfb9d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddccaeb9-b5cc-41dc-86ac-43b789d852bc"
                    }
                  }
                ]
              },
              {
                "id": "2548eafe-86e0-403b-a244-9ca8cee540e6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "122fbcb9-5aff-467b-950a-918852fe5356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84f12f7d-2775-4a98-94f1-8399277ddfe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51cd3f40-a506-43df-b2e8-64e146951e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d3ddb16-c67d-4d5f-9242-d8bb780752fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f72941b3-b597-4c14-a390-9ddab7b2879e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b2f7f185-d80d-44cc-8027-7b4fa7310cd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f6b2311-9b51-4629-8f0f-c8f496dc9bac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "146962af-b6f0-47f4-a472-f506363775d2"
            }
          }
        ]
      },
      {
        "id": "b4d26187-b202-4cb1-9ab9-5ecc1924d677",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a46c8187-0391-4edc-bfc3-2bf165f4c965",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af0faa04-3ecf-4247-b719-48356b1b4341",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f27822-01c6-4522-85ea-34d313d6c6eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccdab9b0-7e25-42cb-8ba3-a2d4b392a942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf708ba5-c8ba-455c-a154-36edc9ac0a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a419efbe-fd80-4f29-817e-251eb0e393d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0fd28d-6e83-48e6-8e31-98285f38910d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff61a3a0-fe9e-4d05-832c-d08b675bce7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "824b6bf0-48fa-4572-8785-87c4e8411311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a42c7f2-f7e7-448a-94e4-35e554c22013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5b8021f-4932-4b10-b659-b0d8d3a5d02a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7ae6d9f-6761-4bc1-8d29-2ca33c4dc86d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdf0950a-6b0d-4712-8d2e-c5aa1cd26671"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c6dd2c7-d782-44e6-8f59-cb65b1773f60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e86aa7b4-77b6-4ae7-8222-c7012809ee77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07692791-863a-473f-a2a8-05de805b96bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "870b4c99-517d-469c-a657-5b5588083efd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f365e2f5-c483-4a70-b5a6-79ae32a1618a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "423d1a6a-2839-486a-83e9-1b9f294b8eef"
            }
          }
        ]
      },
      {
        "id": "21442ce8-87e9-4439-824c-5b966ca09cc6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "705829c0-f44a-47dd-ae59-e6eb26be9131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e505577e-d52e-4c63-8435-64f533717529",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "547438f3-b764-4b52-8fe8-5c646faa7edd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd0c0c3-37e9-40b2-90f7-b61a158e7689",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4972698-7c61-4701-92b8-50d9ebc25fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a0ef44-01ed-45d8-914f-7ffe417e5847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "862a0302-0a99-4b66-be84-310d4f3581b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8956c5-7703-4b9c-a894-724258d6cc08",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb87dba4-15f9-4aec-8e5d-2b00bbaa4f40",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c71645f3-18a5-4af9-91b5-5106488e2300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a839f784-3861-4951-a032-9a3566aef824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f643773-90b6-4be4-8636-6ba3820daede"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a09149-580f-4cd9-b843-93c0073f07d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c525130c-ff39-4c7b-9d50-6758fb8ff196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b241bb92-c747-43ac-b439-bbbe31f540ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c9c8094-af28-4c35-aa0e-7d8bfecc64b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccab0574-2ab9-4ce3-8f59-1d2014c9d126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c246517-c07a-4a04-83d0-0879d3893d7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d8fc4e9-4e10-4d57-9f61-3c5cd6e9946f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d82b0d96-0248-491a-a7ed-d79ccf0fd905"
            }
          }
        ]
      },
      {
        "id": "17b9716b-1a80-4d24-8aef-b2352b4a6cc6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e94b5121-78eb-48f0-bb72-1f0367d17a4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac598d4c-9ace-44a2-8d21-11fc906f855c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a794000c-445b-4f4d-83f7-bbfab212bd79",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afc5286-287d-4eda-85f5-047eb3d070a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7d49239-1fdc-4ea4-a752-2ca946efdec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406741a0-ce7d-4116-8bb5-9fc5c2f77577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4c3572d-450f-4b84-a869-d6cf347be24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f82811-7026-441b-b541-266398f3a56d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df98e997-6eff-4d9d-ab71-4b12ce83398e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "18d435a8-d171-44c9-a576-d8f009b4a363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ea0e5-19f6-46ec-97c3-5c9f5f7b93dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfb3fcd4-f446-4c1f-8d12-898878f2fe55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038060f2-3aae-41fd-ac70-e6e954e19a4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a27d4a68-3a95-42db-a305-58ab897c1755"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1836bdf9-086b-4a7e-ae6a-0545f43da05c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1a420a1-5bde-4734-a5a2-04a495a1effd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0af2bf8b-dea6-49b7-9267-398aa91cc3ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6feb253d-6ec3-45a0-94fb-1ffa37075a3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b482b7b0-3379-416b-a7cc-ee7bb838db91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fa19500-921f-42e8-a49a-afff8c612dee"
            }
          }
        ]
      },
      {
        "id": "f5785918-624d-45cc-af5d-8ff583d5b602",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a0e3053-25cc-4772-af3a-ce84256caa94",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e4fbae3-3159-4ccb-bc23-6355ac94de70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ebd95a94-63ec-4ad9-878e-c23cbf692a77",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f732e139-208e-470a-9335-39804fdce58f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9974878b-0284-4ccf-a63b-e501a819a2e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 704.95,
      "responseMin": 6,
      "responseMax": 8691,
      "responseSd": 975.0905093098561,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681778149720,
      "completed": 1681778344838
    },
    "executions": [
      {
        "id": "b43182c0-5514-4a69-8710-1bfb557e2ce9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1d468b1-e7f7-41dc-b204-facb9689721a",
          "httpRequestId": "97325554-4ccb-48dc-b90b-c8b161c5b9e0"
        },
        "item": {
          "id": "b43182c0-5514-4a69-8710-1bfb557e2ce9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a0c2791e-382d-4355-9a08-b862c9a2edd3",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "3cb31330-a636-4393-b818-34e86ed25be8",
        "cursor": {
          "ref": "d362d93d-64b9-4a78-8eea-2fc1a2c751b0",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "482dda29-2c05-49dc-8497-e82849351a1b"
        },
        "item": {
          "id": "3cb31330-a636-4393-b818-34e86ed25be8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bda3fa51-fe02-4e70-bcf8-caec44dbca15",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "9e845e56-0434-458d-acab-b32ef00e0c81",
        "cursor": {
          "ref": "dcc88b79-de8b-42d1-999a-63a9eedc2b94",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7affe09a-5fc5-48ce-b9a2-ef5da706ee69"
        },
        "item": {
          "id": "9e845e56-0434-458d-acab-b32ef00e0c81",
          "name": "did_json"
        },
        "response": {
          "id": "af0e21fe-5fcc-440a-9b79-82a9136a2cc7",
          "status": "OK",
          "code": 200,
          "responseTime": 800,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc2f30-5453-4f35-87f8-585521c2d3bb",
        "cursor": {
          "ref": "8f95786a-4a42-4ad5-b236-b40c6d236f3f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4f96c8f-5636-4643-92d1-1491b370a270"
        },
        "item": {
          "id": "45cc2f30-5453-4f35-87f8-585521c2d3bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "00fc8a5d-2e54-4739-822b-7205a99fc359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc2f30-5453-4f35-87f8-585521c2d3bb",
        "cursor": {
          "ref": "8f95786a-4a42-4ad5-b236-b40c6d236f3f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4f96c8f-5636-4643-92d1-1491b370a270"
        },
        "item": {
          "id": "45cc2f30-5453-4f35-87f8-585521c2d3bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "00fc8a5d-2e54-4739-822b-7205a99fc359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4c2840-8e75-4a6b-8f13-455664575c6b",
        "cursor": {
          "ref": "4b69beeb-547d-4913-9b07-3cfe00bb6e97",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "59b0cdf5-af32-44cb-9183-53b20258176c"
        },
        "item": {
          "id": "9a4c2840-8e75-4a6b-8f13-455664575c6b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be13a8a6-f61b-45ff-be13-970849981d32",
          "status": "Not Found",
          "code": 404,
          "responseTime": 632,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6456d6-df6e-421c-9388-54a04d6dd7e8",
        "cursor": {
          "ref": "a0dc2ed3-9a0b-4a3e-b3b4-52df80dd7616",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "904ec167-b415-42e4-bb90-830b831d810c"
        },
        "item": {
          "id": "5c6456d6-df6e-421c-9388-54a04d6dd7e8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bcdaf85f-737a-449a-a3e1-f8c35202ef53",
          "status": "Not Found",
          "code": 404,
          "responseTime": 551,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f3bb46-0349-4795-89d2-1f2961233b30",
        "cursor": {
          "ref": "1ff4d1a3-69a3-4e8e-b7a2-de5e51bba7df",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a769c32c-d389-43e4-a758-a14a9a90a756"
        },
        "item": {
          "id": "97f3bb46-0349-4795-89d2-1f2961233b30",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "513ce751-c2a9-4056-9295-8f3ef0f18fde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898ee76-f1e5-4e17-8ddf-e4ab4b4359d7",
        "cursor": {
          "ref": "5e348547-d054-4ce8-a9bd-ac0a2327c2a2",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5c1d0ba6-5f80-4019-9d02-5332ffb9fd7a"
        },
        "item": {
          "id": "9898ee76-f1e5-4e17-8ddf-e4ab4b4359d7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "060beec6-e4f0-4947-918f-94db925fc279",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 673,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898ee76-f1e5-4e17-8ddf-e4ab4b4359d7",
        "cursor": {
          "ref": "5e348547-d054-4ce8-a9bd-ac0a2327c2a2",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5c1d0ba6-5f80-4019-9d02-5332ffb9fd7a"
        },
        "item": {
          "id": "9898ee76-f1e5-4e17-8ddf-e4ab4b4359d7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "060beec6-e4f0-4947-918f-94db925fc279",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 673,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8233932-1735-4df5-812e-40fb994911b7",
        "cursor": {
          "ref": "762265e9-5542-4055-863a-abdd417f1449",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f63eb38-6883-4457-b3b1-1eb5bf237c9f"
        },
        "item": {
          "id": "c8233932-1735-4df5-812e-40fb994911b7",
          "name": "identifiers"
        },
        "response": {
          "id": "9d401567-f98b-4c10-b0a7-9495b56f8fcc",
          "status": "OK",
          "code": 200,
          "responseTime": 961,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af43ae-b243-4e4b-bbb3-0d0fe39079b3",
        "cursor": {
          "ref": "14e6f49a-12fd-4bd4-b804-bc120e31ec19",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "918023ba-b717-4179-a10f-8e7302ac99c0"
        },
        "item": {
          "id": "b9af43ae-b243-4e4b-bbb3-0d0fe39079b3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b339ce9-bff1-4e36-b2a4-a119c959c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af43ae-b243-4e4b-bbb3-0d0fe39079b3",
        "cursor": {
          "ref": "14e6f49a-12fd-4bd4-b804-bc120e31ec19",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "918023ba-b717-4179-a10f-8e7302ac99c0"
        },
        "item": {
          "id": "b9af43ae-b243-4e4b-bbb3-0d0fe39079b3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b339ce9-bff1-4e36-b2a4-a119c959c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77166522-6fcb-4e7e-800d-8342d887fa6c",
        "cursor": {
          "ref": "d2ab6e05-a110-4f09-8105-f86363b7505a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "baf5a4e3-ca94-45d0-901c-461fd2f3e996"
        },
        "item": {
          "id": "77166522-6fcb-4e7e-800d-8342d887fa6c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "018a9216-301c-4882-a937-3e2adc1933f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafa43f5-1159-46c5-8c4b-49bfa9166ca4",
        "cursor": {
          "ref": "05c03226-bc24-4749-8f15-256b76b82ba0",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ef0645b6-ccc0-4e56-b3aa-511e01e537f0"
        },
        "item": {
          "id": "fafa43f5-1159-46c5-8c4b-49bfa9166ca4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9bfe5e9c-da0b-4e07-8e1d-8830aa168c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7e960d-1dfb-4a7d-8417-65dfacd0ba48",
        "cursor": {
          "ref": "c6ddef3f-12d6-4abc-9932-c9269e778e4e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "32bbb840-3b20-4f2c-9f53-891bc972955a"
        },
        "item": {
          "id": "1b7e960d-1dfb-4a7d-8417-65dfacd0ba48",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec56d23e-4e26-4ae1-9f59-051164466f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0ffe6f-c2db-4ad4-a895-75f36898d19a",
        "cursor": {
          "ref": "f6eb7957-d084-4e30-a2c2-1b772ebe61e0",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d6eb3be0-0ea9-486c-92b0-a56391c122cf"
        },
        "item": {
          "id": "2f0ffe6f-c2db-4ad4-a895-75f36898d19a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "397b46ea-3eed-4727-951c-f32c87778e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975a913-279e-45a0-a8db-36b2b582260e",
        "cursor": {
          "ref": "3c7daa09-8334-48f8-9d79-3cc624141dbb",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a49e56ac-e14e-4a3d-8718-e0e872097c50"
        },
        "item": {
          "id": "d975a913-279e-45a0-a8db-36b2b582260e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b1964beb-ed3f-429a-8194-bb4c9a9e36fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfb6c9b-0ab2-49e3-9b83-f9c1860ebb0f",
        "cursor": {
          "ref": "4650cfee-a2a5-4750-9320-54ecf19a42eb",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bb4de608-3130-4499-988d-55e5fc84d866"
        },
        "item": {
          "id": "7cfb6c9b-0ab2-49e3-9b83-f9c1860ebb0f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4075c8b0-989f-4a4f-a104-cc2c74c90fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0cfca7-a9c3-4c3a-b0b0-ae0c6753068c",
        "cursor": {
          "ref": "38ba3989-9b5c-4573-b631-91660cbbff7e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7e1080ab-0ac4-4bb2-95f3-d8dcd4c53921"
        },
        "item": {
          "id": "7e0cfca7-a9c3-4c3a-b0b0-ae0c6753068c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "16a4e5db-2718-47b9-8685-b2f418ca73f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe91145f-5922-4791-be6d-83158497657a",
        "cursor": {
          "ref": "c3ff20c9-cc68-43f2-b846-feb2bf7d7afc",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b1a1c5dc-df34-4e9d-a8df-2e48a9a6754d"
        },
        "item": {
          "id": "fe91145f-5922-4791-be6d-83158497657a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "21c20318-0921-4fd7-9e32-95baf9216e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c241783-0e03-41e3-8dde-11a287daa15b",
        "cursor": {
          "ref": "951ec4a5-0d69-4e37-8cf6-c916ac4b77e5",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3332fd26-8d5e-40fb-a19e-98364fe562c8"
        },
        "item": {
          "id": "6c241783-0e03-41e3-8dde-11a287daa15b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b2d2260c-df18-4040-8084-d823da491479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb20bcdc-628b-41b4-bd64-559485d610ec",
        "cursor": {
          "ref": "82447346-e9d9-41a3-add5-a41f3cf599d1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8abb0bad-b025-4eaa-8717-a7a582e5f708"
        },
        "item": {
          "id": "fb20bcdc-628b-41b4-bd64-559485d610ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "79cab247-24a4-40ac-983e-5d94fd004bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b37462d-eb8c-4ddb-afa9-9bb617991de2",
        "cursor": {
          "ref": "d73eabc0-e162-4775-b3db-d4228d6e9d41",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5ac1149a-d9be-44be-9eb7-62093e82e6ee"
        },
        "item": {
          "id": "0b37462d-eb8c-4ddb-afa9-9bb617991de2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f50cd89a-d263-43e7-b8ef-59b40a73b24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72cbf08-bcc8-4f21-91ad-170e239e96b8",
        "cursor": {
          "ref": "19594391-4265-4b0a-a936-70564f9d625e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "58097ed1-c037-4e64-bd72-ebd9e541012e"
        },
        "item": {
          "id": "f72cbf08-bcc8-4f21-91ad-170e239e96b8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0ec6cac7-8428-42e7-b380-e4b3fcb55c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e8b50c-8809-445e-b6a7-503c6e830ec8",
        "cursor": {
          "ref": "41a8f1e9-7d78-4bfb-a783-eeb22a51e958",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9a940c20-c3b8-4593-b511-6c1959e2eab4"
        },
        "item": {
          "id": "94e8b50c-8809-445e-b6a7-503c6e830ec8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fe8db927-0839-48ce-9f90-eaaaf246970a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a117837-b4d8-4bd5-bcec-f6c2345d1061",
        "cursor": {
          "ref": "88eef0fd-43ba-47ab-ac37-54077b6ee49c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ca1b3333-797a-4d72-863c-fcd8f42ec633"
        },
        "item": {
          "id": "5a117837-b4d8-4bd5-bcec-f6c2345d1061",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0e36028f-2d60-4cb9-a945-db17e9360f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81574ece-2e4e-464d-ae53-e52c89e962c7",
        "cursor": {
          "ref": "470b9384-7b7a-45b2-a895-2f216e01c1fa",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "67909f9c-b7a4-4b34-bd63-05d1fd4bc6a7"
        },
        "item": {
          "id": "81574ece-2e4e-464d-ae53-e52c89e962c7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3d4f420e-bc57-459a-8cb3-210b580be71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c30234a-8d7e-4f5c-be1d-a41c62d759a9",
        "cursor": {
          "ref": "481bdb93-1b4e-43b7-9fb4-3aee601446c1",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "463ba4a8-b1c6-4028-a783-e0286b397694"
        },
        "item": {
          "id": "9c30234a-8d7e-4f5c-be1d-a41c62d759a9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4345ad71-993f-4dbe-b99a-05815480d4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e1c509-873f-413b-af84-a5f1a47d3ad2",
        "cursor": {
          "ref": "152f7363-c1b7-4204-afb1-9511a01f4f02",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4d78bd76-cb48-4eee-8445-3f08fe917491"
        },
        "item": {
          "id": "28e1c509-873f-413b-af84-a5f1a47d3ad2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d82fdf2a-980e-4b7a-9371-12d4821f6700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef671f44-3fed-4649-98f9-f8e4c5b35cae",
        "cursor": {
          "ref": "f93d81d2-6370-4603-ad5e-997dc2c537e9",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bef118d-706f-44ef-b4f3-4a4ad08979d4"
        },
        "item": {
          "id": "ef671f44-3fed-4649-98f9-f8e4c5b35cae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64618ee7-907e-47f9-8428-9632074a6d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c57bed-0366-4a9f-bd5a-0e9668239a08",
        "cursor": {
          "ref": "ca51fcb5-0faf-4d3e-9b1d-3e20f85361ec",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eb2355d4-9733-4e7d-a532-14628dd55c1a"
        },
        "item": {
          "id": "37c57bed-0366-4a9f-bd5a-0e9668239a08",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ac773823-4fb8-4d02-aeb3-11f7928f0483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b39d2-f22f-4b47-a50a-2134fae7aece",
        "cursor": {
          "ref": "c8152cb2-0dc6-4385-862d-c416713c18a4",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b364e52-1140-4ac2-b72c-87513da74108"
        },
        "item": {
          "id": "de4b39d2-f22f-4b47-a50a-2134fae7aece",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "112caa70-603f-4a2c-93d7-db48002ae731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07f7a41-6b0b-4a32-9096-589a96ee0285",
        "cursor": {
          "ref": "3ff1d73e-7bec-4b7a-962e-57b8cb9a087b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "47f4190a-f633-4ff8-a6eb-5a6cc7728daa"
        },
        "item": {
          "id": "a07f7a41-6b0b-4a32-9096-589a96ee0285",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d049e93c-fb85-43bb-8b48-3b0e5cb54c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7538bba-b3c7-49e5-900a-e78282f35969",
        "cursor": {
          "ref": "f5e4bf8a-ee06-414e-8b49-ffeff22b80c0",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c7adf13c-58ea-4be6-b6fb-9e59f4e8197c"
        },
        "item": {
          "id": "c7538bba-b3c7-49e5-900a-e78282f35969",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "692d076a-9277-4fe4-a5bb-f18dbc976442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980d1e1-f4e8-48de-8b16-6334105a7d9e",
        "cursor": {
          "ref": "0f6b9d88-ae3a-4fd0-8b4d-ca4f45d430b5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "16598a85-5072-4c43-852c-590fda64a285"
        },
        "item": {
          "id": "5980d1e1-f4e8-48de-8b16-6334105a7d9e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "992e5e6e-10d5-4cf4-8983-9b1319c43c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470e4196-9b0e-4dea-91e1-f47f78affe82",
        "cursor": {
          "ref": "51328f6b-5c38-466b-83f9-0d0e57a284c0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d40d7221-d928-42e1-930c-07d48eed952c"
        },
        "item": {
          "id": "470e4196-9b0e-4dea-91e1-f47f78affe82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6597e7ee-648e-4979-ac0e-3817afb1acdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3002719b-2a9b-4419-a5aa-e1eb5da6c720",
        "cursor": {
          "ref": "f1d0694a-34fa-4746-9973-98aed702b745",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7125da01-5f55-4e78-8770-774d77f698cf"
        },
        "item": {
          "id": "3002719b-2a9b-4419-a5aa-e1eb5da6c720",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cfd21dc1-5b5f-48b2-97f0-3ad71f646a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14696df6-d69a-4421-8b24-7d44282de71e",
        "cursor": {
          "ref": "b27872cd-65f5-4991-befa-3286c828119c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8dce1187-4c0f-4361-8868-a106e47cbc4e"
        },
        "item": {
          "id": "14696df6-d69a-4421-8b24-7d44282de71e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8bdfd44a-9a2a-4fef-a58f-8907636a7550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0830e02-8df8-4a9e-94ef-69d88e38425e",
        "cursor": {
          "ref": "27f3a2c6-437e-4b5f-9bdc-207afcd58ddb",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "463ea282-74e8-417b-ba5f-c2b77207dfb5"
        },
        "item": {
          "id": "c0830e02-8df8-4a9e-94ef-69d88e38425e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "93ac81ee-6b01-4e67-a540-ff96bb42f15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204f9f6-1116-4d36-b44b-0ca1d6e51187",
        "cursor": {
          "ref": "101051f8-c849-4420-a754-71e7c695287b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7ef66009-2adc-4293-90af-6e9d8746193b"
        },
        "item": {
          "id": "0204f9f6-1116-4d36-b44b-0ca1d6e51187",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2024cd91-2d4b-4537-b072-c50e0d72faae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8765ea-0974-4c61-b30b-466ee26d0d55",
        "cursor": {
          "ref": "826b5a89-8db2-46db-aaa6-92c0895570ef",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4fdaccd8-a9ef-4dc5-b6b5-a22d187e44d9"
        },
        "item": {
          "id": "eb8765ea-0974-4c61-b30b-466ee26d0d55",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2b3e0dfa-7149-49e3-9801-4c33ee4f3d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1204406d-653b-4793-bfc7-1f8972fc5fb3",
        "cursor": {
          "ref": "5ad8104a-e313-42c2-b5a6-3430953c5402",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "872d4aba-5426-4196-9d32-4f6f409230c8"
        },
        "item": {
          "id": "1204406d-653b-4793-bfc7-1f8972fc5fb3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9050de74-f4de-4584-bd18-29f66ea5ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19931ca9-b448-479d-8955-f98f5b8373dd",
        "cursor": {
          "ref": "e8663214-72ac-47c3-a4b8-9a2fbe78f6f7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "644ed2f4-733d-4fbf-9b4b-bcc9de5a10de"
        },
        "item": {
          "id": "19931ca9-b448-479d-8955-f98f5b8373dd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "feb0d2d2-d68c-47fd-8448-96f7c77a3e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c3a6fd-0116-4f5e-afe7-ef6211eae340",
        "cursor": {
          "ref": "fc2f6c48-d35d-4435-b623-713a3093533e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b606c2b5-0f61-4655-9d0d-29b9a9afc965"
        },
        "item": {
          "id": "e4c3a6fd-0116-4f5e-afe7-ef6211eae340",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8b457239-4537-4f53-9a4f-4c580288026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658675a-5db8-4977-8d11-86549217cce5",
        "cursor": {
          "ref": "c0f29700-a432-42bd-bad1-c51066aa77f0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c1e9c602-13b9-4d97-ab0c-aba5ea41d54c"
        },
        "item": {
          "id": "e658675a-5db8-4977-8d11-86549217cce5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7079b65f-cece-4a98-ae94-2bb1ce1e654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c42ec8-5523-4c8d-ad80-330cad8693b0",
        "cursor": {
          "ref": "66c83d60-fe5f-4e72-aa98-c2255ba3e469",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a5d8f656-9fe3-4f62-93d4-170b43d0b33c"
        },
        "item": {
          "id": "21c42ec8-5523-4c8d-ad80-330cad8693b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8aa12ba-dff7-4d44-bf5f-2949b67d1c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76412ff5-4c87-4604-a3f9-8e39d237737e",
        "cursor": {
          "ref": "aa8232ff-d114-4b52-b731-acb0f3161f00",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "18ecca7e-99f0-49d7-86fc-299d8f4ed237"
        },
        "item": {
          "id": "76412ff5-4c87-4604-a3f9-8e39d237737e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "53f3e206-2630-4ae6-a922-bdb88ded01c7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 702,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95692eea-bad5-42de-b72c-a8733f371310",
        "cursor": {
          "ref": "f97bae81-d2f6-413c-947d-fdf1c9bb263e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "35b745a8-c041-4cc3-a019-bf91d83ff5c3"
        },
        "item": {
          "id": "95692eea-bad5-42de-b72c-a8733f371310",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d3e5f4e-7eff-4c55-82a2-e7e7cd9ae826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9641be47-e397-4624-8451-51e174410ce7",
        "cursor": {
          "ref": "5cb214c0-2c31-47d0-8550-37d09df64ea9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a714fd57-74e8-4fdb-8ae2-99f7b29e8456"
        },
        "item": {
          "id": "9641be47-e397-4624-8451-51e174410ce7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "59f9809c-7975-4a08-a609-0e1f89558c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5353b4af-c6bf-4dc4-86b5-d3070558a273",
        "cursor": {
          "ref": "7095dc0a-2169-4df7-ade4-25a20084005e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "051e1805-9c62-4d46-90b3-b5f251a4844c"
        },
        "item": {
          "id": "5353b4af-c6bf-4dc4-86b5-d3070558a273",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c468895-5869-4b41-bf42-a69029886a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68920cf8-5c1e-44bb-8673-d0bc9cf8d305",
        "cursor": {
          "ref": "3ad208dd-20c4-4ab5-a6a5-ab84c61339b9",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fdfa4fd8-eb3e-4b2c-813d-d7f3be904ca2"
        },
        "item": {
          "id": "68920cf8-5c1e-44bb-8673-d0bc9cf8d305",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e23244a2-1157-4db6-82f1-22bc27f9cd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed7c733-7b49-4e49-b876-23b69d22b6d2",
        "cursor": {
          "ref": "cc234c56-a9bf-42fa-9d07-fdcd98ccc3c3",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "99353d44-a97b-40a6-8914-c385f6e08f8a"
        },
        "item": {
          "id": "8ed7c733-7b49-4e49-b876-23b69d22b6d2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc627587-23af-42a2-973c-d8e60ddd6b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35c3336-060d-4374-9672-a931b85d75d7",
        "cursor": {
          "ref": "33b3ad3c-90a8-4990-b151-aff92421c82e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6ecef05e-c7d7-4dc7-9d8e-28a2c9953723"
        },
        "item": {
          "id": "d35c3336-060d-4374-9672-a931b85d75d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "72536dea-f2a7-4785-b2d1-627576dec5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d49c015-6450-4954-a724-96b0daf33270",
        "cursor": {
          "ref": "8cc48030-e364-4396-97fa-89eb30c7356b",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "238de5b7-0332-48a8-baa8-9bc178dc833a"
        },
        "item": {
          "id": "3d49c015-6450-4954-a724-96b0daf33270",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bc7fd0ac-30d5-44f9-a34d-81b5b0202164",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 668,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0830d473-e291-4dd9-bd79-0a62c6340375",
        "cursor": {
          "ref": "bcd31ccc-3acd-4cef-990c-7bd2aac4ab5a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3fe2fb0e-2248-4208-aad1-b581da6e65cc"
        },
        "item": {
          "id": "0830d473-e291-4dd9-bd79-0a62c6340375",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "094b9b15-beb1-4dac-8d2c-0e6f7ca393db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3931e89d-9d69-4305-8f0f-19e542a1c713",
        "cursor": {
          "ref": "c445667f-9101-4ee8-baa2-9ae683046625",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c1130d91-1c38-414f-9133-72fec618fe53"
        },
        "item": {
          "id": "3931e89d-9d69-4305-8f0f-19e542a1c713",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00dd02f2-48c6-45c3-8cca-ecfffae5e2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc658a43-6469-4b8e-b73f-18e146e93a7c",
        "cursor": {
          "ref": "50d7bf87-1a27-4dd7-9091-1410287dc345",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "52439235-614e-4947-acef-5952aaff59d4"
        },
        "item": {
          "id": "dc658a43-6469-4b8e-b73f-18e146e93a7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f3622a89-1f1e-4504-80d7-37dd84f64e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f183b3e-08da-4641-a247-381d16184fa8",
        "cursor": {
          "ref": "c7e7beeb-c886-4704-9c4f-10e616ff272f",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "83907c1e-d7a7-40e9-aea1-a457bfc7d06d"
        },
        "item": {
          "id": "1f183b3e-08da-4641-a247-381d16184fa8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8a9153b4-c095-4d8a-a233-b58aa957190a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dee5ff-9407-486b-ab44-f1f2d0bafda3",
        "cursor": {
          "ref": "a74b09d4-9736-4169-93a3-2c8274cc5994",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9a056e3f-c857-4699-8060-c265ed1fa24a"
        },
        "item": {
          "id": "b2dee5ff-9407-486b-ab44-f1f2d0bafda3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "196dc8b5-b8a9-4a5b-a161-9345c42a4b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0425f747-90f8-4656-a0e6-8b2ec281652c",
        "cursor": {
          "ref": "6fb09176-770b-472b-ad37-b438c10ded1f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "55b45031-4294-4529-a12c-cd89909373c0"
        },
        "item": {
          "id": "0425f747-90f8-4656-a0e6-8b2ec281652c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fc560502-ae15-45df-9839-2f7adb93b96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9848dbb7-8273-4288-8456-5a0dcd3517f2",
        "cursor": {
          "ref": "9258818a-1c39-4e27-bff1-aa88a2ff82d9",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4f08d9c0-a70b-4470-aaac-5d701b3c4ba4"
        },
        "item": {
          "id": "9848dbb7-8273-4288-8456-5a0dcd3517f2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "23d2caf3-0728-4694-8a70-aa5172447811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1221,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de06f0d3-36dd-4864-9e92-d5aa267aa3a5",
        "cursor": {
          "ref": "de051829-d1ab-4b3e-a422-1af736119e87",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b699c8e0-72ba-4a38-be0e-de6ee99ff684"
        },
        "item": {
          "id": "de06f0d3-36dd-4864-9e92-d5aa267aa3a5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dabfe19f-4fb5-46b3-976d-b031d8e77560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2726,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82667e58-90f3-43d4-9d7a-bc1f8184cc9c",
        "cursor": {
          "ref": "fa51bcc0-a5b7-43f3-867d-9f017787bc68",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b66be59e-deb6-4f02-ac77-0bdbf0f18a78"
        },
        "item": {
          "id": "82667e58-90f3-43d4-9d7a-bc1f8184cc9c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0e430b64-ca43-4b7c-8772-0e3bb499821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef66680f-2705-4ad5-a30a-e5169b86e075",
        "cursor": {
          "ref": "f929c30b-cd0d-4f80-a8f7-fa5be1ac66e3",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "92735d41-6368-4314-b066-266a87a67c92"
        },
        "item": {
          "id": "ef66680f-2705-4ad5-a30a-e5169b86e075",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "078ae1bb-484b-40ea-b02b-5a7e54033d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1394,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c8b225-d158-4be9-bd31-b0dc6aec8eff",
        "cursor": {
          "ref": "2ef075ca-b020-4373-9285-d6c9eab185dd",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0ece302e-5be5-4a7d-8793-6b6adc1541ac"
        },
        "item": {
          "id": "a2c8b225-d158-4be9-bd31-b0dc6aec8eff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "eaf0be8c-df2f-4b07-b0bd-69e79f408d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f62b03b-22cf-4bc9-b7af-2d53f311eda9",
        "cursor": {
          "ref": "44ff41d5-eec5-42b3-a817-1bb29f9ea9a9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19137a92-bc9b-4fc9-8822-e6d4ef3893ec"
        },
        "item": {
          "id": "6f62b03b-22cf-4bc9-b7af-2d53f311eda9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b05adaf-ece8-4f98-9ab0-4fe435278d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb46dea-772d-4530-941a-c0c8bac4ba9c",
        "cursor": {
          "ref": "213a9b23-3aae-4953-a304-9f0db2b8ab1b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "620ac009-0103-44c0-a0b7-4bced5229c90"
        },
        "item": {
          "id": "edb46dea-772d-4530-941a-c0c8bac4ba9c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c9457fb8-3db3-4677-802d-ea57d517b39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b733c8f-b099-4ad8-b831-f4699ef1fa89",
        "cursor": {
          "ref": "445bb1a8-e20a-47e6-a36b-c84addd65ec8",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5332afe9-88e2-4c0f-9d82-47eb82f2218f"
        },
        "item": {
          "id": "9b733c8f-b099-4ad8-b831-f4699ef1fa89",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7dfbacae-a549-4554-83a2-86aebb2dd447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21168fd7-ce45-4a24-b222-73e6bde7b217",
        "cursor": {
          "ref": "115e9287-b980-4197-b8a2-00598eebcfbd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e0c88ba0-fec3-4b42-a987-dd58ff37ccdb"
        },
        "item": {
          "id": "21168fd7-ce45-4a24-b222-73e6bde7b217",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f87871d5-2123-459e-8c1c-903b12242443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098c95ba-af9e-44b1-9a61-1a468f0f8ffd",
        "cursor": {
          "ref": "704135ed-0471-435b-b595-515de942180b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5ed98eea-b2f4-491d-a6e6-763e6dac43aa"
        },
        "item": {
          "id": "098c95ba-af9e-44b1-9a61-1a468f0f8ffd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac785e35-eab8-45d1-a50b-31850f3695d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d9c4ed-5471-4c55-94f3-9354232fb58f",
        "cursor": {
          "ref": "0e16f778-88b2-4cb1-8c4d-a700ab61c18b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73ffb9e5-0459-4488-9752-9e9bf51b014f"
        },
        "item": {
          "id": "61d9c4ed-5471-4c55-94f3-9354232fb58f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da416dc9-977d-4da8-96fd-81500d439438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dc8f56-f41b-4b98-97b5-b40eda8b4c03",
        "cursor": {
          "ref": "cfa5afde-b6b8-4ed5-bfb4-1d2587ac389a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "27ff0768-712b-48c1-81f9-b0a1cd426d09"
        },
        "item": {
          "id": "42dc8f56-f41b-4b98-97b5-b40eda8b4c03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7236a449-8105-429e-8a01-04957760cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c482b0-6012-4495-8b1f-9453bc6f6198",
        "cursor": {
          "ref": "815f0c24-897d-4187-9625-0eb03c06451a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "480283b2-e192-4383-9160-abdaf30d4735"
        },
        "item": {
          "id": "a5c482b0-6012-4495-8b1f-9453bc6f6198",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1c096feb-747d-46a8-9f4a-96bc34069673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a491c0e-4d0b-43e7-876b-4854016af87d",
        "cursor": {
          "ref": "66b72bb7-365b-4b12-9bea-4fc9036b5d9e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c2d02ffe-6bf6-4bb6-9183-5bd4aa813fec"
        },
        "item": {
          "id": "3a491c0e-4d0b-43e7-876b-4854016af87d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2862e624-d577-43e1-92c8-a5394977a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52bcb0-d32b-43c9-8916-b21d020de2dd",
        "cursor": {
          "ref": "a1aaedb7-318b-4398-b63f-ba18538c7832",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "964b3769-54d2-4dd3-9b6c-8d26a6493d94"
        },
        "item": {
          "id": "1e52bcb0-d32b-43c9-8916-b21d020de2dd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "54ed0d6f-344c-494b-83a5-82a95d08885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa95d077-7fc9-4123-b9bc-f2fd0f91aa4c",
        "cursor": {
          "ref": "11252052-4353-4a1c-987d-321f629a85d1",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "40270395-a70a-45b3-9e89-a88f4f6fcc46"
        },
        "item": {
          "id": "aa95d077-7fc9-4123-b9bc-f2fd0f91aa4c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2c7a3531-8d43-44c5-8000-3c1379a19e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0577b2da-7851-4440-b31f-305dcd0e0ce0",
        "cursor": {
          "ref": "ace13c9a-efdb-4170-a444-ea2e8c53d47c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b2d067d9-1fd9-4db4-8717-4653d3fb8451"
        },
        "item": {
          "id": "0577b2da-7851-4440-b31f-305dcd0e0ce0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ec31b38-c48d-4e74-8250-508dce642b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410a7cf-1f85-4cd0-a27f-422b003ea221",
        "cursor": {
          "ref": "119e658f-db1e-483d-950a-c4e11415a5ae",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3aa9d065-dba5-4ec2-a196-0e239e79826e"
        },
        "item": {
          "id": "b410a7cf-1f85-4cd0-a27f-422b003ea221",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "698e88f2-56d0-4057-bc71-7645394c2a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a3d219-e6c3-409a-a771-d4df486048b7",
        "cursor": {
          "ref": "846db679-d173-48c0-861d-653b0ad4b1b6",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3c500ae3-a5e5-4830-a323-58b903b362c4"
        },
        "item": {
          "id": "30a3d219-e6c3-409a-a771-d4df486048b7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "64b20bec-4470-44ba-8fef-652d642ec4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f90768-2e72-4d43-8558-e4ff362faf3b",
        "cursor": {
          "ref": "309b6021-cd9f-416d-9773-62628a09db86",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "acb7a8e4-a055-4d3f-9c39-050214000b4c"
        },
        "item": {
          "id": "81f90768-2e72-4d43-8558-e4ff362faf3b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "94a3f1ff-a578-4c32-801f-4a27dfca74df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c337473-8b74-49ee-a568-b110598daa96",
        "cursor": {
          "ref": "f93014f8-00a9-4018-95f4-706587651904",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92790dcb-94d0-4f1b-8868-30dcda63cbda"
        },
        "item": {
          "id": "9c337473-8b74-49ee-a568-b110598daa96",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "66c34706-7d62-4796-b4a7-98f020e8e5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636171a6-84b8-4378-8e36-81745fc09789",
        "cursor": {
          "ref": "385ed517-afa5-416d-9587-4bf0fec63673",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "47495977-993a-4724-95bf-289bd831e499"
        },
        "item": {
          "id": "636171a6-84b8-4378-8e36-81745fc09789",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ceee1c16-1220-4c19-bf92-b5d27c41eb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc59e95-cc99-4924-a4c4-eeb426a2d575",
        "cursor": {
          "ref": "a33d13e2-2c55-4e06-b44f-14642c8d1ed5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2d1be097-6479-44fa-bafd-7646c5edceb2"
        },
        "item": {
          "id": "dfc59e95-cc99-4924-a4c4-eeb426a2d575",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7c7ad714-239a-48c9-8f30-ba06924b8a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c78d6cb-313f-492b-9343-b392c8b6b2a1",
        "cursor": {
          "ref": "0eff687f-a207-4667-9971-c81da034c23c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6f274827-83c7-4d00-8243-57077cca611d"
        },
        "item": {
          "id": "3c78d6cb-313f-492b-9343-b392c8b6b2a1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "06fa83b1-feee-4d68-bde6-82081f99ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b64b0-c8b6-43f5-b740-54a0b18f023b",
        "cursor": {
          "ref": "c30fbb68-b456-4ac0-ad20-a773fd5329e6",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "83496075-481f-4fd4-b922-b58019d9c390"
        },
        "item": {
          "id": "ed3b64b0-c8b6-43f5-b740-54a0b18f023b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fe91d836-a36f-4876-a8e8-31478961a728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2381bbb1-7b1d-4eab-90f2-5dbd547d4ba2",
        "cursor": {
          "ref": "42f48392-2418-46d5-8fda-c6d2e67bba5f",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "228a19a2-cefe-4266-811d-80072d419ab2"
        },
        "item": {
          "id": "2381bbb1-7b1d-4eab-90f2-5dbd547d4ba2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "103d46aa-a64f-476f-b34a-08a509185a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08eddfc-a628-4a87-9c3b-7a3ecd883ba2",
        "cursor": {
          "ref": "8f60ae14-d64f-45f6-8da4-63f4a79130c6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2772e792-6383-4162-a072-302bb08242c3"
        },
        "item": {
          "id": "a08eddfc-a628-4a87-9c3b-7a3ecd883ba2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6d8fbd9f-2dea-4048-9262-4ffeb7c779ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a66763-0916-4ca8-ac7f-c35307f32f55",
        "cursor": {
          "ref": "2342e39f-554a-4eb1-9e29-ead4026f7334",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fdd5b43b-869b-465b-a853-67c706f0dc27"
        },
        "item": {
          "id": "12a66763-0916-4ca8-ac7f-c35307f32f55",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15cd6deb-feea-4b8a-8e0e-4ba5b58cff0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c27339-17f4-4754-a04c-27919f5aa1c5",
        "cursor": {
          "ref": "0d4a20bc-f379-4c58-9cae-b1962b4407b9",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85dc271a-4837-4a9d-b3f1-2ab9388094ea"
        },
        "item": {
          "id": "a8c27339-17f4-4754-a04c-27919f5aa1c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6de8a544-c190-49f6-b29b-09a745107322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45775951-0277-4fff-9ff5-2119b74f1e30",
        "cursor": {
          "ref": "822716f0-cc87-496b-9862-01d1e7e6f331",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a52c17fc-0126-46ae-a7fa-afce711c8acd"
        },
        "item": {
          "id": "45775951-0277-4fff-9ff5-2119b74f1e30",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e10f4a9-d8aa-401a-83de-664cf5e3ca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24044cae-95a2-4497-a6d4-a20d6ef7bb42",
        "cursor": {
          "ref": "d3009cf9-9f46-43ba-bc0c-eeb25a5fe3b0",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2968c151-ef3e-4661-b656-1e8114fd3967"
        },
        "item": {
          "id": "24044cae-95a2-4497-a6d4-a20d6ef7bb42",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0223f949-f6f3-405f-bb0a-d52aee66baab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40266ef-8de6-422e-ada4-123480297409",
        "cursor": {
          "ref": "b070c04c-f0aa-4834-b9be-439d251081ce",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a5ddf395-3701-444a-be80-a05b01afc106"
        },
        "item": {
          "id": "c40266ef-8de6-422e-ada4-123480297409",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5d620d56-77b4-4853-8070-db26f04f2f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa7df2c-2269-410d-8492-dbd6681e455a",
        "cursor": {
          "ref": "432e8add-2a7b-4592-b34b-8652b30e9c9f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b1483d74-53a1-4c71-a9fd-871ec004dbc2"
        },
        "item": {
          "id": "ffa7df2c-2269-410d-8492-dbd6681e455a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7a514460-a81b-4c0b-a166-05a1347c466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56a34d1-0d4c-4ecc-8b8a-a84e7e039c3b",
        "cursor": {
          "ref": "0f2490d2-a04c-4176-a553-6381a2d7d9ab",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c09cea2-bec7-4441-8275-13c8939edf35"
        },
        "item": {
          "id": "a56a34d1-0d4c-4ecc-8b8a-a84e7e039c3b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d42ae782-823e-4de9-a6e9-43e73b4d886e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedf4008-8136-423e-a742-cd16f2cbe138",
        "cursor": {
          "ref": "0d471656-90f7-440e-a801-67b935ef52c7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b2b9c3c0-347f-448a-ab1a-df6dad61dbef"
        },
        "item": {
          "id": "dedf4008-8136-423e-a742-cd16f2cbe138",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "876eb6e5-d18f-431a-a4a7-e9226506ceeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f3b923-f1c8-49ac-8cb6-090a532636f9",
        "cursor": {
          "ref": "1935250b-c988-4b91-9b65-36fe5a567bc0",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c8cff4f0-1b85-4f1c-9e57-cb595171fbfb"
        },
        "item": {
          "id": "71f3b923-f1c8-49ac-8cb6-090a532636f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8cc6211b-5e47-4ffe-b6c0-c5b8ffb997b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b0138c-d5ac-49c5-9c83-00138ded5040",
        "cursor": {
          "ref": "40ff678a-dc0f-4278-ae48-26aeb1cb789b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3c3370b2-4534-4063-bb2b-7156c41c8521"
        },
        "item": {
          "id": "25b0138c-d5ac-49c5-9c83-00138ded5040",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a177b004-0e3b-4b63-953f-27f6652bc037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764925b6-abaa-4d40-9da7-05f0a51257a6",
        "cursor": {
          "ref": "05a7d77d-8501-4318-913b-8080dc2b8248",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c8ab8e05-0416-428b-b43c-efe85c526ae7"
        },
        "item": {
          "id": "764925b6-abaa-4d40-9da7-05f0a51257a6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc0e559a-2372-4178-92ca-8a3c7d276e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d31d41-f6d7-4ee7-9ccf-9c4f9bd2306b",
        "cursor": {
          "ref": "bd33545a-53a8-4600-910d-794b6d80ddd0",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5349c819-4d89-4429-b88c-4dd7702896f0"
        },
        "item": {
          "id": "45d31d41-f6d7-4ee7-9ccf-9c4f9bd2306b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "764b847f-a405-496c-961e-6153bd0a111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba519554-a004-4544-8f27-c600c2c474e7",
        "cursor": {
          "ref": "42985033-f478-4871-8119-2dbf5d64b6fb",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c3d76ff8-aad7-4538-a15a-034434c41371"
        },
        "item": {
          "id": "ba519554-a004-4544-8f27-c600c2c474e7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "daf7eb88-a8fd-4c7a-a852-7dd4f5bd06ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406f2ab1-6f2c-409e-91d2-151840f1160b",
        "cursor": {
          "ref": "0dcdeaa2-e5c4-419e-b334-6ba5b42f7142",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5cfa703e-3bdd-46b8-bcff-526de5b919d2"
        },
        "item": {
          "id": "406f2ab1-6f2c-409e-91d2-151840f1160b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2375600a-c28b-442c-973c-1398ef3c18d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b1ace9-23f2-4ed4-bcfd-1848c12400ad",
        "cursor": {
          "ref": "f70413d1-cac6-448b-98fd-e4ed2f27a188",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c1930e12-eaf2-4b76-93bd-b5c6e19badc3"
        },
        "item": {
          "id": "c1b1ace9-23f2-4ed4-bcfd-1848c12400ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "660ff7a1-61b7-4106-9738-0c98c7331311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eebe92-d457-49cb-9b1b-8b3dc34289fd",
        "cursor": {
          "ref": "11bba0a1-378c-443d-b2b2-4f5cd6a55fe6",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b340a7ca-80b5-48fd-9fd5-c41ced0c3c4c"
        },
        "item": {
          "id": "56eebe92-d457-49cb-9b1b-8b3dc34289fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7428810a-bf51-4664-8cc7-0c3080e583d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515be12c-6fee-461f-b2c6-3d552c035745",
        "cursor": {
          "ref": "3bd324e4-f33a-4c78-9c16-282f5bca86d8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c5bbf5b-200d-4b8e-83ba-f572b8dd7982"
        },
        "item": {
          "id": "515be12c-6fee-461f-b2c6-3d552c035745",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1cf56f49-e49a-4c53-97c6-15c00dfce73d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a357b0-a888-402d-aaee-8eea47c3f90c",
        "cursor": {
          "ref": "5028d9d6-a128-42ec-91e0-ef17268a56e6",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e08ac7d0-31e3-4b0d-b28b-a7d4108606d5"
        },
        "item": {
          "id": "67a357b0-a888-402d-aaee-8eea47c3f90c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2e0cd72f-c26d-48c3-ba55-a2c842c91333",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 608,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a7d152-7bb9-4af7-8e6b-850b83561790",
        "cursor": {
          "ref": "e3f5449b-ccb9-492b-ad71-a83087d97870",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7b63dd39-5dc8-4bac-9609-95f69fb4a178"
        },
        "item": {
          "id": "23a7d152-7bb9-4af7-8e6b-850b83561790",
          "name": "credentials_issue"
        },
        "response": {
          "id": "934c240d-10b1-46df-a66d-3f792d218d2c",
          "status": "Created",
          "code": 201,
          "responseTime": 7340,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527eea1-7cbb-4e08-8201-764da09ecfb1",
        "cursor": {
          "ref": "27950ad0-8a99-4ed7-8cc2-0e652470f289",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ee72662a-e161-4b9d-8607-5f97580ecc8f"
        },
        "item": {
          "id": "4527eea1-7cbb-4e08-8201-764da09ecfb1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "939701df-b08b-4693-9029-16d9620bb50d",
          "status": "Created",
          "code": 201,
          "responseTime": 6070,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe32c7-9928-4fc0-a2e0-7b961a315d21",
        "cursor": {
          "ref": "c835fdce-01cb-4194-9a0c-58662e10aa47",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b0240730-43ac-4c0c-8629-160d00f439eb"
        },
        "item": {
          "id": "8cfe32c7-9928-4fc0-a2e0-7b961a315d21",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c1d86462-79c0-45e1-a652-edc2e5d36188",
          "status": "Created",
          "code": 201,
          "responseTime": 5871,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dac87e3-a99c-4f40-97c0-9387fcef9639",
        "cursor": {
          "ref": "115be670-088f-4a4f-ada2-d4fbff58d6e0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b8a0475d-569a-4cbc-a966-e558d377a914"
        },
        "item": {
          "id": "7dac87e3-a99c-4f40-97c0-9387fcef9639",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5901bfdb-1754-4b29-89d0-e09371651ba6",
          "status": "Created",
          "code": 201,
          "responseTime": 6114,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b016a89a-bb83-4ba5-8607-0139361a135f",
        "cursor": {
          "ref": "82429820-0731-425d-bad5-c48899778c8f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "259bd5ce-05f8-478b-9198-152625d56fdc"
        },
        "item": {
          "id": "b016a89a-bb83-4ba5-8607-0139361a135f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "22065caa-30d6-4cb8-b833-8908e1d4206f",
          "status": "Created",
          "code": 201,
          "responseTime": 6136,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c418ab-4389-4e76-9762-ddb44b9fea8f",
        "cursor": {
          "ref": "13b21211-9bab-4a46-9998-2ec899c4f199",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9ebb7d36-8c71-4876-bb55-784fe5b22547"
        },
        "item": {
          "id": "69c418ab-4389-4e76-9762-ddb44b9fea8f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "03900c2f-c46a-4c6d-b0c4-8022b933a128",
          "status": "Created",
          "code": 201,
          "responseTime": 8691,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6691437c-4a39-4c55-a9ea-3a2bca6c3085",
        "cursor": {
          "ref": "b9fb96c5-76d2-4344-b2ea-97ac834c5ecd",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9f62199-faf8-4852-bb3a-4bdd60423468"
        },
        "item": {
          "id": "6691437c-4a39-4c55-a9ea-3a2bca6c3085",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd924937-f2bf-4d0b-8feb-9b377cf24d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6691437c-4a39-4c55-a9ea-3a2bca6c3085",
        "cursor": {
          "ref": "b9fb96c5-76d2-4344-b2ea-97ac834c5ecd",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9f62199-faf8-4852-bb3a-4bdd60423468"
        },
        "item": {
          "id": "6691437c-4a39-4c55-a9ea-3a2bca6c3085",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd924937-f2bf-4d0b-8feb-9b377cf24d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227d7987-f20f-4829-accd-7768cfee39bb",
        "cursor": {
          "ref": "a6983496-1116-48ac-b142-6912b407e233",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "36295a36-b5b3-4916-bb32-8a70a9ded7f8"
        },
        "item": {
          "id": "227d7987-f20f-4829-accd-7768cfee39bb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e067aecb-d708-4c12-ae41-2850e89768f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3700da4f-da33-4324-8a3f-160ea2d7233b",
        "cursor": {
          "ref": "1710b06c-f251-4ece-b146-0a480e57576a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de4cf2d8-4859-45e8-979b-11005d37589c"
        },
        "item": {
          "id": "3700da4f-da33-4324-8a3f-160ea2d7233b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26d2387d-c402-4a75-aa63-b444e5c1a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c4944-7f32-4382-943c-b68eca570b7d",
        "cursor": {
          "ref": "04aae49a-86fd-4984-9c4a-d1ab8becb917",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "01ef7d31-a916-431c-a19b-1ba53df48ae7"
        },
        "item": {
          "id": "fc8c4944-7f32-4382-943c-b68eca570b7d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "983ab0db-330a-4795-bad3-baf4f16ae91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65eea6-62ef-487c-a1ba-55be8552b701",
        "cursor": {
          "ref": "468c3eb7-20ec-48e7-bca3-b206cb2a3c22",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "49a5e597-e4d5-4018-8e7d-06b5076814f3"
        },
        "item": {
          "id": "fa65eea6-62ef-487c-a1ba-55be8552b701",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec3ea72f-5665-4a9b-add2-df438df7d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c33310-852a-47bf-a99a-dc01e6b8c7e5",
        "cursor": {
          "ref": "52947f7d-75e9-48c0-a490-5ef808eb5d2c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "543becee-de7e-41b7-b9bd-a1ecaafed970"
        },
        "item": {
          "id": "e8c33310-852a-47bf-a99a-dc01e6b8c7e5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b932bc2-be77-41d1-8beb-5ff575f80afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589efee9-4127-47ae-b7eb-94c10103d4da",
        "cursor": {
          "ref": "b1442d5c-5cec-471c-91a6-25dc247f6adb",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "adee8581-6acd-411c-a453-4122ddd13325"
        },
        "item": {
          "id": "589efee9-4127-47ae-b7eb-94c10103d4da",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15f273b1-4b31-49e1-975c-e148746aaa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd9717f-e5f1-44f9-add1-13f225d0fc9a",
        "cursor": {
          "ref": "21306f79-4888-45f2-95cc-535066fbabfd",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a3837a8-c2b9-45f0-8879-a4d007607e65"
        },
        "item": {
          "id": "5dd9717f-e5f1-44f9-add1-13f225d0fc9a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e264fb9b-6db7-4085-9744-f57eb2daa58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42795428-836f-413f-b2e0-507de2db7445",
        "cursor": {
          "ref": "ceb829e2-571b-4c8d-9289-c062a1ccd32f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "32b6fd6a-6633-446a-9e83-aa7d5cc6d90e"
        },
        "item": {
          "id": "42795428-836f-413f-b2e0-507de2db7445",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9cf7ad7f-b299-4b1f-91e7-2d6fcea25460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6bc14-5aff-4e9e-975a-692317ce3a2d",
        "cursor": {
          "ref": "873f981f-113f-492c-854f-b8a22d876027",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "03dad40f-d0bc-41e3-85c5-540949ba5793"
        },
        "item": {
          "id": "ecb6bc14-5aff-4e9e-975a-692317ce3a2d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6cd6cc51-b115-4787-995e-6d68b02d2a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65ab96a-8abb-4353-a519-a1498b5d12ca",
        "cursor": {
          "ref": "50b667d1-9900-494d-9dec-8a6b2dbb3a92",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a513f9d5-bff7-4637-9aec-2f1d818aebd0"
        },
        "item": {
          "id": "e65ab96a-8abb-4353-a519-a1498b5d12ca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a7a0a355-6335-4a8f-b583-958d0f4d471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e4d929-7618-4b94-9c72-ee5c03a43f47",
        "cursor": {
          "ref": "04ef6470-cd1e-402a-93ce-72d56e627c5c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb69ff76-13e3-4984-bebc-f664af604f4d"
        },
        "item": {
          "id": "36e4d929-7618-4b94-9c72-ee5c03a43f47",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "adce1351-20de-4f43-952a-53aa6b2684e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dfa077-967f-45f7-b979-a5468744ee69",
        "cursor": {
          "ref": "323927de-794f-44b7-a418-4e7a0e28ef29",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7c464992-498f-4005-8d75-209ed85861b4"
        },
        "item": {
          "id": "61dfa077-967f-45f7-b979-a5468744ee69",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b49a5d9b-5138-4362-a49c-b952fc2d6bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d51ab2a-741a-4134-b46a-7d85ddc0bd1e",
        "cursor": {
          "ref": "4802b76e-d7c2-45de-9d73-a75ca8bfb869",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "67f46a20-4ec2-4d24-aae4-cce6e2cf5c4a"
        },
        "item": {
          "id": "3d51ab2a-741a-4134-b46a-7d85ddc0bd1e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c32c72a-d20a-4388-93bc-c3554851230a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca0f83c-6c7f-4af1-8a4b-884846f31032",
        "cursor": {
          "ref": "480cbe65-8ae1-4f12-8b2a-327434a15e90",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b8ae299b-b630-4bbb-939f-cba80c578c97"
        },
        "item": {
          "id": "6ca0f83c-6c7f-4af1-8a4b-884846f31032",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a60fe6bc-18ac-4ced-9fd4-fddc1e65868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a73bd5-cf32-431d-8e6d-b0fd6be7e79a",
        "cursor": {
          "ref": "a26d107a-da3c-442a-84dc-3b18a3f67695",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8426120d-5eed-4347-884f-a7da8399fc06"
        },
        "item": {
          "id": "a0a73bd5-cf32-431d-8e6d-b0fd6be7e79a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06ddec2f-252f-4d66-a6a5-c269fdc51654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c01892-1304-4be7-8fb7-dcc8465bcd2a",
        "cursor": {
          "ref": "f1c86d7a-0538-484c-8101-c05e469f56f3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "520f6d25-75ac-41cf-8884-fc7d9416d2e3"
        },
        "item": {
          "id": "79c01892-1304-4be7-8fb7-dcc8465bcd2a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9b8ddbe-f6e1-49dd-94ac-a49708b3aa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2be347-f650-49d5-8f6b-944d38807f0f",
        "cursor": {
          "ref": "094c28e1-9ca2-4b42-8379-09165b50a803",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9838792-d54f-4402-87e2-7099c14095d4"
        },
        "item": {
          "id": "6f2be347-f650-49d5-8f6b-944d38807f0f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f486544-8bcd-418b-9a57-6d32f6e73360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223316a0-4dca-4952-9f9f-34ded679e20a",
        "cursor": {
          "ref": "01d1b6a4-abda-4f9d-8012-79b51510fc32",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "075d5edf-005f-4609-bab2-38108332181e"
        },
        "item": {
          "id": "223316a0-4dca-4952-9f9f-34ded679e20a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42b1397f-f1a1-47f5-8d31-df9ddbe5ec68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c67fe-73e1-4b76-8de6-46b22de1b0e6",
        "cursor": {
          "ref": "5e1e089b-9020-4218-946c-c225b15b7f48",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b73162dd-f20b-49bc-987f-9870fe1b1d75"
        },
        "item": {
          "id": "547c67fe-73e1-4b76-8de6-46b22de1b0e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24ba2866-506f-406d-a0c3-6877fa796c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8770e2-8232-4b3d-b6c6-6f3414f566e8",
        "cursor": {
          "ref": "a0fc13bb-b36d-45e6-bb30-8d786c552a37",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "370569e4-b0ce-4e71-8a01-faccaf0e8005"
        },
        "item": {
          "id": "6a8770e2-8232-4b3d-b6c6-6f3414f566e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "702284be-a98e-4257-b1b8-fce63460b916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895ef7cf-0a0a-4afe-88d2-77cca9b22ccf",
        "cursor": {
          "ref": "0c52f313-6e4d-4cac-87e4-357325316992",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "953e7e25-db1a-4dd7-915e-6e434b26f276"
        },
        "item": {
          "id": "895ef7cf-0a0a-4afe-88d2-77cca9b22ccf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96844bf5-e18d-4f1b-a604-9660f76dc2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a667711-6e78-46db-a8c0-b8106730ac58",
        "cursor": {
          "ref": "51ffb164-c1cd-4f26-b223-9ad0a6825e03",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "341a0187-93fd-4d42-a4a3-bd06998c5762"
        },
        "item": {
          "id": "7a667711-6e78-46db-a8c0-b8106730ac58",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed722c44-c808-4a8f-a19f-cb26aa32e822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb7ee57-f884-4924-b7ff-86bf0e7c06de",
        "cursor": {
          "ref": "a2b28f4b-1bac-4100-9ef7-b32fde393be1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b34971a-ac16-4672-af97-1cdfa9a1e9a2"
        },
        "item": {
          "id": "eeb7ee57-f884-4924-b7ff-86bf0e7c06de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6e7d00b-6ceb-48ea-a55b-e2f5207a784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e805af-5a4f-46cb-a344-e22c1ec38048",
        "cursor": {
          "ref": "c1898518-896b-4995-aa28-8080f25e345b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a3619ee2-c98c-4691-a7db-14dd7dc65759"
        },
        "item": {
          "id": "66e805af-5a4f-46cb-a344-e22c1ec38048",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19093d0a-c3db-49d8-a20a-50c56a2bfa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e6183c-997a-4870-94ac-b341d83d5ae3",
        "cursor": {
          "ref": "de0d8d6f-a12b-40c6-ae4a-aef1a98c70d2",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a195567-326f-4b6f-bc8a-8e3075f1df19"
        },
        "item": {
          "id": "76e6183c-997a-4870-94ac-b341d83d5ae3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd43e198-78ea-4f59-9fc0-498960109bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa057840-cc38-4aae-89c9-44b93c105e97",
        "cursor": {
          "ref": "25c75eb7-1c70-4eac-add4-1ae9b37b9102",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4893a3f8-0c6b-4e0a-966c-bc772a9932e9"
        },
        "item": {
          "id": "fa057840-cc38-4aae-89c9-44b93c105e97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "640d4191-b485-4dfd-befc-fe538dc9d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46847f32-8e11-46d4-9105-164edbad1aaa",
        "cursor": {
          "ref": "ad497581-7c79-48e9-8c46-ca47f651ce46",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "363872cb-5ab6-4a5d-b8a4-1a978f2d5b85"
        },
        "item": {
          "id": "46847f32-8e11-46d4-9105-164edbad1aaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c83903d4-aa0b-4cc8-8e24-46138229b140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf02f8ab-30f1-4555-9080-57019d1de19b",
        "cursor": {
          "ref": "82d6a00a-7a61-40f8-a028-e6476ae619b1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cd060637-36cd-42f1-9318-d2f89f9f62c4"
        },
        "item": {
          "id": "bf02f8ab-30f1-4555-9080-57019d1de19b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "252f003a-7e2a-4505-83f9-fa7a4f335f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be80230-2439-40d0-ba86-15c3f9a03e90",
        "cursor": {
          "ref": "c7111e90-4820-4150-a179-a318d12dde28",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7b4dc72a-6fbb-4fc7-9fc0-d932bedb29eb"
        },
        "item": {
          "id": "0be80230-2439-40d0-ba86-15c3f9a03e90",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba17d7d1-3112-4d8f-819d-9f6aa8369ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e95baaa-139c-4689-aed0-1d6f7ec61ef8",
        "cursor": {
          "ref": "be080b6f-a616-417f-aec4-fb4a59fd29f6",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1e356f44-0510-44f1-a251-de1ed5afbc2b"
        },
        "item": {
          "id": "8e95baaa-139c-4689-aed0-1d6f7ec61ef8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "30c8a38a-1e28-4065-8e85-5230fa0fcf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05a9aea-8431-4462-b04e-6cb6d895aba0",
        "cursor": {
          "ref": "c852e628-c81a-4815-8cf0-a65f9a3ec665",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "10944086-5876-4fa0-8df9-f3c1d53ed610"
        },
        "item": {
          "id": "e05a9aea-8431-4462-b04e-6cb6d895aba0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1f67e91e-ff61-4365-8d82-13e2fae900bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7981a159-47b3-4fed-9724-7c919c3feb9e",
        "cursor": {
          "ref": "b4318778-93d7-40d0-af8a-9cd28dfded03",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2a3b01f9-e53f-4351-9bfe-4433e1ebedde"
        },
        "item": {
          "id": "7981a159-47b3-4fed-9724-7c919c3feb9e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8235fc5-f8df-47c5-8c9c-bf1d0fb0cf9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3010d2cd-fdde-4a76-b272-bb9304594631",
        "cursor": {
          "ref": "4472d309-cfd0-4adc-af5f-f8a8f2443fbb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dbc46e4f-bc75-4895-a567-21885e1230dc"
        },
        "item": {
          "id": "3010d2cd-fdde-4a76-b272-bb9304594631",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d0626714-0f15-4619-9ba7-7ac3f8af4103",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae543ce8-d3cb-497f-9c91-fd6d0cbed4b5",
        "cursor": {
          "ref": "b5bc5dd4-5ab9-4c3d-8453-34089871c188",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4fa43475-9ca8-4a00-b7dd-b72f73bae957"
        },
        "item": {
          "id": "ae543ce8-d3cb-497f-9c91-fd6d0cbed4b5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6b5aa648-0759-4fb1-868e-8f58b29317d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae543ce8-d3cb-497f-9c91-fd6d0cbed4b5",
        "cursor": {
          "ref": "b5bc5dd4-5ab9-4c3d-8453-34089871c188",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4fa43475-9ca8-4a00-b7dd-b72f73bae957"
        },
        "item": {
          "id": "ae543ce8-d3cb-497f-9c91-fd6d0cbed4b5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6b5aa648-0759-4fb1-868e-8f58b29317d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b46038-fd49-4c84-8d50-8a68e06ee402",
        "cursor": {
          "ref": "786a2fcd-86b0-4298-8a5e-ff2fbed1feee",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ba4729d9-032d-49bb-89e6-0bf18ce2dd05"
        },
        "item": {
          "id": "05b46038-fd49-4c84-8d50-8a68e06ee402",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c608b61-2e02-4544-88b0-9774cfb99570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df9f889-5ea9-4068-bd15-49c73f2d95c2",
        "cursor": {
          "ref": "8587c900-102b-485b-b87a-4062e373a81f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "da8dbc60-c343-41d8-b851-25b5ae59f2a1"
        },
        "item": {
          "id": "2df9f889-5ea9-4068-bd15-49c73f2d95c2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ddb647df-9388-43cc-9570-8db7acc99f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b647602-081f-46d6-bb9a-5e6caa4c9082",
        "cursor": {
          "ref": "588e551a-9b76-446d-85b3-cb575820d171",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1ed2e712-ced4-41ac-9e75-c0ada890c380"
        },
        "item": {
          "id": "8b647602-081f-46d6-bb9a-5e6caa4c9082",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "01b06e15-eeca-439e-8ce7-abd3cc7c74d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f91c84-0071-41c1-8f5f-7329bb88e1cf",
        "cursor": {
          "ref": "a3035aac-931b-4794-953e-59128fa3cbd8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f50d8d64-d30b-4249-a0be-4f2a22d46746"
        },
        "item": {
          "id": "47f91c84-0071-41c1-8f5f-7329bb88e1cf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee6c5203-c644-4d15-87d0-7c5bf4311cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dc0219-db09-46bc-87c0-96d49ceb27c5",
        "cursor": {
          "ref": "3c2eb180-e02f-4806-8381-19d406d3e4c0",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ca257689-365f-4394-8913-d637ab93b36f"
        },
        "item": {
          "id": "c7dc0219-db09-46bc-87c0-96d49ceb27c5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bb22e4e-68f2-46f7-8288-964800e1f48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04649fbf-4e25-45e1-a437-d34750998703",
        "cursor": {
          "ref": "2e0ac7d3-eb2d-4cbd-8f98-06c90c222689",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0f8d677f-ce9c-48ea-a663-bb35f8bae8e1"
        },
        "item": {
          "id": "04649fbf-4e25-45e1-a437-d34750998703",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f28590a-1dfa-408a-bdf7-94eb70fa9496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc3c3e-cd46-4e1f-a813-0586a2c76d35",
        "cursor": {
          "ref": "00ca5b9b-1ea7-4737-92f7-db007d89f7d9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "716c7986-cc08-4d11-a5f6-4e70ef0d9fc7"
        },
        "item": {
          "id": "f2dc3c3e-cd46-4e1f-a813-0586a2c76d35",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "99095f8c-5d1e-4a9b-8431-74e87ae0934f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb3291-4f20-4736-b548-53e402f5b320",
        "cursor": {
          "ref": "75db8e9c-a97b-4cbc-a23a-1628b29d6803",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6a1a0f63-e4ce-4584-b641-60001df8a314"
        },
        "item": {
          "id": "19cb3291-4f20-4736-b548-53e402f5b320",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d55d1d39-e369-4b1c-9fda-a33f2f9b4d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64ff307-7d55-4546-abfb-60fb5aa57d2f",
        "cursor": {
          "ref": "4b03aedc-53ea-4001-a538-aea61e8db71b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f293320a-8a00-4712-a42e-1e9f443e600f"
        },
        "item": {
          "id": "a64ff307-7d55-4546-abfb-60fb5aa57d2f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0af6c895-3d74-469f-839b-8d705e36cb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b42d794-09c4-49f9-9450-d10fa48795d0",
        "cursor": {
          "ref": "00dc3daa-8cc8-4a78-bfe4-ca57275271d5",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "85a76d7b-6561-42d4-9f3e-4d534c5d7284"
        },
        "item": {
          "id": "8b42d794-09c4-49f9-9450-d10fa48795d0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "274d7305-7e4c-47da-835f-8f78407c3b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b467606e-32ce-44e0-ab60-370ca5745cc4",
        "cursor": {
          "ref": "b5c5b0d3-7231-4b33-9605-74e4ccc87706",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d952c612-ffed-4dd3-9c81-dbcd22d0cb9a"
        },
        "item": {
          "id": "b467606e-32ce-44e0-ab60-370ca5745cc4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ef75ca35-787e-4201-82ee-8532bc89a8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a05dac-1700-48dd-bc3f-cbd4f67fa4f0",
        "cursor": {
          "ref": "e72175a1-d2d3-4f7d-90cb-e4edcae161d6",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8cae0289-6ef5-4e7c-82b4-b050056b94ec"
        },
        "item": {
          "id": "33a05dac-1700-48dd-bc3f-cbd4f67fa4f0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e9cd23b1-b6e6-4dbe-976e-b908ddd96598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f773c236-e71a-4098-9caa-2c951539c9a1",
        "cursor": {
          "ref": "f242d734-09a3-499e-bd14-e8ac51520a6e",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5ec0f971-7153-485f-b23e-62bf87ffff9c"
        },
        "item": {
          "id": "f773c236-e71a-4098-9caa-2c951539c9a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bdf83c89-3c93-4569-af64-fe6c7c80eb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79bb9e0-777f-4022-b9a3-55c957b7f68f",
        "cursor": {
          "ref": "ed9269c0-b33f-41a4-992c-1c19f5ed921b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "55719ca9-5c5f-4909-8d26-e5b4c84291be"
        },
        "item": {
          "id": "a79bb9e0-777f-4022-b9a3-55c957b7f68f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bf8907a1-b310-4dcf-888e-f3f48fc4aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9df22ec-117c-4ea8-bd5c-920a517d3ab4",
        "cursor": {
          "ref": "724a04b4-d57d-4d2c-a43c-c5e3fe6427ca",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6aebebbe-6249-4ce9-803e-f2835f1a3706"
        },
        "item": {
          "id": "e9df22ec-117c-4ea8-bd5c-920a517d3ab4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7cb543f4-3e0d-49c2-902e-badae5c2bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f889562-90d4-4182-b47b-2b3a494accdb",
        "cursor": {
          "ref": "a5f4775c-854a-41a7-aee0-57dcd45ab95b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "317f09e9-05f1-4e52-aec2-76d5b3188a24"
        },
        "item": {
          "id": "4f889562-90d4-4182-b47b-2b3a494accdb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6d24f413-e4cd-422d-9625-01950b44c282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01748b8-31fc-4a34-a8d4-2b993e62fe74",
        "cursor": {
          "ref": "36751da0-60a2-4b4b-9970-cafdfc43e651",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f44126e-02e6-4e62-816a-54b7d995691a"
        },
        "item": {
          "id": "b01748b8-31fc-4a34-a8d4-2b993e62fe74",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "77ccb4b6-d2bb-4233-a0be-e140707d87e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8aee5c-7e9a-48df-ae9b-16ee7ce0e5fa",
        "cursor": {
          "ref": "525caa8d-bc2b-47dc-acef-79809084c04c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e2f2db66-bf4e-4364-99a1-207b76506824"
        },
        "item": {
          "id": "9d8aee5c-7e9a-48df-ae9b-16ee7ce0e5fa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "85eed18b-58c1-4a6f-b47f-caf83fb3acfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74825e3a-3536-4a13-aec9-bd1e64b98b8c",
        "cursor": {
          "ref": "3a0f068d-317a-4b0c-8f5b-a28751d6a007",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9dc2a129-dc41-4492-add9-412f7899ede7"
        },
        "item": {
          "id": "74825e3a-3536-4a13-aec9-bd1e64b98b8c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "24bfa521-2d55-4c23-a8a3-114c2436fac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a80623-326c-48c5-8e95-a181ada9e617",
        "cursor": {
          "ref": "4cb88db2-363c-4196-9786-c3ad32d7d5a6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a88cc789-3d80-41e7-9fbc-0586c9bba825"
        },
        "item": {
          "id": "74a80623-326c-48c5-8e95-a181ada9e617",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42d8f45d-6412-40da-bae6-ca26a219d963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edef1426-1d7e-46a0-b2a1-1e4214bfee47",
        "cursor": {
          "ref": "b9ef265b-e111-46de-94f3-0f9cb1a40ae7",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4129c75-3668-4b62-a308-a7453f1392d8"
        },
        "item": {
          "id": "edef1426-1d7e-46a0-b2a1-1e4214bfee47",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b253df94-a47d-4d11-86d3-32ae22639253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a1099-14f5-42b0-a245-ba03e71c4981",
        "cursor": {
          "ref": "5640e9b6-27d8-4f22-9cca-cf119381badb",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2aa9d66d-a974-45c7-a79b-e05047e6dfc7"
        },
        "item": {
          "id": "a19a1099-14f5-42b0-a245-ba03e71c4981",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc4d52b6-5fe9-4352-a1f9-7108c3608c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f97dad0-2b86-4f02-bc59-0444c1b4e645",
        "cursor": {
          "ref": "7309d44f-3712-4a14-9230-fbd9bc33d963",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e809d4bc-91cd-4885-a1b5-a3a7dc47ab12"
        },
        "item": {
          "id": "4f97dad0-2b86-4f02-bc59-0444c1b4e645",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1927868a-2d0e-486b-ac73-430fd15fb57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bf36eb-0f6b-4a3c-8635-b90b482f6f10",
        "cursor": {
          "ref": "58af2edb-750e-4d98-9a99-a959d96cd812",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "727ce282-9946-401d-80d8-351acafceffa"
        },
        "item": {
          "id": "69bf36eb-0f6b-4a3c-8635-b90b482f6f10",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e4ecaf92-b215-408f-9068-65c836d1769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d2147-8110-49b9-b8c7-e848ff502bd6",
        "cursor": {
          "ref": "488d40ae-f2b7-4687-bf38-9c8ddd7320ee",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "18cdecea-3781-4b3b-9988-facab7a2b0c0"
        },
        "item": {
          "id": "747d2147-8110-49b9-b8c7-e848ff502bd6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "df1a9e1f-c008-4f7f-a4f1-092ca11b4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aa3a7d-c4a6-4734-8309-1220b38819c6",
        "cursor": {
          "ref": "0c6c8189-8c1d-4318-aae1-934b152287bf",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba6829b7-a305-4e26-84e2-41289c366ac0"
        },
        "item": {
          "id": "20aa3a7d-c4a6-4734-8309-1220b38819c6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aeb4ae09-660f-4254-b038-fc1e7c836d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53959a61-35a9-460e-bcb9-acfdc2c78313",
        "cursor": {
          "ref": "ff9f5916-2ff7-42f6-b980-3d93cacdaabc",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "966acf30-d4e8-4af4-b0de-06bee0c752af"
        },
        "item": {
          "id": "53959a61-35a9-460e-bcb9-acfdc2c78313",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "10afa068-6745-4177-8df6-0de47699118c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9429c1d9-213f-4c7e-8049-8c092e90c57b",
        "cursor": {
          "ref": "17fcd646-10d2-4d48-adc0-83d15e97758a",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c5f508f6-5896-477b-9dfd-96047ccdd99f"
        },
        "item": {
          "id": "9429c1d9-213f-4c7e-8049-8c092e90c57b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c9468b8-76eb-45b2-abb6-4e853acc0354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559244b7-8cc5-4067-8df0-9dd66ce4dcb8",
        "cursor": {
          "ref": "a6d6aea2-f1ea-48ba-aa0a-7d3d69c778b2",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "498a130a-d189-4542-bcb3-067ccce76cb9"
        },
        "item": {
          "id": "559244b7-8cc5-4067-8df0-9dd66ce4dcb8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8e31d0f0-1bc6-4d53-94b9-de8d37bb6538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91967b1c-e017-4660-b440-fb417d472e35",
        "cursor": {
          "ref": "bf8c1d68-73db-4e40-98d0-6b4eaded7bd5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eadf19aa-bec3-429e-a2cf-ea72eab09b82"
        },
        "item": {
          "id": "91967b1c-e017-4660-b440-fb417d472e35",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5d893497-eade-4a2a-a6a4-df3b881765d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc18e7-330d-4caf-bb11-b8802900a5eb",
        "cursor": {
          "ref": "55435370-4599-4c57-b496-ea7570a296a4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a896742a-73b7-4610-a62f-2b35d577f49f"
        },
        "item": {
          "id": "91cc18e7-330d-4caf-bb11-b8802900a5eb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7ad0b879-3874-45ae-9227-ffb371501707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a4886-a2b3-4eca-8607-d3d6170ca1e7",
        "cursor": {
          "ref": "4311456e-3cd8-4fe5-a573-498f1c3d5508",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5ef638c6-8b97-4fef-9791-5e471b1e508c"
        },
        "item": {
          "id": "dc0a4886-a2b3-4eca-8607-d3d6170ca1e7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "65e786d0-1f78-42d4-a200-12316dd3502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4e6b8-e6c0-41af-8056-610eec785db8",
        "cursor": {
          "ref": "e4210c67-2eea-4f2d-bcf2-bf3409bb5c73",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "91424c72-d364-4986-99d1-6d7ddb2ef511"
        },
        "item": {
          "id": "f4f4e6b8-e6c0-41af-8056-610eec785db8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c51ed440-50b3-4037-85e0-9811b4126bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34c47b1-3dfc-4fc7-9f8b-46af5a80390f",
        "cursor": {
          "ref": "e8fe7c64-0ece-43f6-bf4e-82028d2b1a16",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "efde79f2-83a3-4671-8b6b-fd38e00a3c93"
        },
        "item": {
          "id": "f34c47b1-3dfc-4fc7-9f8b-46af5a80390f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c84efd98-216c-4e8c-b54c-f9e1cf23f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af73dc82-87dc-46eb-9d1c-d11f05a474d6",
        "cursor": {
          "ref": "b0f2528e-15ac-4cee-a8c6-7dcdafc71319",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bd1f1020-9842-405f-b750-bd5e372c6c88"
        },
        "item": {
          "id": "af73dc82-87dc-46eb-9d1c-d11f05a474d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a65bfaa5-17df-46f1-b02c-5b48b59995b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0594a35-c78a-47e4-b0ff-84cee358a7f7",
        "cursor": {
          "ref": "e50c6ef8-64d5-408d-bdf0-39cad30022c6",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f2cae7f7-a8ef-4f77-a75f-5461a743c6ab"
        },
        "item": {
          "id": "d0594a35-c78a-47e4-b0ff-84cee358a7f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "06af9083-5895-4948-b206-d120cc298908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9f3d3a-1716-4cd0-8c0e-9cabda9c8fd7",
        "cursor": {
          "ref": "1dbb2761-8787-4fdc-8eea-fb0a132893c0",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b32ed4c-29d7-431c-9b4f-a1ef752a1c28"
        },
        "item": {
          "id": "8d9f3d3a-1716-4cd0-8c0e-9cabda9c8fd7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4f60f720-ac05-48cc-9fe9-f81780c74ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1429c7-cd47-4940-a3f3-42a4aeda8176",
        "cursor": {
          "ref": "e90708b9-c854-4606-83f8-78fb0d04eedc",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6c34f3b-4a1e-4298-9362-131af7f11945"
        },
        "item": {
          "id": "2b1429c7-cd47-4940-a3f3-42a4aeda8176",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e2ea61e-77a6-4331-919f-9bf0dd9f937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62351454-4bf7-4dd6-8bd6-23c6f6cabb35",
        "cursor": {
          "ref": "a7f18e16-8d2b-45f3-bef0-18bc6bf8d683",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "090fc9cf-02bc-4c80-8778-2d9ceb9c9861"
        },
        "item": {
          "id": "62351454-4bf7-4dd6-8bd6-23c6f6cabb35",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f3f8ecb4-16e8-4e80-8f63-3a485f82809d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc4eb45-653b-431a-9d8d-92fcdcc99c98",
        "cursor": {
          "ref": "4f182f1b-da61-4f80-984a-245aaa9bd846",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7da2d18a-ec2b-480c-9cee-9376905ac442"
        },
        "item": {
          "id": "4dc4eb45-653b-431a-9d8d-92fcdcc99c98",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "381929b4-9de7-45c1-b446-b41ab5903868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98d7f9-6109-4faa-b221-010553e4b37b",
        "cursor": {
          "ref": "e39f8e05-e9e1-42a0-b93a-8e3b0f178c90",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f965c389-672e-4cb0-a5ef-0b41a5d4ef4a"
        },
        "item": {
          "id": "ba98d7f9-6109-4faa-b221-010553e4b37b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e054f7b0-4495-42f5-91b1-a13cc0fed61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795e237a-81e8-45f7-b051-bff5e304dd9d",
        "cursor": {
          "ref": "5b069eb7-0255-47dc-bfaa-a9665c6dda26",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4edfed51-2a02-43cd-ba28-c0ef00896cf2"
        },
        "item": {
          "id": "795e237a-81e8-45f7-b051-bff5e304dd9d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57b8624c-e89b-45ea-93e7-cd12d281de83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c0967-9cdd-4906-b09a-51d4a85aae27",
        "cursor": {
          "ref": "2320ee6b-1126-4ae5-9f7e-bd983d57f333",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "320e274b-a27b-4025-9d29-69fc480e3569"
        },
        "item": {
          "id": "109c0967-9cdd-4906-b09a-51d4a85aae27",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5cf41215-230d-4a7c-a1ce-acb52771860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941dd4eb-2469-4855-a37d-1b90dac9cf88",
        "cursor": {
          "ref": "b520618c-9653-4d17-bc8e-e19452309ebd",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "30d9e476-6fce-472f-ba93-1b16f6d2b035"
        },
        "item": {
          "id": "941dd4eb-2469-4855-a37d-1b90dac9cf88",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "946da9db-5e4f-485d-9066-dbe1ff39234b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228596f8-fda2-473a-ba1f-ebb639fdfe9d",
        "cursor": {
          "ref": "49eb61e5-05c0-462a-abd3-a0c9f05b50df",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e20e767-3bcf-48b0-9634-87fa2ce2ab37"
        },
        "item": {
          "id": "228596f8-fda2-473a-ba1f-ebb639fdfe9d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c98ff18b-f71e-42d3-bcbd-e70c8be16a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8b056a-8686-48a2-be95-31ce2dd4ebaa",
        "cursor": {
          "ref": "2db52595-0731-4519-8c25-03264374a603",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "95928ad4-2648-4abb-be56-39da80fb85e2"
        },
        "item": {
          "id": "ce8b056a-8686-48a2-be95-31ce2dd4ebaa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6dae77df-954e-4576-9fea-ddb9c0720362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2572e4e-0f55-4495-bf02-a494953dee84",
        "cursor": {
          "ref": "ff9cf446-dae1-487f-8ad0-ab4836472c51",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "77a35899-65a1-4bf9-96f6-9af9a9d4c543"
        },
        "item": {
          "id": "a2572e4e-0f55-4495-bf02-a494953dee84",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "93cdea6c-a903-4635-9e8a-eba4efaafd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aab769-4e9c-4e55-a55b-f9f9efbf73d2",
        "cursor": {
          "ref": "993dc332-50f5-4e6e-b3c8-9178357acd41",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ec5ab422-7ac6-4edf-948e-17f3a59e34b9"
        },
        "item": {
          "id": "68aab769-4e9c-4e55-a55b-f9f9efbf73d2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d0287c79-8b7e-4623-a1e8-41432f643995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e062f1e-9a29-41dd-9f1a-b7c4e66794be",
        "cursor": {
          "ref": "23d89d97-1051-4f38-ae81-74b686fb20ab",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "daba5372-c0e3-4cfb-bd38-53ccac6e6f72"
        },
        "item": {
          "id": "7e062f1e-9a29-41dd-9f1a-b7c4e66794be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c986d78-705f-4fcd-9d3f-6e49ce635f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6326e10-220e-44d5-aeda-9fae5aed03f1",
        "cursor": {
          "ref": "d249f4be-2bd8-4c24-82e9-8f511ca44259",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4b0631df-16d8-4539-910b-deff2c41f61c"
        },
        "item": {
          "id": "f6326e10-220e-44d5-aeda-9fae5aed03f1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0f961cd3-0037-4c37-a48d-d63d6bfb8bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fd4f5d-04ac-41eb-909c-2e1c7e36efbf",
        "cursor": {
          "ref": "e5108f2c-df8e-4a69-9f13-5a523d914f3c",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d174e11a-c8fb-48fe-a842-372250acc9ae"
        },
        "item": {
          "id": "d3fd4f5d-04ac-41eb-909c-2e1c7e36efbf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5098eff-cf7d-4f4c-9ab8-beb8db02e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6461ab-874e-4b90-aa90-3e89766286b8",
        "cursor": {
          "ref": "6573e520-091c-4603-b5d7-95757d8caf00",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6ce1f52-cadd-4e36-848f-89c751ff981e"
        },
        "item": {
          "id": "9d6461ab-874e-4b90-aa90-3e89766286b8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3aa241fd-71d1-4f87-964a-9817ad51e16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410310a9-d045-4a65-b1c6-0f7d53e10601",
        "cursor": {
          "ref": "414bdf49-c142-40e4-bfe3-a2633d637b47",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31317947-413a-4b4b-97c6-83f95bdb22c0"
        },
        "item": {
          "id": "410310a9-d045-4a65-b1c6-0f7d53e10601",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f394dd2-2580-431d-b5b4-11e29e93690d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f3f97e-8e8e-40c4-a78b-dcf831ec8b8c",
        "cursor": {
          "ref": "a89ee33a-558e-471a-a1a0-ca057c8a1ca8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d1030057-a07e-458d-8ea3-4a923f4361bd"
        },
        "item": {
          "id": "01f3f97e-8e8e-40c4-a78b-dcf831ec8b8c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3040f841-8efe-4a8b-886c-a4c5a3283766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306a1f76-8104-41cc-bbe9-c554af7519d3",
        "cursor": {
          "ref": "42c658d0-c576-4ae3-9d71-7a22365d3974",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f75b96f-af41-4508-ae0b-0247d21e94b9"
        },
        "item": {
          "id": "306a1f76-8104-41cc-bbe9-c554af7519d3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "45de2375-edef-484b-824f-4bea708cd2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6625407a-728e-451d-ba0d-2ac80431f355",
        "cursor": {
          "ref": "3c0182ed-046c-49d0-bbe1-fd289bbe1762",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b832d950-486b-4e47-9402-d1e2f7f07b38"
        },
        "item": {
          "id": "6625407a-728e-451d-ba0d-2ac80431f355",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f9261c83-04cd-465f-a87b-089cbaa44d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86686881-248c-417a-981d-aff77c2dc37b",
        "cursor": {
          "ref": "91a75363-ed80-445d-b552-33e1c643c840",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a936948b-8bf4-44a9-8f5e-dd8ad74afaaa"
        },
        "item": {
          "id": "86686881-248c-417a-981d-aff77c2dc37b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9573f4a4-30a9-4e3f-9071-76c94a2b4518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253f328-ea5b-40ff-ba32-6ea30522d9f7",
        "cursor": {
          "ref": "ed930aa1-38f9-4dc6-8bfe-5cf7082dfc6b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d4c30455-5a0f-48c8-bde7-453cc14829bd"
        },
        "item": {
          "id": "c253f328-ea5b-40ff-ba32-6ea30522d9f7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8024697c-f213-4ff0-b08c-cfd0250a8ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c55417f-0a6f-4a84-b509-9473bd6730f0",
        "cursor": {
          "ref": "24032d17-a2ed-44db-985e-305134d57ad0",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "51548179-3c39-49ca-af54-5afc8387986f"
        },
        "item": {
          "id": "0c55417f-0a6f-4a84-b509-9473bd6730f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "70c3f925-d4a1-49de-b6e8-555de83d7527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21473901-433d-487d-85ff-2d8872ff8cfd",
        "cursor": {
          "ref": "51d53011-906a-42ba-874c-e20ec32f48ca",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "69cd3f89-3590-401d-a691-75f5ffeb08d3"
        },
        "item": {
          "id": "21473901-433d-487d-85ff-2d8872ff8cfd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f2708c2-aa11-418c-968c-21a96d6953f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52f9c27-8ec8-4bdb-b4af-bbd840c91d2d",
        "cursor": {
          "ref": "d8361edc-eef0-48d0-a571-01c268767b44",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "126bba3f-e969-4044-9178-1103e9005ffb"
        },
        "item": {
          "id": "a52f9c27-8ec8-4bdb-b4af-bbd840c91d2d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e9a5660e-6546-4d3b-beff-8b674b263248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e46af8b-ca3e-4d0f-b347-73ad807c87cc",
        "cursor": {
          "ref": "2455d3da-13f2-4433-a52d-2c7658a0101e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f83384d5-c3d9-4f6c-8950-9684e1f8fe64"
        },
        "item": {
          "id": "0e46af8b-ca3e-4d0f-b347-73ad807c87cc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "47a6731b-9337-4957-8f16-3649962225cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b86e18-ebd0-4192-b36f-a503cf5bba1b",
        "cursor": {
          "ref": "73387485-aa62-4ed7-8cd2-00e7ef981e40",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1b8e5c7-7108-4aa2-8401-92a29436387f"
        },
        "item": {
          "id": "16b86e18-ebd0-4192-b36f-a503cf5bba1b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1c0cc05d-173b-49b4-a609-1c03e62f05e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708c0636-20e7-43d6-a31e-cb49a7482c68",
        "cursor": {
          "ref": "e035e67c-0885-4f42-9fd7-521858f9cddd",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "797c70b7-445b-48d7-8c17-5336c104afd9"
        },
        "item": {
          "id": "708c0636-20e7-43d6-a31e-cb49a7482c68",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "11c3b89e-7e1b-4c1f-adb6-d86c22181d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c05b3a-23e3-4aab-8946-2f6a569c86cf",
        "cursor": {
          "ref": "f8f2c885-682d-448c-a0cf-36f67de94c6f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c3bb9cb7-5e68-4ac0-b503-4ffe0e779b86"
        },
        "item": {
          "id": "a5c05b3a-23e3-4aab-8946-2f6a569c86cf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d02f431e-a916-45cf-a2a4-729481bfd105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a71fb07-3da6-48cd-ab1c-0d0bad49c75c",
        "cursor": {
          "ref": "5c5b54bd-75bd-4c2d-b06f-308d82f4e28a",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a091bdb2-acfe-4833-bad2-bc096d99a1f3"
        },
        "item": {
          "id": "2a71fb07-3da6-48cd-ab1c-0d0bad49c75c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a42a08bd-c840-40a1-b5f3-08e9c811e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f50d5cb-97a1-4cc1-ad29-932128668512",
        "cursor": {
          "ref": "6b385e40-389f-4cff-a128-5db419ea2272",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7fb7e93a-a7e7-45a1-9955-bc01cf27a138"
        },
        "item": {
          "id": "5f50d5cb-97a1-4cc1-ad29-932128668512",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6cb6023e-a298-44d6-b9a5-9550d889293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2818ca-b430-4682-8c9b-96edcc0e0d12",
        "cursor": {
          "ref": "784046c8-9501-443c-bd74-1e7641aaf89c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "992e14ca-72ff-4103-8511-fc8fc5c2e9ef"
        },
        "item": {
          "id": "8e2818ca-b430-4682-8c9b-96edcc0e0d12",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "615dc2fe-2e94-405a-a3bb-a0c0ab752687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a2cff7-0165-428b-8af5-4f037245d7db",
        "cursor": {
          "ref": "ee2e6553-3590-43b6-8d4a-bf724a26653f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8dc702ac-ea7d-4116-b625-ca7065f5d551"
        },
        "item": {
          "id": "b4a2cff7-0165-428b-8af5-4f037245d7db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8e633753-8bb6-4409-8d44-4a914679a51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfc51df-f212-4dc2-a84e-5c6f7ef5651b",
        "cursor": {
          "ref": "3a69a085-1ac2-4767-8d85-3972106c0a40",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9ffe62a0-95e1-4727-82d9-e76e1ade4b44"
        },
        "item": {
          "id": "4dfc51df-f212-4dc2-a84e-5c6f7ef5651b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c905fa1e-f5da-40fb-a0f5-88093af2ecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e7d00-a368-4135-a328-dd9fba5d2dfa",
        "cursor": {
          "ref": "422d9e2f-f254-42d3-be21-2f7ce45bebc2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "62e7d83b-f6f0-4d8e-b492-18e57b10de2a"
        },
        "item": {
          "id": "ad6e7d00-a368-4135-a328-dd9fba5d2dfa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "16fb4bad-cc86-4cb9-a555-fc7a5ed4f57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f75cb5c-87c1-46cb-9b38-51298c607861",
        "cursor": {
          "ref": "44862ce1-adb1-4de3-8eb9-2a2d0de71ec5",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f9570d96-dcfa-4e51-b3fa-66e01fcc3c7b"
        },
        "item": {
          "id": "4f75cb5c-87c1-46cb-9b38-51298c607861",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e957572-39f6-48de-be4c-02091b4f844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d6fff7-764e-4a14-a301-c3bbad7ec1bc",
        "cursor": {
          "ref": "fc633892-ffd7-4244-b9e6-3a3b77352e7c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9753b67b-2030-413c-bb34-fe2462791739"
        },
        "item": {
          "id": "f9d6fff7-764e-4a14-a301-c3bbad7ec1bc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7797a108-fdcd-45b3-a7a8-a5f925659483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625277e4-883a-428a-a1ea-ca501db61c9e",
        "cursor": {
          "ref": "fc7a9669-aee2-4dbd-b02a-3b739aedc95d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b83a8f4f-970d-4259-bf49-945b7203ceba"
        },
        "item": {
          "id": "625277e4-883a-428a-a1ea-ca501db61c9e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e47a8a2b-443b-4f21-9687-9a9cbc548f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc336edf-13bd-469b-ac03-7ba3b4403204",
        "cursor": {
          "ref": "186de34f-b07d-4260-a821-334476d8b924",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6b7bb25e-5c71-41d7-a06e-f186e9760b52"
        },
        "item": {
          "id": "bc336edf-13bd-469b-ac03-7ba3b4403204",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0a508705-6e70-4019-8993-3d9894f8ef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97706c84-779c-4c68-b92c-a18f60986b24",
        "cursor": {
          "ref": "f56983ac-bdf0-41f2-8e3b-4c642efcbbc4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "69058423-fecb-41af-b2f8-bc103cd17daf"
        },
        "item": {
          "id": "97706c84-779c-4c68-b92c-a18f60986b24",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "596914c3-cc78-4929-8906-8f51c79a28fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db3249b-4e7b-492c-8b0d-ae19f60cfa85",
        "cursor": {
          "ref": "04d7fe5f-d563-40c9-88b6-e46b5307847b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b8e08b6c-4d1e-4812-bbc2-43376853b44d"
        },
        "item": {
          "id": "9db3249b-4e7b-492c-8b0d-ae19f60cfa85",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44851ffc-6180-4fe3-9d6e-53bffc7e68bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab2793-a56a-4436-956d-36935df5c1c1",
        "cursor": {
          "ref": "b1ab80c2-c8f3-4ad8-b0b9-48eb2a389bc6",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "54f7330d-5ddd-4a4b-ad9e-0acc290a2b7c"
        },
        "item": {
          "id": "6bab2793-a56a-4436-956d-36935df5c1c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d56cb0d-045d-4af5-855c-23d7288cb020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebe392d-2f14-4244-8dee-35417ad656ce",
        "cursor": {
          "ref": "39da354b-3e2f-4551-a3db-f0abcdcc9669",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7f1136a3-ce64-4ed6-9c11-16903f2f2de1"
        },
        "item": {
          "id": "aebe392d-2f14-4244-8dee-35417ad656ce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d925ebb-9752-425b-bc03-c538229fe797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e2c337-6649-4c8d-9269-d8cf677440ff",
        "cursor": {
          "ref": "88e104e9-8ea5-4418-a260-81ff3e1dc1e7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8c7f1149-84d3-43f7-992f-5e1605ed4333"
        },
        "item": {
          "id": "78e2c337-6649-4c8d-9269-d8cf677440ff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "637ee19d-4a3c-4de3-b7e6-c52de07026d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c283e4d-e20c-4402-95a9-ed3f0ab5ddf8",
        "cursor": {
          "ref": "ef98a226-0bdb-4d96-979e-a96f2af8cfc7",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8bd16a4-8153-4766-903a-fe67fe00aa4d"
        },
        "item": {
          "id": "5c283e4d-e20c-4402-95a9-ed3f0ab5ddf8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7161eb4c-f4a4-47ad-bc67-f65c96dad408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e08e87-6f05-4077-9518-2aa81087cd61",
        "cursor": {
          "ref": "796c3feb-5da2-420f-9512-e497bc86ba6d",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2c18d4b8-7e29-47c9-99d3-88fb9a07fab2"
        },
        "item": {
          "id": "14e08e87-6f05-4077-9518-2aa81087cd61",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f140cb7b-dd30-4c18-a646-12f7a0381cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558cd59f-7c2f-4736-8fa5-91a93ecf6683",
        "cursor": {
          "ref": "2fbbdd6e-16d6-4d00-9d28-5f5c2db701fb",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2007f4c1-c836-46fc-a08d-7bd8fb1f7982"
        },
        "item": {
          "id": "558cd59f-7c2f-4736-8fa5-91a93ecf6683",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "faef2bf4-a30c-417f-8155-2a8c47e75cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215063da-5a0c-4f21-8d1b-0b26c178a751",
        "cursor": {
          "ref": "6190df26-a0a1-4f04-b71b-99e93d082352",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b98bae6f-5fa4-4596-91b2-1b14ca9eb941"
        },
        "item": {
          "id": "215063da-5a0c-4f21-8d1b-0b26c178a751",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "06933940-4963-4ba0-819d-69786ebd9771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d446d3-8602-471c-b4ff-c858568e0b0a",
        "cursor": {
          "ref": "3ac3da8b-cbbc-4a4c-a7da-a616afeaa611",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "edb3998d-e334-4184-b585-f6c4945156c5"
        },
        "item": {
          "id": "69d446d3-8602-471c-b4ff-c858568e0b0a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5031f4b-8f0a-4efe-939a-bde309f0c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4697d7b-3615-4a78-9a77-c23ddb519409",
        "cursor": {
          "ref": "35d62abb-5440-4239-abc0-695e020cf849",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fe31908b-883c-4862-8e94-f1f434c37e7a"
        },
        "item": {
          "id": "c4697d7b-3615-4a78-9a77-c23ddb519409",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "25302a85-dac2-4c2d-b686-7506c72c21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a69ad77-73ff-420a-88ff-791faf64c9b7",
        "cursor": {
          "ref": "386ea37f-6370-4af9-96d8-6e44f351948d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9c85e28a-71bd-453e-af1e-096c2d7a3798"
        },
        "item": {
          "id": "8a69ad77-73ff-420a-88ff-791faf64c9b7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e0941aa-85de-4c55-8fe6-53e6d7418163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd430027-37ab-4545-ae71-ae3afe10370f",
        "cursor": {
          "ref": "8bba24a3-a1b4-4f93-ab27-5761a2a72d97",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc5b6599-6eec-47ea-bda9-4eb2493ac30e"
        },
        "item": {
          "id": "fd430027-37ab-4545-ae71-ae3afe10370f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "361d55b1-bdcf-4d5f-8421-c46fd2be1b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6c50b-3520-422e-ac69-4ab58ae60cce",
        "cursor": {
          "ref": "b6756c2a-fc6e-47ab-a28c-e23b0c8ecac1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d491dea7-77c8-4ddd-b58f-d71d6d05cfd8"
        },
        "item": {
          "id": "bee6c50b-3520-422e-ac69-4ab58ae60cce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae987a2c-fcc8-4452-9e41-a0a936d062e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43187f0-4386-4fd3-b5d0-0ce2453cc4bb",
        "cursor": {
          "ref": "af7d4239-975a-4b1d-9f03-b1f8b53aa13a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c61a7c07-0aed-4990-b40c-73562d305333"
        },
        "item": {
          "id": "e43187f0-4386-4fd3-b5d0-0ce2453cc4bb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b64fef6f-7793-4bdf-a697-8ed3e9d8a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae6955-6819-4164-b374-045c483f61b5",
        "cursor": {
          "ref": "489b548a-6ff6-4c85-8c54-2ce8d7f6f96a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e4527c92-55ca-495c-a723-7b9a9237a01d"
        },
        "item": {
          "id": "3fae6955-6819-4164-b374-045c483f61b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "32cec37f-f0e4-45b3-b26f-08b64c10b31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f292a-06b1-4498-8990-eb6ab8b98836",
        "cursor": {
          "ref": "797764ba-69b7-4f33-b909-e083c496f7e9",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "45d9694b-859f-4e77-993e-d7b1277c5510"
        },
        "item": {
          "id": "e27f292a-06b1-4498-8990-eb6ab8b98836",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dacef645-59bb-42f4-b7a1-afa43c27aaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b5144-d1fb-4876-bc54-1668a96e7b20",
        "cursor": {
          "ref": "1228c6e8-6e0c-4149-8847-0e6fcffbf06d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e074ebed-171d-4131-a01b-e911a5ece38b"
        },
        "item": {
          "id": "7a3b5144-d1fb-4876-bc54-1668a96e7b20",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8566966f-8175-4a68-b98d-c8af00e1289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100f7a1-c3c0-49a8-ae73-dbb2d426d16f",
        "cursor": {
          "ref": "3dd116ca-1f77-4c08-a789-b2c89d026460",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "00633af8-966c-4361-8adb-920ca5137059"
        },
        "item": {
          "id": "9100f7a1-c3c0-49a8-ae73-dbb2d426d16f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0dcf7203-49d0-4d8c-8fca-0d104f3f0b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7f685f-fff5-4d44-a346-0dd727659708",
        "cursor": {
          "ref": "c0d91015-4055-4211-86ac-f369cefcf673",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "78972fe8-cb86-4ca0-8e65-3928a0ec2a0b"
        },
        "item": {
          "id": "5f7f685f-fff5-4d44-a346-0dd727659708",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "37e3a6b2-eccf-458d-b12a-a3d56f9d91a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7605d6-75ba-429a-96b1-0390d466475d",
        "cursor": {
          "ref": "7e8467a6-dc0c-43ae-8713-ef2cfe4561c4",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d60d8d8b-5de1-48da-a56d-a80a5554c33d"
        },
        "item": {
          "id": "6c7605d6-75ba-429a-96b1-0390d466475d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5ee8fe59-4632-413f-9dc1-ae1a522738f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208927dd-46dc-47c6-8959-89b0f8cc72a4",
        "cursor": {
          "ref": "5b6ac00a-f9ed-4a9e-a23d-933ec420e5c8",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "78aa6dee-8ed4-4e46-bebc-5d95fd100f7d"
        },
        "item": {
          "id": "208927dd-46dc-47c6-8959-89b0f8cc72a4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f7dfc573-c1a5-4496-a991-2984c631b0fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47dfedd-f252-4add-9887-b143fe975625",
        "cursor": {
          "ref": "ff1642ef-4f04-4241-a103-78138135a6ad",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d5c9a96f-5c13-4492-9c48-a478c6b445f1"
        },
        "item": {
          "id": "d47dfedd-f252-4add-9887-b143fe975625",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "28691ca4-a80c-429c-b1ad-46b68a3069ab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 762,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0ce03-1a81-4fab-b119-909c24826e28",
        "cursor": {
          "ref": "d5138420-0391-4136-b750-7603eb8df3ec",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "15e08320-e528-436e-9439-2b5d5e37ed7e"
        },
        "item": {
          "id": "e4d0ce03-1a81-4fab-b119-909c24826e28",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dc09431d-50a2-456b-84cf-ad680b96f44d",
          "status": "OK",
          "code": 200,
          "responseTime": 820,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c7d79d-3d01-4821-88dc-bc502163c891",
        "cursor": {
          "ref": "f27ff5e5-ae7a-44fa-958a-e9795d30f595",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "989e7c51-b05f-4e0f-9f2b-6674fcfb0985"
        },
        "item": {
          "id": "56c7d79d-3d01-4821-88dc-bc502163c891",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c6131146-0515-4cb9-bce5-d194c055e1b4",
          "status": "OK",
          "code": 200,
          "responseTime": 2202,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2548eafe-86e0-403b-a244-9ca8cee540e6",
        "cursor": {
          "ref": "146a4ef2-3df9-4b85-9ad7-0546fef79814",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9e8dd2a8-b356-4cb2-9ffd-b1e095e7519e"
        },
        "item": {
          "id": "2548eafe-86e0-403b-a244-9ca8cee540e6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0c858581-1e16-47bd-9030-c1eafd11838c",
          "status": "OK",
          "code": 200,
          "responseTime": 1824,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
        "cursor": {
          "ref": "7d81e46a-ab20-4c9a-aff8-a9ef2d034df6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4ac3398-97cc-480c-8cd3-3ff0bcb4cf42"
        },
        "item": {
          "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "509fa1f0-6d2e-4719-87de-f819ba564687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
        "cursor": {
          "ref": "7d81e46a-ab20-4c9a-aff8-a9ef2d034df6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4ac3398-97cc-480c-8cd3-3ff0bcb4cf42"
        },
        "item": {
          "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "509fa1f0-6d2e-4719-87de-f819ba564687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
        "cursor": {
          "ref": "7d81e46a-ab20-4c9a-aff8-a9ef2d034df6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4ac3398-97cc-480c-8cd3-3ff0bcb4cf42"
        },
        "item": {
          "id": "c4ab1fc8-3dc7-46aa-b7f1-1323bda47309",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "509fa1f0-6d2e-4719-87de-f819ba564687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0fd28d-6e83-48e6-8e31-98285f38910d",
        "cursor": {
          "ref": "7b7940f0-8dfc-4103-95e3-4d3c58f6f348",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "403dcd1d-9b6b-4b55-a54e-324994ec6f1f"
        },
        "item": {
          "id": "fc0fd28d-6e83-48e6-8e31-98285f38910d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "475ad5eb-c36a-4d0f-805f-187f2bf8ce6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547438f3-b764-4b52-8fe8-5c646faa7edd",
        "cursor": {
          "ref": "2252676c-803e-4443-bc5f-4793f820d918",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05f35395-d8c9-4cc2-bfc0-e98d1f1597a9"
        },
        "item": {
          "id": "547438f3-b764-4b52-8fe8-5c646faa7edd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8c21bc09-6bda-4048-a3ca-f68aedcba9b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547438f3-b764-4b52-8fe8-5c646faa7edd",
        "cursor": {
          "ref": "2252676c-803e-4443-bc5f-4793f820d918",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05f35395-d8c9-4cc2-bfc0-e98d1f1597a9"
        },
        "item": {
          "id": "547438f3-b764-4b52-8fe8-5c646faa7edd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8c21bc09-6bda-4048-a3ca-f68aedcba9b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8956c5-7703-4b9c-a894-724258d6cc08",
        "cursor": {
          "ref": "43a64380-1216-4e92-b8be-963fe42920d0",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2828796d-262f-4842-99f0-0364a7044be9"
        },
        "item": {
          "id": "8f8956c5-7703-4b9c-a894-724258d6cc08",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "10a8077b-0446-4cd9-bd08-c5df6c5ce12f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794000c-445b-4f4d-83f7-bbfab212bd79",
        "cursor": {
          "ref": "095b0e86-9509-4f8b-82bb-8183b39fea7b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "19086e76-46fa-4745-b631-4b3b21d6a73a"
        },
        "item": {
          "id": "a794000c-445b-4f4d-83f7-bbfab212bd79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9977522c-9a29-4667-9ad4-4db4c76ce684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794000c-445b-4f4d-83f7-bbfab212bd79",
        "cursor": {
          "ref": "095b0e86-9509-4f8b-82bb-8183b39fea7b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "19086e76-46fa-4745-b631-4b3b21d6a73a"
        },
        "item": {
          "id": "a794000c-445b-4f4d-83f7-bbfab212bd79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9977522c-9a29-4667-9ad4-4db4c76ce684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f82811-7026-441b-b541-266398f3a56d",
        "cursor": {
          "ref": "45a08caf-c3c4-4467-adac-1fd464b540af",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dca3cad2-3151-4dd7-bc88-e4dd3d4d4f5d"
        },
        "item": {
          "id": "d0f82811-7026-441b-b541-266398f3a56d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "87f50e60-9f7b-40ef-8288-1a519ea6b385",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 626,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}